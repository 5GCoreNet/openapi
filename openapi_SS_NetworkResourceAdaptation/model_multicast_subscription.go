/*
SS_NetworkResourceAdaptation

SS Network Resource Adaptation Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_NetworkResourceAdaptation

import (
	"encoding/json"
	"time"
)

// checks if the MulticastSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MulticastSubscription{}

// MulticastSubscription Represents a multicast subscription.
type MulticastSubscription struct {
	ValGroupId string `json:"valGroupId"`
	AnncMode ServiceAnnoucementMode `json:"anncMode"`
	MultiQosReq string `json:"multiQosReq"`
	LocArea *MbmsLocArea `json:"locArea,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	Duration *time.Time `json:"duration,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	Tmgi *int32 `json:"tmgi,omitempty"`
	LocalMbmsInfo *LocalMbmsInfo `json:"localMbmsInfo,omitempty"`
	LocalMbmsActInd *bool `json:"localMbmsActInd,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotifUri string `json:"notifUri"`
	ReqTestNotif *bool `json:"reqTestNotif,omitempty"`
	WsNotifCfg *WebsockNotifConfig `json:"wsNotifCfg,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat *string `json:"suppFeat,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
	UpIpv4Addr *string `json:"upIpv4Addr,omitempty"`
	UpIpv6Addr *Ipv6Addr `json:"upIpv6Addr,omitempty"`
	// Unsigned integer with valid values between 0 and 65535.
	UpPortNum *int32 `json:"upPortNum,omitempty"`
	RadioFreqs []int32 `json:"radioFreqs,omitempty"`
}

// NewMulticastSubscription instantiates a new MulticastSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMulticastSubscription(valGroupId string, anncMode ServiceAnnoucementMode, multiQosReq string, notifUri string) *MulticastSubscription {
	this := MulticastSubscription{}
	this.ValGroupId = valGroupId
	this.AnncMode = anncMode
	this.MultiQosReq = multiQosReq
	this.NotifUri = notifUri
	return &this
}

// NewMulticastSubscriptionWithDefaults instantiates a new MulticastSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMulticastSubscriptionWithDefaults() *MulticastSubscription {
	this := MulticastSubscription{}
	return &this
}

// GetValGroupId returns the ValGroupId field value
func (o *MulticastSubscription) GetValGroupId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValGroupId
}

// GetValGroupIdOk returns a tuple with the ValGroupId field value
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetValGroupIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValGroupId, true
}

// SetValGroupId sets field value
func (o *MulticastSubscription) SetValGroupId(v string) {
	o.ValGroupId = v
}

// GetAnncMode returns the AnncMode field value
func (o *MulticastSubscription) GetAnncMode() ServiceAnnoucementMode {
	if o == nil {
		var ret ServiceAnnoucementMode
		return ret
	}

	return o.AnncMode
}

// GetAnncModeOk returns a tuple with the AnncMode field value
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetAnncModeOk() (*ServiceAnnoucementMode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnncMode, true
}

// SetAnncMode sets field value
func (o *MulticastSubscription) SetAnncMode(v ServiceAnnoucementMode) {
	o.AnncMode = v
}

// GetMultiQosReq returns the MultiQosReq field value
func (o *MulticastSubscription) GetMultiQosReq() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MultiQosReq
}

// GetMultiQosReqOk returns a tuple with the MultiQosReq field value
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetMultiQosReqOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MultiQosReq, true
}

// SetMultiQosReq sets field value
func (o *MulticastSubscription) SetMultiQosReq(v string) {
	o.MultiQosReq = v
}

// GetLocArea returns the LocArea field value if set, zero value otherwise.
func (o *MulticastSubscription) GetLocArea() MbmsLocArea {
	if o == nil || isNil(o.LocArea) {
		var ret MbmsLocArea
		return ret
	}
	return *o.LocArea
}

// GetLocAreaOk returns a tuple with the LocArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetLocAreaOk() (*MbmsLocArea, bool) {
	if o == nil || isNil(o.LocArea) {
		return nil, false
	}
	return o.LocArea, true
}

// HasLocArea returns a boolean if a field has been set.
func (o *MulticastSubscription) HasLocArea() bool {
	if o != nil && !isNil(o.LocArea) {
		return true
	}

	return false
}

// SetLocArea gets a reference to the given MbmsLocArea and assigns it to the LocArea field.
func (o *MulticastSubscription) SetLocArea(v MbmsLocArea) {
	o.LocArea = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *MulticastSubscription) GetDuration() time.Time {
	if o == nil || isNil(o.Duration) {
		var ret time.Time
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetDurationOk() (*time.Time, bool) {
	if o == nil || isNil(o.Duration) {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *MulticastSubscription) HasDuration() bool {
	if o != nil && !isNil(o.Duration) {
		return true
	}

	return false
}

// SetDuration gets a reference to the given time.Time and assigns it to the Duration field.
func (o *MulticastSubscription) SetDuration(v time.Time) {
	o.Duration = &v
}

// GetTmgi returns the Tmgi field value if set, zero value otherwise.
func (o *MulticastSubscription) GetTmgi() int32 {
	if o == nil || isNil(o.Tmgi) {
		var ret int32
		return ret
	}
	return *o.Tmgi
}

// GetTmgiOk returns a tuple with the Tmgi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetTmgiOk() (*int32, bool) {
	if o == nil || isNil(o.Tmgi) {
		return nil, false
	}
	return o.Tmgi, true
}

// HasTmgi returns a boolean if a field has been set.
func (o *MulticastSubscription) HasTmgi() bool {
	if o != nil && !isNil(o.Tmgi) {
		return true
	}

	return false
}

// SetTmgi gets a reference to the given int32 and assigns it to the Tmgi field.
func (o *MulticastSubscription) SetTmgi(v int32) {
	o.Tmgi = &v
}

// GetLocalMbmsInfo returns the LocalMbmsInfo field value if set, zero value otherwise.
func (o *MulticastSubscription) GetLocalMbmsInfo() LocalMbmsInfo {
	if o == nil || isNil(o.LocalMbmsInfo) {
		var ret LocalMbmsInfo
		return ret
	}
	return *o.LocalMbmsInfo
}

// GetLocalMbmsInfoOk returns a tuple with the LocalMbmsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetLocalMbmsInfoOk() (*LocalMbmsInfo, bool) {
	if o == nil || isNil(o.LocalMbmsInfo) {
		return nil, false
	}
	return o.LocalMbmsInfo, true
}

// HasLocalMbmsInfo returns a boolean if a field has been set.
func (o *MulticastSubscription) HasLocalMbmsInfo() bool {
	if o != nil && !isNil(o.LocalMbmsInfo) {
		return true
	}

	return false
}

// SetLocalMbmsInfo gets a reference to the given LocalMbmsInfo and assigns it to the LocalMbmsInfo field.
func (o *MulticastSubscription) SetLocalMbmsInfo(v LocalMbmsInfo) {
	o.LocalMbmsInfo = &v
}

// GetLocalMbmsActInd returns the LocalMbmsActInd field value if set, zero value otherwise.
func (o *MulticastSubscription) GetLocalMbmsActInd() bool {
	if o == nil || isNil(o.LocalMbmsActInd) {
		var ret bool
		return ret
	}
	return *o.LocalMbmsActInd
}

// GetLocalMbmsActIndOk returns a tuple with the LocalMbmsActInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetLocalMbmsActIndOk() (*bool, bool) {
	if o == nil || isNil(o.LocalMbmsActInd) {
		return nil, false
	}
	return o.LocalMbmsActInd, true
}

// HasLocalMbmsActInd returns a boolean if a field has been set.
func (o *MulticastSubscription) HasLocalMbmsActInd() bool {
	if o != nil && !isNil(o.LocalMbmsActInd) {
		return true
	}

	return false
}

// SetLocalMbmsActInd gets a reference to the given bool and assigns it to the LocalMbmsActInd field.
func (o *MulticastSubscription) SetLocalMbmsActInd(v bool) {
	o.LocalMbmsActInd = &v
}

// GetNotifUri returns the NotifUri field value
func (o *MulticastSubscription) GetNotifUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotifUri
}

// GetNotifUriOk returns a tuple with the NotifUri field value
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetNotifUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifUri, true
}

// SetNotifUri sets field value
func (o *MulticastSubscription) SetNotifUri(v string) {
	o.NotifUri = v
}

// GetReqTestNotif returns the ReqTestNotif field value if set, zero value otherwise.
func (o *MulticastSubscription) GetReqTestNotif() bool {
	if o == nil || isNil(o.ReqTestNotif) {
		var ret bool
		return ret
	}
	return *o.ReqTestNotif
}

// GetReqTestNotifOk returns a tuple with the ReqTestNotif field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetReqTestNotifOk() (*bool, bool) {
	if o == nil || isNil(o.ReqTestNotif) {
		return nil, false
	}
	return o.ReqTestNotif, true
}

// HasReqTestNotif returns a boolean if a field has been set.
func (o *MulticastSubscription) HasReqTestNotif() bool {
	if o != nil && !isNil(o.ReqTestNotif) {
		return true
	}

	return false
}

// SetReqTestNotif gets a reference to the given bool and assigns it to the ReqTestNotif field.
func (o *MulticastSubscription) SetReqTestNotif(v bool) {
	o.ReqTestNotif = &v
}

// GetWsNotifCfg returns the WsNotifCfg field value if set, zero value otherwise.
func (o *MulticastSubscription) GetWsNotifCfg() WebsockNotifConfig {
	if o == nil || isNil(o.WsNotifCfg) {
		var ret WebsockNotifConfig
		return ret
	}
	return *o.WsNotifCfg
}

// GetWsNotifCfgOk returns a tuple with the WsNotifCfg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetWsNotifCfgOk() (*WebsockNotifConfig, bool) {
	if o == nil || isNil(o.WsNotifCfg) {
		return nil, false
	}
	return o.WsNotifCfg, true
}

// HasWsNotifCfg returns a boolean if a field has been set.
func (o *MulticastSubscription) HasWsNotifCfg() bool {
	if o != nil && !isNil(o.WsNotifCfg) {
		return true
	}

	return false
}

// SetWsNotifCfg gets a reference to the given WebsockNotifConfig and assigns it to the WsNotifCfg field.
func (o *MulticastSubscription) SetWsNotifCfg(v WebsockNotifConfig) {
	o.WsNotifCfg = &v
}

// GetSuppFeat returns the SuppFeat field value if set, zero value otherwise.
func (o *MulticastSubscription) GetSuppFeat() string {
	if o == nil || isNil(o.SuppFeat) {
		var ret string
		return ret
	}
	return *o.SuppFeat
}

// GetSuppFeatOk returns a tuple with the SuppFeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetSuppFeatOk() (*string, bool) {
	if o == nil || isNil(o.SuppFeat) {
		return nil, false
	}
	return o.SuppFeat, true
}

// HasSuppFeat returns a boolean if a field has been set.
func (o *MulticastSubscription) HasSuppFeat() bool {
	if o != nil && !isNil(o.SuppFeat) {
		return true
	}

	return false
}

// SetSuppFeat gets a reference to the given string and assigns it to the SuppFeat field.
func (o *MulticastSubscription) SetSuppFeat(v string) {
	o.SuppFeat = &v
}

// GetUpIpv4Addr returns the UpIpv4Addr field value if set, zero value otherwise.
func (o *MulticastSubscription) GetUpIpv4Addr() string {
	if o == nil || isNil(o.UpIpv4Addr) {
		var ret string
		return ret
	}
	return *o.UpIpv4Addr
}

// GetUpIpv4AddrOk returns a tuple with the UpIpv4Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetUpIpv4AddrOk() (*string, bool) {
	if o == nil || isNil(o.UpIpv4Addr) {
		return nil, false
	}
	return o.UpIpv4Addr, true
}

// HasUpIpv4Addr returns a boolean if a field has been set.
func (o *MulticastSubscription) HasUpIpv4Addr() bool {
	if o != nil && !isNil(o.UpIpv4Addr) {
		return true
	}

	return false
}

// SetUpIpv4Addr gets a reference to the given string and assigns it to the UpIpv4Addr field.
func (o *MulticastSubscription) SetUpIpv4Addr(v string) {
	o.UpIpv4Addr = &v
}

// GetUpIpv6Addr returns the UpIpv6Addr field value if set, zero value otherwise.
func (o *MulticastSubscription) GetUpIpv6Addr() Ipv6Addr {
	if o == nil || isNil(o.UpIpv6Addr) {
		var ret Ipv6Addr
		return ret
	}
	return *o.UpIpv6Addr
}

// GetUpIpv6AddrOk returns a tuple with the UpIpv6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetUpIpv6AddrOk() (*Ipv6Addr, bool) {
	if o == nil || isNil(o.UpIpv6Addr) {
		return nil, false
	}
	return o.UpIpv6Addr, true
}

// HasUpIpv6Addr returns a boolean if a field has been set.
func (o *MulticastSubscription) HasUpIpv6Addr() bool {
	if o != nil && !isNil(o.UpIpv6Addr) {
		return true
	}

	return false
}

// SetUpIpv6Addr gets a reference to the given Ipv6Addr and assigns it to the UpIpv6Addr field.
func (o *MulticastSubscription) SetUpIpv6Addr(v Ipv6Addr) {
	o.UpIpv6Addr = &v
}

// GetUpPortNum returns the UpPortNum field value if set, zero value otherwise.
func (o *MulticastSubscription) GetUpPortNum() int32 {
	if o == nil || isNil(o.UpPortNum) {
		var ret int32
		return ret
	}
	return *o.UpPortNum
}

// GetUpPortNumOk returns a tuple with the UpPortNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetUpPortNumOk() (*int32, bool) {
	if o == nil || isNil(o.UpPortNum) {
		return nil, false
	}
	return o.UpPortNum, true
}

// HasUpPortNum returns a boolean if a field has been set.
func (o *MulticastSubscription) HasUpPortNum() bool {
	if o != nil && !isNil(o.UpPortNum) {
		return true
	}

	return false
}

// SetUpPortNum gets a reference to the given int32 and assigns it to the UpPortNum field.
func (o *MulticastSubscription) SetUpPortNum(v int32) {
	o.UpPortNum = &v
}

// GetRadioFreqs returns the RadioFreqs field value if set, zero value otherwise.
func (o *MulticastSubscription) GetRadioFreqs() []int32 {
	if o == nil || isNil(o.RadioFreqs) {
		var ret []int32
		return ret
	}
	return o.RadioFreqs
}

// GetRadioFreqsOk returns a tuple with the RadioFreqs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MulticastSubscription) GetRadioFreqsOk() ([]int32, bool) {
	if o == nil || isNil(o.RadioFreqs) {
		return nil, false
	}
	return o.RadioFreqs, true
}

// HasRadioFreqs returns a boolean if a field has been set.
func (o *MulticastSubscription) HasRadioFreqs() bool {
	if o != nil && !isNil(o.RadioFreqs) {
		return true
	}

	return false
}

// SetRadioFreqs gets a reference to the given []int32 and assigns it to the RadioFreqs field.
func (o *MulticastSubscription) SetRadioFreqs(v []int32) {
	o.RadioFreqs = v
}

func (o MulticastSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MulticastSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["valGroupId"] = o.ValGroupId
	toSerialize["anncMode"] = o.AnncMode
	toSerialize["multiQosReq"] = o.MultiQosReq
	if !isNil(o.LocArea) {
		toSerialize["locArea"] = o.LocArea
	}
	if !isNil(o.Duration) {
		toSerialize["duration"] = o.Duration
	}
	if !isNil(o.Tmgi) {
		toSerialize["tmgi"] = o.Tmgi
	}
	if !isNil(o.LocalMbmsInfo) {
		toSerialize["localMbmsInfo"] = o.LocalMbmsInfo
	}
	if !isNil(o.LocalMbmsActInd) {
		toSerialize["localMbmsActInd"] = o.LocalMbmsActInd
	}
	toSerialize["notifUri"] = o.NotifUri
	if !isNil(o.ReqTestNotif) {
		toSerialize["reqTestNotif"] = o.ReqTestNotif
	}
	if !isNil(o.WsNotifCfg) {
		toSerialize["wsNotifCfg"] = o.WsNotifCfg
	}
	if !isNil(o.SuppFeat) {
		toSerialize["suppFeat"] = o.SuppFeat
	}
	if !isNil(o.UpIpv4Addr) {
		toSerialize["upIpv4Addr"] = o.UpIpv4Addr
	}
	if !isNil(o.UpIpv6Addr) {
		toSerialize["upIpv6Addr"] = o.UpIpv6Addr
	}
	if !isNil(o.UpPortNum) {
		toSerialize["upPortNum"] = o.UpPortNum
	}
	if !isNil(o.RadioFreqs) {
		toSerialize["radioFreqs"] = o.RadioFreqs
	}
	return toSerialize, nil
}

type NullableMulticastSubscription struct {
	value *MulticastSubscription
	isSet bool
}

func (v NullableMulticastSubscription) Get() *MulticastSubscription {
	return v.value
}

func (v *NullableMulticastSubscription) Set(val *MulticastSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableMulticastSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableMulticastSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMulticastSubscription(val *MulticastSubscription) *NullableMulticastSubscription {
	return &NullableMulticastSubscription{value: val, isSet: true}
}

func (v NullableMulticastSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMulticastSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


