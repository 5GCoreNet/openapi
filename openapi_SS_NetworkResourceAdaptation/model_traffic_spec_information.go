/*
SS_NetworkResourceAdaptation

SS Network Resource Adaptation Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_NetworkResourceAdaptation

import (
	"encoding/json"
)

// checks if the TrafficSpecInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrafficSpecInformation{}

// TrafficSpecInformation The traffic classe supported by the DS-TTs and available end-to-end latency value and Priority Code Point (PCP) value. 
type TrafficSpecInformation struct {
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	PcpValue int32 `json:"pcpValue"`
	// Unsigned integer identifying a period of time in units of seconds.
	MaxFramInt int32 `json:"maxFramInt"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	MaxFramSize int32 `json:"maxFramSize"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	MaxIntFrames int32 `json:"maxIntFrames"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	MaxLatency int32 `json:"maxLatency"`
}

// NewTrafficSpecInformation instantiates a new TrafficSpecInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrafficSpecInformation(pcpValue int32, maxFramInt int32, maxFramSize int32, maxIntFrames int32, maxLatency int32) *TrafficSpecInformation {
	this := TrafficSpecInformation{}
	this.PcpValue = pcpValue
	this.MaxFramInt = maxFramInt
	this.MaxFramSize = maxFramSize
	this.MaxIntFrames = maxIntFrames
	this.MaxLatency = maxLatency
	return &this
}

// NewTrafficSpecInformationWithDefaults instantiates a new TrafficSpecInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficSpecInformationWithDefaults() *TrafficSpecInformation {
	this := TrafficSpecInformation{}
	return &this
}

// GetPcpValue returns the PcpValue field value
func (o *TrafficSpecInformation) GetPcpValue() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PcpValue
}

// GetPcpValueOk returns a tuple with the PcpValue field value
// and a boolean to check if the value has been set.
func (o *TrafficSpecInformation) GetPcpValueOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PcpValue, true
}

// SetPcpValue sets field value
func (o *TrafficSpecInformation) SetPcpValue(v int32) {
	o.PcpValue = v
}

// GetMaxFramInt returns the MaxFramInt field value
func (o *TrafficSpecInformation) GetMaxFramInt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxFramInt
}

// GetMaxFramIntOk returns a tuple with the MaxFramInt field value
// and a boolean to check if the value has been set.
func (o *TrafficSpecInformation) GetMaxFramIntOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFramInt, true
}

// SetMaxFramInt sets field value
func (o *TrafficSpecInformation) SetMaxFramInt(v int32) {
	o.MaxFramInt = v
}

// GetMaxFramSize returns the MaxFramSize field value
func (o *TrafficSpecInformation) GetMaxFramSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxFramSize
}

// GetMaxFramSizeOk returns a tuple with the MaxFramSize field value
// and a boolean to check if the value has been set.
func (o *TrafficSpecInformation) GetMaxFramSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxFramSize, true
}

// SetMaxFramSize sets field value
func (o *TrafficSpecInformation) SetMaxFramSize(v int32) {
	o.MaxFramSize = v
}

// GetMaxIntFrames returns the MaxIntFrames field value
func (o *TrafficSpecInformation) GetMaxIntFrames() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxIntFrames
}

// GetMaxIntFramesOk returns a tuple with the MaxIntFrames field value
// and a boolean to check if the value has been set.
func (o *TrafficSpecInformation) GetMaxIntFramesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxIntFrames, true
}

// SetMaxIntFrames sets field value
func (o *TrafficSpecInformation) SetMaxIntFrames(v int32) {
	o.MaxIntFrames = v
}

// GetMaxLatency returns the MaxLatency field value
func (o *TrafficSpecInformation) GetMaxLatency() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.MaxLatency
}

// GetMaxLatencyOk returns a tuple with the MaxLatency field value
// and a boolean to check if the value has been set.
func (o *TrafficSpecInformation) GetMaxLatencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxLatency, true
}

// SetMaxLatency sets field value
func (o *TrafficSpecInformation) SetMaxLatency(v int32) {
	o.MaxLatency = v
}

func (o TrafficSpecInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrafficSpecInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pcpValue"] = o.PcpValue
	toSerialize["maxFramInt"] = o.MaxFramInt
	toSerialize["maxFramSize"] = o.MaxFramSize
	toSerialize["maxIntFrames"] = o.MaxIntFrames
	toSerialize["maxLatency"] = o.MaxLatency
	return toSerialize, nil
}

type NullableTrafficSpecInformation struct {
	value *TrafficSpecInformation
	isSet bool
}

func (v NullableTrafficSpecInformation) Get() *TrafficSpecInformation {
	return v.value
}

func (v *NullableTrafficSpecInformation) Set(val *TrafficSpecInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficSpecInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficSpecInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficSpecInformation(val *TrafficSpecInformation) *NullableTrafficSpecInformation {
	return &NullableTrafficSpecInformation{value: val, isSet: true}
}

func (v NullableTrafficSpecInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficSpecInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


