/*
SS_NetworkResourceAdaptation

SS Network Resource Adaptation Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_NetworkResourceAdaptation

import (
	"encoding/json"
)

// checks if the MbmsLocArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MbmsLocArea{}

// MbmsLocArea Represents a user location area whithin which is sent a group message delivery via MBMS request.
type MbmsLocArea struct {
	// Indicates a Cell Global Identification of the user which identifies the cell the UE is registered.
	CellId []string `json:"cellId,omitempty"`
	// Indicates an eNodeB in which the UE is currently located.
	EnodeBId []string `json:"enodeBId,omitempty"`
	// Identifies a geographic area of the user where the UE is located.
	GeographicArea []GeographicArea `json:"geographicArea,omitempty"`
	// Identifies an MBMS Service Area Identity of the user where the UE is located.
	MbmsServiceAreaId []string `json:"mbmsServiceAreaId,omitempty"`
	// Identifies a civic address of the user where the UE is located.
	CivicAddress []CivicAddress `json:"civicAddress,omitempty"`
}

// NewMbmsLocArea instantiates a new MbmsLocArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbmsLocArea() *MbmsLocArea {
	this := MbmsLocArea{}
	return &this
}

// NewMbmsLocAreaWithDefaults instantiates a new MbmsLocArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbmsLocAreaWithDefaults() *MbmsLocArea {
	this := MbmsLocArea{}
	return &this
}

// GetCellId returns the CellId field value if set, zero value otherwise.
func (o *MbmsLocArea) GetCellId() []string {
	if o == nil || IsNil(o.CellId) {
		var ret []string
		return ret
	}
	return o.CellId
}

// GetCellIdOk returns a tuple with the CellId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbmsLocArea) GetCellIdOk() ([]string, bool) {
	if o == nil || IsNil(o.CellId) {
		return nil, false
	}
	return o.CellId, true
}

// HasCellId returns a boolean if a field has been set.
func (o *MbmsLocArea) HasCellId() bool {
	if o != nil && !IsNil(o.CellId) {
		return true
	}

	return false
}

// SetCellId gets a reference to the given []string and assigns it to the CellId field.
func (o *MbmsLocArea) SetCellId(v []string) {
	o.CellId = v
}

// GetEnodeBId returns the EnodeBId field value if set, zero value otherwise.
func (o *MbmsLocArea) GetEnodeBId() []string {
	if o == nil || IsNil(o.EnodeBId) {
		var ret []string
		return ret
	}
	return o.EnodeBId
}

// GetEnodeBIdOk returns a tuple with the EnodeBId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbmsLocArea) GetEnodeBIdOk() ([]string, bool) {
	if o == nil || IsNil(o.EnodeBId) {
		return nil, false
	}
	return o.EnodeBId, true
}

// HasEnodeBId returns a boolean if a field has been set.
func (o *MbmsLocArea) HasEnodeBId() bool {
	if o != nil && !IsNil(o.EnodeBId) {
		return true
	}

	return false
}

// SetEnodeBId gets a reference to the given []string and assigns it to the EnodeBId field.
func (o *MbmsLocArea) SetEnodeBId(v []string) {
	o.EnodeBId = v
}

// GetGeographicArea returns the GeographicArea field value if set, zero value otherwise.
func (o *MbmsLocArea) GetGeographicArea() []GeographicArea {
	if o == nil || IsNil(o.GeographicArea) {
		var ret []GeographicArea
		return ret
	}
	return o.GeographicArea
}

// GetGeographicAreaOk returns a tuple with the GeographicArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbmsLocArea) GetGeographicAreaOk() ([]GeographicArea, bool) {
	if o == nil || IsNil(o.GeographicArea) {
		return nil, false
	}
	return o.GeographicArea, true
}

// HasGeographicArea returns a boolean if a field has been set.
func (o *MbmsLocArea) HasGeographicArea() bool {
	if o != nil && !IsNil(o.GeographicArea) {
		return true
	}

	return false
}

// SetGeographicArea gets a reference to the given []GeographicArea and assigns it to the GeographicArea field.
func (o *MbmsLocArea) SetGeographicArea(v []GeographicArea) {
	o.GeographicArea = v
}

// GetMbmsServiceAreaId returns the MbmsServiceAreaId field value if set, zero value otherwise.
func (o *MbmsLocArea) GetMbmsServiceAreaId() []string {
	if o == nil || IsNil(o.MbmsServiceAreaId) {
		var ret []string
		return ret
	}
	return o.MbmsServiceAreaId
}

// GetMbmsServiceAreaIdOk returns a tuple with the MbmsServiceAreaId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbmsLocArea) GetMbmsServiceAreaIdOk() ([]string, bool) {
	if o == nil || IsNil(o.MbmsServiceAreaId) {
		return nil, false
	}
	return o.MbmsServiceAreaId, true
}

// HasMbmsServiceAreaId returns a boolean if a field has been set.
func (o *MbmsLocArea) HasMbmsServiceAreaId() bool {
	if o != nil && !IsNil(o.MbmsServiceAreaId) {
		return true
	}

	return false
}

// SetMbmsServiceAreaId gets a reference to the given []string and assigns it to the MbmsServiceAreaId field.
func (o *MbmsLocArea) SetMbmsServiceAreaId(v []string) {
	o.MbmsServiceAreaId = v
}

// GetCivicAddress returns the CivicAddress field value if set, zero value otherwise.
func (o *MbmsLocArea) GetCivicAddress() []CivicAddress {
	if o == nil || IsNil(o.CivicAddress) {
		var ret []CivicAddress
		return ret
	}
	return o.CivicAddress
}

// GetCivicAddressOk returns a tuple with the CivicAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbmsLocArea) GetCivicAddressOk() ([]CivicAddress, bool) {
	if o == nil || IsNil(o.CivicAddress) {
		return nil, false
	}
	return o.CivicAddress, true
}

// HasCivicAddress returns a boolean if a field has been set.
func (o *MbmsLocArea) HasCivicAddress() bool {
	if o != nil && !IsNil(o.CivicAddress) {
		return true
	}

	return false
}

// SetCivicAddress gets a reference to the given []CivicAddress and assigns it to the CivicAddress field.
func (o *MbmsLocArea) SetCivicAddress(v []CivicAddress) {
	o.CivicAddress = v
}

func (o MbmsLocArea) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MbmsLocArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CellId) {
		toSerialize["cellId"] = o.CellId
	}
	if !IsNil(o.EnodeBId) {
		toSerialize["enodeBId"] = o.EnodeBId
	}
	if !IsNil(o.GeographicArea) {
		toSerialize["geographicArea"] = o.GeographicArea
	}
	if !IsNil(o.MbmsServiceAreaId) {
		toSerialize["mbmsServiceAreaId"] = o.MbmsServiceAreaId
	}
	if !IsNil(o.CivicAddress) {
		toSerialize["civicAddress"] = o.CivicAddress
	}
	return toSerialize, nil
}

type NullableMbmsLocArea struct {
	value *MbmsLocArea
	isSet bool
}

func (v NullableMbmsLocArea) Get() *MbmsLocArea {
	return v.value
}

func (v *NullableMbmsLocArea) Set(val *MbmsLocArea) {
	v.value = val
	v.isSet = true
}

func (v NullableMbmsLocArea) IsSet() bool {
	return v.isSet
}

func (v *NullableMbmsLocArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbmsLocArea(val *MbmsLocArea) *NullableMbmsLocArea {
	return &NullableMbmsLocArea{value: val, isSet: true}
}

func (v NullableMbmsLocArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbmsLocArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


