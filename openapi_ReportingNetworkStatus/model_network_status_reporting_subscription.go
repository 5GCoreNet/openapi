/*
3gpp-network-status-reporting

API for reporting network status.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ReportingNetworkStatus

import (
	"encoding/json"
	"time"
)

// checks if the NetworkStatusReportingSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkStatusReportingSubscription{}

// NetworkStatusReportingSubscription Represents a subscription to network status information reporting.
type NetworkStatusReportingSubscription struct {
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Self *string `json:"self,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NotificationDestination string `json:"notificationDestination"`
	// Set to true by the SCS/AS to request the SCEF to send a test notification as defined in clause 5.2.5.3. Set to false or omitted otherwise.
	RequestTestNotification *bool `json:"requestTestNotification,omitempty"`
	WebsockNotifConfig *WebsockNotifConfig `json:"websockNotifConfig,omitempty"`
	LocationArea LocationArea `json:"locationArea"`
	// string with format \"date-time\" as defined in OpenAPI.
	TimeDuration *time.Time `json:"timeDuration,omitempty"`
	// Identifies a list of congestion level(s) with exact value that the SCS/AS requests to be informed of when reached.
	ThresholdValues []int32 `json:"thresholdValues,omitempty"`
	// Identifies a list of congestion level(s) with abstracted value that the SCS/AS requests to be informed of when reached.
	ThresholdTypes []CongestionType `json:"thresholdTypes,omitempty"`
}

// NewNetworkStatusReportingSubscription instantiates a new NetworkStatusReportingSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkStatusReportingSubscription(notificationDestination string, locationArea LocationArea) *NetworkStatusReportingSubscription {
	this := NetworkStatusReportingSubscription{}
	this.NotificationDestination = notificationDestination
	this.LocationArea = locationArea
	return &this
}

// NewNetworkStatusReportingSubscriptionWithDefaults instantiates a new NetworkStatusReportingSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkStatusReportingSubscriptionWithDefaults() *NetworkStatusReportingSubscription {
	this := NetworkStatusReportingSubscription{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *NetworkStatusReportingSubscription) SetSelf(v string) {
	o.Self = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *NetworkStatusReportingSubscription) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetNotificationDestination returns the NotificationDestination field value
func (o *NetworkStatusReportingSubscription) GetNotificationDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationDestination
}

// GetNotificationDestinationOk returns a tuple with the NotificationDestination field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetNotificationDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationDestination, true
}

// SetNotificationDestination sets field value
func (o *NetworkStatusReportingSubscription) SetNotificationDestination(v string) {
	o.NotificationDestination = v
}

// GetRequestTestNotification returns the RequestTestNotification field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetRequestTestNotification() bool {
	if o == nil || IsNil(o.RequestTestNotification) {
		var ret bool
		return ret
	}
	return *o.RequestTestNotification
}

// GetRequestTestNotificationOk returns a tuple with the RequestTestNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetRequestTestNotificationOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestTestNotification) {
		return nil, false
	}
	return o.RequestTestNotification, true
}

// HasRequestTestNotification returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasRequestTestNotification() bool {
	if o != nil && !IsNil(o.RequestTestNotification) {
		return true
	}

	return false
}

// SetRequestTestNotification gets a reference to the given bool and assigns it to the RequestTestNotification field.
func (o *NetworkStatusReportingSubscription) SetRequestTestNotification(v bool) {
	o.RequestTestNotification = &v
}

// GetWebsockNotifConfig returns the WebsockNotifConfig field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetWebsockNotifConfig() WebsockNotifConfig {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		var ret WebsockNotifConfig
		return ret
	}
	return *o.WebsockNotifConfig
}

// GetWebsockNotifConfigOk returns a tuple with the WebsockNotifConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetWebsockNotifConfigOk() (*WebsockNotifConfig, bool) {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		return nil, false
	}
	return o.WebsockNotifConfig, true
}

// HasWebsockNotifConfig returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasWebsockNotifConfig() bool {
	if o != nil && !IsNil(o.WebsockNotifConfig) {
		return true
	}

	return false
}

// SetWebsockNotifConfig gets a reference to the given WebsockNotifConfig and assigns it to the WebsockNotifConfig field.
func (o *NetworkStatusReportingSubscription) SetWebsockNotifConfig(v WebsockNotifConfig) {
	o.WebsockNotifConfig = &v
}

// GetLocationArea returns the LocationArea field value
func (o *NetworkStatusReportingSubscription) GetLocationArea() LocationArea {
	if o == nil {
		var ret LocationArea
		return ret
	}

	return o.LocationArea
}

// GetLocationAreaOk returns a tuple with the LocationArea field value
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetLocationAreaOk() (*LocationArea, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationArea, true
}

// SetLocationArea sets field value
func (o *NetworkStatusReportingSubscription) SetLocationArea(v LocationArea) {
	o.LocationArea = v
}

// GetTimeDuration returns the TimeDuration field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetTimeDuration() time.Time {
	if o == nil || IsNil(o.TimeDuration) {
		var ret time.Time
		return ret
	}
	return *o.TimeDuration
}

// GetTimeDurationOk returns a tuple with the TimeDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetTimeDurationOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeDuration) {
		return nil, false
	}
	return o.TimeDuration, true
}

// HasTimeDuration returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasTimeDuration() bool {
	if o != nil && !IsNil(o.TimeDuration) {
		return true
	}

	return false
}

// SetTimeDuration gets a reference to the given time.Time and assigns it to the TimeDuration field.
func (o *NetworkStatusReportingSubscription) SetTimeDuration(v time.Time) {
	o.TimeDuration = &v
}

// GetThresholdValues returns the ThresholdValues field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetThresholdValues() []int32 {
	if o == nil || IsNil(o.ThresholdValues) {
		var ret []int32
		return ret
	}
	return o.ThresholdValues
}

// GetThresholdValuesOk returns a tuple with the ThresholdValues field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetThresholdValuesOk() ([]int32, bool) {
	if o == nil || IsNil(o.ThresholdValues) {
		return nil, false
	}
	return o.ThresholdValues, true
}

// HasThresholdValues returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasThresholdValues() bool {
	if o != nil && !IsNil(o.ThresholdValues) {
		return true
	}

	return false
}

// SetThresholdValues gets a reference to the given []int32 and assigns it to the ThresholdValues field.
func (o *NetworkStatusReportingSubscription) SetThresholdValues(v []int32) {
	o.ThresholdValues = v
}

// GetThresholdTypes returns the ThresholdTypes field value if set, zero value otherwise.
func (o *NetworkStatusReportingSubscription) GetThresholdTypes() []CongestionType {
	if o == nil || IsNil(o.ThresholdTypes) {
		var ret []CongestionType
		return ret
	}
	return o.ThresholdTypes
}

// GetThresholdTypesOk returns a tuple with the ThresholdTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkStatusReportingSubscription) GetThresholdTypesOk() ([]CongestionType, bool) {
	if o == nil || IsNil(o.ThresholdTypes) {
		return nil, false
	}
	return o.ThresholdTypes, true
}

// HasThresholdTypes returns a boolean if a field has been set.
func (o *NetworkStatusReportingSubscription) HasThresholdTypes() bool {
	if o != nil && !IsNil(o.ThresholdTypes) {
		return true
	}

	return false
}

// SetThresholdTypes gets a reference to the given []CongestionType and assigns it to the ThresholdTypes field.
func (o *NetworkStatusReportingSubscription) SetThresholdTypes(v []CongestionType) {
	o.ThresholdTypes = v
}

func (o NetworkStatusReportingSubscription) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkStatusReportingSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	toSerialize["notificationDestination"] = o.NotificationDestination
	if !IsNil(o.RequestTestNotification) {
		toSerialize["requestTestNotification"] = o.RequestTestNotification
	}
	if !IsNil(o.WebsockNotifConfig) {
		toSerialize["websockNotifConfig"] = o.WebsockNotifConfig
	}
	toSerialize["locationArea"] = o.LocationArea
	if !IsNil(o.TimeDuration) {
		toSerialize["timeDuration"] = o.TimeDuration
	}
	if !IsNil(o.ThresholdValues) {
		toSerialize["thresholdValues"] = o.ThresholdValues
	}
	if !IsNil(o.ThresholdTypes) {
		toSerialize["thresholdTypes"] = o.ThresholdTypes
	}
	return toSerialize, nil
}

type NullableNetworkStatusReportingSubscription struct {
	value *NetworkStatusReportingSubscription
	isSet bool
}

func (v NullableNetworkStatusReportingSubscription) Get() *NetworkStatusReportingSubscription {
	return v.value
}

func (v *NullableNetworkStatusReportingSubscription) Set(val *NetworkStatusReportingSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkStatusReportingSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkStatusReportingSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkStatusReportingSubscription(val *NetworkStatusReportingSubscription) *NullableNetworkStatusReportingSubscription {
	return &NullableNetworkStatusReportingSubscription{value: val, isSet: true}
}

func (v NullableNetworkStatusReportingSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkStatusReportingSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


