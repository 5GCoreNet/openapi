/*
Nnef_PFDmanagement Service API

Packet Flow Description Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnef_PFDmanagement

import (
	"encoding/json"
)

// checks if the PfdChangeNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PfdChangeNotification{}

// PfdChangeNotification Represents information related to a notification of PFD change.
type PfdChangeNotification struct {
	// String providing an application identifier.
	ApplicationId string `json:"applicationId"`
	RemovalFlag *bool `json:"removalFlag,omitempty"`
	PartialFlag *bool `json:"partialFlag,omitempty"`
	Pfds []PfdContent `json:"pfds,omitempty"`
}

// NewPfdChangeNotification instantiates a new PfdChangeNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPfdChangeNotification(applicationId string) *PfdChangeNotification {
	this := PfdChangeNotification{}
	this.ApplicationId = applicationId
	var removalFlag bool = false
	this.RemovalFlag = &removalFlag
	var partialFlag bool = false
	this.PartialFlag = &partialFlag
	return &this
}

// NewPfdChangeNotificationWithDefaults instantiates a new PfdChangeNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPfdChangeNotificationWithDefaults() *PfdChangeNotification {
	this := PfdChangeNotification{}
	var removalFlag bool = false
	this.RemovalFlag = &removalFlag
	var partialFlag bool = false
	this.PartialFlag = &partialFlag
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *PfdChangeNotification) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *PfdChangeNotification) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *PfdChangeNotification) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetRemovalFlag returns the RemovalFlag field value if set, zero value otherwise.
func (o *PfdChangeNotification) GetRemovalFlag() bool {
	if o == nil || IsNil(o.RemovalFlag) {
		var ret bool
		return ret
	}
	return *o.RemovalFlag
}

// GetRemovalFlagOk returns a tuple with the RemovalFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PfdChangeNotification) GetRemovalFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.RemovalFlag) {
		return nil, false
	}
	return o.RemovalFlag, true
}

// HasRemovalFlag returns a boolean if a field has been set.
func (o *PfdChangeNotification) HasRemovalFlag() bool {
	if o != nil && !IsNil(o.RemovalFlag) {
		return true
	}

	return false
}

// SetRemovalFlag gets a reference to the given bool and assigns it to the RemovalFlag field.
func (o *PfdChangeNotification) SetRemovalFlag(v bool) {
	o.RemovalFlag = &v
}

// GetPartialFlag returns the PartialFlag field value if set, zero value otherwise.
func (o *PfdChangeNotification) GetPartialFlag() bool {
	if o == nil || IsNil(o.PartialFlag) {
		var ret bool
		return ret
	}
	return *o.PartialFlag
}

// GetPartialFlagOk returns a tuple with the PartialFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PfdChangeNotification) GetPartialFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.PartialFlag) {
		return nil, false
	}
	return o.PartialFlag, true
}

// HasPartialFlag returns a boolean if a field has been set.
func (o *PfdChangeNotification) HasPartialFlag() bool {
	if o != nil && !IsNil(o.PartialFlag) {
		return true
	}

	return false
}

// SetPartialFlag gets a reference to the given bool and assigns it to the PartialFlag field.
func (o *PfdChangeNotification) SetPartialFlag(v bool) {
	o.PartialFlag = &v
}

// GetPfds returns the Pfds field value if set, zero value otherwise.
func (o *PfdChangeNotification) GetPfds() []PfdContent {
	if o == nil || IsNil(o.Pfds) {
		var ret []PfdContent
		return ret
	}
	return o.Pfds
}

// GetPfdsOk returns a tuple with the Pfds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PfdChangeNotification) GetPfdsOk() ([]PfdContent, bool) {
	if o == nil || IsNil(o.Pfds) {
		return nil, false
	}
	return o.Pfds, true
}

// HasPfds returns a boolean if a field has been set.
func (o *PfdChangeNotification) HasPfds() bool {
	if o != nil && !IsNil(o.Pfds) {
		return true
	}

	return false
}

// SetPfds gets a reference to the given []PfdContent and assigns it to the Pfds field.
func (o *PfdChangeNotification) SetPfds(v []PfdContent) {
	o.Pfds = v
}

func (o PfdChangeNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PfdChangeNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applicationId"] = o.ApplicationId
	if !IsNil(o.RemovalFlag) {
		toSerialize["removalFlag"] = o.RemovalFlag
	}
	if !IsNil(o.PartialFlag) {
		toSerialize["partialFlag"] = o.PartialFlag
	}
	if !IsNil(o.Pfds) {
		toSerialize["pfds"] = o.Pfds
	}
	return toSerialize, nil
}

type NullablePfdChangeNotification struct {
	value *PfdChangeNotification
	isSet bool
}

func (v NullablePfdChangeNotification) Get() *PfdChangeNotification {
	return v.value
}

func (v *NullablePfdChangeNotification) Set(val *PfdChangeNotification) {
	v.value = val
	v.isSet = true
}

func (v NullablePfdChangeNotification) IsSet() bool {
	return v.isSet
}

func (v *NullablePfdChangeNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePfdChangeNotification(val *PfdChangeNotification) *NullablePfdChangeNotification {
	return &NullablePfdChangeNotification{value: val, isSet: true}
}

func (v NullablePfdChangeNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePfdChangeNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


