/*
Nnef_PFDmanagement Service API

Packet Flow Description Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnef_PFDmanagement

import (
	"encoding/json"
	"time"
)

// checks if the ApplicationForPfdRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationForPfdRequest{}

// ApplicationForPfdRequest Contains the application identifier(s) for the PFD(s) request.
type ApplicationForPfdRequest struct {
	// String providing an application identifier.
	ApplicationId string `json:"applicationId"`
	// string with format 'date-time' as defined in OpenAPI.
	PfdTimestamp *time.Time `json:"pfdTimestamp,omitempty"`
}

// NewApplicationForPfdRequest instantiates a new ApplicationForPfdRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationForPfdRequest(applicationId string) *ApplicationForPfdRequest {
	this := ApplicationForPfdRequest{}
	this.ApplicationId = applicationId
	return &this
}

// NewApplicationForPfdRequestWithDefaults instantiates a new ApplicationForPfdRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationForPfdRequestWithDefaults() *ApplicationForPfdRequest {
	this := ApplicationForPfdRequest{}
	return &this
}

// GetApplicationId returns the ApplicationId field value
func (o *ApplicationForPfdRequest) GetApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationId
}

// GetApplicationIdOk returns a tuple with the ApplicationId field value
// and a boolean to check if the value has been set.
func (o *ApplicationForPfdRequest) GetApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationId, true
}

// SetApplicationId sets field value
func (o *ApplicationForPfdRequest) SetApplicationId(v string) {
	o.ApplicationId = v
}

// GetPfdTimestamp returns the PfdTimestamp field value if set, zero value otherwise.
func (o *ApplicationForPfdRequest) GetPfdTimestamp() time.Time {
	if o == nil || IsNil(o.PfdTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.PfdTimestamp
}

// GetPfdTimestampOk returns a tuple with the PfdTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationForPfdRequest) GetPfdTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.PfdTimestamp) {
		return nil, false
	}
	return o.PfdTimestamp, true
}

// HasPfdTimestamp returns a boolean if a field has been set.
func (o *ApplicationForPfdRequest) HasPfdTimestamp() bool {
	if o != nil && !IsNil(o.PfdTimestamp) {
		return true
	}

	return false
}

// SetPfdTimestamp gets a reference to the given time.Time and assigns it to the PfdTimestamp field.
func (o *ApplicationForPfdRequest) SetPfdTimestamp(v time.Time) {
	o.PfdTimestamp = &v
}

func (o ApplicationForPfdRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationForPfdRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["applicationId"] = o.ApplicationId
	if !IsNil(o.PfdTimestamp) {
		toSerialize["pfdTimestamp"] = o.PfdTimestamp
	}
	return toSerialize, nil
}

type NullableApplicationForPfdRequest struct {
	value *ApplicationForPfdRequest
	isSet bool
}

func (v NullableApplicationForPfdRequest) Get() *ApplicationForPfdRequest {
	return v.value
}

func (v *NullableApplicationForPfdRequest) Set(val *ApplicationForPfdRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationForPfdRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationForPfdRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationForPfdRequest(val *ApplicationForPfdRequest) *NullableApplicationForPfdRequest {
	return &NullableApplicationForPfdRequest{value: val, isSet: true}
}

func (v NullableApplicationForPfdRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationForPfdRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
