/*
Nudm_SSAU

Nudm Service Specific Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_SSAU

import (
	"encoding/json"
)

// checks if the ServiceSpecificAuthorizationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceSpecificAuthorizationData{}

// ServiceSpecificAuthorizationData Authorization Response for a specific service.
type ServiceSpecificAuthorizationData struct {
	AuthorizationUeId *AuthorizationUeId `json:"authorizationUeId,omitempty"`
	// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.
	ExtGroupId *string `json:"extGroupId,omitempty"`
	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.
	IntGroupId *string `json:"intGroupId,omitempty"`
	AuthId     *string `json:"authId,omitempty"`
}

// NewServiceSpecificAuthorizationData instantiates a new ServiceSpecificAuthorizationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceSpecificAuthorizationData() *ServiceSpecificAuthorizationData {
	this := ServiceSpecificAuthorizationData{}
	return &this
}

// NewServiceSpecificAuthorizationDataWithDefaults instantiates a new ServiceSpecificAuthorizationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceSpecificAuthorizationDataWithDefaults() *ServiceSpecificAuthorizationData {
	this := ServiceSpecificAuthorizationData{}
	return &this
}

// GetAuthorizationUeId returns the AuthorizationUeId field value if set, zero value otherwise.
func (o *ServiceSpecificAuthorizationData) GetAuthorizationUeId() AuthorizationUeId {
	if o == nil || IsNil(o.AuthorizationUeId) {
		var ret AuthorizationUeId
		return ret
	}
	return *o.AuthorizationUeId
}

// GetAuthorizationUeIdOk returns a tuple with the AuthorizationUeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificAuthorizationData) GetAuthorizationUeIdOk() (*AuthorizationUeId, bool) {
	if o == nil || IsNil(o.AuthorizationUeId) {
		return nil, false
	}
	return o.AuthorizationUeId, true
}

// HasAuthorizationUeId returns a boolean if a field has been set.
func (o *ServiceSpecificAuthorizationData) HasAuthorizationUeId() bool {
	if o != nil && !IsNil(o.AuthorizationUeId) {
		return true
	}

	return false
}

// SetAuthorizationUeId gets a reference to the given AuthorizationUeId and assigns it to the AuthorizationUeId field.
func (o *ServiceSpecificAuthorizationData) SetAuthorizationUeId(v AuthorizationUeId) {
	o.AuthorizationUeId = &v
}

// GetExtGroupId returns the ExtGroupId field value if set, zero value otherwise.
func (o *ServiceSpecificAuthorizationData) GetExtGroupId() string {
	if o == nil || IsNil(o.ExtGroupId) {
		var ret string
		return ret
	}
	return *o.ExtGroupId
}

// GetExtGroupIdOk returns a tuple with the ExtGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificAuthorizationData) GetExtGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtGroupId) {
		return nil, false
	}
	return o.ExtGroupId, true
}

// HasExtGroupId returns a boolean if a field has been set.
func (o *ServiceSpecificAuthorizationData) HasExtGroupId() bool {
	if o != nil && !IsNil(o.ExtGroupId) {
		return true
	}

	return false
}

// SetExtGroupId gets a reference to the given string and assigns it to the ExtGroupId field.
func (o *ServiceSpecificAuthorizationData) SetExtGroupId(v string) {
	o.ExtGroupId = &v
}

// GetIntGroupId returns the IntGroupId field value if set, zero value otherwise.
func (o *ServiceSpecificAuthorizationData) GetIntGroupId() string {
	if o == nil || IsNil(o.IntGroupId) {
		var ret string
		return ret
	}
	return *o.IntGroupId
}

// GetIntGroupIdOk returns a tuple with the IntGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificAuthorizationData) GetIntGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.IntGroupId) {
		return nil, false
	}
	return o.IntGroupId, true
}

// HasIntGroupId returns a boolean if a field has been set.
func (o *ServiceSpecificAuthorizationData) HasIntGroupId() bool {
	if o != nil && !IsNil(o.IntGroupId) {
		return true
	}

	return false
}

// SetIntGroupId gets a reference to the given string and assigns it to the IntGroupId field.
func (o *ServiceSpecificAuthorizationData) SetIntGroupId(v string) {
	o.IntGroupId = &v
}

// GetAuthId returns the AuthId field value if set, zero value otherwise.
func (o *ServiceSpecificAuthorizationData) GetAuthId() string {
	if o == nil || IsNil(o.AuthId) {
		var ret string
		return ret
	}
	return *o.AuthId
}

// GetAuthIdOk returns a tuple with the AuthId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceSpecificAuthorizationData) GetAuthIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthId) {
		return nil, false
	}
	return o.AuthId, true
}

// HasAuthId returns a boolean if a field has been set.
func (o *ServiceSpecificAuthorizationData) HasAuthId() bool {
	if o != nil && !IsNil(o.AuthId) {
		return true
	}

	return false
}

// SetAuthId gets a reference to the given string and assigns it to the AuthId field.
func (o *ServiceSpecificAuthorizationData) SetAuthId(v string) {
	o.AuthId = &v
}

func (o ServiceSpecificAuthorizationData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceSpecificAuthorizationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AuthorizationUeId) {
		toSerialize["authorizationUeId"] = o.AuthorizationUeId
	}
	if !IsNil(o.ExtGroupId) {
		toSerialize["extGroupId"] = o.ExtGroupId
	}
	if !IsNil(o.IntGroupId) {
		toSerialize["intGroupId"] = o.IntGroupId
	}
	if !IsNil(o.AuthId) {
		toSerialize["authId"] = o.AuthId
	}
	return toSerialize, nil
}

type NullableServiceSpecificAuthorizationData struct {
	value *ServiceSpecificAuthorizationData
	isSet bool
}

func (v NullableServiceSpecificAuthorizationData) Get() *ServiceSpecificAuthorizationData {
	return v.value
}

func (v *NullableServiceSpecificAuthorizationData) Set(val *ServiceSpecificAuthorizationData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceSpecificAuthorizationData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceSpecificAuthorizationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceSpecificAuthorizationData(val *ServiceSpecificAuthorizationData) *NullableServiceSpecificAuthorizationData {
	return &NullableServiceSpecificAuthorizationData{value: val, isSet: true}
}

func (v NullableServiceSpecificAuthorizationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceSpecificAuthorizationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
