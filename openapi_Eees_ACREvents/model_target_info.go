/*
Eees_ACREvents

API for ACR events subscription and notification. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_ACREvents

import (
	"encoding/json"
)

// checks if the TargetInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetInfo{}

// TargetInfo Details of the selected T-EAS and the T-EES.
type TargetInfo struct {
	TrgetEASInfo *DiscoveredEas `json:"trgetEASInfo,omitempty"`
	TrgetEESInfo *EDNConfigInfo `json:"trgetEESInfo,omitempty"`
}

// NewTargetInfo instantiates a new TargetInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetInfo() *TargetInfo {
	this := TargetInfo{}
	return &this
}

// NewTargetInfoWithDefaults instantiates a new TargetInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetInfoWithDefaults() *TargetInfo {
	this := TargetInfo{}
	return &this
}

// GetTrgetEASInfo returns the TrgetEASInfo field value if set, zero value otherwise.
func (o *TargetInfo) GetTrgetEASInfo() DiscoveredEas {
	if o == nil || IsNil(o.TrgetEASInfo) {
		var ret DiscoveredEas
		return ret
	}
	return *o.TrgetEASInfo
}

// GetTrgetEASInfoOk returns a tuple with the TrgetEASInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetTrgetEASInfoOk() (*DiscoveredEas, bool) {
	if o == nil || IsNil(o.TrgetEASInfo) {
		return nil, false
	}
	return o.TrgetEASInfo, true
}

// HasTrgetEASInfo returns a boolean if a field has been set.
func (o *TargetInfo) HasTrgetEASInfo() bool {
	if o != nil && !IsNil(o.TrgetEASInfo) {
		return true
	}

	return false
}

// SetTrgetEASInfo gets a reference to the given DiscoveredEas and assigns it to the TrgetEASInfo field.
func (o *TargetInfo) SetTrgetEASInfo(v DiscoveredEas) {
	o.TrgetEASInfo = &v
}

// GetTrgetEESInfo returns the TrgetEESInfo field value if set, zero value otherwise.
func (o *TargetInfo) GetTrgetEESInfo() EDNConfigInfo {
	if o == nil || IsNil(o.TrgetEESInfo) {
		var ret EDNConfigInfo
		return ret
	}
	return *o.TrgetEESInfo
}

// GetTrgetEESInfoOk returns a tuple with the TrgetEESInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetInfo) GetTrgetEESInfoOk() (*EDNConfigInfo, bool) {
	if o == nil || IsNil(o.TrgetEESInfo) {
		return nil, false
	}
	return o.TrgetEESInfo, true
}

// HasTrgetEESInfo returns a boolean if a field has been set.
func (o *TargetInfo) HasTrgetEESInfo() bool {
	if o != nil && !IsNil(o.TrgetEESInfo) {
		return true
	}

	return false
}

// SetTrgetEESInfo gets a reference to the given EDNConfigInfo and assigns it to the TrgetEESInfo field.
func (o *TargetInfo) SetTrgetEESInfo(v EDNConfigInfo) {
	o.TrgetEESInfo = &v
}

func (o TargetInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TrgetEASInfo) {
		toSerialize["trgetEASInfo"] = o.TrgetEASInfo
	}
	if !IsNil(o.TrgetEESInfo) {
		toSerialize["trgetEESInfo"] = o.TrgetEESInfo
	}
	return toSerialize, nil
}

type NullableTargetInfo struct {
	value *TargetInfo
	isSet bool
}

func (v NullableTargetInfo) Get() *TargetInfo {
	return v.value
}

func (v *NullableTargetInfo) Set(val *TargetInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetInfo(val *TargetInfo) *NullableTargetInfo {
	return &NullableTargetInfo{value: val, isSet: true}
}

func (v NullableTargetInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
