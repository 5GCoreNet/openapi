/*
Npanf_ProseKey

PAnF ProseKey Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npanf_ProseKey

import (
	"encoding/json"
)

// checks if the ProseContextInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProseContextInfo{}

// ProseContextInfo Prose Context Info.
type ProseContextInfo struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi string `json:"supi"`
	// ProSe Remote User Key over Control Plane
	Var5gPruk string `json:"5gPruk"`
	// A string carrying the CP-PRUK ID of the remote UE. The CP-PRUK ID is a string in NAI format as specified in clause 28.7.11 of 3GPP TS 23.003. 
	Var5gPrukId string `json:"5gPrukId"`
	// Relay Service Code to identify a connectivity service provided by the UE-to-Network relay. 
	RelayServiceCode int32 `json:"relayServiceCode"`
}

// NewProseContextInfo instantiates a new ProseContextInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProseContextInfo(supi string, var5gPruk string, var5gPrukId string, relayServiceCode int32) *ProseContextInfo {
	this := ProseContextInfo{}
	this.Supi = supi
	this.Var5gPruk = var5gPruk
	this.Var5gPrukId = var5gPrukId
	this.RelayServiceCode = relayServiceCode
	return &this
}

// NewProseContextInfoWithDefaults instantiates a new ProseContextInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProseContextInfoWithDefaults() *ProseContextInfo {
	this := ProseContextInfo{}
	return &this
}

// GetSupi returns the Supi field value
func (o *ProseContextInfo) GetSupi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Supi
}

// GetSupiOk returns a tuple with the Supi field value
// and a boolean to check if the value has been set.
func (o *ProseContextInfo) GetSupiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Supi, true
}

// SetSupi sets field value
func (o *ProseContextInfo) SetSupi(v string) {
	o.Supi = v
}

// GetVar5gPruk returns the Var5gPruk field value
func (o *ProseContextInfo) GetVar5gPruk() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var5gPruk
}

// GetVar5gPrukOk returns a tuple with the Var5gPruk field value
// and a boolean to check if the value has been set.
func (o *ProseContextInfo) GetVar5gPrukOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var5gPruk, true
}

// SetVar5gPruk sets field value
func (o *ProseContextInfo) SetVar5gPruk(v string) {
	o.Var5gPruk = v
}

// GetVar5gPrukId returns the Var5gPrukId field value
func (o *ProseContextInfo) GetVar5gPrukId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Var5gPrukId
}

// GetVar5gPrukIdOk returns a tuple with the Var5gPrukId field value
// and a boolean to check if the value has been set.
func (o *ProseContextInfo) GetVar5gPrukIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Var5gPrukId, true
}

// SetVar5gPrukId sets field value
func (o *ProseContextInfo) SetVar5gPrukId(v string) {
	o.Var5gPrukId = v
}

// GetRelayServiceCode returns the RelayServiceCode field value
func (o *ProseContextInfo) GetRelayServiceCode() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RelayServiceCode
}

// GetRelayServiceCodeOk returns a tuple with the RelayServiceCode field value
// and a boolean to check if the value has been set.
func (o *ProseContextInfo) GetRelayServiceCodeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RelayServiceCode, true
}

// SetRelayServiceCode sets field value
func (o *ProseContextInfo) SetRelayServiceCode(v int32) {
	o.RelayServiceCode = v
}

func (o ProseContextInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProseContextInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["supi"] = o.Supi
	toSerialize["5gPruk"] = o.Var5gPruk
	toSerialize["5gPrukId"] = o.Var5gPrukId
	toSerialize["relayServiceCode"] = o.RelayServiceCode
	return toSerialize, nil
}

type NullableProseContextInfo struct {
	value *ProseContextInfo
	isSet bool
}

func (v NullableProseContextInfo) Get() *ProseContextInfo {
	return v.value
}

func (v *NullableProseContextInfo) Set(val *ProseContextInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableProseContextInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableProseContextInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProseContextInfo(val *ProseContextInfo) *NullableProseContextInfo {
	return &NullableProseContextInfo{value: val, isSet: true}
}

func (v NullableProseContextInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProseContextInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


