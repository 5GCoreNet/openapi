/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the NefFunctionSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NefFunctionSingleAllOfAttributes{}

// NefFunctionSingleAllOfAttributes struct for NefFunctionSingleAllOfAttributes
type NefFunctionSingleAllOfAttributes struct {
	ManagedFunctionAttr
	SBIFqdn                        *string              `json:"sBIFqdn,omitempty"`
	SnssaiList                     []Snssai             `json:"snssaiList,omitempty"`
	ManagedNFProfile               *ManagedNFProfile    `json:"managedNFProfile,omitempty"`
	CapabilityList                 []string             `json:"capabilityList,omitempty"`
	IsCAPIFSup                     *bool                `json:"isCAPIFSup,omitempty"`
	TaiList                        []Tai                `json:"taiList,omitempty"`
	TaiRangeList                   []TaiRange           `json:"taiRangeList,omitempty"`
	Dnai                           *string              `json:"dnai,omitempty"`
	NefId                          *string              `json:"nefId,omitempty"`
	PfdData                        *PfdData             `json:"pfdData,omitempty"`
	AfEeData                       *AfEventExposureData `json:"afEeData,omitempty"`
	GpsiRanges                     []IdentityRange      `json:"gpsiRanges,omitempty"`
	ExternalGroupIdentifiersRanges []IdentityRange      `json:"externalGroupIdentifiersRanges,omitempty"`
	ServedFqdnList                 []string             `json:"servedFqdnList,omitempty"`
	DnaiList                       []string             `json:"dnaiList,omitempty"`
	UnTrustAfInfoList              []UnTrustAfInfo      `json:"unTrustAfInfoList,omitempty"`
	UasNfFunctionalityInd          *bool                `json:"uasNfFunctionalityInd,omitempty"`
}

// NewNefFunctionSingleAllOfAttributes instantiates a new NefFunctionSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNefFunctionSingleAllOfAttributes() *NefFunctionSingleAllOfAttributes {
	this := NefFunctionSingleAllOfAttributes{}
	var uasNfFunctionalityInd bool = false
	this.UasNfFunctionalityInd = &uasNfFunctionalityInd
	return &this
}

// NewNefFunctionSingleAllOfAttributesWithDefaults instantiates a new NefFunctionSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNefFunctionSingleAllOfAttributesWithDefaults() *NefFunctionSingleAllOfAttributes {
	this := NefFunctionSingleAllOfAttributes{}
	var uasNfFunctionalityInd bool = false
	this.UasNfFunctionalityInd = &uasNfFunctionalityInd
	return &this
}

// GetSBIFqdn returns the SBIFqdn field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetSBIFqdn() string {
	if o == nil || IsNil(o.SBIFqdn) {
		var ret string
		return ret
	}
	return *o.SBIFqdn
}

// GetSBIFqdnOk returns a tuple with the SBIFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetSBIFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.SBIFqdn) {
		return nil, false
	}
	return o.SBIFqdn, true
}

// HasSBIFqdn returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasSBIFqdn() bool {
	if o != nil && !IsNil(o.SBIFqdn) {
		return true
	}

	return false
}

// SetSBIFqdn gets a reference to the given string and assigns it to the SBIFqdn field.
func (o *NefFunctionSingleAllOfAttributes) SetSBIFqdn(v string) {
	o.SBIFqdn = &v
}

// GetSnssaiList returns the SnssaiList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetSnssaiList() []Snssai {
	if o == nil || IsNil(o.SnssaiList) {
		var ret []Snssai
		return ret
	}
	return o.SnssaiList
}

// GetSnssaiListOk returns a tuple with the SnssaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetSnssaiListOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.SnssaiList) {
		return nil, false
	}
	return o.SnssaiList, true
}

// HasSnssaiList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasSnssaiList() bool {
	if o != nil && !IsNil(o.SnssaiList) {
		return true
	}

	return false
}

// SetSnssaiList gets a reference to the given []Snssai and assigns it to the SnssaiList field.
func (o *NefFunctionSingleAllOfAttributes) SetSnssaiList(v []Snssai) {
	o.SnssaiList = v
}

// GetManagedNFProfile returns the ManagedNFProfile field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetManagedNFProfile() ManagedNFProfile {
	if o == nil || IsNil(o.ManagedNFProfile) {
		var ret ManagedNFProfile
		return ret
	}
	return *o.ManagedNFProfile
}

// GetManagedNFProfileOk returns a tuple with the ManagedNFProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetManagedNFProfileOk() (*ManagedNFProfile, bool) {
	if o == nil || IsNil(o.ManagedNFProfile) {
		return nil, false
	}
	return o.ManagedNFProfile, true
}

// HasManagedNFProfile returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasManagedNFProfile() bool {
	if o != nil && !IsNil(o.ManagedNFProfile) {
		return true
	}

	return false
}

// SetManagedNFProfile gets a reference to the given ManagedNFProfile and assigns it to the ManagedNFProfile field.
func (o *NefFunctionSingleAllOfAttributes) SetManagedNFProfile(v ManagedNFProfile) {
	o.ManagedNFProfile = &v
}

// GetCapabilityList returns the CapabilityList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetCapabilityList() []string {
	if o == nil || IsNil(o.CapabilityList) {
		var ret []string
		return ret
	}
	return o.CapabilityList
}

// GetCapabilityListOk returns a tuple with the CapabilityList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetCapabilityListOk() ([]string, bool) {
	if o == nil || IsNil(o.CapabilityList) {
		return nil, false
	}
	return o.CapabilityList, true
}

// HasCapabilityList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasCapabilityList() bool {
	if o != nil && !IsNil(o.CapabilityList) {
		return true
	}

	return false
}

// SetCapabilityList gets a reference to the given []string and assigns it to the CapabilityList field.
func (o *NefFunctionSingleAllOfAttributes) SetCapabilityList(v []string) {
	o.CapabilityList = v
}

// GetIsCAPIFSup returns the IsCAPIFSup field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetIsCAPIFSup() bool {
	if o == nil || IsNil(o.IsCAPIFSup) {
		var ret bool
		return ret
	}
	return *o.IsCAPIFSup
}

// GetIsCAPIFSupOk returns a tuple with the IsCAPIFSup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetIsCAPIFSupOk() (*bool, bool) {
	if o == nil || IsNil(o.IsCAPIFSup) {
		return nil, false
	}
	return o.IsCAPIFSup, true
}

// HasIsCAPIFSup returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasIsCAPIFSup() bool {
	if o != nil && !IsNil(o.IsCAPIFSup) {
		return true
	}

	return false
}

// SetIsCAPIFSup gets a reference to the given bool and assigns it to the IsCAPIFSup field.
func (o *NefFunctionSingleAllOfAttributes) SetIsCAPIFSup(v bool) {
	o.IsCAPIFSup = &v
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetTaiList() []Tai {
	if o == nil || IsNil(o.TaiList) {
		var ret []Tai
		return ret
	}
	return o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetTaiListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasTaiList() bool {
	if o != nil && !IsNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given []Tai and assigns it to the TaiList field.
func (o *NefFunctionSingleAllOfAttributes) SetTaiList(v []Tai) {
	o.TaiList = v
}

// GetTaiRangeList returns the TaiRangeList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetTaiRangeList() []TaiRange {
	if o == nil || IsNil(o.TaiRangeList) {
		var ret []TaiRange
		return ret
	}
	return o.TaiRangeList
}

// GetTaiRangeListOk returns a tuple with the TaiRangeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetTaiRangeListOk() ([]TaiRange, bool) {
	if o == nil || IsNil(o.TaiRangeList) {
		return nil, false
	}
	return o.TaiRangeList, true
}

// HasTaiRangeList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasTaiRangeList() bool {
	if o != nil && !IsNil(o.TaiRangeList) {
		return true
	}

	return false
}

// SetTaiRangeList gets a reference to the given []TaiRange and assigns it to the TaiRangeList field.
func (o *NefFunctionSingleAllOfAttributes) SetTaiRangeList(v []TaiRange) {
	o.TaiRangeList = v
}

// GetDnai returns the Dnai field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetDnai() string {
	if o == nil || IsNil(o.Dnai) {
		var ret string
		return ret
	}
	return *o.Dnai
}

// GetDnaiOk returns a tuple with the Dnai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetDnaiOk() (*string, bool) {
	if o == nil || IsNil(o.Dnai) {
		return nil, false
	}
	return o.Dnai, true
}

// HasDnai returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasDnai() bool {
	if o != nil && !IsNil(o.Dnai) {
		return true
	}

	return false
}

// SetDnai gets a reference to the given string and assigns it to the Dnai field.
func (o *NefFunctionSingleAllOfAttributes) SetDnai(v string) {
	o.Dnai = &v
}

// GetNefId returns the NefId field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetNefId() string {
	if o == nil || IsNil(o.NefId) {
		var ret string
		return ret
	}
	return *o.NefId
}

// GetNefIdOk returns a tuple with the NefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetNefIdOk() (*string, bool) {
	if o == nil || IsNil(o.NefId) {
		return nil, false
	}
	return o.NefId, true
}

// HasNefId returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasNefId() bool {
	if o != nil && !IsNil(o.NefId) {
		return true
	}

	return false
}

// SetNefId gets a reference to the given string and assigns it to the NefId field.
func (o *NefFunctionSingleAllOfAttributes) SetNefId(v string) {
	o.NefId = &v
}

// GetPfdData returns the PfdData field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetPfdData() PfdData {
	if o == nil || IsNil(o.PfdData) {
		var ret PfdData
		return ret
	}
	return *o.PfdData
}

// GetPfdDataOk returns a tuple with the PfdData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetPfdDataOk() (*PfdData, bool) {
	if o == nil || IsNil(o.PfdData) {
		return nil, false
	}
	return o.PfdData, true
}

// HasPfdData returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasPfdData() bool {
	if o != nil && !IsNil(o.PfdData) {
		return true
	}

	return false
}

// SetPfdData gets a reference to the given PfdData and assigns it to the PfdData field.
func (o *NefFunctionSingleAllOfAttributes) SetPfdData(v PfdData) {
	o.PfdData = &v
}

// GetAfEeData returns the AfEeData field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetAfEeData() AfEventExposureData {
	if o == nil || IsNil(o.AfEeData) {
		var ret AfEventExposureData
		return ret
	}
	return *o.AfEeData
}

// GetAfEeDataOk returns a tuple with the AfEeData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetAfEeDataOk() (*AfEventExposureData, bool) {
	if o == nil || IsNil(o.AfEeData) {
		return nil, false
	}
	return o.AfEeData, true
}

// HasAfEeData returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasAfEeData() bool {
	if o != nil && !IsNil(o.AfEeData) {
		return true
	}

	return false
}

// SetAfEeData gets a reference to the given AfEventExposureData and assigns it to the AfEeData field.
func (o *NefFunctionSingleAllOfAttributes) SetAfEeData(v AfEventExposureData) {
	o.AfEeData = &v
}

// GetGpsiRanges returns the GpsiRanges field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetGpsiRanges() []IdentityRange {
	if o == nil || IsNil(o.GpsiRanges) {
		var ret []IdentityRange
		return ret
	}
	return o.GpsiRanges
}

// GetGpsiRangesOk returns a tuple with the GpsiRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetGpsiRangesOk() ([]IdentityRange, bool) {
	if o == nil || IsNil(o.GpsiRanges) {
		return nil, false
	}
	return o.GpsiRanges, true
}

// HasGpsiRanges returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasGpsiRanges() bool {
	if o != nil && !IsNil(o.GpsiRanges) {
		return true
	}

	return false
}

// SetGpsiRanges gets a reference to the given []IdentityRange and assigns it to the GpsiRanges field.
func (o *NefFunctionSingleAllOfAttributes) SetGpsiRanges(v []IdentityRange) {
	o.GpsiRanges = v
}

// GetExternalGroupIdentifiersRanges returns the ExternalGroupIdentifiersRanges field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetExternalGroupIdentifiersRanges() []IdentityRange {
	if o == nil || IsNil(o.ExternalGroupIdentifiersRanges) {
		var ret []IdentityRange
		return ret
	}
	return o.ExternalGroupIdentifiersRanges
}

// GetExternalGroupIdentifiersRangesOk returns a tuple with the ExternalGroupIdentifiersRanges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetExternalGroupIdentifiersRangesOk() ([]IdentityRange, bool) {
	if o == nil || IsNil(o.ExternalGroupIdentifiersRanges) {
		return nil, false
	}
	return o.ExternalGroupIdentifiersRanges, true
}

// HasExternalGroupIdentifiersRanges returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasExternalGroupIdentifiersRanges() bool {
	if o != nil && !IsNil(o.ExternalGroupIdentifiersRanges) {
		return true
	}

	return false
}

// SetExternalGroupIdentifiersRanges gets a reference to the given []IdentityRange and assigns it to the ExternalGroupIdentifiersRanges field.
func (o *NefFunctionSingleAllOfAttributes) SetExternalGroupIdentifiersRanges(v []IdentityRange) {
	o.ExternalGroupIdentifiersRanges = v
}

// GetServedFqdnList returns the ServedFqdnList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetServedFqdnList() []string {
	if o == nil || IsNil(o.ServedFqdnList) {
		var ret []string
		return ret
	}
	return o.ServedFqdnList
}

// GetServedFqdnListOk returns a tuple with the ServedFqdnList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetServedFqdnListOk() ([]string, bool) {
	if o == nil || IsNil(o.ServedFqdnList) {
		return nil, false
	}
	return o.ServedFqdnList, true
}

// HasServedFqdnList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasServedFqdnList() bool {
	if o != nil && !IsNil(o.ServedFqdnList) {
		return true
	}

	return false
}

// SetServedFqdnList gets a reference to the given []string and assigns it to the ServedFqdnList field.
func (o *NefFunctionSingleAllOfAttributes) SetServedFqdnList(v []string) {
	o.ServedFqdnList = v
}

// GetDnaiList returns the DnaiList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetDnaiList() []string {
	if o == nil || IsNil(o.DnaiList) {
		var ret []string
		return ret
	}
	return o.DnaiList
}

// GetDnaiListOk returns a tuple with the DnaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetDnaiListOk() ([]string, bool) {
	if o == nil || IsNil(o.DnaiList) {
		return nil, false
	}
	return o.DnaiList, true
}

// HasDnaiList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasDnaiList() bool {
	if o != nil && !IsNil(o.DnaiList) {
		return true
	}

	return false
}

// SetDnaiList gets a reference to the given []string and assigns it to the DnaiList field.
func (o *NefFunctionSingleAllOfAttributes) SetDnaiList(v []string) {
	o.DnaiList = v
}

// GetUnTrustAfInfoList returns the UnTrustAfInfoList field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetUnTrustAfInfoList() []UnTrustAfInfo {
	if o == nil || IsNil(o.UnTrustAfInfoList) {
		var ret []UnTrustAfInfo
		return ret
	}
	return o.UnTrustAfInfoList
}

// GetUnTrustAfInfoListOk returns a tuple with the UnTrustAfInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetUnTrustAfInfoListOk() ([]UnTrustAfInfo, bool) {
	if o == nil || IsNil(o.UnTrustAfInfoList) {
		return nil, false
	}
	return o.UnTrustAfInfoList, true
}

// HasUnTrustAfInfoList returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasUnTrustAfInfoList() bool {
	if o != nil && !IsNil(o.UnTrustAfInfoList) {
		return true
	}

	return false
}

// SetUnTrustAfInfoList gets a reference to the given []UnTrustAfInfo and assigns it to the UnTrustAfInfoList field.
func (o *NefFunctionSingleAllOfAttributes) SetUnTrustAfInfoList(v []UnTrustAfInfo) {
	o.UnTrustAfInfoList = v
}

// GetUasNfFunctionalityInd returns the UasNfFunctionalityInd field value if set, zero value otherwise.
func (o *NefFunctionSingleAllOfAttributes) GetUasNfFunctionalityInd() bool {
	if o == nil || IsNil(o.UasNfFunctionalityInd) {
		var ret bool
		return ret
	}
	return *o.UasNfFunctionalityInd
}

// GetUasNfFunctionalityIndOk returns a tuple with the UasNfFunctionalityInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NefFunctionSingleAllOfAttributes) GetUasNfFunctionalityIndOk() (*bool, bool) {
	if o == nil || IsNil(o.UasNfFunctionalityInd) {
		return nil, false
	}
	return o.UasNfFunctionalityInd, true
}

// HasUasNfFunctionalityInd returns a boolean if a field has been set.
func (o *NefFunctionSingleAllOfAttributes) HasUasNfFunctionalityInd() bool {
	if o != nil && !IsNil(o.UasNfFunctionalityInd) {
		return true
	}

	return false
}

// SetUasNfFunctionalityInd gets a reference to the given bool and assigns it to the UasNfFunctionalityInd field.
func (o *NefFunctionSingleAllOfAttributes) SetUasNfFunctionalityInd(v bool) {
	o.UasNfFunctionalityInd = &v
}

func (o NefFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NefFunctionSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedManagedFunctionAttr, errManagedFunctionAttr := json.Marshal(o.ManagedFunctionAttr)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	errManagedFunctionAttr = json.Unmarshal([]byte(serializedManagedFunctionAttr), &toSerialize)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	if !IsNil(o.SBIFqdn) {
		toSerialize["sBIFqdn"] = o.SBIFqdn
	}
	if !IsNil(o.SnssaiList) {
		toSerialize["snssaiList"] = o.SnssaiList
	}
	if !IsNil(o.ManagedNFProfile) {
		toSerialize["managedNFProfile"] = o.ManagedNFProfile
	}
	if !IsNil(o.CapabilityList) {
		toSerialize["capabilityList"] = o.CapabilityList
	}
	if !IsNil(o.IsCAPIFSup) {
		toSerialize["isCAPIFSup"] = o.IsCAPIFSup
	}
	if !IsNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	if !IsNil(o.TaiRangeList) {
		toSerialize["taiRangeList"] = o.TaiRangeList
	}
	if !IsNil(o.Dnai) {
		toSerialize["dnai"] = o.Dnai
	}
	if !IsNil(o.NefId) {
		toSerialize["nefId"] = o.NefId
	}
	if !IsNil(o.PfdData) {
		toSerialize["pfdData"] = o.PfdData
	}
	if !IsNil(o.AfEeData) {
		toSerialize["afEeData"] = o.AfEeData
	}
	if !IsNil(o.GpsiRanges) {
		toSerialize["gpsiRanges"] = o.GpsiRanges
	}
	if !IsNil(o.ExternalGroupIdentifiersRanges) {
		toSerialize["externalGroupIdentifiersRanges"] = o.ExternalGroupIdentifiersRanges
	}
	if !IsNil(o.ServedFqdnList) {
		toSerialize["servedFqdnList"] = o.ServedFqdnList
	}
	if !IsNil(o.DnaiList) {
		toSerialize["dnaiList"] = o.DnaiList
	}
	if !IsNil(o.UnTrustAfInfoList) {
		toSerialize["unTrustAfInfoList"] = o.UnTrustAfInfoList
	}
	if !IsNil(o.UasNfFunctionalityInd) {
		toSerialize["uasNfFunctionalityInd"] = o.UasNfFunctionalityInd
	}
	return toSerialize, nil
}

type NullableNefFunctionSingleAllOfAttributes struct {
	value *NefFunctionSingleAllOfAttributes
	isSet bool
}

func (v NullableNefFunctionSingleAllOfAttributes) Get() *NefFunctionSingleAllOfAttributes {
	return v.value
}

func (v *NullableNefFunctionSingleAllOfAttributes) Set(val *NefFunctionSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableNefFunctionSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableNefFunctionSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNefFunctionSingleAllOfAttributes(val *NefFunctionSingleAllOfAttributes) *NullableNefFunctionSingleAllOfAttributes {
	return &NullableNefFunctionSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableNefFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNefFunctionSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
