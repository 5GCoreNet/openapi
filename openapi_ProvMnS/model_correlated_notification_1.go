/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the CorrelatedNotification1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorrelatedNotification1{}

// CorrelatedNotification1 struct for CorrelatedNotification1
type CorrelatedNotification1 struct {
	SourceObjectInstance string `json:"sourceObjectInstance"`
	NotificationIds []int32 `json:"notificationIds"`
}

// NewCorrelatedNotification1 instantiates a new CorrelatedNotification1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorrelatedNotification1(sourceObjectInstance string, notificationIds []int32) *CorrelatedNotification1 {
	this := CorrelatedNotification1{}
	this.SourceObjectInstance = sourceObjectInstance
	this.NotificationIds = notificationIds
	return &this
}

// NewCorrelatedNotification1WithDefaults instantiates a new CorrelatedNotification1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorrelatedNotification1WithDefaults() *CorrelatedNotification1 {
	this := CorrelatedNotification1{}
	return &this
}

// GetSourceObjectInstance returns the SourceObjectInstance field value
func (o *CorrelatedNotification1) GetSourceObjectInstance() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SourceObjectInstance
}

// GetSourceObjectInstanceOk returns a tuple with the SourceObjectInstance field value
// and a boolean to check if the value has been set.
func (o *CorrelatedNotification1) GetSourceObjectInstanceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SourceObjectInstance, true
}

// SetSourceObjectInstance sets field value
func (o *CorrelatedNotification1) SetSourceObjectInstance(v string) {
	o.SourceObjectInstance = v
}

// GetNotificationIds returns the NotificationIds field value
func (o *CorrelatedNotification1) GetNotificationIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.NotificationIds
}

// GetNotificationIdsOk returns a tuple with the NotificationIds field value
// and a boolean to check if the value has been set.
func (o *CorrelatedNotification1) GetNotificationIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotificationIds, true
}

// SetNotificationIds sets field value
func (o *CorrelatedNotification1) SetNotificationIds(v []int32) {
	o.NotificationIds = v
}

func (o CorrelatedNotification1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorrelatedNotification1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sourceObjectInstance"] = o.SourceObjectInstance
	toSerialize["notificationIds"] = o.NotificationIds
	return toSerialize, nil
}

type NullableCorrelatedNotification1 struct {
	value *CorrelatedNotification1
	isSet bool
}

func (v NullableCorrelatedNotification1) Get() *CorrelatedNotification1 {
	return v.value
}

func (v *NullableCorrelatedNotification1) Set(val *CorrelatedNotification1) {
	v.value = val
	v.isSet = true
}

func (v NullableCorrelatedNotification1) IsSet() bool {
	return v.isSet
}

func (v *NullableCorrelatedNotification1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorrelatedNotification1(val *CorrelatedNotification1) *NullableCorrelatedNotification1 {
	return &NullableCorrelatedNotification1{value: val, isSet: true}
}

func (v NullableCorrelatedNotification1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorrelatedNotification1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


