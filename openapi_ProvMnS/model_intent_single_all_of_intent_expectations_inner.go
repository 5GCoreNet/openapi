/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
	"fmt"
)

// IntentSingleAllOfIntentExpectationsInner - struct for IntentSingleAllOfIntentExpectationsInner
type IntentSingleAllOfIntentExpectationsInner struct {
	IntentExpectation         *IntentExpectation
	RadioNetworkExpectation   *RadioNetworkExpectation
	ServiceSupportExpectation *ServiceSupportExpectation
}

// IntentExpectationAsIntentSingleAllOfIntentExpectationsInner is a convenience function that returns IntentExpectation wrapped in IntentSingleAllOfIntentExpectationsInner
func IntentExpectationAsIntentSingleAllOfIntentExpectationsInner(v *IntentExpectation) IntentSingleAllOfIntentExpectationsInner {
	return IntentSingleAllOfIntentExpectationsInner{
		IntentExpectation: v,
	}
}

// RadioNetworkExpectationAsIntentSingleAllOfIntentExpectationsInner is a convenience function that returns RadioNetworkExpectation wrapped in IntentSingleAllOfIntentExpectationsInner
func RadioNetworkExpectationAsIntentSingleAllOfIntentExpectationsInner(v *RadioNetworkExpectation) IntentSingleAllOfIntentExpectationsInner {
	return IntentSingleAllOfIntentExpectationsInner{
		RadioNetworkExpectation: v,
	}
}

// ServiceSupportExpectationAsIntentSingleAllOfIntentExpectationsInner is a convenience function that returns ServiceSupportExpectation wrapped in IntentSingleAllOfIntentExpectationsInner
func ServiceSupportExpectationAsIntentSingleAllOfIntentExpectationsInner(v *ServiceSupportExpectation) IntentSingleAllOfIntentExpectationsInner {
	return IntentSingleAllOfIntentExpectationsInner{
		ServiceSupportExpectation: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *IntentSingleAllOfIntentExpectationsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into IntentExpectation
	err = newStrictDecoder(data).Decode(&dst.IntentExpectation)
	if err == nil {
		jsonIntentExpectation, _ := json.Marshal(dst.IntentExpectation)
		if string(jsonIntentExpectation) == "{}" { // empty struct
			dst.IntentExpectation = nil
		} else {
			match++
		}
	} else {
		dst.IntentExpectation = nil
	}

	// try to unmarshal data into RadioNetworkExpectation
	err = newStrictDecoder(data).Decode(&dst.RadioNetworkExpectation)
	if err == nil {
		jsonRadioNetworkExpectation, _ := json.Marshal(dst.RadioNetworkExpectation)
		if string(jsonRadioNetworkExpectation) == "{}" { // empty struct
			dst.RadioNetworkExpectation = nil
		} else {
			match++
		}
	} else {
		dst.RadioNetworkExpectation = nil
	}

	// try to unmarshal data into ServiceSupportExpectation
	err = newStrictDecoder(data).Decode(&dst.ServiceSupportExpectation)
	if err == nil {
		jsonServiceSupportExpectation, _ := json.Marshal(dst.ServiceSupportExpectation)
		if string(jsonServiceSupportExpectation) == "{}" { // empty struct
			dst.ServiceSupportExpectation = nil
		} else {
			match++
		}
	} else {
		dst.ServiceSupportExpectation = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.IntentExpectation = nil
		dst.RadioNetworkExpectation = nil
		dst.ServiceSupportExpectation = nil

		return fmt.Errorf("data matches more than one schema in oneOf(IntentSingleAllOfIntentExpectationsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(IntentSingleAllOfIntentExpectationsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src IntentSingleAllOfIntentExpectationsInner) MarshalJSON() ([]byte, error) {
	if src.IntentExpectation != nil {
		return json.Marshal(&src.IntentExpectation)
	}

	if src.RadioNetworkExpectation != nil {
		return json.Marshal(&src.RadioNetworkExpectation)
	}

	if src.ServiceSupportExpectation != nil {
		return json.Marshal(&src.ServiceSupportExpectation)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *IntentSingleAllOfIntentExpectationsInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.IntentExpectation != nil {
		return obj.IntentExpectation
	}

	if obj.RadioNetworkExpectation != nil {
		return obj.RadioNetworkExpectation
	}

	if obj.ServiceSupportExpectation != nil {
		return obj.ServiceSupportExpectation
	}

	// all schemas are nil
	return nil
}

type NullableIntentSingleAllOfIntentExpectationsInner struct {
	value *IntentSingleAllOfIntentExpectationsInner
	isSet bool
}

func (v NullableIntentSingleAllOfIntentExpectationsInner) Get() *IntentSingleAllOfIntentExpectationsInner {
	return v.value
}

func (v *NullableIntentSingleAllOfIntentExpectationsInner) Set(val *IntentSingleAllOfIntentExpectationsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableIntentSingleAllOfIntentExpectationsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableIntentSingleAllOfIntentExpectationsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntentSingleAllOfIntentExpectationsInner(val *IntentSingleAllOfIntentExpectationsInner) *NullableIntentSingleAllOfIntentExpectationsInner {
	return &NullableIntentSingleAllOfIntentExpectationsInner{value: val, isSet: true}
}

func (v NullableIntentSingleAllOfIntentExpectationsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntentSingleAllOfIntentExpectationsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
