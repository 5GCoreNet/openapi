/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the ExternalEUTranCellSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalEUTranCellSingleAllOfAttributes{}

// ExternalEUTranCellSingleAllOfAttributes struct for ExternalEUTranCellSingleAllOfAttributes
type ExternalEUTranCellSingleAllOfAttributes struct {
	ManagedFunctionAttr
	EUtranFrequencyRef *string `json:"EUtranFrequencyRef,omitempty"`
}

// NewExternalEUTranCellSingleAllOfAttributes instantiates a new ExternalEUTranCellSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalEUTranCellSingleAllOfAttributes() *ExternalEUTranCellSingleAllOfAttributes {
	this := ExternalEUTranCellSingleAllOfAttributes{}
	return &this
}

// NewExternalEUTranCellSingleAllOfAttributesWithDefaults instantiates a new ExternalEUTranCellSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalEUTranCellSingleAllOfAttributesWithDefaults() *ExternalEUTranCellSingleAllOfAttributes {
	this := ExternalEUTranCellSingleAllOfAttributes{}
	return &this
}

// GetEUtranFrequencyRef returns the EUtranFrequencyRef field value if set, zero value otherwise.
func (o *ExternalEUTranCellSingleAllOfAttributes) GetEUtranFrequencyRef() string {
	if o == nil || IsNil(o.EUtranFrequencyRef) {
		var ret string
		return ret
	}
	return *o.EUtranFrequencyRef
}

// GetEUtranFrequencyRefOk returns a tuple with the EUtranFrequencyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalEUTranCellSingleAllOfAttributes) GetEUtranFrequencyRefOk() (*string, bool) {
	if o == nil || IsNil(o.EUtranFrequencyRef) {
		return nil, false
	}
	return o.EUtranFrequencyRef, true
}

// HasEUtranFrequencyRef returns a boolean if a field has been set.
func (o *ExternalEUTranCellSingleAllOfAttributes) HasEUtranFrequencyRef() bool {
	if o != nil && !IsNil(o.EUtranFrequencyRef) {
		return true
	}

	return false
}

// SetEUtranFrequencyRef gets a reference to the given string and assigns it to the EUtranFrequencyRef field.
func (o *ExternalEUTranCellSingleAllOfAttributes) SetEUtranFrequencyRef(v string) {
	o.EUtranFrequencyRef = &v
}

func (o ExternalEUTranCellSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalEUTranCellSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedManagedFunctionAttr, errManagedFunctionAttr := json.Marshal(o.ManagedFunctionAttr)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	errManagedFunctionAttr = json.Unmarshal([]byte(serializedManagedFunctionAttr), &toSerialize)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	if !IsNil(o.EUtranFrequencyRef) {
		toSerialize["EUtranFrequencyRef"] = o.EUtranFrequencyRef
	}
	return toSerialize, nil
}

type NullableExternalEUTranCellSingleAllOfAttributes struct {
	value *ExternalEUTranCellSingleAllOfAttributes
	isSet bool
}

func (v NullableExternalEUTranCellSingleAllOfAttributes) Get() *ExternalEUTranCellSingleAllOfAttributes {
	return v.value
}

func (v *NullableExternalEUTranCellSingleAllOfAttributes) Set(val *ExternalEUTranCellSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalEUTranCellSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalEUTranCellSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalEUTranCellSingleAllOfAttributes(val *ExternalEUTranCellSingleAllOfAttributes) *NullableExternalEUTranCellSingleAllOfAttributes {
	return &NullableExternalEUTranCellSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableExternalEUTranCellSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalEUTranCellSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
