/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the AssuranceGoalStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssuranceGoalStatus{}

// AssuranceGoalStatus struct for AssuranceGoalStatus
type AssuranceGoalStatus struct {
	AssuranceGoalStatusId *string `json:"assuranceGoalStatusId,omitempty"`
	AssuranceGoalId *string `json:"assuranceGoalId,omitempty"`
	AssuranceGoalStatusObserved *AssuranceGoalStatusObserved `json:"assuranceGoalStatusObserved,omitempty"`
	AssuranceGoalStatusPredicted *AssuranceGoalStatusPredicted `json:"assuranceGoalStatusPredicted,omitempty"`
	AssuranceGoalRef *string `json:"assuranceGoalRef,omitempty"`
}

// NewAssuranceGoalStatus instantiates a new AssuranceGoalStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssuranceGoalStatus() *AssuranceGoalStatus {
	this := AssuranceGoalStatus{}
	return &this
}

// NewAssuranceGoalStatusWithDefaults instantiates a new AssuranceGoalStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssuranceGoalStatusWithDefaults() *AssuranceGoalStatus {
	this := AssuranceGoalStatus{}
	return &this
}

// GetAssuranceGoalStatusId returns the AssuranceGoalStatusId field value if set, zero value otherwise.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusId() string {
	if o == nil || IsNil(o.AssuranceGoalStatusId) {
		var ret string
		return ret
	}
	return *o.AssuranceGoalStatusId
}

// GetAssuranceGoalStatusIdOk returns a tuple with the AssuranceGoalStatusId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssuranceGoalStatusId) {
		return nil, false
	}
	return o.AssuranceGoalStatusId, true
}

// HasAssuranceGoalStatusId returns a boolean if a field has been set.
func (o *AssuranceGoalStatus) HasAssuranceGoalStatusId() bool {
	if o != nil && !IsNil(o.AssuranceGoalStatusId) {
		return true
	}

	return false
}

// SetAssuranceGoalStatusId gets a reference to the given string and assigns it to the AssuranceGoalStatusId field.
func (o *AssuranceGoalStatus) SetAssuranceGoalStatusId(v string) {
	o.AssuranceGoalStatusId = &v
}

// GetAssuranceGoalId returns the AssuranceGoalId field value if set, zero value otherwise.
func (o *AssuranceGoalStatus) GetAssuranceGoalId() string {
	if o == nil || IsNil(o.AssuranceGoalId) {
		var ret string
		return ret
	}
	return *o.AssuranceGoalId
}

// GetAssuranceGoalIdOk returns a tuple with the AssuranceGoalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalStatus) GetAssuranceGoalIdOk() (*string, bool) {
	if o == nil || IsNil(o.AssuranceGoalId) {
		return nil, false
	}
	return o.AssuranceGoalId, true
}

// HasAssuranceGoalId returns a boolean if a field has been set.
func (o *AssuranceGoalStatus) HasAssuranceGoalId() bool {
	if o != nil && !IsNil(o.AssuranceGoalId) {
		return true
	}

	return false
}

// SetAssuranceGoalId gets a reference to the given string and assigns it to the AssuranceGoalId field.
func (o *AssuranceGoalStatus) SetAssuranceGoalId(v string) {
	o.AssuranceGoalId = &v
}

// GetAssuranceGoalStatusObserved returns the AssuranceGoalStatusObserved field value if set, zero value otherwise.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusObserved() AssuranceGoalStatusObserved {
	if o == nil || IsNil(o.AssuranceGoalStatusObserved) {
		var ret AssuranceGoalStatusObserved
		return ret
	}
	return *o.AssuranceGoalStatusObserved
}

// GetAssuranceGoalStatusObservedOk returns a tuple with the AssuranceGoalStatusObserved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusObservedOk() (*AssuranceGoalStatusObserved, bool) {
	if o == nil || IsNil(o.AssuranceGoalStatusObserved) {
		return nil, false
	}
	return o.AssuranceGoalStatusObserved, true
}

// HasAssuranceGoalStatusObserved returns a boolean if a field has been set.
func (o *AssuranceGoalStatus) HasAssuranceGoalStatusObserved() bool {
	if o != nil && !IsNil(o.AssuranceGoalStatusObserved) {
		return true
	}

	return false
}

// SetAssuranceGoalStatusObserved gets a reference to the given AssuranceGoalStatusObserved and assigns it to the AssuranceGoalStatusObserved field.
func (o *AssuranceGoalStatus) SetAssuranceGoalStatusObserved(v AssuranceGoalStatusObserved) {
	o.AssuranceGoalStatusObserved = &v
}

// GetAssuranceGoalStatusPredicted returns the AssuranceGoalStatusPredicted field value if set, zero value otherwise.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusPredicted() AssuranceGoalStatusPredicted {
	if o == nil || IsNil(o.AssuranceGoalStatusPredicted) {
		var ret AssuranceGoalStatusPredicted
		return ret
	}
	return *o.AssuranceGoalStatusPredicted
}

// GetAssuranceGoalStatusPredictedOk returns a tuple with the AssuranceGoalStatusPredicted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalStatus) GetAssuranceGoalStatusPredictedOk() (*AssuranceGoalStatusPredicted, bool) {
	if o == nil || IsNil(o.AssuranceGoalStatusPredicted) {
		return nil, false
	}
	return o.AssuranceGoalStatusPredicted, true
}

// HasAssuranceGoalStatusPredicted returns a boolean if a field has been set.
func (o *AssuranceGoalStatus) HasAssuranceGoalStatusPredicted() bool {
	if o != nil && !IsNil(o.AssuranceGoalStatusPredicted) {
		return true
	}

	return false
}

// SetAssuranceGoalStatusPredicted gets a reference to the given AssuranceGoalStatusPredicted and assigns it to the AssuranceGoalStatusPredicted field.
func (o *AssuranceGoalStatus) SetAssuranceGoalStatusPredicted(v AssuranceGoalStatusPredicted) {
	o.AssuranceGoalStatusPredicted = &v
}

// GetAssuranceGoalRef returns the AssuranceGoalRef field value if set, zero value otherwise.
func (o *AssuranceGoalStatus) GetAssuranceGoalRef() string {
	if o == nil || IsNil(o.AssuranceGoalRef) {
		var ret string
		return ret
	}
	return *o.AssuranceGoalRef
}

// GetAssuranceGoalRefOk returns a tuple with the AssuranceGoalRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalStatus) GetAssuranceGoalRefOk() (*string, bool) {
	if o == nil || IsNil(o.AssuranceGoalRef) {
		return nil, false
	}
	return o.AssuranceGoalRef, true
}

// HasAssuranceGoalRef returns a boolean if a field has been set.
func (o *AssuranceGoalStatus) HasAssuranceGoalRef() bool {
	if o != nil && !IsNil(o.AssuranceGoalRef) {
		return true
	}

	return false
}

// SetAssuranceGoalRef gets a reference to the given string and assigns it to the AssuranceGoalRef field.
func (o *AssuranceGoalStatus) SetAssuranceGoalRef(v string) {
	o.AssuranceGoalRef = &v
}

func (o AssuranceGoalStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssuranceGoalStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssuranceGoalStatusId) {
		toSerialize["assuranceGoalStatusId"] = o.AssuranceGoalStatusId
	}
	if !IsNil(o.AssuranceGoalId) {
		toSerialize["assuranceGoalId"] = o.AssuranceGoalId
	}
	if !IsNil(o.AssuranceGoalStatusObserved) {
		toSerialize["assuranceGoalStatusObserved"] = o.AssuranceGoalStatusObserved
	}
	if !IsNil(o.AssuranceGoalStatusPredicted) {
		toSerialize["assuranceGoalStatusPredicted"] = o.AssuranceGoalStatusPredicted
	}
	if !IsNil(o.AssuranceGoalRef) {
		toSerialize["assuranceGoalRef"] = o.AssuranceGoalRef
	}
	return toSerialize, nil
}

type NullableAssuranceGoalStatus struct {
	value *AssuranceGoalStatus
	isSet bool
}

func (v NullableAssuranceGoalStatus) Get() *AssuranceGoalStatus {
	return v.value
}

func (v *NullableAssuranceGoalStatus) Set(val *AssuranceGoalStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableAssuranceGoalStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableAssuranceGoalStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssuranceGoalStatus(val *AssuranceGoalStatus) *NullableAssuranceGoalStatus {
	return &NullableAssuranceGoalStatus{value: val, isSet: true}
}

func (v NullableAssuranceGoalStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssuranceGoalStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


