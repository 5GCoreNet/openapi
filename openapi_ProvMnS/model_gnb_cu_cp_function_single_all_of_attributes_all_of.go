/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the GnbCuCpFunctionSingleAllOfAttributesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GnbCuCpFunctionSingleAllOfAttributesAllOf{}

// GnbCuCpFunctionSingleAllOfAttributesAllOf struct for GnbCuCpFunctionSingleAllOfAttributesAllOf
type GnbCuCpFunctionSingleAllOfAttributesAllOf struct {
	GnbId *string `json:"gnbId,omitempty"`
	GnbIdLength *int32 `json:"gnbIdLength,omitempty"`
	GnbCuName *string `json:"gnbCuName,omitempty"`
	PlmnId *PlmnId `json:"plmnId,omitempty"`
	X2BlockList []string `json:"x2BlockList,omitempty"`
	XnBlockList []string `json:"xnBlockList,omitempty"`
	X2AllowList []string `json:"x2AllowList,omitempty"`
	XnAllowList []string `json:"xnAllowList,omitempty"`
	X2HOBlockList []string `json:"x2HOBlockList,omitempty"`
	XnHOBlackList []string `json:"xnHOBlackList,omitempty"`
	MappingSetIDBackhaulAddress *MappingSetIDBackhaulAddress `json:"mappingSetIDBackhaulAddress,omitempty"`
	TceMappingInfoList []TceMappingInfo `json:"tceMappingInfoList,omitempty"`
	Configurable5QISetRef *string `json:"configurable5QISetRef,omitempty"`
	Dynamic5QISetRef *string `json:"dynamic5QISetRef,omitempty"`
	DCHOControl *bool `json:"dCHOControl,omitempty"`
	DDAPSHOControl *bool `json:"dDAPSHOControl,omitempty"`
}

// NewGnbCuCpFunctionSingleAllOfAttributesAllOf instantiates a new GnbCuCpFunctionSingleAllOfAttributesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGnbCuCpFunctionSingleAllOfAttributesAllOf() *GnbCuCpFunctionSingleAllOfAttributesAllOf {
	this := GnbCuCpFunctionSingleAllOfAttributesAllOf{}
	return &this
}

// NewGnbCuCpFunctionSingleAllOfAttributesAllOfWithDefaults instantiates a new GnbCuCpFunctionSingleAllOfAttributesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGnbCuCpFunctionSingleAllOfAttributesAllOfWithDefaults() *GnbCuCpFunctionSingleAllOfAttributesAllOf {
	this := GnbCuCpFunctionSingleAllOfAttributesAllOf{}
	return &this
}

// GetGnbId returns the GnbId field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbId() string {
	if o == nil || IsNil(o.GnbId) {
		var ret string
		return ret
	}
	return *o.GnbId
}

// GetGnbIdOk returns a tuple with the GnbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbIdOk() (*string, bool) {
	if o == nil || IsNil(o.GnbId) {
		return nil, false
	}
	return o.GnbId, true
}

// HasGnbId returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasGnbId() bool {
	if o != nil && !IsNil(o.GnbId) {
		return true
	}

	return false
}

// SetGnbId gets a reference to the given string and assigns it to the GnbId field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetGnbId(v string) {
	o.GnbId = &v
}

// GetGnbIdLength returns the GnbIdLength field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbIdLength() int32 {
	if o == nil || IsNil(o.GnbIdLength) {
		var ret int32
		return ret
	}
	return *o.GnbIdLength
}

// GetGnbIdLengthOk returns a tuple with the GnbIdLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbIdLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.GnbIdLength) {
		return nil, false
	}
	return o.GnbIdLength, true
}

// HasGnbIdLength returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasGnbIdLength() bool {
	if o != nil && !IsNil(o.GnbIdLength) {
		return true
	}

	return false
}

// SetGnbIdLength gets a reference to the given int32 and assigns it to the GnbIdLength field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetGnbIdLength(v int32) {
	o.GnbIdLength = &v
}

// GetGnbCuName returns the GnbCuName field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbCuName() string {
	if o == nil || IsNil(o.GnbCuName) {
		var ret string
		return ret
	}
	return *o.GnbCuName
}

// GetGnbCuNameOk returns a tuple with the GnbCuName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetGnbCuNameOk() (*string, bool) {
	if o == nil || IsNil(o.GnbCuName) {
		return nil, false
	}
	return o.GnbCuName, true
}

// HasGnbCuName returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasGnbCuName() bool {
	if o != nil && !IsNil(o.GnbCuName) {
		return true
	}

	return false
}

// SetGnbCuName gets a reference to the given string and assigns it to the GnbCuName field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetGnbCuName(v string) {
	o.GnbCuName = &v
}

// GetPlmnId returns the PlmnId field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetPlmnId() PlmnId {
	if o == nil || IsNil(o.PlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.PlmnId) {
		return nil, false
	}
	return o.PlmnId, true
}

// HasPlmnId returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasPlmnId() bool {
	if o != nil && !IsNil(o.PlmnId) {
		return true
	}

	return false
}

// SetPlmnId gets a reference to the given PlmnId and assigns it to the PlmnId field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetPlmnId(v PlmnId) {
	o.PlmnId = &v
}

// GetX2BlockList returns the X2BlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2BlockList() []string {
	if o == nil || IsNil(o.X2BlockList) {
		var ret []string
		return ret
	}
	return o.X2BlockList
}

// GetX2BlockListOk returns a tuple with the X2BlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2BlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2BlockList) {
		return nil, false
	}
	return o.X2BlockList, true
}

// HasX2BlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasX2BlockList() bool {
	if o != nil && !IsNil(o.X2BlockList) {
		return true
	}

	return false
}

// SetX2BlockList gets a reference to the given []string and assigns it to the X2BlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetX2BlockList(v []string) {
	o.X2BlockList = v
}

// GetXnBlockList returns the XnBlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnBlockList() []string {
	if o == nil || IsNil(o.XnBlockList) {
		var ret []string
		return ret
	}
	return o.XnBlockList
}

// GetXnBlockListOk returns a tuple with the XnBlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnBlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnBlockList) {
		return nil, false
	}
	return o.XnBlockList, true
}

// HasXnBlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasXnBlockList() bool {
	if o != nil && !IsNil(o.XnBlockList) {
		return true
	}

	return false
}

// SetXnBlockList gets a reference to the given []string and assigns it to the XnBlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetXnBlockList(v []string) {
	o.XnBlockList = v
}

// GetX2AllowList returns the X2AllowList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2AllowList() []string {
	if o == nil || IsNil(o.X2AllowList) {
		var ret []string
		return ret
	}
	return o.X2AllowList
}

// GetX2AllowListOk returns a tuple with the X2AllowList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2AllowListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2AllowList) {
		return nil, false
	}
	return o.X2AllowList, true
}

// HasX2AllowList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasX2AllowList() bool {
	if o != nil && !IsNil(o.X2AllowList) {
		return true
	}

	return false
}

// SetX2AllowList gets a reference to the given []string and assigns it to the X2AllowList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetX2AllowList(v []string) {
	o.X2AllowList = v
}

// GetXnAllowList returns the XnAllowList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnAllowList() []string {
	if o == nil || IsNil(o.XnAllowList) {
		var ret []string
		return ret
	}
	return o.XnAllowList
}

// GetXnAllowListOk returns a tuple with the XnAllowList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnAllowListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnAllowList) {
		return nil, false
	}
	return o.XnAllowList, true
}

// HasXnAllowList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasXnAllowList() bool {
	if o != nil && !IsNil(o.XnAllowList) {
		return true
	}

	return false
}

// SetXnAllowList gets a reference to the given []string and assigns it to the XnAllowList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetXnAllowList(v []string) {
	o.XnAllowList = v
}

// GetX2HOBlockList returns the X2HOBlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2HOBlockList() []string {
	if o == nil || IsNil(o.X2HOBlockList) {
		var ret []string
		return ret
	}
	return o.X2HOBlockList
}

// GetX2HOBlockListOk returns a tuple with the X2HOBlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetX2HOBlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2HOBlockList) {
		return nil, false
	}
	return o.X2HOBlockList, true
}

// HasX2HOBlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasX2HOBlockList() bool {
	if o != nil && !IsNil(o.X2HOBlockList) {
		return true
	}

	return false
}

// SetX2HOBlockList gets a reference to the given []string and assigns it to the X2HOBlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetX2HOBlockList(v []string) {
	o.X2HOBlockList = v
}

// GetXnHOBlackList returns the XnHOBlackList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnHOBlackList() []string {
	if o == nil || IsNil(o.XnHOBlackList) {
		var ret []string
		return ret
	}
	return o.XnHOBlackList
}

// GetXnHOBlackListOk returns a tuple with the XnHOBlackList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetXnHOBlackListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnHOBlackList) {
		return nil, false
	}
	return o.XnHOBlackList, true
}

// HasXnHOBlackList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasXnHOBlackList() bool {
	if o != nil && !IsNil(o.XnHOBlackList) {
		return true
	}

	return false
}

// SetXnHOBlackList gets a reference to the given []string and assigns it to the XnHOBlackList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetXnHOBlackList(v []string) {
	o.XnHOBlackList = v
}

// GetMappingSetIDBackhaulAddress returns the MappingSetIDBackhaulAddress field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetMappingSetIDBackhaulAddress() MappingSetIDBackhaulAddress {
	if o == nil || IsNil(o.MappingSetIDBackhaulAddress) {
		var ret MappingSetIDBackhaulAddress
		return ret
	}
	return *o.MappingSetIDBackhaulAddress
}

// GetMappingSetIDBackhaulAddressOk returns a tuple with the MappingSetIDBackhaulAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetMappingSetIDBackhaulAddressOk() (*MappingSetIDBackhaulAddress, bool) {
	if o == nil || IsNil(o.MappingSetIDBackhaulAddress) {
		return nil, false
	}
	return o.MappingSetIDBackhaulAddress, true
}

// HasMappingSetIDBackhaulAddress returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasMappingSetIDBackhaulAddress() bool {
	if o != nil && !IsNil(o.MappingSetIDBackhaulAddress) {
		return true
	}

	return false
}

// SetMappingSetIDBackhaulAddress gets a reference to the given MappingSetIDBackhaulAddress and assigns it to the MappingSetIDBackhaulAddress field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetMappingSetIDBackhaulAddress(v MappingSetIDBackhaulAddress) {
	o.MappingSetIDBackhaulAddress = &v
}

// GetTceMappingInfoList returns the TceMappingInfoList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetTceMappingInfoList() []TceMappingInfo {
	if o == nil || IsNil(o.TceMappingInfoList) {
		var ret []TceMappingInfo
		return ret
	}
	return o.TceMappingInfoList
}

// GetTceMappingInfoListOk returns a tuple with the TceMappingInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetTceMappingInfoListOk() ([]TceMappingInfo, bool) {
	if o == nil || IsNil(o.TceMappingInfoList) {
		return nil, false
	}
	return o.TceMappingInfoList, true
}

// HasTceMappingInfoList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasTceMappingInfoList() bool {
	if o != nil && !IsNil(o.TceMappingInfoList) {
		return true
	}

	return false
}

// SetTceMappingInfoList gets a reference to the given []TceMappingInfo and assigns it to the TceMappingInfoList field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetTceMappingInfoList(v []TceMappingInfo) {
	o.TceMappingInfoList = v
}

// GetConfigurable5QISetRef returns the Configurable5QISetRef field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetConfigurable5QISetRef() string {
	if o == nil || IsNil(o.Configurable5QISetRef) {
		var ret string
		return ret
	}
	return *o.Configurable5QISetRef
}

// GetConfigurable5QISetRefOk returns a tuple with the Configurable5QISetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetConfigurable5QISetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Configurable5QISetRef) {
		return nil, false
	}
	return o.Configurable5QISetRef, true
}

// HasConfigurable5QISetRef returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasConfigurable5QISetRef() bool {
	if o != nil && !IsNil(o.Configurable5QISetRef) {
		return true
	}

	return false
}

// SetConfigurable5QISetRef gets a reference to the given string and assigns it to the Configurable5QISetRef field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetConfigurable5QISetRef(v string) {
	o.Configurable5QISetRef = &v
}

// GetDynamic5QISetRef returns the Dynamic5QISetRef field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDynamic5QISetRef() string {
	if o == nil || IsNil(o.Dynamic5QISetRef) {
		var ret string
		return ret
	}
	return *o.Dynamic5QISetRef
}

// GetDynamic5QISetRefOk returns a tuple with the Dynamic5QISetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDynamic5QISetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Dynamic5QISetRef) {
		return nil, false
	}
	return o.Dynamic5QISetRef, true
}

// HasDynamic5QISetRef returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasDynamic5QISetRef() bool {
	if o != nil && !IsNil(o.Dynamic5QISetRef) {
		return true
	}

	return false
}

// SetDynamic5QISetRef gets a reference to the given string and assigns it to the Dynamic5QISetRef field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetDynamic5QISetRef(v string) {
	o.Dynamic5QISetRef = &v
}

// GetDCHOControl returns the DCHOControl field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDCHOControl() bool {
	if o == nil || IsNil(o.DCHOControl) {
		var ret bool
		return ret
	}
	return *o.DCHOControl
}

// GetDCHOControlOk returns a tuple with the DCHOControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDCHOControlOk() (*bool, bool) {
	if o == nil || IsNil(o.DCHOControl) {
		return nil, false
	}
	return o.DCHOControl, true
}

// HasDCHOControl returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasDCHOControl() bool {
	if o != nil && !IsNil(o.DCHOControl) {
		return true
	}

	return false
}

// SetDCHOControl gets a reference to the given bool and assigns it to the DCHOControl field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetDCHOControl(v bool) {
	o.DCHOControl = &v
}

// GetDDAPSHOControl returns the DDAPSHOControl field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDDAPSHOControl() bool {
	if o == nil || IsNil(o.DDAPSHOControl) {
		var ret bool
		return ret
	}
	return *o.DDAPSHOControl
}

// GetDDAPSHOControlOk returns a tuple with the DDAPSHOControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) GetDDAPSHOControlOk() (*bool, bool) {
	if o == nil || IsNil(o.DDAPSHOControl) {
		return nil, false
	}
	return o.DDAPSHOControl, true
}

// HasDDAPSHOControl returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) HasDDAPSHOControl() bool {
	if o != nil && !IsNil(o.DDAPSHOControl) {
		return true
	}

	return false
}

// SetDDAPSHOControl gets a reference to the given bool and assigns it to the DDAPSHOControl field.
func (o *GnbCuCpFunctionSingleAllOfAttributesAllOf) SetDDAPSHOControl(v bool) {
	o.DDAPSHOControl = &v
}

func (o GnbCuCpFunctionSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GnbCuCpFunctionSingleAllOfAttributesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GnbId) {
		toSerialize["gnbId"] = o.GnbId
	}
	if !IsNil(o.GnbIdLength) {
		toSerialize["gnbIdLength"] = o.GnbIdLength
	}
	if !IsNil(o.GnbCuName) {
		toSerialize["gnbCuName"] = o.GnbCuName
	}
	if !IsNil(o.PlmnId) {
		toSerialize["plmnId"] = o.PlmnId
	}
	if !IsNil(o.X2BlockList) {
		toSerialize["x2BlockList"] = o.X2BlockList
	}
	if !IsNil(o.XnBlockList) {
		toSerialize["xnBlockList"] = o.XnBlockList
	}
	if !IsNil(o.X2AllowList) {
		toSerialize["x2AllowList"] = o.X2AllowList
	}
	if !IsNil(o.XnAllowList) {
		toSerialize["xnAllowList"] = o.XnAllowList
	}
	if !IsNil(o.X2HOBlockList) {
		toSerialize["x2HOBlockList"] = o.X2HOBlockList
	}
	if !IsNil(o.XnHOBlackList) {
		toSerialize["xnHOBlackList"] = o.XnHOBlackList
	}
	if !IsNil(o.MappingSetIDBackhaulAddress) {
		toSerialize["mappingSetIDBackhaulAddress"] = o.MappingSetIDBackhaulAddress
	}
	if !IsNil(o.TceMappingInfoList) {
		toSerialize["tceMappingInfoList"] = o.TceMappingInfoList
	}
	if !IsNil(o.Configurable5QISetRef) {
		toSerialize["configurable5QISetRef"] = o.Configurable5QISetRef
	}
	if !IsNil(o.Dynamic5QISetRef) {
		toSerialize["dynamic5QISetRef"] = o.Dynamic5QISetRef
	}
	if !IsNil(o.DCHOControl) {
		toSerialize["dCHOControl"] = o.DCHOControl
	}
	if !IsNil(o.DDAPSHOControl) {
		toSerialize["dDAPSHOControl"] = o.DDAPSHOControl
	}
	return toSerialize, nil
}

type NullableGnbCuCpFunctionSingleAllOfAttributesAllOf struct {
	value *GnbCuCpFunctionSingleAllOfAttributesAllOf
	isSet bool
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) Get() *GnbCuCpFunctionSingleAllOfAttributesAllOf {
	return v.value
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) Set(val *GnbCuCpFunctionSingleAllOfAttributesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGnbCuCpFunctionSingleAllOfAttributesAllOf(val *GnbCuCpFunctionSingleAllOfAttributesAllOf) *NullableGnbCuCpFunctionSingleAllOfAttributesAllOf {
	return &NullableGnbCuCpFunctionSingleAllOfAttributesAllOf{value: val, isSet: true}
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


