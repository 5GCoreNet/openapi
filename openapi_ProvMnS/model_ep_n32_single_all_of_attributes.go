/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the EPN32SingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EPN32SingleAllOfAttributes{}

// EPN32SingleAllOfAttributes struct for EPN32SingleAllOfAttributes
type EPN32SingleAllOfAttributes struct {
	EPRPAttr
	RemotePlmnId      *PlmnId   `json:"remotePlmnId,omitempty"`
	RemoteSeppAddress *HostAddr `json:"remoteSeppAddress,omitempty"`
	RemoteSeppId      *int32    `json:"remoteSeppId,omitempty"`
	N32cParas         *string   `json:"n32cParas,omitempty"`
	N32fPolicy        *string   `json:"n32fPolicy,omitempty"`
	WithIPX           *bool     `json:"withIPX,omitempty"`
}

// NewEPN32SingleAllOfAttributes instantiates a new EPN32SingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEPN32SingleAllOfAttributes() *EPN32SingleAllOfAttributes {
	this := EPN32SingleAllOfAttributes{}
	return &this
}

// NewEPN32SingleAllOfAttributesWithDefaults instantiates a new EPN32SingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEPN32SingleAllOfAttributesWithDefaults() *EPN32SingleAllOfAttributes {
	this := EPN32SingleAllOfAttributes{}
	return &this
}

// GetRemotePlmnId returns the RemotePlmnId field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetRemotePlmnId() PlmnId {
	if o == nil || IsNil(o.RemotePlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.RemotePlmnId
}

// GetRemotePlmnIdOk returns a tuple with the RemotePlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetRemotePlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.RemotePlmnId) {
		return nil, false
	}
	return o.RemotePlmnId, true
}

// HasRemotePlmnId returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasRemotePlmnId() bool {
	if o != nil && !IsNil(o.RemotePlmnId) {
		return true
	}

	return false
}

// SetRemotePlmnId gets a reference to the given PlmnId and assigns it to the RemotePlmnId field.
func (o *EPN32SingleAllOfAttributes) SetRemotePlmnId(v PlmnId) {
	o.RemotePlmnId = &v
}

// GetRemoteSeppAddress returns the RemoteSeppAddress field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetRemoteSeppAddress() HostAddr {
	if o == nil || IsNil(o.RemoteSeppAddress) {
		var ret HostAddr
		return ret
	}
	return *o.RemoteSeppAddress
}

// GetRemoteSeppAddressOk returns a tuple with the RemoteSeppAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetRemoteSeppAddressOk() (*HostAddr, bool) {
	if o == nil || IsNil(o.RemoteSeppAddress) {
		return nil, false
	}
	return o.RemoteSeppAddress, true
}

// HasRemoteSeppAddress returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasRemoteSeppAddress() bool {
	if o != nil && !IsNil(o.RemoteSeppAddress) {
		return true
	}

	return false
}

// SetRemoteSeppAddress gets a reference to the given HostAddr and assigns it to the RemoteSeppAddress field.
func (o *EPN32SingleAllOfAttributes) SetRemoteSeppAddress(v HostAddr) {
	o.RemoteSeppAddress = &v
}

// GetRemoteSeppId returns the RemoteSeppId field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetRemoteSeppId() int32 {
	if o == nil || IsNil(o.RemoteSeppId) {
		var ret int32
		return ret
	}
	return *o.RemoteSeppId
}

// GetRemoteSeppIdOk returns a tuple with the RemoteSeppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetRemoteSeppIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RemoteSeppId) {
		return nil, false
	}
	return o.RemoteSeppId, true
}

// HasRemoteSeppId returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasRemoteSeppId() bool {
	if o != nil && !IsNil(o.RemoteSeppId) {
		return true
	}

	return false
}

// SetRemoteSeppId gets a reference to the given int32 and assigns it to the RemoteSeppId field.
func (o *EPN32SingleAllOfAttributes) SetRemoteSeppId(v int32) {
	o.RemoteSeppId = &v
}

// GetN32cParas returns the N32cParas field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetN32cParas() string {
	if o == nil || IsNil(o.N32cParas) {
		var ret string
		return ret
	}
	return *o.N32cParas
}

// GetN32cParasOk returns a tuple with the N32cParas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetN32cParasOk() (*string, bool) {
	if o == nil || IsNil(o.N32cParas) {
		return nil, false
	}
	return o.N32cParas, true
}

// HasN32cParas returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasN32cParas() bool {
	if o != nil && !IsNil(o.N32cParas) {
		return true
	}

	return false
}

// SetN32cParas gets a reference to the given string and assigns it to the N32cParas field.
func (o *EPN32SingleAllOfAttributes) SetN32cParas(v string) {
	o.N32cParas = &v
}

// GetN32fPolicy returns the N32fPolicy field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetN32fPolicy() string {
	if o == nil || IsNil(o.N32fPolicy) {
		var ret string
		return ret
	}
	return *o.N32fPolicy
}

// GetN32fPolicyOk returns a tuple with the N32fPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetN32fPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.N32fPolicy) {
		return nil, false
	}
	return o.N32fPolicy, true
}

// HasN32fPolicy returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasN32fPolicy() bool {
	if o != nil && !IsNil(o.N32fPolicy) {
		return true
	}

	return false
}

// SetN32fPolicy gets a reference to the given string and assigns it to the N32fPolicy field.
func (o *EPN32SingleAllOfAttributes) SetN32fPolicy(v string) {
	o.N32fPolicy = &v
}

// GetWithIPX returns the WithIPX field value if set, zero value otherwise.
func (o *EPN32SingleAllOfAttributes) GetWithIPX() bool {
	if o == nil || IsNil(o.WithIPX) {
		var ret bool
		return ret
	}
	return *o.WithIPX
}

// GetWithIPXOk returns a tuple with the WithIPX field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EPN32SingleAllOfAttributes) GetWithIPXOk() (*bool, bool) {
	if o == nil || IsNil(o.WithIPX) {
		return nil, false
	}
	return o.WithIPX, true
}

// HasWithIPX returns a boolean if a field has been set.
func (o *EPN32SingleAllOfAttributes) HasWithIPX() bool {
	if o != nil && !IsNil(o.WithIPX) {
		return true
	}

	return false
}

// SetWithIPX gets a reference to the given bool and assigns it to the WithIPX field.
func (o *EPN32SingleAllOfAttributes) SetWithIPX(v bool) {
	o.WithIPX = &v
}

func (o EPN32SingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EPN32SingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedEPRPAttr, errEPRPAttr := json.Marshal(o.EPRPAttr)
	if errEPRPAttr != nil {
		return map[string]interface{}{}, errEPRPAttr
	}
	errEPRPAttr = json.Unmarshal([]byte(serializedEPRPAttr), &toSerialize)
	if errEPRPAttr != nil {
		return map[string]interface{}{}, errEPRPAttr
	}
	if !IsNil(o.RemotePlmnId) {
		toSerialize["remotePlmnId"] = o.RemotePlmnId
	}
	if !IsNil(o.RemoteSeppAddress) {
		toSerialize["remoteSeppAddress"] = o.RemoteSeppAddress
	}
	if !IsNil(o.RemoteSeppId) {
		toSerialize["remoteSeppId"] = o.RemoteSeppId
	}
	if !IsNil(o.N32cParas) {
		toSerialize["n32cParas"] = o.N32cParas
	}
	if !IsNil(o.N32fPolicy) {
		toSerialize["n32fPolicy"] = o.N32fPolicy
	}
	if !IsNil(o.WithIPX) {
		toSerialize["withIPX"] = o.WithIPX
	}
	return toSerialize, nil
}

type NullableEPN32SingleAllOfAttributes struct {
	value *EPN32SingleAllOfAttributes
	isSet bool
}

func (v NullableEPN32SingleAllOfAttributes) Get() *EPN32SingleAllOfAttributes {
	return v.value
}

func (v *NullableEPN32SingleAllOfAttributes) Set(val *EPN32SingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableEPN32SingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableEPN32SingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEPN32SingleAllOfAttributes(val *EPN32SingleAllOfAttributes) *NullableEPN32SingleAllOfAttributes {
	return &NullableEPN32SingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableEPN32SingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEPN32SingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
