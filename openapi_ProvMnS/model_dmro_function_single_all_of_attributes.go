/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the DMROFunctionSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DMROFunctionSingleAllOfAttributes{}

// DMROFunctionSingleAllOfAttributes struct for DMROFunctionSingleAllOfAttributes
type DMROFunctionSingleAllOfAttributes struct {
	DmroControl *bool `json:"dmroControl,omitempty"`
	MaximumDeviationHoTriggerLow *int32 `json:"maximumDeviationHoTriggerLow,omitempty"`
	MaximumDeviationHoTriggerHigh *int32 `json:"maximumDeviationHoTriggerHigh,omitempty"`
	MinimumTimeBetweenHoTriggerChange *int32 `json:"minimumTimeBetweenHoTriggerChange,omitempty"`
	TstoreUEcntxt *int32 `json:"tstoreUEcntxt,omitempty"`
}

// NewDMROFunctionSingleAllOfAttributes instantiates a new DMROFunctionSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDMROFunctionSingleAllOfAttributes() *DMROFunctionSingleAllOfAttributes {
	this := DMROFunctionSingleAllOfAttributes{}
	return &this
}

// NewDMROFunctionSingleAllOfAttributesWithDefaults instantiates a new DMROFunctionSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDMROFunctionSingleAllOfAttributesWithDefaults() *DMROFunctionSingleAllOfAttributes {
	this := DMROFunctionSingleAllOfAttributes{}
	return &this
}

// GetDmroControl returns the DmroControl field value if set, zero value otherwise.
func (o *DMROFunctionSingleAllOfAttributes) GetDmroControl() bool {
	if o == nil || isNil(o.DmroControl) {
		var ret bool
		return ret
	}
	return *o.DmroControl
}

// GetDmroControlOk returns a tuple with the DmroControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DMROFunctionSingleAllOfAttributes) GetDmroControlOk() (*bool, bool) {
	if o == nil || isNil(o.DmroControl) {
		return nil, false
	}
	return o.DmroControl, true
}

// HasDmroControl returns a boolean if a field has been set.
func (o *DMROFunctionSingleAllOfAttributes) HasDmroControl() bool {
	if o != nil && !isNil(o.DmroControl) {
		return true
	}

	return false
}

// SetDmroControl gets a reference to the given bool and assigns it to the DmroControl field.
func (o *DMROFunctionSingleAllOfAttributes) SetDmroControl(v bool) {
	o.DmroControl = &v
}

// GetMaximumDeviationHoTriggerLow returns the MaximumDeviationHoTriggerLow field value if set, zero value otherwise.
func (o *DMROFunctionSingleAllOfAttributes) GetMaximumDeviationHoTriggerLow() int32 {
	if o == nil || isNil(o.MaximumDeviationHoTriggerLow) {
		var ret int32
		return ret
	}
	return *o.MaximumDeviationHoTriggerLow
}

// GetMaximumDeviationHoTriggerLowOk returns a tuple with the MaximumDeviationHoTriggerLow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DMROFunctionSingleAllOfAttributes) GetMaximumDeviationHoTriggerLowOk() (*int32, bool) {
	if o == nil || isNil(o.MaximumDeviationHoTriggerLow) {
		return nil, false
	}
	return o.MaximumDeviationHoTriggerLow, true
}

// HasMaximumDeviationHoTriggerLow returns a boolean if a field has been set.
func (o *DMROFunctionSingleAllOfAttributes) HasMaximumDeviationHoTriggerLow() bool {
	if o != nil && !isNil(o.MaximumDeviationHoTriggerLow) {
		return true
	}

	return false
}

// SetMaximumDeviationHoTriggerLow gets a reference to the given int32 and assigns it to the MaximumDeviationHoTriggerLow field.
func (o *DMROFunctionSingleAllOfAttributes) SetMaximumDeviationHoTriggerLow(v int32) {
	o.MaximumDeviationHoTriggerLow = &v
}

// GetMaximumDeviationHoTriggerHigh returns the MaximumDeviationHoTriggerHigh field value if set, zero value otherwise.
func (o *DMROFunctionSingleAllOfAttributes) GetMaximumDeviationHoTriggerHigh() int32 {
	if o == nil || isNil(o.MaximumDeviationHoTriggerHigh) {
		var ret int32
		return ret
	}
	return *o.MaximumDeviationHoTriggerHigh
}

// GetMaximumDeviationHoTriggerHighOk returns a tuple with the MaximumDeviationHoTriggerHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DMROFunctionSingleAllOfAttributes) GetMaximumDeviationHoTriggerHighOk() (*int32, bool) {
	if o == nil || isNil(o.MaximumDeviationHoTriggerHigh) {
		return nil, false
	}
	return o.MaximumDeviationHoTriggerHigh, true
}

// HasMaximumDeviationHoTriggerHigh returns a boolean if a field has been set.
func (o *DMROFunctionSingleAllOfAttributes) HasMaximumDeviationHoTriggerHigh() bool {
	if o != nil && !isNil(o.MaximumDeviationHoTriggerHigh) {
		return true
	}

	return false
}

// SetMaximumDeviationHoTriggerHigh gets a reference to the given int32 and assigns it to the MaximumDeviationHoTriggerHigh field.
func (o *DMROFunctionSingleAllOfAttributes) SetMaximumDeviationHoTriggerHigh(v int32) {
	o.MaximumDeviationHoTriggerHigh = &v
}

// GetMinimumTimeBetweenHoTriggerChange returns the MinimumTimeBetweenHoTriggerChange field value if set, zero value otherwise.
func (o *DMROFunctionSingleAllOfAttributes) GetMinimumTimeBetweenHoTriggerChange() int32 {
	if o == nil || isNil(o.MinimumTimeBetweenHoTriggerChange) {
		var ret int32
		return ret
	}
	return *o.MinimumTimeBetweenHoTriggerChange
}

// GetMinimumTimeBetweenHoTriggerChangeOk returns a tuple with the MinimumTimeBetweenHoTriggerChange field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DMROFunctionSingleAllOfAttributes) GetMinimumTimeBetweenHoTriggerChangeOk() (*int32, bool) {
	if o == nil || isNil(o.MinimumTimeBetweenHoTriggerChange) {
		return nil, false
	}
	return o.MinimumTimeBetweenHoTriggerChange, true
}

// HasMinimumTimeBetweenHoTriggerChange returns a boolean if a field has been set.
func (o *DMROFunctionSingleAllOfAttributes) HasMinimumTimeBetweenHoTriggerChange() bool {
	if o != nil && !isNil(o.MinimumTimeBetweenHoTriggerChange) {
		return true
	}

	return false
}

// SetMinimumTimeBetweenHoTriggerChange gets a reference to the given int32 and assigns it to the MinimumTimeBetweenHoTriggerChange field.
func (o *DMROFunctionSingleAllOfAttributes) SetMinimumTimeBetweenHoTriggerChange(v int32) {
	o.MinimumTimeBetweenHoTriggerChange = &v
}

// GetTstoreUEcntxt returns the TstoreUEcntxt field value if set, zero value otherwise.
func (o *DMROFunctionSingleAllOfAttributes) GetTstoreUEcntxt() int32 {
	if o == nil || isNil(o.TstoreUEcntxt) {
		var ret int32
		return ret
	}
	return *o.TstoreUEcntxt
}

// GetTstoreUEcntxtOk returns a tuple with the TstoreUEcntxt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DMROFunctionSingleAllOfAttributes) GetTstoreUEcntxtOk() (*int32, bool) {
	if o == nil || isNil(o.TstoreUEcntxt) {
		return nil, false
	}
	return o.TstoreUEcntxt, true
}

// HasTstoreUEcntxt returns a boolean if a field has been set.
func (o *DMROFunctionSingleAllOfAttributes) HasTstoreUEcntxt() bool {
	if o != nil && !isNil(o.TstoreUEcntxt) {
		return true
	}

	return false
}

// SetTstoreUEcntxt gets a reference to the given int32 and assigns it to the TstoreUEcntxt field.
func (o *DMROFunctionSingleAllOfAttributes) SetTstoreUEcntxt(v int32) {
	o.TstoreUEcntxt = &v
}

func (o DMROFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DMROFunctionSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DmroControl) {
		toSerialize["dmroControl"] = o.DmroControl
	}
	if !isNil(o.MaximumDeviationHoTriggerLow) {
		toSerialize["maximumDeviationHoTriggerLow"] = o.MaximumDeviationHoTriggerLow
	}
	if !isNil(o.MaximumDeviationHoTriggerHigh) {
		toSerialize["maximumDeviationHoTriggerHigh"] = o.MaximumDeviationHoTriggerHigh
	}
	if !isNil(o.MinimumTimeBetweenHoTriggerChange) {
		toSerialize["minimumTimeBetweenHoTriggerChange"] = o.MinimumTimeBetweenHoTriggerChange
	}
	if !isNil(o.TstoreUEcntxt) {
		toSerialize["tstoreUEcntxt"] = o.TstoreUEcntxt
	}
	return toSerialize, nil
}

type NullableDMROFunctionSingleAllOfAttributes struct {
	value *DMROFunctionSingleAllOfAttributes
	isSet bool
}

func (v NullableDMROFunctionSingleAllOfAttributes) Get() *DMROFunctionSingleAllOfAttributes {
	return v.value
}

func (v *NullableDMROFunctionSingleAllOfAttributes) Set(val *DMROFunctionSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableDMROFunctionSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableDMROFunctionSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDMROFunctionSingleAllOfAttributes(val *DMROFunctionSingleAllOfAttributes) *NullableDMROFunctionSingleAllOfAttributes {
	return &NullableDMROFunctionSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableDMROFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDMROFunctionSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


