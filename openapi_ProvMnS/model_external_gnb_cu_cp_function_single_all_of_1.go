/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the ExternalGnbCuCpFunctionSingleAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalGnbCuCpFunctionSingleAllOf1{}

// ExternalGnbCuCpFunctionSingleAllOf1 struct for ExternalGnbCuCpFunctionSingleAllOf1
type ExternalGnbCuCpFunctionSingleAllOf1 struct {
	ExternalNrCellCu []ExternalNrCellCuSingle `json:"ExternalNrCellCu,omitempty"`
	EPXnC []EPXnCSingle `json:"EP_XnC,omitempty"`
	EPE1 []EPE1Single `json:"EP_E1,omitempty"`
	EPF1C []EPF1CSingle `json:"EP_F1C,omitempty"`
}

// NewExternalGnbCuCpFunctionSingleAllOf1 instantiates a new ExternalGnbCuCpFunctionSingleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalGnbCuCpFunctionSingleAllOf1() *ExternalGnbCuCpFunctionSingleAllOf1 {
	this := ExternalGnbCuCpFunctionSingleAllOf1{}
	return &this
}

// NewExternalGnbCuCpFunctionSingleAllOf1WithDefaults instantiates a new ExternalGnbCuCpFunctionSingleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalGnbCuCpFunctionSingleAllOf1WithDefaults() *ExternalGnbCuCpFunctionSingleAllOf1 {
	this := ExternalGnbCuCpFunctionSingleAllOf1{}
	return &this
}

// GetExternalNrCellCu returns the ExternalNrCellCu field value if set, zero value otherwise.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetExternalNrCellCu() []ExternalNrCellCuSingle {
	if o == nil || isNil(o.ExternalNrCellCu) {
		var ret []ExternalNrCellCuSingle
		return ret
	}
	return o.ExternalNrCellCu
}

// GetExternalNrCellCuOk returns a tuple with the ExternalNrCellCu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetExternalNrCellCuOk() ([]ExternalNrCellCuSingle, bool) {
	if o == nil || isNil(o.ExternalNrCellCu) {
		return nil, false
	}
	return o.ExternalNrCellCu, true
}

// HasExternalNrCellCu returns a boolean if a field has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) HasExternalNrCellCu() bool {
	if o != nil && !isNil(o.ExternalNrCellCu) {
		return true
	}

	return false
}

// SetExternalNrCellCu gets a reference to the given []ExternalNrCellCuSingle and assigns it to the ExternalNrCellCu field.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) SetExternalNrCellCu(v []ExternalNrCellCuSingle) {
	o.ExternalNrCellCu = v
}

// GetEPXnC returns the EPXnC field value if set, zero value otherwise.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPXnC() []EPXnCSingle {
	if o == nil || isNil(o.EPXnC) {
		var ret []EPXnCSingle
		return ret
	}
	return o.EPXnC
}

// GetEPXnCOk returns a tuple with the EPXnC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPXnCOk() ([]EPXnCSingle, bool) {
	if o == nil || isNil(o.EPXnC) {
		return nil, false
	}
	return o.EPXnC, true
}

// HasEPXnC returns a boolean if a field has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) HasEPXnC() bool {
	if o != nil && !isNil(o.EPXnC) {
		return true
	}

	return false
}

// SetEPXnC gets a reference to the given []EPXnCSingle and assigns it to the EPXnC field.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) SetEPXnC(v []EPXnCSingle) {
	o.EPXnC = v
}

// GetEPE1 returns the EPE1 field value if set, zero value otherwise.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPE1() []EPE1Single {
	if o == nil || isNil(o.EPE1) {
		var ret []EPE1Single
		return ret
	}
	return o.EPE1
}

// GetEPE1Ok returns a tuple with the EPE1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPE1Ok() ([]EPE1Single, bool) {
	if o == nil || isNil(o.EPE1) {
		return nil, false
	}
	return o.EPE1, true
}

// HasEPE1 returns a boolean if a field has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) HasEPE1() bool {
	if o != nil && !isNil(o.EPE1) {
		return true
	}

	return false
}

// SetEPE1 gets a reference to the given []EPE1Single and assigns it to the EPE1 field.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) SetEPE1(v []EPE1Single) {
	o.EPE1 = v
}

// GetEPF1C returns the EPF1C field value if set, zero value otherwise.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPF1C() []EPF1CSingle {
	if o == nil || isNil(o.EPF1C) {
		var ret []EPF1CSingle
		return ret
	}
	return o.EPF1C
}

// GetEPF1COk returns a tuple with the EPF1C field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) GetEPF1COk() ([]EPF1CSingle, bool) {
	if o == nil || isNil(o.EPF1C) {
		return nil, false
	}
	return o.EPF1C, true
}

// HasEPF1C returns a boolean if a field has been set.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) HasEPF1C() bool {
	if o != nil && !isNil(o.EPF1C) {
		return true
	}

	return false
}

// SetEPF1C gets a reference to the given []EPF1CSingle and assigns it to the EPF1C field.
func (o *ExternalGnbCuCpFunctionSingleAllOf1) SetEPF1C(v []EPF1CSingle) {
	o.EPF1C = v
}

func (o ExternalGnbCuCpFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalGnbCuCpFunctionSingleAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ExternalNrCellCu) {
		toSerialize["ExternalNrCellCu"] = o.ExternalNrCellCu
	}
	if !isNil(o.EPXnC) {
		toSerialize["EP_XnC"] = o.EPXnC
	}
	if !isNil(o.EPE1) {
		toSerialize["EP_E1"] = o.EPE1
	}
	if !isNil(o.EPF1C) {
		toSerialize["EP_F1C"] = o.EPF1C
	}
	return toSerialize, nil
}

type NullableExternalGnbCuCpFunctionSingleAllOf1 struct {
	value *ExternalGnbCuCpFunctionSingleAllOf1
	isSet bool
}

func (v NullableExternalGnbCuCpFunctionSingleAllOf1) Get() *ExternalGnbCuCpFunctionSingleAllOf1 {
	return v.value
}

func (v *NullableExternalGnbCuCpFunctionSingleAllOf1) Set(val *ExternalGnbCuCpFunctionSingleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalGnbCuCpFunctionSingleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalGnbCuCpFunctionSingleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalGnbCuCpFunctionSingleAllOf1(val *ExternalGnbCuCpFunctionSingleAllOf1) *NullableExternalGnbCuCpFunctionSingleAllOf1 {
	return &NullableExternalGnbCuCpFunctionSingleAllOf1{value: val, isSet: true}
}

func (v NullableExternalGnbCuCpFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalGnbCuCpFunctionSingleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


