/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
	"time"
)

// checks if the TimeWindow2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TimeWindow2{}

// TimeWindow2 struct for TimeWindow2
type TimeWindow2 struct {
	MDAOutputStartTime *time.Time `json:"mDAOutputStartTime,omitempty"`
	MDAOutputEndTime   *time.Time `json:"mDAOutputEndTime,omitempty"`
}

// NewTimeWindow2 instantiates a new TimeWindow2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTimeWindow2() *TimeWindow2 {
	this := TimeWindow2{}
	return &this
}

// NewTimeWindow2WithDefaults instantiates a new TimeWindow2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTimeWindow2WithDefaults() *TimeWindow2 {
	this := TimeWindow2{}
	return &this
}

// GetMDAOutputStartTime returns the MDAOutputStartTime field value if set, zero value otherwise.
func (o *TimeWindow2) GetMDAOutputStartTime() time.Time {
	if o == nil || IsNil(o.MDAOutputStartTime) {
		var ret time.Time
		return ret
	}
	return *o.MDAOutputStartTime
}

// GetMDAOutputStartTimeOk returns a tuple with the MDAOutputStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeWindow2) GetMDAOutputStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MDAOutputStartTime) {
		return nil, false
	}
	return o.MDAOutputStartTime, true
}

// HasMDAOutputStartTime returns a boolean if a field has been set.
func (o *TimeWindow2) HasMDAOutputStartTime() bool {
	if o != nil && !IsNil(o.MDAOutputStartTime) {
		return true
	}

	return false
}

// SetMDAOutputStartTime gets a reference to the given time.Time and assigns it to the MDAOutputStartTime field.
func (o *TimeWindow2) SetMDAOutputStartTime(v time.Time) {
	o.MDAOutputStartTime = &v
}

// GetMDAOutputEndTime returns the MDAOutputEndTime field value if set, zero value otherwise.
func (o *TimeWindow2) GetMDAOutputEndTime() time.Time {
	if o == nil || IsNil(o.MDAOutputEndTime) {
		var ret time.Time
		return ret
	}
	return *o.MDAOutputEndTime
}

// GetMDAOutputEndTimeOk returns a tuple with the MDAOutputEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TimeWindow2) GetMDAOutputEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MDAOutputEndTime) {
		return nil, false
	}
	return o.MDAOutputEndTime, true
}

// HasMDAOutputEndTime returns a boolean if a field has been set.
func (o *TimeWindow2) HasMDAOutputEndTime() bool {
	if o != nil && !IsNil(o.MDAOutputEndTime) {
		return true
	}

	return false
}

// SetMDAOutputEndTime gets a reference to the given time.Time and assigns it to the MDAOutputEndTime field.
func (o *TimeWindow2) SetMDAOutputEndTime(v time.Time) {
	o.MDAOutputEndTime = &v
}

func (o TimeWindow2) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TimeWindow2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MDAOutputStartTime) {
		toSerialize["mDAOutputStartTime"] = o.MDAOutputStartTime
	}
	if !IsNil(o.MDAOutputEndTime) {
		toSerialize["mDAOutputEndTime"] = o.MDAOutputEndTime
	}
	return toSerialize, nil
}

type NullableTimeWindow2 struct {
	value *TimeWindow2
	isSet bool
}

func (v NullableTimeWindow2) Get() *TimeWindow2 {
	return v.value
}

func (v *NullableTimeWindow2) Set(val *TimeWindow2) {
	v.value = val
	v.isSet = true
}

func (v NullableTimeWindow2) IsSet() bool {
	return v.isSet
}

func (v *NullableTimeWindow2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTimeWindow2(val *TimeWindow2) *NullableTimeWindow2 {
	return &NullableTimeWindow2{value: val, isSet: true}
}

func (v NullableTimeWindow2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTimeWindow2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
