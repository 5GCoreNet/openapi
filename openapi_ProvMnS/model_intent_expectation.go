/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the IntentExpectation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IntentExpectation{}

// IntentExpectation This data type is the \"IntentExpectation\" data type without specialisations
type IntentExpectation struct {
	ExpectationId             *string              `json:"expectationId,omitempty"`
	ExpectationVerb           *ExpectationVerb     `json:"expectationVerb,omitempty"`
	ExpectationObjects        []ExpectationObject  `json:"expectationObjects,omitempty"`
	ExpectationTargets        []ExpectationTarget  `json:"expectationTargets,omitempty"`
	ExpectationContexts       []ExpectationContext `json:"expectationContexts,omitempty"`
	ExpectationfulfilmentInfo *FulfilmentInfo      `json:"expectationfulfilmentInfo,omitempty"`
}

// NewIntentExpectation instantiates a new IntentExpectation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIntentExpectation() *IntentExpectation {
	this := IntentExpectation{}
	return &this
}

// NewIntentExpectationWithDefaults instantiates a new IntentExpectation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIntentExpectationWithDefaults() *IntentExpectation {
	this := IntentExpectation{}
	return &this
}

// GetExpectationId returns the ExpectationId field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationId() string {
	if o == nil || IsNil(o.ExpectationId) {
		var ret string
		return ret
	}
	return *o.ExpectationId
}

// GetExpectationIdOk returns a tuple with the ExpectationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExpectationId) {
		return nil, false
	}
	return o.ExpectationId, true
}

// HasExpectationId returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationId() bool {
	if o != nil && !IsNil(o.ExpectationId) {
		return true
	}

	return false
}

// SetExpectationId gets a reference to the given string and assigns it to the ExpectationId field.
func (o *IntentExpectation) SetExpectationId(v string) {
	o.ExpectationId = &v
}

// GetExpectationVerb returns the ExpectationVerb field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationVerb() ExpectationVerb {
	if o == nil || IsNil(o.ExpectationVerb) {
		var ret ExpectationVerb
		return ret
	}
	return *o.ExpectationVerb
}

// GetExpectationVerbOk returns a tuple with the ExpectationVerb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationVerbOk() (*ExpectationVerb, bool) {
	if o == nil || IsNil(o.ExpectationVerb) {
		return nil, false
	}
	return o.ExpectationVerb, true
}

// HasExpectationVerb returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationVerb() bool {
	if o != nil && !IsNil(o.ExpectationVerb) {
		return true
	}

	return false
}

// SetExpectationVerb gets a reference to the given ExpectationVerb and assigns it to the ExpectationVerb field.
func (o *IntentExpectation) SetExpectationVerb(v ExpectationVerb) {
	o.ExpectationVerb = &v
}

// GetExpectationObjects returns the ExpectationObjects field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationObjects() []ExpectationObject {
	if o == nil || IsNil(o.ExpectationObjects) {
		var ret []ExpectationObject
		return ret
	}
	return o.ExpectationObjects
}

// GetExpectationObjectsOk returns a tuple with the ExpectationObjects field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationObjectsOk() ([]ExpectationObject, bool) {
	if o == nil || IsNil(o.ExpectationObjects) {
		return nil, false
	}
	return o.ExpectationObjects, true
}

// HasExpectationObjects returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationObjects() bool {
	if o != nil && !IsNil(o.ExpectationObjects) {
		return true
	}

	return false
}

// SetExpectationObjects gets a reference to the given []ExpectationObject and assigns it to the ExpectationObjects field.
func (o *IntentExpectation) SetExpectationObjects(v []ExpectationObject) {
	o.ExpectationObjects = v
}

// GetExpectationTargets returns the ExpectationTargets field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationTargets() []ExpectationTarget {
	if o == nil || IsNil(o.ExpectationTargets) {
		var ret []ExpectationTarget
		return ret
	}
	return o.ExpectationTargets
}

// GetExpectationTargetsOk returns a tuple with the ExpectationTargets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationTargetsOk() ([]ExpectationTarget, bool) {
	if o == nil || IsNil(o.ExpectationTargets) {
		return nil, false
	}
	return o.ExpectationTargets, true
}

// HasExpectationTargets returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationTargets() bool {
	if o != nil && !IsNil(o.ExpectationTargets) {
		return true
	}

	return false
}

// SetExpectationTargets gets a reference to the given []ExpectationTarget and assigns it to the ExpectationTargets field.
func (o *IntentExpectation) SetExpectationTargets(v []ExpectationTarget) {
	o.ExpectationTargets = v
}

// GetExpectationContexts returns the ExpectationContexts field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationContexts() []ExpectationContext {
	if o == nil || IsNil(o.ExpectationContexts) {
		var ret []ExpectationContext
		return ret
	}
	return o.ExpectationContexts
}

// GetExpectationContextsOk returns a tuple with the ExpectationContexts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationContextsOk() ([]ExpectationContext, bool) {
	if o == nil || IsNil(o.ExpectationContexts) {
		return nil, false
	}
	return o.ExpectationContexts, true
}

// HasExpectationContexts returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationContexts() bool {
	if o != nil && !IsNil(o.ExpectationContexts) {
		return true
	}

	return false
}

// SetExpectationContexts gets a reference to the given []ExpectationContext and assigns it to the ExpectationContexts field.
func (o *IntentExpectation) SetExpectationContexts(v []ExpectationContext) {
	o.ExpectationContexts = v
}

// GetExpectationfulfilmentInfo returns the ExpectationfulfilmentInfo field value if set, zero value otherwise.
func (o *IntentExpectation) GetExpectationfulfilmentInfo() FulfilmentInfo {
	if o == nil || IsNil(o.ExpectationfulfilmentInfo) {
		var ret FulfilmentInfo
		return ret
	}
	return *o.ExpectationfulfilmentInfo
}

// GetExpectationfulfilmentInfoOk returns a tuple with the ExpectationfulfilmentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IntentExpectation) GetExpectationfulfilmentInfoOk() (*FulfilmentInfo, bool) {
	if o == nil || IsNil(o.ExpectationfulfilmentInfo) {
		return nil, false
	}
	return o.ExpectationfulfilmentInfo, true
}

// HasExpectationfulfilmentInfo returns a boolean if a field has been set.
func (o *IntentExpectation) HasExpectationfulfilmentInfo() bool {
	if o != nil && !IsNil(o.ExpectationfulfilmentInfo) {
		return true
	}

	return false
}

// SetExpectationfulfilmentInfo gets a reference to the given FulfilmentInfo and assigns it to the ExpectationfulfilmentInfo field.
func (o *IntentExpectation) SetExpectationfulfilmentInfo(v FulfilmentInfo) {
	o.ExpectationfulfilmentInfo = &v
}

func (o IntentExpectation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IntentExpectation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpectationId) {
		toSerialize["expectationId"] = o.ExpectationId
	}
	if !IsNil(o.ExpectationVerb) {
		toSerialize["expectationVerb"] = o.ExpectationVerb
	}
	if !IsNil(o.ExpectationObjects) {
		toSerialize["expectationObjects"] = o.ExpectationObjects
	}
	if !IsNil(o.ExpectationTargets) {
		toSerialize["expectationTargets"] = o.ExpectationTargets
	}
	if !IsNil(o.ExpectationContexts) {
		toSerialize["expectationContexts"] = o.ExpectationContexts
	}
	if !IsNil(o.ExpectationfulfilmentInfo) {
		toSerialize["expectationfulfilmentInfo"] = o.ExpectationfulfilmentInfo
	}
	return toSerialize, nil
}

type NullableIntentExpectation struct {
	value *IntentExpectation
	isSet bool
}

func (v NullableIntentExpectation) Get() *IntentExpectation {
	return v.value
}

func (v *NullableIntentExpectation) Set(val *IntentExpectation) {
	v.value = val
	v.isSet = true
}

func (v NullableIntentExpectation) IsSet() bool {
	return v.isSet
}

func (v *NullableIntentExpectation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntentExpectation(val *IntentExpectation) *NullableIntentExpectation {
	return &NullableIntentExpectation{value: val, isSet: true}
}

func (v NullableIntentExpectation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntentExpectation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
