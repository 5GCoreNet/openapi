/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the NotifyMoiChangesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyMoiChangesAllOf{}

// NotifyMoiChangesAllOf struct for NotifyMoiChangesAllOf
type NotifyMoiChangesAllOf struct {
	MoiChanges []MoiChange `json:"moiChanges"`
}

// NewNotifyMoiChangesAllOf instantiates a new NotifyMoiChangesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyMoiChangesAllOf(moiChanges []MoiChange) *NotifyMoiChangesAllOf {
	this := NotifyMoiChangesAllOf{}
	this.MoiChanges = moiChanges
	return &this
}

// NewNotifyMoiChangesAllOfWithDefaults instantiates a new NotifyMoiChangesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyMoiChangesAllOfWithDefaults() *NotifyMoiChangesAllOf {
	this := NotifyMoiChangesAllOf{}
	return &this
}

// GetMoiChanges returns the MoiChanges field value
func (o *NotifyMoiChangesAllOf) GetMoiChanges() []MoiChange {
	if o == nil {
		var ret []MoiChange
		return ret
	}

	return o.MoiChanges
}

// GetMoiChangesOk returns a tuple with the MoiChanges field value
// and a boolean to check if the value has been set.
func (o *NotifyMoiChangesAllOf) GetMoiChangesOk() ([]MoiChange, bool) {
	if o == nil {
		return nil, false
	}
	return o.MoiChanges, true
}

// SetMoiChanges sets field value
func (o *NotifyMoiChangesAllOf) SetMoiChanges(v []MoiChange) {
	o.MoiChanges = v
}

func (o NotifyMoiChangesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyMoiChangesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["moiChanges"] = o.MoiChanges
	return toSerialize, nil
}

type NullableNotifyMoiChangesAllOf struct {
	value *NotifyMoiChangesAllOf
	isSet bool
}

func (v NullableNotifyMoiChangesAllOf) Get() *NotifyMoiChangesAllOf {
	return v.value
}

func (v *NullableNotifyMoiChangesAllOf) Set(val *NotifyMoiChangesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyMoiChangesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyMoiChangesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyMoiChangesAllOf(val *NotifyMoiChangesAllOf) *NullableNotifyMoiChangesAllOf {
	return &NullableNotifyMoiChangesAllOf{value: val, isSet: true}
}

func (v NullableNotifyMoiChangesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyMoiChangesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
