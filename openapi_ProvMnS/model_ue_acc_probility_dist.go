/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the UeAccProbilityDist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeAccProbilityDist{}

// UeAccProbilityDist struct for UeAccProbilityDist
type UeAccProbilityDist struct {
	TargetProbability *int32 `json:"targetProbability,omitempty"`
	Numberofpreamblessent *int32 `json:"numberofpreamblessent,omitempty"`
}

// NewUeAccProbilityDist instantiates a new UeAccProbilityDist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeAccProbilityDist() *UeAccProbilityDist {
	this := UeAccProbilityDist{}
	return &this
}

// NewUeAccProbilityDistWithDefaults instantiates a new UeAccProbilityDist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeAccProbilityDistWithDefaults() *UeAccProbilityDist {
	this := UeAccProbilityDist{}
	return &this
}

// GetTargetProbability returns the TargetProbability field value if set, zero value otherwise.
func (o *UeAccProbilityDist) GetTargetProbability() int32 {
	if o == nil || isNil(o.TargetProbability) {
		var ret int32
		return ret
	}
	return *o.TargetProbability
}

// GetTargetProbabilityOk returns a tuple with the TargetProbability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeAccProbilityDist) GetTargetProbabilityOk() (*int32, bool) {
	if o == nil || isNil(o.TargetProbability) {
		return nil, false
	}
	return o.TargetProbability, true
}

// HasTargetProbability returns a boolean if a field has been set.
func (o *UeAccProbilityDist) HasTargetProbability() bool {
	if o != nil && !isNil(o.TargetProbability) {
		return true
	}

	return false
}

// SetTargetProbability gets a reference to the given int32 and assigns it to the TargetProbability field.
func (o *UeAccProbilityDist) SetTargetProbability(v int32) {
	o.TargetProbability = &v
}

// GetNumberofpreamblessent returns the Numberofpreamblessent field value if set, zero value otherwise.
func (o *UeAccProbilityDist) GetNumberofpreamblessent() int32 {
	if o == nil || isNil(o.Numberofpreamblessent) {
		var ret int32
		return ret
	}
	return *o.Numberofpreamblessent
}

// GetNumberofpreamblessentOk returns a tuple with the Numberofpreamblessent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeAccProbilityDist) GetNumberofpreamblessentOk() (*int32, bool) {
	if o == nil || isNil(o.Numberofpreamblessent) {
		return nil, false
	}
	return o.Numberofpreamblessent, true
}

// HasNumberofpreamblessent returns a boolean if a field has been set.
func (o *UeAccProbilityDist) HasNumberofpreamblessent() bool {
	if o != nil && !isNil(o.Numberofpreamblessent) {
		return true
	}

	return false
}

// SetNumberofpreamblessent gets a reference to the given int32 and assigns it to the Numberofpreamblessent field.
func (o *UeAccProbilityDist) SetNumberofpreamblessent(v int32) {
	o.Numberofpreamblessent = &v
}

func (o UeAccProbilityDist) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeAccProbilityDist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TargetProbability) {
		toSerialize["targetProbability"] = o.TargetProbability
	}
	if !isNil(o.Numberofpreamblessent) {
		toSerialize["numberofpreamblessent"] = o.Numberofpreamblessent
	}
	return toSerialize, nil
}

type NullableUeAccProbilityDist struct {
	value *UeAccProbilityDist
	isSet bool
}

func (v NullableUeAccProbilityDist) Get() *UeAccProbilityDist {
	return v.value
}

func (v *NullableUeAccProbilityDist) Set(val *UeAccProbilityDist) {
	v.value = val
	v.isSet = true
}

func (v NullableUeAccProbilityDist) IsSet() bool {
	return v.isSet
}

func (v *NullableUeAccProbilityDist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeAccProbilityDist(val *UeAccProbilityDist) *NullableUeAccProbilityDist {
	return &NullableUeAccProbilityDist{value: val, isSet: true}
}

func (v NullableUeAccProbilityDist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeAccProbilityDist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


