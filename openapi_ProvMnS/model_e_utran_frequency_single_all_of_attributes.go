/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the EUtranFrequencySingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EUtranFrequencySingleAllOfAttributes{}

// EUtranFrequencySingleAllOfAttributes struct for EUtranFrequencySingleAllOfAttributes
type EUtranFrequencySingleAllOfAttributes struct {
	EarfcnDL *int32 `json:"earfcnDL,omitempty"`
	MultiBandInfoListEutra *int32 `json:"multiBandInfoListEutra,omitempty"`
}

// NewEUtranFrequencySingleAllOfAttributes instantiates a new EUtranFrequencySingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEUtranFrequencySingleAllOfAttributes() *EUtranFrequencySingleAllOfAttributes {
	this := EUtranFrequencySingleAllOfAttributes{}
	return &this
}

// NewEUtranFrequencySingleAllOfAttributesWithDefaults instantiates a new EUtranFrequencySingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEUtranFrequencySingleAllOfAttributesWithDefaults() *EUtranFrequencySingleAllOfAttributes {
	this := EUtranFrequencySingleAllOfAttributes{}
	return &this
}

// GetEarfcnDL returns the EarfcnDL field value if set, zero value otherwise.
func (o *EUtranFrequencySingleAllOfAttributes) GetEarfcnDL() int32 {
	if o == nil || isNil(o.EarfcnDL) {
		var ret int32
		return ret
	}
	return *o.EarfcnDL
}

// GetEarfcnDLOk returns a tuple with the EarfcnDL field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EUtranFrequencySingleAllOfAttributes) GetEarfcnDLOk() (*int32, bool) {
	if o == nil || isNil(o.EarfcnDL) {
		return nil, false
	}
	return o.EarfcnDL, true
}

// HasEarfcnDL returns a boolean if a field has been set.
func (o *EUtranFrequencySingleAllOfAttributes) HasEarfcnDL() bool {
	if o != nil && !isNil(o.EarfcnDL) {
		return true
	}

	return false
}

// SetEarfcnDL gets a reference to the given int32 and assigns it to the EarfcnDL field.
func (o *EUtranFrequencySingleAllOfAttributes) SetEarfcnDL(v int32) {
	o.EarfcnDL = &v
}

// GetMultiBandInfoListEutra returns the MultiBandInfoListEutra field value if set, zero value otherwise.
func (o *EUtranFrequencySingleAllOfAttributes) GetMultiBandInfoListEutra() int32 {
	if o == nil || isNil(o.MultiBandInfoListEutra) {
		var ret int32
		return ret
	}
	return *o.MultiBandInfoListEutra
}

// GetMultiBandInfoListEutraOk returns a tuple with the MultiBandInfoListEutra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EUtranFrequencySingleAllOfAttributes) GetMultiBandInfoListEutraOk() (*int32, bool) {
	if o == nil || isNil(o.MultiBandInfoListEutra) {
		return nil, false
	}
	return o.MultiBandInfoListEutra, true
}

// HasMultiBandInfoListEutra returns a boolean if a field has been set.
func (o *EUtranFrequencySingleAllOfAttributes) HasMultiBandInfoListEutra() bool {
	if o != nil && !isNil(o.MultiBandInfoListEutra) {
		return true
	}

	return false
}

// SetMultiBandInfoListEutra gets a reference to the given int32 and assigns it to the MultiBandInfoListEutra field.
func (o *EUtranFrequencySingleAllOfAttributes) SetMultiBandInfoListEutra(v int32) {
	o.MultiBandInfoListEutra = &v
}

func (o EUtranFrequencySingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EUtranFrequencySingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EarfcnDL) {
		toSerialize["earfcnDL"] = o.EarfcnDL
	}
	if !isNil(o.MultiBandInfoListEutra) {
		toSerialize["multiBandInfoListEutra"] = o.MultiBandInfoListEutra
	}
	return toSerialize, nil
}

type NullableEUtranFrequencySingleAllOfAttributes struct {
	value *EUtranFrequencySingleAllOfAttributes
	isSet bool
}

func (v NullableEUtranFrequencySingleAllOfAttributes) Get() *EUtranFrequencySingleAllOfAttributes {
	return v.value
}

func (v *NullableEUtranFrequencySingleAllOfAttributes) Set(val *EUtranFrequencySingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableEUtranFrequencySingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableEUtranFrequencySingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEUtranFrequencySingleAllOfAttributes(val *EUtranFrequencySingleAllOfAttributes) *NullableEUtranFrequencySingleAllOfAttributes {
	return &NullableEUtranFrequencySingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableEUtranFrequencySingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEUtranFrequencySingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


