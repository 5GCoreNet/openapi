/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the ManagedElementSingle3AllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedElementSingle3AllOf{}

// ManagedElementSingle3AllOf struct for ManagedElementSingle3AllOf
type ManagedElementSingle3AllOf struct {
	MDAFunction []MDAFunctionSingle `json:"MDAFunction,omitempty"`
}

// NewManagedElementSingle3AllOf instantiates a new ManagedElementSingle3AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedElementSingle3AllOf() *ManagedElementSingle3AllOf {
	this := ManagedElementSingle3AllOf{}
	return &this
}

// NewManagedElementSingle3AllOfWithDefaults instantiates a new ManagedElementSingle3AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedElementSingle3AllOfWithDefaults() *ManagedElementSingle3AllOf {
	this := ManagedElementSingle3AllOf{}
	return &this
}

// GetMDAFunction returns the MDAFunction field value if set, zero value otherwise.
func (o *ManagedElementSingle3AllOf) GetMDAFunction() []MDAFunctionSingle {
	if o == nil || IsNil(o.MDAFunction) {
		var ret []MDAFunctionSingle
		return ret
	}
	return o.MDAFunction
}

// GetMDAFunctionOk returns a tuple with the MDAFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedElementSingle3AllOf) GetMDAFunctionOk() ([]MDAFunctionSingle, bool) {
	if o == nil || IsNil(o.MDAFunction) {
		return nil, false
	}
	return o.MDAFunction, true
}

// HasMDAFunction returns a boolean if a field has been set.
func (o *ManagedElementSingle3AllOf) HasMDAFunction() bool {
	if o != nil && !IsNil(o.MDAFunction) {
		return true
	}

	return false
}

// SetMDAFunction gets a reference to the given []MDAFunctionSingle and assigns it to the MDAFunction field.
func (o *ManagedElementSingle3AllOf) SetMDAFunction(v []MDAFunctionSingle) {
	o.MDAFunction = v
}

func (o ManagedElementSingle3AllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedElementSingle3AllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MDAFunction) {
		toSerialize["MDAFunction"] = o.MDAFunction
	}
	return toSerialize, nil
}

type NullableManagedElementSingle3AllOf struct {
	value *ManagedElementSingle3AllOf
	isSet bool
}

func (v NullableManagedElementSingle3AllOf) Get() *ManagedElementSingle3AllOf {
	return v.value
}

func (v *NullableManagedElementSingle3AllOf) Set(val *ManagedElementSingle3AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedElementSingle3AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedElementSingle3AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedElementSingle3AllOf(val *ManagedElementSingle3AllOf) *NullableManagedElementSingle3AllOf {
	return &NullableManagedElementSingle3AllOf{value: val, isSet: true}
}

func (v NullableManagedElementSingle3AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedElementSingle3AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


