/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the SubNetworkSingle1AllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubNetworkSingle1AllOfAttributes{}

// SubNetworkSingle1AllOfAttributes struct for SubNetworkSingle1AllOfAttributes
type SubNetworkSingle1AllOfAttributes struct {
	SubNetworkAttr
}

// NewSubNetworkSingle1AllOfAttributes instantiates a new SubNetworkSingle1AllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubNetworkSingle1AllOfAttributes() *SubNetworkSingle1AllOfAttributes {
	this := SubNetworkSingle1AllOfAttributes{}
	return &this
}

// NewSubNetworkSingle1AllOfAttributesWithDefaults instantiates a new SubNetworkSingle1AllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubNetworkSingle1AllOfAttributesWithDefaults() *SubNetworkSingle1AllOfAttributes {
	this := SubNetworkSingle1AllOfAttributes{}
	return &this
}

func (o SubNetworkSingle1AllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubNetworkSingle1AllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedSubNetworkAttr, errSubNetworkAttr := json.Marshal(o.SubNetworkAttr)
	if errSubNetworkAttr != nil {
		return map[string]interface{}{}, errSubNetworkAttr
	}
	errSubNetworkAttr = json.Unmarshal([]byte(serializedSubNetworkAttr), &toSerialize)
	if errSubNetworkAttr != nil {
		return map[string]interface{}{}, errSubNetworkAttr
	}
	return toSerialize, nil
}

type NullableSubNetworkSingle1AllOfAttributes struct {
	value *SubNetworkSingle1AllOfAttributes
	isSet bool
}

func (v NullableSubNetworkSingle1AllOfAttributes) Get() *SubNetworkSingle1AllOfAttributes {
	return v.value
}

func (v *NullableSubNetworkSingle1AllOfAttributes) Set(val *SubNetworkSingle1AllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableSubNetworkSingle1AllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableSubNetworkSingle1AllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubNetworkSingle1AllOfAttributes(val *SubNetworkSingle1AllOfAttributes) *NullableSubNetworkSingle1AllOfAttributes {
	return &NullableSubNetworkSingle1AllOfAttributes{value: val, isSet: true}
}

func (v NullableSubNetworkSingle1AllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubNetworkSingle1AllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
