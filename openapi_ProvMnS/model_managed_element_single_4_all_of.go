/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the ManagedElementSingle4AllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedElementSingle4AllOf{}

// ManagedElementSingle4AllOf struct for ManagedElementSingle4AllOf
type ManagedElementSingle4AllOf struct {
	MLTrainingFunction []MLTrainingFunctionSingle `json:"MLTrainingFunction,omitempty"`
}

// NewManagedElementSingle4AllOf instantiates a new ManagedElementSingle4AllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedElementSingle4AllOf() *ManagedElementSingle4AllOf {
	this := ManagedElementSingle4AllOf{}
	return &this
}

// NewManagedElementSingle4AllOfWithDefaults instantiates a new ManagedElementSingle4AllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedElementSingle4AllOfWithDefaults() *ManagedElementSingle4AllOf {
	this := ManagedElementSingle4AllOf{}
	return &this
}

// GetMLTrainingFunction returns the MLTrainingFunction field value if set, zero value otherwise.
func (o *ManagedElementSingle4AllOf) GetMLTrainingFunction() []MLTrainingFunctionSingle {
	if o == nil || isNil(o.MLTrainingFunction) {
		var ret []MLTrainingFunctionSingle
		return ret
	}
	return o.MLTrainingFunction
}

// GetMLTrainingFunctionOk returns a tuple with the MLTrainingFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedElementSingle4AllOf) GetMLTrainingFunctionOk() ([]MLTrainingFunctionSingle, bool) {
	if o == nil || isNil(o.MLTrainingFunction) {
		return nil, false
	}
	return o.MLTrainingFunction, true
}

// HasMLTrainingFunction returns a boolean if a field has been set.
func (o *ManagedElementSingle4AllOf) HasMLTrainingFunction() bool {
	if o != nil && !isNil(o.MLTrainingFunction) {
		return true
	}

	return false
}

// SetMLTrainingFunction gets a reference to the given []MLTrainingFunctionSingle and assigns it to the MLTrainingFunction field.
func (o *ManagedElementSingle4AllOf) SetMLTrainingFunction(v []MLTrainingFunctionSingle) {
	o.MLTrainingFunction = v
}

func (o ManagedElementSingle4AllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedElementSingle4AllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MLTrainingFunction) {
		toSerialize["MLTrainingFunction"] = o.MLTrainingFunction
	}
	return toSerialize, nil
}

type NullableManagedElementSingle4AllOf struct {
	value *ManagedElementSingle4AllOf
	isSet bool
}

func (v NullableManagedElementSingle4AllOf) Get() *ManagedElementSingle4AllOf {
	return v.value
}

func (v *NullableManagedElementSingle4AllOf) Set(val *ManagedElementSingle4AllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedElementSingle4AllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedElementSingle4AllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedElementSingle4AllOf(val *ManagedElementSingle4AllOf) *NullableManagedElementSingle4AllOf {
	return &NullableManagedElementSingle4AllOf{value: val, isSet: true}
}

func (v NullableManagedElementSingle4AllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedElementSingle4AllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


