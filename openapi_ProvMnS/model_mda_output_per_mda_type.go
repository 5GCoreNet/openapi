/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the MDAOutputPerMDAType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MDAOutputPerMDAType{}

// MDAOutputPerMDAType struct for MDAOutputPerMDAType
type MDAOutputPerMDAType struct {
	MDAType *string `json:"mDAType,omitempty"`
	MDAOutputIEFilters []MDAOutputIEFilter `json:"mDAOutputIEFilters,omitempty"`
}

// NewMDAOutputPerMDAType instantiates a new MDAOutputPerMDAType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMDAOutputPerMDAType() *MDAOutputPerMDAType {
	this := MDAOutputPerMDAType{}
	return &this
}

// NewMDAOutputPerMDATypeWithDefaults instantiates a new MDAOutputPerMDAType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMDAOutputPerMDATypeWithDefaults() *MDAOutputPerMDAType {
	this := MDAOutputPerMDAType{}
	return &this
}

// GetMDAType returns the MDAType field value if set, zero value otherwise.
func (o *MDAOutputPerMDAType) GetMDAType() string {
	if o == nil || IsNil(o.MDAType) {
		var ret string
		return ret
	}
	return *o.MDAType
}

// GetMDATypeOk returns a tuple with the MDAType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MDAOutputPerMDAType) GetMDATypeOk() (*string, bool) {
	if o == nil || IsNil(o.MDAType) {
		return nil, false
	}
	return o.MDAType, true
}

// HasMDAType returns a boolean if a field has been set.
func (o *MDAOutputPerMDAType) HasMDAType() bool {
	if o != nil && !IsNil(o.MDAType) {
		return true
	}

	return false
}

// SetMDAType gets a reference to the given string and assigns it to the MDAType field.
func (o *MDAOutputPerMDAType) SetMDAType(v string) {
	o.MDAType = &v
}

// GetMDAOutputIEFilters returns the MDAOutputIEFilters field value if set, zero value otherwise.
func (o *MDAOutputPerMDAType) GetMDAOutputIEFilters() []MDAOutputIEFilter {
	if o == nil || IsNil(o.MDAOutputIEFilters) {
		var ret []MDAOutputIEFilter
		return ret
	}
	return o.MDAOutputIEFilters
}

// GetMDAOutputIEFiltersOk returns a tuple with the MDAOutputIEFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MDAOutputPerMDAType) GetMDAOutputIEFiltersOk() ([]MDAOutputIEFilter, bool) {
	if o == nil || IsNil(o.MDAOutputIEFilters) {
		return nil, false
	}
	return o.MDAOutputIEFilters, true
}

// HasMDAOutputIEFilters returns a boolean if a field has been set.
func (o *MDAOutputPerMDAType) HasMDAOutputIEFilters() bool {
	if o != nil && !IsNil(o.MDAOutputIEFilters) {
		return true
	}

	return false
}

// SetMDAOutputIEFilters gets a reference to the given []MDAOutputIEFilter and assigns it to the MDAOutputIEFilters field.
func (o *MDAOutputPerMDAType) SetMDAOutputIEFilters(v []MDAOutputIEFilter) {
	o.MDAOutputIEFilters = v
}

func (o MDAOutputPerMDAType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MDAOutputPerMDAType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MDAType) {
		toSerialize["mDAType"] = o.MDAType
	}
	if !IsNil(o.MDAOutputIEFilters) {
		toSerialize["mDAOutputIEFilters"] = o.MDAOutputIEFilters
	}
	return toSerialize, nil
}

type NullableMDAOutputPerMDAType struct {
	value *MDAOutputPerMDAType
	isSet bool
}

func (v NullableMDAOutputPerMDAType) Get() *MDAOutputPerMDAType {
	return v.value
}

func (v *NullableMDAOutputPerMDAType) Set(val *MDAOutputPerMDAType) {
	v.value = val
	v.isSet = true
}

func (v NullableMDAOutputPerMDAType) IsSet() bool {
	return v.isSet
}

func (v *NullableMDAOutputPerMDAType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMDAOutputPerMDAType(val *MDAOutputPerMDAType) *NullableMDAOutputPerMDAType {
	return &NullableMDAOutputPerMDAType{value: val, isSet: true}
}

func (v NullableMDAOutputPerMDAType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMDAOutputPerMDAType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


