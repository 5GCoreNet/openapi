/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the CSonPciList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CSonPciList{}

// CSonPciList struct for CSonPciList
type CSonPciList struct {
	NRPci *int32 `json:"NRPci,omitempty"`
}

// NewCSonPciList instantiates a new CSonPciList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCSonPciList() *CSonPciList {
	this := CSonPciList{}
	return &this
}

// NewCSonPciListWithDefaults instantiates a new CSonPciList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCSonPciListWithDefaults() *CSonPciList {
	this := CSonPciList{}
	return &this
}

// GetNRPci returns the NRPci field value if set, zero value otherwise.
func (o *CSonPciList) GetNRPci() int32 {
	if o == nil || IsNil(o.NRPci) {
		var ret int32
		return ret
	}
	return *o.NRPci
}

// GetNRPciOk returns a tuple with the NRPci field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CSonPciList) GetNRPciOk() (*int32, bool) {
	if o == nil || IsNil(o.NRPci) {
		return nil, false
	}
	return o.NRPci, true
}

// HasNRPci returns a boolean if a field has been set.
func (o *CSonPciList) HasNRPci() bool {
	if o != nil && !IsNil(o.NRPci) {
		return true
	}

	return false
}

// SetNRPci gets a reference to the given int32 and assigns it to the NRPci field.
func (o *CSonPciList) SetNRPci(v int32) {
	o.NRPci = &v
}

func (o CSonPciList) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CSonPciList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NRPci) {
		toSerialize["NRPci"] = o.NRPci
	}
	return toSerialize, nil
}

type NullableCSonPciList struct {
	value *CSonPciList
	isSet bool
}

func (v NullableCSonPciList) Get() *CSonPciList {
	return v.value
}

func (v *NullableCSonPciList) Set(val *CSonPciList) {
	v.value = val
	v.isSet = true
}

func (v NullableCSonPciList) IsSet() bool {
	return v.isSet
}

func (v *NullableCSonPciList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCSonPciList(val *CSonPciList) *NullableCSonPciList {
	return &NullableCSonPciList{value: val, isSet: true}
}

func (v NullableCSonPciList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCSonPciList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
