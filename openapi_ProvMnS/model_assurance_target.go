/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the AssuranceTarget type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssuranceTarget{}

// AssuranceTarget struct for AssuranceTarget
type AssuranceTarget struct {
	AssuranceTargetName *string `json:"assuranceTargetName,omitempty"`
	AssuranceTargetValue *string `json:"assuranceTargetValue,omitempty"`
}

// NewAssuranceTarget instantiates a new AssuranceTarget object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssuranceTarget() *AssuranceTarget {
	this := AssuranceTarget{}
	return &this
}

// NewAssuranceTargetWithDefaults instantiates a new AssuranceTarget object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssuranceTargetWithDefaults() *AssuranceTarget {
	this := AssuranceTarget{}
	return &this
}

// GetAssuranceTargetName returns the AssuranceTargetName field value if set, zero value otherwise.
func (o *AssuranceTarget) GetAssuranceTargetName() string {
	if o == nil || IsNil(o.AssuranceTargetName) {
		var ret string
		return ret
	}
	return *o.AssuranceTargetName
}

// GetAssuranceTargetNameOk returns a tuple with the AssuranceTargetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceTarget) GetAssuranceTargetNameOk() (*string, bool) {
	if o == nil || IsNil(o.AssuranceTargetName) {
		return nil, false
	}
	return o.AssuranceTargetName, true
}

// HasAssuranceTargetName returns a boolean if a field has been set.
func (o *AssuranceTarget) HasAssuranceTargetName() bool {
	if o != nil && !IsNil(o.AssuranceTargetName) {
		return true
	}

	return false
}

// SetAssuranceTargetName gets a reference to the given string and assigns it to the AssuranceTargetName field.
func (o *AssuranceTarget) SetAssuranceTargetName(v string) {
	o.AssuranceTargetName = &v
}

// GetAssuranceTargetValue returns the AssuranceTargetValue field value if set, zero value otherwise.
func (o *AssuranceTarget) GetAssuranceTargetValue() string {
	if o == nil || IsNil(o.AssuranceTargetValue) {
		var ret string
		return ret
	}
	return *o.AssuranceTargetValue
}

// GetAssuranceTargetValueOk returns a tuple with the AssuranceTargetValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceTarget) GetAssuranceTargetValueOk() (*string, bool) {
	if o == nil || IsNil(o.AssuranceTargetValue) {
		return nil, false
	}
	return o.AssuranceTargetValue, true
}

// HasAssuranceTargetValue returns a boolean if a field has been set.
func (o *AssuranceTarget) HasAssuranceTargetValue() bool {
	if o != nil && !IsNil(o.AssuranceTargetValue) {
		return true
	}

	return false
}

// SetAssuranceTargetValue gets a reference to the given string and assigns it to the AssuranceTargetValue field.
func (o *AssuranceTarget) SetAssuranceTargetValue(v string) {
	o.AssuranceTargetValue = &v
}

func (o AssuranceTarget) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssuranceTarget) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AssuranceTargetName) {
		toSerialize["assuranceTargetName"] = o.AssuranceTargetName
	}
	if !IsNil(o.AssuranceTargetValue) {
		toSerialize["assuranceTargetValue"] = o.AssuranceTargetValue
	}
	return toSerialize, nil
}

type NullableAssuranceTarget struct {
	value *AssuranceTarget
	isSet bool
}

func (v NullableAssuranceTarget) Get() *AssuranceTarget {
	return v.value
}

func (v *NullableAssuranceTarget) Set(val *AssuranceTarget) {
	v.value = val
	v.isSet = true
}

func (v NullableAssuranceTarget) IsSet() bool {
	return v.isSet
}

func (v *NullableAssuranceTarget) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssuranceTarget(val *AssuranceTarget) *NullableAssuranceTarget {
	return &NullableAssuranceTarget{value: val, isSet: true}
}

func (v NullableAssuranceTarget) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssuranceTarget) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


