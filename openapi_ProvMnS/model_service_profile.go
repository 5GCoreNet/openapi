/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the ServiceProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceProfile{}

// ServiceProfile struct for ServiceProfile
type ServiceProfile struct {
	ServiceProfileId *string `json:"serviceProfileId,omitempty"`
	PlmnInfoList []PlmnInfo `json:"plmnInfoList,omitempty"`
	MaxNumberofUEs *float32 `json:"maxNumberofUEs,omitempty"`
	DLLatency *float32 `json:"dLLatency,omitempty"`
	ULLatency *float32 `json:"uLLatency,omitempty"`
	UEMobilityLevel *MobilityLevel `json:"uEMobilityLevel,omitempty"`
	Sst *int32 `json:"sst,omitempty"`
	NetworkSliceSharingIndicator *NetworkSliceSharingIndicator `json:"networkSliceSharingIndicator,omitempty"`
	Availability *float32 `json:"availability,omitempty"`
	DelayTolerance *DelayTolerance `json:"delayTolerance,omitempty"`
	DLDeterministicComm *DeterministicComm `json:"dLDeterministicComm,omitempty"`
	ULDeterministicComm *DeterministicComm `json:"uLDeterministicComm,omitempty"`
	DLThptPerSlice *XLThpt `json:"dLThptPerSlice,omitempty"`
	DLThptPerUE *XLThpt `json:"dLThptPerUE,omitempty"`
	ULThptPerSlice *XLThpt `json:"uLThptPerSlice,omitempty"`
	ULThptPerUE *XLThpt `json:"uLThptPerUE,omitempty"`
	DLMaxPktSize *MaxPktSize `json:"dLMaxPktSize,omitempty"`
	ULMaxPktSize *MaxPktSize `json:"uLMaxPktSize,omitempty"`
	MaxNumberofPDUSessions *MaxNumberofPDUSessions `json:"maxNumberofPDUSessions,omitempty"`
	KPIMonitoring *KPIMonitoring `json:"kPIMonitoring,omitempty"`
	NBIoT *NBIoT `json:"nBIoT,omitempty"`
	RadioSpectrum *RadioSpectrum `json:"radioSpectrum,omitempty"`
	Synchronicity *Synchronicity `json:"synchronicity,omitempty"`
	Positioning *Positioning `json:"positioning,omitempty"`
	UserMgmtOpen *UserMgmtOpen `json:"userMgmtOpen,omitempty"`
	V2XCommModels *V2XCommModels `json:"v2XCommModels,omitempty"`
	CoverageArea *string `json:"coverageArea,omitempty"`
	TermDensity *TermDensity `json:"termDensity,omitempty"`
	ActivityFactor *float32 `json:"activityFactor,omitempty"`
	UESpeed *int32 `json:"uESpeed,omitempty"`
	Jitter *int32 `json:"jitter,omitempty"`
	SurvivalTime *float32 `json:"survivalTime,omitempty"`
	Reliability *float32 `json:"reliability,omitempty"`
	MaxDLDataVolume *float32 `json:"maxDLDataVolume,omitempty"`
	MaxULDataVolume *float32 `json:"maxULDataVolume,omitempty"`
	SliceSimultaneousUse *SliceSimultaneousUse `json:"sliceSimultaneousUse,omitempty"`
	EnergyEfficiency *EnergyEfficiency `json:"energyEfficiency,omitempty"`
	NssaaSupport *NSSAASupport `json:"nssaaSupport,omitempty"`
	N6Protection *N6Protection `json:"n6Protection,omitempty"`
}

// NewServiceProfile instantiates a new ServiceProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceProfile() *ServiceProfile {
	this := ServiceProfile{}
	return &this
}

// NewServiceProfileWithDefaults instantiates a new ServiceProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceProfileWithDefaults() *ServiceProfile {
	this := ServiceProfile{}
	return &this
}

// GetServiceProfileId returns the ServiceProfileId field value if set, zero value otherwise.
func (o *ServiceProfile) GetServiceProfileId() string {
	if o == nil || isNil(o.ServiceProfileId) {
		var ret string
		return ret
	}
	return *o.ServiceProfileId
}

// GetServiceProfileIdOk returns a tuple with the ServiceProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetServiceProfileIdOk() (*string, bool) {
	if o == nil || isNil(o.ServiceProfileId) {
		return nil, false
	}
	return o.ServiceProfileId, true
}

// HasServiceProfileId returns a boolean if a field has been set.
func (o *ServiceProfile) HasServiceProfileId() bool {
	if o != nil && !isNil(o.ServiceProfileId) {
		return true
	}

	return false
}

// SetServiceProfileId gets a reference to the given string and assigns it to the ServiceProfileId field.
func (o *ServiceProfile) SetServiceProfileId(v string) {
	o.ServiceProfileId = &v
}

// GetPlmnInfoList returns the PlmnInfoList field value if set, zero value otherwise.
func (o *ServiceProfile) GetPlmnInfoList() []PlmnInfo {
	if o == nil || isNil(o.PlmnInfoList) {
		var ret []PlmnInfo
		return ret
	}
	return o.PlmnInfoList
}

// GetPlmnInfoListOk returns a tuple with the PlmnInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetPlmnInfoListOk() ([]PlmnInfo, bool) {
	if o == nil || isNil(o.PlmnInfoList) {
		return nil, false
	}
	return o.PlmnInfoList, true
}

// HasPlmnInfoList returns a boolean if a field has been set.
func (o *ServiceProfile) HasPlmnInfoList() bool {
	if o != nil && !isNil(o.PlmnInfoList) {
		return true
	}

	return false
}

// SetPlmnInfoList gets a reference to the given []PlmnInfo and assigns it to the PlmnInfoList field.
func (o *ServiceProfile) SetPlmnInfoList(v []PlmnInfo) {
	o.PlmnInfoList = v
}

// GetMaxNumberofUEs returns the MaxNumberofUEs field value if set, zero value otherwise.
func (o *ServiceProfile) GetMaxNumberofUEs() float32 {
	if o == nil || isNil(o.MaxNumberofUEs) {
		var ret float32
		return ret
	}
	return *o.MaxNumberofUEs
}

// GetMaxNumberofUEsOk returns a tuple with the MaxNumberofUEs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetMaxNumberofUEsOk() (*float32, bool) {
	if o == nil || isNil(o.MaxNumberofUEs) {
		return nil, false
	}
	return o.MaxNumberofUEs, true
}

// HasMaxNumberofUEs returns a boolean if a field has been set.
func (o *ServiceProfile) HasMaxNumberofUEs() bool {
	if o != nil && !isNil(o.MaxNumberofUEs) {
		return true
	}

	return false
}

// SetMaxNumberofUEs gets a reference to the given float32 and assigns it to the MaxNumberofUEs field.
func (o *ServiceProfile) SetMaxNumberofUEs(v float32) {
	o.MaxNumberofUEs = &v
}

// GetDLLatency returns the DLLatency field value if set, zero value otherwise.
func (o *ServiceProfile) GetDLLatency() float32 {
	if o == nil || isNil(o.DLLatency) {
		var ret float32
		return ret
	}
	return *o.DLLatency
}

// GetDLLatencyOk returns a tuple with the DLLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDLLatencyOk() (*float32, bool) {
	if o == nil || isNil(o.DLLatency) {
		return nil, false
	}
	return o.DLLatency, true
}

// HasDLLatency returns a boolean if a field has been set.
func (o *ServiceProfile) HasDLLatency() bool {
	if o != nil && !isNil(o.DLLatency) {
		return true
	}

	return false
}

// SetDLLatency gets a reference to the given float32 and assigns it to the DLLatency field.
func (o *ServiceProfile) SetDLLatency(v float32) {
	o.DLLatency = &v
}

// GetULLatency returns the ULLatency field value if set, zero value otherwise.
func (o *ServiceProfile) GetULLatency() float32 {
	if o == nil || isNil(o.ULLatency) {
		var ret float32
		return ret
	}
	return *o.ULLatency
}

// GetULLatencyOk returns a tuple with the ULLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetULLatencyOk() (*float32, bool) {
	if o == nil || isNil(o.ULLatency) {
		return nil, false
	}
	return o.ULLatency, true
}

// HasULLatency returns a boolean if a field has been set.
func (o *ServiceProfile) HasULLatency() bool {
	if o != nil && !isNil(o.ULLatency) {
		return true
	}

	return false
}

// SetULLatency gets a reference to the given float32 and assigns it to the ULLatency field.
func (o *ServiceProfile) SetULLatency(v float32) {
	o.ULLatency = &v
}

// GetUEMobilityLevel returns the UEMobilityLevel field value if set, zero value otherwise.
func (o *ServiceProfile) GetUEMobilityLevel() MobilityLevel {
	if o == nil || isNil(o.UEMobilityLevel) {
		var ret MobilityLevel
		return ret
	}
	return *o.UEMobilityLevel
}

// GetUEMobilityLevelOk returns a tuple with the UEMobilityLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetUEMobilityLevelOk() (*MobilityLevel, bool) {
	if o == nil || isNil(o.UEMobilityLevel) {
		return nil, false
	}
	return o.UEMobilityLevel, true
}

// HasUEMobilityLevel returns a boolean if a field has been set.
func (o *ServiceProfile) HasUEMobilityLevel() bool {
	if o != nil && !isNil(o.UEMobilityLevel) {
		return true
	}

	return false
}

// SetUEMobilityLevel gets a reference to the given MobilityLevel and assigns it to the UEMobilityLevel field.
func (o *ServiceProfile) SetUEMobilityLevel(v MobilityLevel) {
	o.UEMobilityLevel = &v
}

// GetSst returns the Sst field value if set, zero value otherwise.
func (o *ServiceProfile) GetSst() int32 {
	if o == nil || isNil(o.Sst) {
		var ret int32
		return ret
	}
	return *o.Sst
}

// GetSstOk returns a tuple with the Sst field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetSstOk() (*int32, bool) {
	if o == nil || isNil(o.Sst) {
		return nil, false
	}
	return o.Sst, true
}

// HasSst returns a boolean if a field has been set.
func (o *ServiceProfile) HasSst() bool {
	if o != nil && !isNil(o.Sst) {
		return true
	}

	return false
}

// SetSst gets a reference to the given int32 and assigns it to the Sst field.
func (o *ServiceProfile) SetSst(v int32) {
	o.Sst = &v
}

// GetNetworkSliceSharingIndicator returns the NetworkSliceSharingIndicator field value if set, zero value otherwise.
func (o *ServiceProfile) GetNetworkSliceSharingIndicator() NetworkSliceSharingIndicator {
	if o == nil || isNil(o.NetworkSliceSharingIndicator) {
		var ret NetworkSliceSharingIndicator
		return ret
	}
	return *o.NetworkSliceSharingIndicator
}

// GetNetworkSliceSharingIndicatorOk returns a tuple with the NetworkSliceSharingIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetNetworkSliceSharingIndicatorOk() (*NetworkSliceSharingIndicator, bool) {
	if o == nil || isNil(o.NetworkSliceSharingIndicator) {
		return nil, false
	}
	return o.NetworkSliceSharingIndicator, true
}

// HasNetworkSliceSharingIndicator returns a boolean if a field has been set.
func (o *ServiceProfile) HasNetworkSliceSharingIndicator() bool {
	if o != nil && !isNil(o.NetworkSliceSharingIndicator) {
		return true
	}

	return false
}

// SetNetworkSliceSharingIndicator gets a reference to the given NetworkSliceSharingIndicator and assigns it to the NetworkSliceSharingIndicator field.
func (o *ServiceProfile) SetNetworkSliceSharingIndicator(v NetworkSliceSharingIndicator) {
	o.NetworkSliceSharingIndicator = &v
}

// GetAvailability returns the Availability field value if set, zero value otherwise.
func (o *ServiceProfile) GetAvailability() float32 {
	if o == nil || isNil(o.Availability) {
		var ret float32
		return ret
	}
	return *o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetAvailabilityOk() (*float32, bool) {
	if o == nil || isNil(o.Availability) {
		return nil, false
	}
	return o.Availability, true
}

// HasAvailability returns a boolean if a field has been set.
func (o *ServiceProfile) HasAvailability() bool {
	if o != nil && !isNil(o.Availability) {
		return true
	}

	return false
}

// SetAvailability gets a reference to the given float32 and assigns it to the Availability field.
func (o *ServiceProfile) SetAvailability(v float32) {
	o.Availability = &v
}

// GetDelayTolerance returns the DelayTolerance field value if set, zero value otherwise.
func (o *ServiceProfile) GetDelayTolerance() DelayTolerance {
	if o == nil || isNil(o.DelayTolerance) {
		var ret DelayTolerance
		return ret
	}
	return *o.DelayTolerance
}

// GetDelayToleranceOk returns a tuple with the DelayTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDelayToleranceOk() (*DelayTolerance, bool) {
	if o == nil || isNil(o.DelayTolerance) {
		return nil, false
	}
	return o.DelayTolerance, true
}

// HasDelayTolerance returns a boolean if a field has been set.
func (o *ServiceProfile) HasDelayTolerance() bool {
	if o != nil && !isNil(o.DelayTolerance) {
		return true
	}

	return false
}

// SetDelayTolerance gets a reference to the given DelayTolerance and assigns it to the DelayTolerance field.
func (o *ServiceProfile) SetDelayTolerance(v DelayTolerance) {
	o.DelayTolerance = &v
}

// GetDLDeterministicComm returns the DLDeterministicComm field value if set, zero value otherwise.
func (o *ServiceProfile) GetDLDeterministicComm() DeterministicComm {
	if o == nil || isNil(o.DLDeterministicComm) {
		var ret DeterministicComm
		return ret
	}
	return *o.DLDeterministicComm
}

// GetDLDeterministicCommOk returns a tuple with the DLDeterministicComm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDLDeterministicCommOk() (*DeterministicComm, bool) {
	if o == nil || isNil(o.DLDeterministicComm) {
		return nil, false
	}
	return o.DLDeterministicComm, true
}

// HasDLDeterministicComm returns a boolean if a field has been set.
func (o *ServiceProfile) HasDLDeterministicComm() bool {
	if o != nil && !isNil(o.DLDeterministicComm) {
		return true
	}

	return false
}

// SetDLDeterministicComm gets a reference to the given DeterministicComm and assigns it to the DLDeterministicComm field.
func (o *ServiceProfile) SetDLDeterministicComm(v DeterministicComm) {
	o.DLDeterministicComm = &v
}

// GetULDeterministicComm returns the ULDeterministicComm field value if set, zero value otherwise.
func (o *ServiceProfile) GetULDeterministicComm() DeterministicComm {
	if o == nil || isNil(o.ULDeterministicComm) {
		var ret DeterministicComm
		return ret
	}
	return *o.ULDeterministicComm
}

// GetULDeterministicCommOk returns a tuple with the ULDeterministicComm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetULDeterministicCommOk() (*DeterministicComm, bool) {
	if o == nil || isNil(o.ULDeterministicComm) {
		return nil, false
	}
	return o.ULDeterministicComm, true
}

// HasULDeterministicComm returns a boolean if a field has been set.
func (o *ServiceProfile) HasULDeterministicComm() bool {
	if o != nil && !isNil(o.ULDeterministicComm) {
		return true
	}

	return false
}

// SetULDeterministicComm gets a reference to the given DeterministicComm and assigns it to the ULDeterministicComm field.
func (o *ServiceProfile) SetULDeterministicComm(v DeterministicComm) {
	o.ULDeterministicComm = &v
}

// GetDLThptPerSlice returns the DLThptPerSlice field value if set, zero value otherwise.
func (o *ServiceProfile) GetDLThptPerSlice() XLThpt {
	if o == nil || isNil(o.DLThptPerSlice) {
		var ret XLThpt
		return ret
	}
	return *o.DLThptPerSlice
}

// GetDLThptPerSliceOk returns a tuple with the DLThptPerSlice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDLThptPerSliceOk() (*XLThpt, bool) {
	if o == nil || isNil(o.DLThptPerSlice) {
		return nil, false
	}
	return o.DLThptPerSlice, true
}

// HasDLThptPerSlice returns a boolean if a field has been set.
func (o *ServiceProfile) HasDLThptPerSlice() bool {
	if o != nil && !isNil(o.DLThptPerSlice) {
		return true
	}

	return false
}

// SetDLThptPerSlice gets a reference to the given XLThpt and assigns it to the DLThptPerSlice field.
func (o *ServiceProfile) SetDLThptPerSlice(v XLThpt) {
	o.DLThptPerSlice = &v
}

// GetDLThptPerUE returns the DLThptPerUE field value if set, zero value otherwise.
func (o *ServiceProfile) GetDLThptPerUE() XLThpt {
	if o == nil || isNil(o.DLThptPerUE) {
		var ret XLThpt
		return ret
	}
	return *o.DLThptPerUE
}

// GetDLThptPerUEOk returns a tuple with the DLThptPerUE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDLThptPerUEOk() (*XLThpt, bool) {
	if o == nil || isNil(o.DLThptPerUE) {
		return nil, false
	}
	return o.DLThptPerUE, true
}

// HasDLThptPerUE returns a boolean if a field has been set.
func (o *ServiceProfile) HasDLThptPerUE() bool {
	if o != nil && !isNil(o.DLThptPerUE) {
		return true
	}

	return false
}

// SetDLThptPerUE gets a reference to the given XLThpt and assigns it to the DLThptPerUE field.
func (o *ServiceProfile) SetDLThptPerUE(v XLThpt) {
	o.DLThptPerUE = &v
}

// GetULThptPerSlice returns the ULThptPerSlice field value if set, zero value otherwise.
func (o *ServiceProfile) GetULThptPerSlice() XLThpt {
	if o == nil || isNil(o.ULThptPerSlice) {
		var ret XLThpt
		return ret
	}
	return *o.ULThptPerSlice
}

// GetULThptPerSliceOk returns a tuple with the ULThptPerSlice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetULThptPerSliceOk() (*XLThpt, bool) {
	if o == nil || isNil(o.ULThptPerSlice) {
		return nil, false
	}
	return o.ULThptPerSlice, true
}

// HasULThptPerSlice returns a boolean if a field has been set.
func (o *ServiceProfile) HasULThptPerSlice() bool {
	if o != nil && !isNil(o.ULThptPerSlice) {
		return true
	}

	return false
}

// SetULThptPerSlice gets a reference to the given XLThpt and assigns it to the ULThptPerSlice field.
func (o *ServiceProfile) SetULThptPerSlice(v XLThpt) {
	o.ULThptPerSlice = &v
}

// GetULThptPerUE returns the ULThptPerUE field value if set, zero value otherwise.
func (o *ServiceProfile) GetULThptPerUE() XLThpt {
	if o == nil || isNil(o.ULThptPerUE) {
		var ret XLThpt
		return ret
	}
	return *o.ULThptPerUE
}

// GetULThptPerUEOk returns a tuple with the ULThptPerUE field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetULThptPerUEOk() (*XLThpt, bool) {
	if o == nil || isNil(o.ULThptPerUE) {
		return nil, false
	}
	return o.ULThptPerUE, true
}

// HasULThptPerUE returns a boolean if a field has been set.
func (o *ServiceProfile) HasULThptPerUE() bool {
	if o != nil && !isNil(o.ULThptPerUE) {
		return true
	}

	return false
}

// SetULThptPerUE gets a reference to the given XLThpt and assigns it to the ULThptPerUE field.
func (o *ServiceProfile) SetULThptPerUE(v XLThpt) {
	o.ULThptPerUE = &v
}

// GetDLMaxPktSize returns the DLMaxPktSize field value if set, zero value otherwise.
func (o *ServiceProfile) GetDLMaxPktSize() MaxPktSize {
	if o == nil || isNil(o.DLMaxPktSize) {
		var ret MaxPktSize
		return ret
	}
	return *o.DLMaxPktSize
}

// GetDLMaxPktSizeOk returns a tuple with the DLMaxPktSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetDLMaxPktSizeOk() (*MaxPktSize, bool) {
	if o == nil || isNil(o.DLMaxPktSize) {
		return nil, false
	}
	return o.DLMaxPktSize, true
}

// HasDLMaxPktSize returns a boolean if a field has been set.
func (o *ServiceProfile) HasDLMaxPktSize() bool {
	if o != nil && !isNil(o.DLMaxPktSize) {
		return true
	}

	return false
}

// SetDLMaxPktSize gets a reference to the given MaxPktSize and assigns it to the DLMaxPktSize field.
func (o *ServiceProfile) SetDLMaxPktSize(v MaxPktSize) {
	o.DLMaxPktSize = &v
}

// GetULMaxPktSize returns the ULMaxPktSize field value if set, zero value otherwise.
func (o *ServiceProfile) GetULMaxPktSize() MaxPktSize {
	if o == nil || isNil(o.ULMaxPktSize) {
		var ret MaxPktSize
		return ret
	}
	return *o.ULMaxPktSize
}

// GetULMaxPktSizeOk returns a tuple with the ULMaxPktSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetULMaxPktSizeOk() (*MaxPktSize, bool) {
	if o == nil || isNil(o.ULMaxPktSize) {
		return nil, false
	}
	return o.ULMaxPktSize, true
}

// HasULMaxPktSize returns a boolean if a field has been set.
func (o *ServiceProfile) HasULMaxPktSize() bool {
	if o != nil && !isNil(o.ULMaxPktSize) {
		return true
	}

	return false
}

// SetULMaxPktSize gets a reference to the given MaxPktSize and assigns it to the ULMaxPktSize field.
func (o *ServiceProfile) SetULMaxPktSize(v MaxPktSize) {
	o.ULMaxPktSize = &v
}

// GetMaxNumberofPDUSessions returns the MaxNumberofPDUSessions field value if set, zero value otherwise.
func (o *ServiceProfile) GetMaxNumberofPDUSessions() MaxNumberofPDUSessions {
	if o == nil || isNil(o.MaxNumberofPDUSessions) {
		var ret MaxNumberofPDUSessions
		return ret
	}
	return *o.MaxNumberofPDUSessions
}

// GetMaxNumberofPDUSessionsOk returns a tuple with the MaxNumberofPDUSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetMaxNumberofPDUSessionsOk() (*MaxNumberofPDUSessions, bool) {
	if o == nil || isNil(o.MaxNumberofPDUSessions) {
		return nil, false
	}
	return o.MaxNumberofPDUSessions, true
}

// HasMaxNumberofPDUSessions returns a boolean if a field has been set.
func (o *ServiceProfile) HasMaxNumberofPDUSessions() bool {
	if o != nil && !isNil(o.MaxNumberofPDUSessions) {
		return true
	}

	return false
}

// SetMaxNumberofPDUSessions gets a reference to the given MaxNumberofPDUSessions and assigns it to the MaxNumberofPDUSessions field.
func (o *ServiceProfile) SetMaxNumberofPDUSessions(v MaxNumberofPDUSessions) {
	o.MaxNumberofPDUSessions = &v
}

// GetKPIMonitoring returns the KPIMonitoring field value if set, zero value otherwise.
func (o *ServiceProfile) GetKPIMonitoring() KPIMonitoring {
	if o == nil || isNil(o.KPIMonitoring) {
		var ret KPIMonitoring
		return ret
	}
	return *o.KPIMonitoring
}

// GetKPIMonitoringOk returns a tuple with the KPIMonitoring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetKPIMonitoringOk() (*KPIMonitoring, bool) {
	if o == nil || isNil(o.KPIMonitoring) {
		return nil, false
	}
	return o.KPIMonitoring, true
}

// HasKPIMonitoring returns a boolean if a field has been set.
func (o *ServiceProfile) HasKPIMonitoring() bool {
	if o != nil && !isNil(o.KPIMonitoring) {
		return true
	}

	return false
}

// SetKPIMonitoring gets a reference to the given KPIMonitoring and assigns it to the KPIMonitoring field.
func (o *ServiceProfile) SetKPIMonitoring(v KPIMonitoring) {
	o.KPIMonitoring = &v
}

// GetNBIoT returns the NBIoT field value if set, zero value otherwise.
func (o *ServiceProfile) GetNBIoT() NBIoT {
	if o == nil || isNil(o.NBIoT) {
		var ret NBIoT
		return ret
	}
	return *o.NBIoT
}

// GetNBIoTOk returns a tuple with the NBIoT field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetNBIoTOk() (*NBIoT, bool) {
	if o == nil || isNil(o.NBIoT) {
		return nil, false
	}
	return o.NBIoT, true
}

// HasNBIoT returns a boolean if a field has been set.
func (o *ServiceProfile) HasNBIoT() bool {
	if o != nil && !isNil(o.NBIoT) {
		return true
	}

	return false
}

// SetNBIoT gets a reference to the given NBIoT and assigns it to the NBIoT field.
func (o *ServiceProfile) SetNBIoT(v NBIoT) {
	o.NBIoT = &v
}

// GetRadioSpectrum returns the RadioSpectrum field value if set, zero value otherwise.
func (o *ServiceProfile) GetRadioSpectrum() RadioSpectrum {
	if o == nil || isNil(o.RadioSpectrum) {
		var ret RadioSpectrum
		return ret
	}
	return *o.RadioSpectrum
}

// GetRadioSpectrumOk returns a tuple with the RadioSpectrum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetRadioSpectrumOk() (*RadioSpectrum, bool) {
	if o == nil || isNil(o.RadioSpectrum) {
		return nil, false
	}
	return o.RadioSpectrum, true
}

// HasRadioSpectrum returns a boolean if a field has been set.
func (o *ServiceProfile) HasRadioSpectrum() bool {
	if o != nil && !isNil(o.RadioSpectrum) {
		return true
	}

	return false
}

// SetRadioSpectrum gets a reference to the given RadioSpectrum and assigns it to the RadioSpectrum field.
func (o *ServiceProfile) SetRadioSpectrum(v RadioSpectrum) {
	o.RadioSpectrum = &v
}

// GetSynchronicity returns the Synchronicity field value if set, zero value otherwise.
func (o *ServiceProfile) GetSynchronicity() Synchronicity {
	if o == nil || isNil(o.Synchronicity) {
		var ret Synchronicity
		return ret
	}
	return *o.Synchronicity
}

// GetSynchronicityOk returns a tuple with the Synchronicity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetSynchronicityOk() (*Synchronicity, bool) {
	if o == nil || isNil(o.Synchronicity) {
		return nil, false
	}
	return o.Synchronicity, true
}

// HasSynchronicity returns a boolean if a field has been set.
func (o *ServiceProfile) HasSynchronicity() bool {
	if o != nil && !isNil(o.Synchronicity) {
		return true
	}

	return false
}

// SetSynchronicity gets a reference to the given Synchronicity and assigns it to the Synchronicity field.
func (o *ServiceProfile) SetSynchronicity(v Synchronicity) {
	o.Synchronicity = &v
}

// GetPositioning returns the Positioning field value if set, zero value otherwise.
func (o *ServiceProfile) GetPositioning() Positioning {
	if o == nil || isNil(o.Positioning) {
		var ret Positioning
		return ret
	}
	return *o.Positioning
}

// GetPositioningOk returns a tuple with the Positioning field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetPositioningOk() (*Positioning, bool) {
	if o == nil || isNil(o.Positioning) {
		return nil, false
	}
	return o.Positioning, true
}

// HasPositioning returns a boolean if a field has been set.
func (o *ServiceProfile) HasPositioning() bool {
	if o != nil && !isNil(o.Positioning) {
		return true
	}

	return false
}

// SetPositioning gets a reference to the given Positioning and assigns it to the Positioning field.
func (o *ServiceProfile) SetPositioning(v Positioning) {
	o.Positioning = &v
}

// GetUserMgmtOpen returns the UserMgmtOpen field value if set, zero value otherwise.
func (o *ServiceProfile) GetUserMgmtOpen() UserMgmtOpen {
	if o == nil || isNil(o.UserMgmtOpen) {
		var ret UserMgmtOpen
		return ret
	}
	return *o.UserMgmtOpen
}

// GetUserMgmtOpenOk returns a tuple with the UserMgmtOpen field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetUserMgmtOpenOk() (*UserMgmtOpen, bool) {
	if o == nil || isNil(o.UserMgmtOpen) {
		return nil, false
	}
	return o.UserMgmtOpen, true
}

// HasUserMgmtOpen returns a boolean if a field has been set.
func (o *ServiceProfile) HasUserMgmtOpen() bool {
	if o != nil && !isNil(o.UserMgmtOpen) {
		return true
	}

	return false
}

// SetUserMgmtOpen gets a reference to the given UserMgmtOpen and assigns it to the UserMgmtOpen field.
func (o *ServiceProfile) SetUserMgmtOpen(v UserMgmtOpen) {
	o.UserMgmtOpen = &v
}

// GetV2XCommModels returns the V2XCommModels field value if set, zero value otherwise.
func (o *ServiceProfile) GetV2XCommModels() V2XCommModels {
	if o == nil || isNil(o.V2XCommModels) {
		var ret V2XCommModels
		return ret
	}
	return *o.V2XCommModels
}

// GetV2XCommModelsOk returns a tuple with the V2XCommModels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetV2XCommModelsOk() (*V2XCommModels, bool) {
	if o == nil || isNil(o.V2XCommModels) {
		return nil, false
	}
	return o.V2XCommModels, true
}

// HasV2XCommModels returns a boolean if a field has been set.
func (o *ServiceProfile) HasV2XCommModels() bool {
	if o != nil && !isNil(o.V2XCommModels) {
		return true
	}

	return false
}

// SetV2XCommModels gets a reference to the given V2XCommModels and assigns it to the V2XCommModels field.
func (o *ServiceProfile) SetV2XCommModels(v V2XCommModels) {
	o.V2XCommModels = &v
}

// GetCoverageArea returns the CoverageArea field value if set, zero value otherwise.
func (o *ServiceProfile) GetCoverageArea() string {
	if o == nil || isNil(o.CoverageArea) {
		var ret string
		return ret
	}
	return *o.CoverageArea
}

// GetCoverageAreaOk returns a tuple with the CoverageArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetCoverageAreaOk() (*string, bool) {
	if o == nil || isNil(o.CoverageArea) {
		return nil, false
	}
	return o.CoverageArea, true
}

// HasCoverageArea returns a boolean if a field has been set.
func (o *ServiceProfile) HasCoverageArea() bool {
	if o != nil && !isNil(o.CoverageArea) {
		return true
	}

	return false
}

// SetCoverageArea gets a reference to the given string and assigns it to the CoverageArea field.
func (o *ServiceProfile) SetCoverageArea(v string) {
	o.CoverageArea = &v
}

// GetTermDensity returns the TermDensity field value if set, zero value otherwise.
func (o *ServiceProfile) GetTermDensity() TermDensity {
	if o == nil || isNil(o.TermDensity) {
		var ret TermDensity
		return ret
	}
	return *o.TermDensity
}

// GetTermDensityOk returns a tuple with the TermDensity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetTermDensityOk() (*TermDensity, bool) {
	if o == nil || isNil(o.TermDensity) {
		return nil, false
	}
	return o.TermDensity, true
}

// HasTermDensity returns a boolean if a field has been set.
func (o *ServiceProfile) HasTermDensity() bool {
	if o != nil && !isNil(o.TermDensity) {
		return true
	}

	return false
}

// SetTermDensity gets a reference to the given TermDensity and assigns it to the TermDensity field.
func (o *ServiceProfile) SetTermDensity(v TermDensity) {
	o.TermDensity = &v
}

// GetActivityFactor returns the ActivityFactor field value if set, zero value otherwise.
func (o *ServiceProfile) GetActivityFactor() float32 {
	if o == nil || isNil(o.ActivityFactor) {
		var ret float32
		return ret
	}
	return *o.ActivityFactor
}

// GetActivityFactorOk returns a tuple with the ActivityFactor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetActivityFactorOk() (*float32, bool) {
	if o == nil || isNil(o.ActivityFactor) {
		return nil, false
	}
	return o.ActivityFactor, true
}

// HasActivityFactor returns a boolean if a field has been set.
func (o *ServiceProfile) HasActivityFactor() bool {
	if o != nil && !isNil(o.ActivityFactor) {
		return true
	}

	return false
}

// SetActivityFactor gets a reference to the given float32 and assigns it to the ActivityFactor field.
func (o *ServiceProfile) SetActivityFactor(v float32) {
	o.ActivityFactor = &v
}

// GetUESpeed returns the UESpeed field value if set, zero value otherwise.
func (o *ServiceProfile) GetUESpeed() int32 {
	if o == nil || isNil(o.UESpeed) {
		var ret int32
		return ret
	}
	return *o.UESpeed
}

// GetUESpeedOk returns a tuple with the UESpeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetUESpeedOk() (*int32, bool) {
	if o == nil || isNil(o.UESpeed) {
		return nil, false
	}
	return o.UESpeed, true
}

// HasUESpeed returns a boolean if a field has been set.
func (o *ServiceProfile) HasUESpeed() bool {
	if o != nil && !isNil(o.UESpeed) {
		return true
	}

	return false
}

// SetUESpeed gets a reference to the given int32 and assigns it to the UESpeed field.
func (o *ServiceProfile) SetUESpeed(v int32) {
	o.UESpeed = &v
}

// GetJitter returns the Jitter field value if set, zero value otherwise.
func (o *ServiceProfile) GetJitter() int32 {
	if o == nil || isNil(o.Jitter) {
		var ret int32
		return ret
	}
	return *o.Jitter
}

// GetJitterOk returns a tuple with the Jitter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetJitterOk() (*int32, bool) {
	if o == nil || isNil(o.Jitter) {
		return nil, false
	}
	return o.Jitter, true
}

// HasJitter returns a boolean if a field has been set.
func (o *ServiceProfile) HasJitter() bool {
	if o != nil && !isNil(o.Jitter) {
		return true
	}

	return false
}

// SetJitter gets a reference to the given int32 and assigns it to the Jitter field.
func (o *ServiceProfile) SetJitter(v int32) {
	o.Jitter = &v
}

// GetSurvivalTime returns the SurvivalTime field value if set, zero value otherwise.
func (o *ServiceProfile) GetSurvivalTime() float32 {
	if o == nil || isNil(o.SurvivalTime) {
		var ret float32
		return ret
	}
	return *o.SurvivalTime
}

// GetSurvivalTimeOk returns a tuple with the SurvivalTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetSurvivalTimeOk() (*float32, bool) {
	if o == nil || isNil(o.SurvivalTime) {
		return nil, false
	}
	return o.SurvivalTime, true
}

// HasSurvivalTime returns a boolean if a field has been set.
func (o *ServiceProfile) HasSurvivalTime() bool {
	if o != nil && !isNil(o.SurvivalTime) {
		return true
	}

	return false
}

// SetSurvivalTime gets a reference to the given float32 and assigns it to the SurvivalTime field.
func (o *ServiceProfile) SetSurvivalTime(v float32) {
	o.SurvivalTime = &v
}

// GetReliability returns the Reliability field value if set, zero value otherwise.
func (o *ServiceProfile) GetReliability() float32 {
	if o == nil || isNil(o.Reliability) {
		var ret float32
		return ret
	}
	return *o.Reliability
}

// GetReliabilityOk returns a tuple with the Reliability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetReliabilityOk() (*float32, bool) {
	if o == nil || isNil(o.Reliability) {
		return nil, false
	}
	return o.Reliability, true
}

// HasReliability returns a boolean if a field has been set.
func (o *ServiceProfile) HasReliability() bool {
	if o != nil && !isNil(o.Reliability) {
		return true
	}

	return false
}

// SetReliability gets a reference to the given float32 and assigns it to the Reliability field.
func (o *ServiceProfile) SetReliability(v float32) {
	o.Reliability = &v
}

// GetMaxDLDataVolume returns the MaxDLDataVolume field value if set, zero value otherwise.
func (o *ServiceProfile) GetMaxDLDataVolume() float32 {
	if o == nil || isNil(o.MaxDLDataVolume) {
		var ret float32
		return ret
	}
	return *o.MaxDLDataVolume
}

// GetMaxDLDataVolumeOk returns a tuple with the MaxDLDataVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetMaxDLDataVolumeOk() (*float32, bool) {
	if o == nil || isNil(o.MaxDLDataVolume) {
		return nil, false
	}
	return o.MaxDLDataVolume, true
}

// HasMaxDLDataVolume returns a boolean if a field has been set.
func (o *ServiceProfile) HasMaxDLDataVolume() bool {
	if o != nil && !isNil(o.MaxDLDataVolume) {
		return true
	}

	return false
}

// SetMaxDLDataVolume gets a reference to the given float32 and assigns it to the MaxDLDataVolume field.
func (o *ServiceProfile) SetMaxDLDataVolume(v float32) {
	o.MaxDLDataVolume = &v
}

// GetMaxULDataVolume returns the MaxULDataVolume field value if set, zero value otherwise.
func (o *ServiceProfile) GetMaxULDataVolume() float32 {
	if o == nil || isNil(o.MaxULDataVolume) {
		var ret float32
		return ret
	}
	return *o.MaxULDataVolume
}

// GetMaxULDataVolumeOk returns a tuple with the MaxULDataVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetMaxULDataVolumeOk() (*float32, bool) {
	if o == nil || isNil(o.MaxULDataVolume) {
		return nil, false
	}
	return o.MaxULDataVolume, true
}

// HasMaxULDataVolume returns a boolean if a field has been set.
func (o *ServiceProfile) HasMaxULDataVolume() bool {
	if o != nil && !isNil(o.MaxULDataVolume) {
		return true
	}

	return false
}

// SetMaxULDataVolume gets a reference to the given float32 and assigns it to the MaxULDataVolume field.
func (o *ServiceProfile) SetMaxULDataVolume(v float32) {
	o.MaxULDataVolume = &v
}

// GetSliceSimultaneousUse returns the SliceSimultaneousUse field value if set, zero value otherwise.
func (o *ServiceProfile) GetSliceSimultaneousUse() SliceSimultaneousUse {
	if o == nil || isNil(o.SliceSimultaneousUse) {
		var ret SliceSimultaneousUse
		return ret
	}
	return *o.SliceSimultaneousUse
}

// GetSliceSimultaneousUseOk returns a tuple with the SliceSimultaneousUse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetSliceSimultaneousUseOk() (*SliceSimultaneousUse, bool) {
	if o == nil || isNil(o.SliceSimultaneousUse) {
		return nil, false
	}
	return o.SliceSimultaneousUse, true
}

// HasSliceSimultaneousUse returns a boolean if a field has been set.
func (o *ServiceProfile) HasSliceSimultaneousUse() bool {
	if o != nil && !isNil(o.SliceSimultaneousUse) {
		return true
	}

	return false
}

// SetSliceSimultaneousUse gets a reference to the given SliceSimultaneousUse and assigns it to the SliceSimultaneousUse field.
func (o *ServiceProfile) SetSliceSimultaneousUse(v SliceSimultaneousUse) {
	o.SliceSimultaneousUse = &v
}

// GetEnergyEfficiency returns the EnergyEfficiency field value if set, zero value otherwise.
func (o *ServiceProfile) GetEnergyEfficiency() EnergyEfficiency {
	if o == nil || isNil(o.EnergyEfficiency) {
		var ret EnergyEfficiency
		return ret
	}
	return *o.EnergyEfficiency
}

// GetEnergyEfficiencyOk returns a tuple with the EnergyEfficiency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetEnergyEfficiencyOk() (*EnergyEfficiency, bool) {
	if o == nil || isNil(o.EnergyEfficiency) {
		return nil, false
	}
	return o.EnergyEfficiency, true
}

// HasEnergyEfficiency returns a boolean if a field has been set.
func (o *ServiceProfile) HasEnergyEfficiency() bool {
	if o != nil && !isNil(o.EnergyEfficiency) {
		return true
	}

	return false
}

// SetEnergyEfficiency gets a reference to the given EnergyEfficiency and assigns it to the EnergyEfficiency field.
func (o *ServiceProfile) SetEnergyEfficiency(v EnergyEfficiency) {
	o.EnergyEfficiency = &v
}

// GetNssaaSupport returns the NssaaSupport field value if set, zero value otherwise.
func (o *ServiceProfile) GetNssaaSupport() NSSAASupport {
	if o == nil || isNil(o.NssaaSupport) {
		var ret NSSAASupport
		return ret
	}
	return *o.NssaaSupport
}

// GetNssaaSupportOk returns a tuple with the NssaaSupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetNssaaSupportOk() (*NSSAASupport, bool) {
	if o == nil || isNil(o.NssaaSupport) {
		return nil, false
	}
	return o.NssaaSupport, true
}

// HasNssaaSupport returns a boolean if a field has been set.
func (o *ServiceProfile) HasNssaaSupport() bool {
	if o != nil && !isNil(o.NssaaSupport) {
		return true
	}

	return false
}

// SetNssaaSupport gets a reference to the given NSSAASupport and assigns it to the NssaaSupport field.
func (o *ServiceProfile) SetNssaaSupport(v NSSAASupport) {
	o.NssaaSupport = &v
}

// GetN6Protection returns the N6Protection field value if set, zero value otherwise.
func (o *ServiceProfile) GetN6Protection() N6Protection {
	if o == nil || isNil(o.N6Protection) {
		var ret N6Protection
		return ret
	}
	return *o.N6Protection
}

// GetN6ProtectionOk returns a tuple with the N6Protection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceProfile) GetN6ProtectionOk() (*N6Protection, bool) {
	if o == nil || isNil(o.N6Protection) {
		return nil, false
	}
	return o.N6Protection, true
}

// HasN6Protection returns a boolean if a field has been set.
func (o *ServiceProfile) HasN6Protection() bool {
	if o != nil && !isNil(o.N6Protection) {
		return true
	}

	return false
}

// SetN6Protection gets a reference to the given N6Protection and assigns it to the N6Protection field.
func (o *ServiceProfile) SetN6Protection(v N6Protection) {
	o.N6Protection = &v
}

func (o ServiceProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ServiceProfileId) {
		toSerialize["serviceProfileId"] = o.ServiceProfileId
	}
	if !isNil(o.PlmnInfoList) {
		toSerialize["plmnInfoList"] = o.PlmnInfoList
	}
	if !isNil(o.MaxNumberofUEs) {
		toSerialize["maxNumberofUEs"] = o.MaxNumberofUEs
	}
	if !isNil(o.DLLatency) {
		toSerialize["dLLatency"] = o.DLLatency
	}
	if !isNil(o.ULLatency) {
		toSerialize["uLLatency"] = o.ULLatency
	}
	if !isNil(o.UEMobilityLevel) {
		toSerialize["uEMobilityLevel"] = o.UEMobilityLevel
	}
	if !isNil(o.Sst) {
		toSerialize["sst"] = o.Sst
	}
	if !isNil(o.NetworkSliceSharingIndicator) {
		toSerialize["networkSliceSharingIndicator"] = o.NetworkSliceSharingIndicator
	}
	if !isNil(o.Availability) {
		toSerialize["availability"] = o.Availability
	}
	if !isNil(o.DelayTolerance) {
		toSerialize["delayTolerance"] = o.DelayTolerance
	}
	if !isNil(o.DLDeterministicComm) {
		toSerialize["dLDeterministicComm"] = o.DLDeterministicComm
	}
	if !isNil(o.ULDeterministicComm) {
		toSerialize["uLDeterministicComm"] = o.ULDeterministicComm
	}
	if !isNil(o.DLThptPerSlice) {
		toSerialize["dLThptPerSlice"] = o.DLThptPerSlice
	}
	if !isNil(o.DLThptPerUE) {
		toSerialize["dLThptPerUE"] = o.DLThptPerUE
	}
	if !isNil(o.ULThptPerSlice) {
		toSerialize["uLThptPerSlice"] = o.ULThptPerSlice
	}
	if !isNil(o.ULThptPerUE) {
		toSerialize["uLThptPerUE"] = o.ULThptPerUE
	}
	if !isNil(o.DLMaxPktSize) {
		toSerialize["dLMaxPktSize"] = o.DLMaxPktSize
	}
	if !isNil(o.ULMaxPktSize) {
		toSerialize["uLMaxPktSize"] = o.ULMaxPktSize
	}
	if !isNil(o.MaxNumberofPDUSessions) {
		toSerialize["maxNumberofPDUSessions"] = o.MaxNumberofPDUSessions
	}
	if !isNil(o.KPIMonitoring) {
		toSerialize["kPIMonitoring"] = o.KPIMonitoring
	}
	if !isNil(o.NBIoT) {
		toSerialize["nBIoT"] = o.NBIoT
	}
	if !isNil(o.RadioSpectrum) {
		toSerialize["radioSpectrum"] = o.RadioSpectrum
	}
	if !isNil(o.Synchronicity) {
		toSerialize["synchronicity"] = o.Synchronicity
	}
	if !isNil(o.Positioning) {
		toSerialize["positioning"] = o.Positioning
	}
	if !isNil(o.UserMgmtOpen) {
		toSerialize["userMgmtOpen"] = o.UserMgmtOpen
	}
	if !isNil(o.V2XCommModels) {
		toSerialize["v2XCommModels"] = o.V2XCommModels
	}
	if !isNil(o.CoverageArea) {
		toSerialize["coverageArea"] = o.CoverageArea
	}
	if !isNil(o.TermDensity) {
		toSerialize["termDensity"] = o.TermDensity
	}
	if !isNil(o.ActivityFactor) {
		toSerialize["activityFactor"] = o.ActivityFactor
	}
	if !isNil(o.UESpeed) {
		toSerialize["uESpeed"] = o.UESpeed
	}
	if !isNil(o.Jitter) {
		toSerialize["jitter"] = o.Jitter
	}
	if !isNil(o.SurvivalTime) {
		toSerialize["survivalTime"] = o.SurvivalTime
	}
	if !isNil(o.Reliability) {
		toSerialize["reliability"] = o.Reliability
	}
	if !isNil(o.MaxDLDataVolume) {
		toSerialize["maxDLDataVolume"] = o.MaxDLDataVolume
	}
	if !isNil(o.MaxULDataVolume) {
		toSerialize["maxULDataVolume"] = o.MaxULDataVolume
	}
	if !isNil(o.SliceSimultaneousUse) {
		toSerialize["sliceSimultaneousUse"] = o.SliceSimultaneousUse
	}
	if !isNil(o.EnergyEfficiency) {
		toSerialize["energyEfficiency"] = o.EnergyEfficiency
	}
	if !isNil(o.NssaaSupport) {
		toSerialize["nssaaSupport"] = o.NssaaSupport
	}
	if !isNil(o.N6Protection) {
		toSerialize["n6Protection"] = o.N6Protection
	}
	return toSerialize, nil
}

type NullableServiceProfile struct {
	value *ServiceProfile
	isSet bool
}

func (v NullableServiceProfile) Get() *ServiceProfile {
	return v.value
}

func (v *NullableServiceProfile) Set(val *ServiceProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceProfile(val *ServiceProfile) *NullableServiceProfile {
	return &NullableServiceProfile{value: val, isSet: true}
}

func (v NullableServiceProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


