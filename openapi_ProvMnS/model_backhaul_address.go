/*
Provisioning MnS

OAS 3.0.1 definition of the Provisioning MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ProvMnS

import (
	"encoding/json"
)

// checks if the BackhaulAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BackhaulAddress{}

// BackhaulAddress struct for BackhaulAddress
type BackhaulAddress struct {
	GnbId *string `json:"gnbId,omitempty"`
	Tai *Tai `json:"tai,omitempty"`
}

// NewBackhaulAddress instantiates a new BackhaulAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBackhaulAddress() *BackhaulAddress {
	this := BackhaulAddress{}
	return &this
}

// NewBackhaulAddressWithDefaults instantiates a new BackhaulAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBackhaulAddressWithDefaults() *BackhaulAddress {
	this := BackhaulAddress{}
	return &this
}

// GetGnbId returns the GnbId field value if set, zero value otherwise.
func (o *BackhaulAddress) GetGnbId() string {
	if o == nil || isNil(o.GnbId) {
		var ret string
		return ret
	}
	return *o.GnbId
}

// GetGnbIdOk returns a tuple with the GnbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackhaulAddress) GetGnbIdOk() (*string, bool) {
	if o == nil || isNil(o.GnbId) {
		return nil, false
	}
	return o.GnbId, true
}

// HasGnbId returns a boolean if a field has been set.
func (o *BackhaulAddress) HasGnbId() bool {
	if o != nil && !isNil(o.GnbId) {
		return true
	}

	return false
}

// SetGnbId gets a reference to the given string and assigns it to the GnbId field.
func (o *BackhaulAddress) SetGnbId(v string) {
	o.GnbId = &v
}

// GetTai returns the Tai field value if set, zero value otherwise.
func (o *BackhaulAddress) GetTai() Tai {
	if o == nil || isNil(o.Tai) {
		var ret Tai
		return ret
	}
	return *o.Tai
}

// GetTaiOk returns a tuple with the Tai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BackhaulAddress) GetTaiOk() (*Tai, bool) {
	if o == nil || isNil(o.Tai) {
		return nil, false
	}
	return o.Tai, true
}

// HasTai returns a boolean if a field has been set.
func (o *BackhaulAddress) HasTai() bool {
	if o != nil && !isNil(o.Tai) {
		return true
	}

	return false
}

// SetTai gets a reference to the given Tai and assigns it to the Tai field.
func (o *BackhaulAddress) SetTai(v Tai) {
	o.Tai = &v
}

func (o BackhaulAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BackhaulAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GnbId) {
		toSerialize["gnbId"] = o.GnbId
	}
	if !isNil(o.Tai) {
		toSerialize["tai"] = o.Tai
	}
	return toSerialize, nil
}

type NullableBackhaulAddress struct {
	value *BackhaulAddress
	isSet bool
}

func (v NullableBackhaulAddress) Get() *BackhaulAddress {
	return v.value
}

func (v *NullableBackhaulAddress) Set(val *BackhaulAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableBackhaulAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableBackhaulAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBackhaulAddress(val *BackhaulAddress) *NullableBackhaulAddress {
	return &NullableBackhaulAddress{value: val, isSet: true}
}

func (v NullableBackhaulAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBackhaulAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


