/*
Naf_ProSe API

Naf_ProSe Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Naf_ProSe

import (
	"encoding/json"
	"fmt"
)

// AuthRequestType Possible values are: - OPEN_DISCOVERY_EXTENSION_ANNOUNCE: Indicates that the Authorization Request Type is open discovery with application-controlled extension/announce. - RESTRICTED_DISCOVERY_ANNOUNCE: Indicates that the Authorization Request Type is restricted discovery/announce. - RESTRICTED_DISCOVERY_EXTENSION_ANNOUNCE: Indicates that the Authorization Request Type is restricted discovery with application-controlled extension/announce. - OPEN_DISCOVERY_EXTENSION_MONITOR: Indicates that the Authorization Request Type is open discovery with application-controlled extension/monitor. - RESTRICTED_DISCOVERY_MONITOR: Indicates that the Authorization Request Type is restricted discovery/monitor. - RESTRICTED_DISCOVERY_EXTENSION_MONITOR: Indicates that the Authorization Request Type is restricted discovery with application-controlled extension/monitor. - RESTRICTED_DISCOVERY_PERMISSION: Indicates that the Authorization Request Type is restricted discovery/permission. - RESTRICTED_DISCOVERY_RESPONSE: Indicates that the Authorization Request Type is restricted discovery/response. - RESTRICTED_DISCOVERY_QUERY: Indicates that the Authorization Request Type is restricted discovery/query. - RESTRICTED_DISCOVERY_MATCH: Indicates that the Authorization Request Type is restricted discovery/match. 
type AuthRequestType struct {
	AuthRequestTypeAnyOf *AuthRequestTypeAnyOf
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *AuthRequestType) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AuthRequestTypeAnyOf
	err = json.Unmarshal(data, &dst.AuthRequestTypeAnyOf);
	if err == nil {
		jsonAuthRequestTypeAnyOf, _ := json.Marshal(dst.AuthRequestTypeAnyOf)
		if string(jsonAuthRequestTypeAnyOf) == "{}" { // empty struct
			dst.AuthRequestTypeAnyOf = nil
		} else {
			return nil // data stored in dst.AuthRequestTypeAnyOf, return on the first match
		}
	} else {
		dst.AuthRequestTypeAnyOf = nil
	}

	// try to unmarshal JSON data into string
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(AuthRequestType)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *AuthRequestType) MarshalJSON() ([]byte, error) {
	if src.AuthRequestTypeAnyOf != nil {
		return json.Marshal(&src.AuthRequestTypeAnyOf)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableAuthRequestType struct {
	value *AuthRequestType
	isSet bool
}

func (v NullableAuthRequestType) Get() *AuthRequestType {
	return v.value
}

func (v *NullableAuthRequestType) Set(val *AuthRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthRequestType(val *AuthRequestType) *NullableAuthRequestType {
	return &NullableAuthRequestType{value: val, isSet: true}
}

func (v NullableAuthRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


