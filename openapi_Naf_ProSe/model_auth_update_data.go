/*
Naf_ProSe API

Naf_ProSe Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Naf_ProSe

import (
	"encoding/json"
)

// checks if the AuthUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthUpdateData{}

// AuthUpdateData Represents the update data and resulting update data of authorization information  for Restricted ProSe Direct Discovery. 
type AuthUpdateData struct {
	// Contains the RPAUID.
	TargetRpauid string `json:"targetRpauid"`
	BannedAuthData []BannedAuthData `json:"bannedAuthData"`
}

// NewAuthUpdateData instantiates a new AuthUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthUpdateData(targetRpauid string, bannedAuthData []BannedAuthData) *AuthUpdateData {
	this := AuthUpdateData{}
	this.TargetRpauid = targetRpauid
	this.BannedAuthData = bannedAuthData
	return &this
}

// NewAuthUpdateDataWithDefaults instantiates a new AuthUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthUpdateDataWithDefaults() *AuthUpdateData {
	this := AuthUpdateData{}
	return &this
}

// GetTargetRpauid returns the TargetRpauid field value
func (o *AuthUpdateData) GetTargetRpauid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetRpauid
}

// GetTargetRpauidOk returns a tuple with the TargetRpauid field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateData) GetTargetRpauidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetRpauid, true
}

// SetTargetRpauid sets field value
func (o *AuthUpdateData) SetTargetRpauid(v string) {
	o.TargetRpauid = v
}

// GetBannedAuthData returns the BannedAuthData field value
func (o *AuthUpdateData) GetBannedAuthData() []BannedAuthData {
	if o == nil {
		var ret []BannedAuthData
		return ret
	}

	return o.BannedAuthData
}

// GetBannedAuthDataOk returns a tuple with the BannedAuthData field value
// and a boolean to check if the value has been set.
func (o *AuthUpdateData) GetBannedAuthDataOk() ([]BannedAuthData, bool) {
	if o == nil {
		return nil, false
	}
	return o.BannedAuthData, true
}

// SetBannedAuthData sets field value
func (o *AuthUpdateData) SetBannedAuthData(v []BannedAuthData) {
	o.BannedAuthData = v
}

func (o AuthUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetRpauid"] = o.TargetRpauid
	toSerialize["bannedAuthData"] = o.BannedAuthData
	return toSerialize, nil
}

type NullableAuthUpdateData struct {
	value *AuthUpdateData
	isSet bool
}

func (v NullableAuthUpdateData) Get() *AuthUpdateData {
	return v.value
}

func (v *NullableAuthUpdateData) Set(val *AuthUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthUpdateData(val *AuthUpdateData) *NullableAuthUpdateData {
	return &NullableAuthUpdateData{value: val, isSet: true}
}

func (v NullableAuthUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


