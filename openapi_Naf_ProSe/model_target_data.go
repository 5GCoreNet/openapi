/*
Naf_ProSe API

Naf_ProSe Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Naf_ProSe

import (
	"encoding/json"
)

// checks if the TargetData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TargetData{}

// TargetData Represents a set of Target PDUID - Target RPAUID - Metadata Indicator.
type TargetData struct {
	// Contains the RPAUID.
	TargetRpauid string `json:"targetRpauid"`
	// Contains the PDUID.
	Pduid string `json:"pduid"`
	MetadataIndic *MetadataIndic `json:"metadataIndic,omitempty"`
}

// NewTargetData instantiates a new TargetData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTargetData(targetRpauid string, pduid string) *TargetData {
	this := TargetData{}
	this.TargetRpauid = targetRpauid
	this.Pduid = pduid
	return &this
}

// NewTargetDataWithDefaults instantiates a new TargetData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTargetDataWithDefaults() *TargetData {
	this := TargetData{}
	return &this
}

// GetTargetRpauid returns the TargetRpauid field value
func (o *TargetData) GetTargetRpauid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetRpauid
}

// GetTargetRpauidOk returns a tuple with the TargetRpauid field value
// and a boolean to check if the value has been set.
func (o *TargetData) GetTargetRpauidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetRpauid, true
}

// SetTargetRpauid sets field value
func (o *TargetData) SetTargetRpauid(v string) {
	o.TargetRpauid = v
}

// GetPduid returns the Pduid field value
func (o *TargetData) GetPduid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Pduid
}

// GetPduidOk returns a tuple with the Pduid field value
// and a boolean to check if the value has been set.
func (o *TargetData) GetPduidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Pduid, true
}

// SetPduid sets field value
func (o *TargetData) SetPduid(v string) {
	o.Pduid = v
}

// GetMetadataIndic returns the MetadataIndic field value if set, zero value otherwise.
func (o *TargetData) GetMetadataIndic() MetadataIndic {
	if o == nil || isNil(o.MetadataIndic) {
		var ret MetadataIndic
		return ret
	}
	return *o.MetadataIndic
}

// GetMetadataIndicOk returns a tuple with the MetadataIndic field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TargetData) GetMetadataIndicOk() (*MetadataIndic, bool) {
	if o == nil || isNil(o.MetadataIndic) {
		return nil, false
	}
	return o.MetadataIndic, true
}

// HasMetadataIndic returns a boolean if a field has been set.
func (o *TargetData) HasMetadataIndic() bool {
	if o != nil && !isNil(o.MetadataIndic) {
		return true
	}

	return false
}

// SetMetadataIndic gets a reference to the given MetadataIndic and assigns it to the MetadataIndic field.
func (o *TargetData) SetMetadataIndic(v MetadataIndic) {
	o.MetadataIndic = &v
}

func (o TargetData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TargetData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetRpauid"] = o.TargetRpauid
	toSerialize["pduid"] = o.Pduid
	if !isNil(o.MetadataIndic) {
		toSerialize["metadataIndic"] = o.MetadataIndic
	}
	return toSerialize, nil
}

type NullableTargetData struct {
	value *TargetData
	isSet bool
}

func (v NullableTargetData) Get() *TargetData {
	return v.value
}

func (v *NullableTargetData) Set(val *TargetData) {
	v.value = val
	v.isSet = true
}

func (v NullableTargetData) IsSet() bool {
	return v.isSet
}

func (v *NullableTargetData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTargetData(val *TargetData) *NullableTargetData {
	return &NullableTargetData{value: val, isSet: true}
}

func (v NullableTargetData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTargetData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


