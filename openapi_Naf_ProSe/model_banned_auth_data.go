/*
Naf_ProSe API

Naf_ProSe Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Naf_ProSe

import (
	"encoding/json"
)

// checks if the BannedAuthData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BannedAuthData{}

// BannedAuthData Represents a set of Banned PDUID - Banned RPAUID.
type BannedAuthData struct {
	// Contains the RPAUID.
	BannedRpauid string `json:"bannedRpauid"`
	// Contains the PDUID.
	BannedPduid      string            `json:"bannedPduid"`
	RevocationResult *RevocationResult `json:"revocationResult,omitempty"`
}

// NewBannedAuthData instantiates a new BannedAuthData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBannedAuthData(bannedRpauid string, bannedPduid string) *BannedAuthData {
	this := BannedAuthData{}
	this.BannedRpauid = bannedRpauid
	this.BannedPduid = bannedPduid
	return &this
}

// NewBannedAuthDataWithDefaults instantiates a new BannedAuthData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBannedAuthDataWithDefaults() *BannedAuthData {
	this := BannedAuthData{}
	return &this
}

// GetBannedRpauid returns the BannedRpauid field value
func (o *BannedAuthData) GetBannedRpauid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedRpauid
}

// GetBannedRpauidOk returns a tuple with the BannedRpauid field value
// and a boolean to check if the value has been set.
func (o *BannedAuthData) GetBannedRpauidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedRpauid, true
}

// SetBannedRpauid sets field value
func (o *BannedAuthData) SetBannedRpauid(v string) {
	o.BannedRpauid = v
}

// GetBannedPduid returns the BannedPduid field value
func (o *BannedAuthData) GetBannedPduid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedPduid
}

// GetBannedPduidOk returns a tuple with the BannedPduid field value
// and a boolean to check if the value has been set.
func (o *BannedAuthData) GetBannedPduidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedPduid, true
}

// SetBannedPduid sets field value
func (o *BannedAuthData) SetBannedPduid(v string) {
	o.BannedPduid = v
}

// GetRevocationResult returns the RevocationResult field value if set, zero value otherwise.
func (o *BannedAuthData) GetRevocationResult() RevocationResult {
	if o == nil || IsNil(o.RevocationResult) {
		var ret RevocationResult
		return ret
	}
	return *o.RevocationResult
}

// GetRevocationResultOk returns a tuple with the RevocationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BannedAuthData) GetRevocationResultOk() (*RevocationResult, bool) {
	if o == nil || IsNil(o.RevocationResult) {
		return nil, false
	}
	return o.RevocationResult, true
}

// HasRevocationResult returns a boolean if a field has been set.
func (o *BannedAuthData) HasRevocationResult() bool {
	if o != nil && !IsNil(o.RevocationResult) {
		return true
	}

	return false
}

// SetRevocationResult gets a reference to the given RevocationResult and assigns it to the RevocationResult field.
func (o *BannedAuthData) SetRevocationResult(v RevocationResult) {
	o.RevocationResult = &v
}

func (o BannedAuthData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BannedAuthData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bannedRpauid"] = o.BannedRpauid
	toSerialize["bannedPduid"] = o.BannedPduid
	if !IsNil(o.RevocationResult) {
		toSerialize["revocationResult"] = o.RevocationResult
	}
	return toSerialize, nil
}

type NullableBannedAuthData struct {
	value *BannedAuthData
	isSet bool
}

func (v NullableBannedAuthData) Get() *BannedAuthData {
	return v.value
}

func (v *NullableBannedAuthData) Set(val *BannedAuthData) {
	v.value = val
	v.isSet = true
}

func (v NullableBannedAuthData) IsSet() bool {
	return v.isSet
}

func (v *NullableBannedAuthData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBannedAuthData(val *BannedAuthData) *NullableBannedAuthData {
	return &NullableBannedAuthData{value: val, isSet: true}
}

func (v NullableBannedAuthData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBannedAuthData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
