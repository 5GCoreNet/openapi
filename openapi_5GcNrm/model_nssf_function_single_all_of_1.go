/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GcNrm

import (
	"encoding/json"
)

// checks if the NssfFunctionSingleAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NssfFunctionSingleAllOf1{}

// NssfFunctionSingleAllOf1 struct for NssfFunctionSingleAllOf1
type NssfFunctionSingleAllOf1 struct {
	EPN22 []EPN22Single `json:"EP_N22,omitempty"`
	EPN31 []EPN31Single `json:"EP_N31,omitempty"`
}

// NewNssfFunctionSingleAllOf1 instantiates a new NssfFunctionSingleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNssfFunctionSingleAllOf1() *NssfFunctionSingleAllOf1 {
	this := NssfFunctionSingleAllOf1{}
	return &this
}

// NewNssfFunctionSingleAllOf1WithDefaults instantiates a new NssfFunctionSingleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNssfFunctionSingleAllOf1WithDefaults() *NssfFunctionSingleAllOf1 {
	this := NssfFunctionSingleAllOf1{}
	return &this
}

// GetEPN22 returns the EPN22 field value if set, zero value otherwise.
func (o *NssfFunctionSingleAllOf1) GetEPN22() []EPN22Single {
	if o == nil || isNil(o.EPN22) {
		var ret []EPN22Single
		return ret
	}
	return o.EPN22
}

// GetEPN22Ok returns a tuple with the EPN22 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NssfFunctionSingleAllOf1) GetEPN22Ok() ([]EPN22Single, bool) {
	if o == nil || isNil(o.EPN22) {
		return nil, false
	}
	return o.EPN22, true
}

// HasEPN22 returns a boolean if a field has been set.
func (o *NssfFunctionSingleAllOf1) HasEPN22() bool {
	if o != nil && !isNil(o.EPN22) {
		return true
	}

	return false
}

// SetEPN22 gets a reference to the given []EPN22Single and assigns it to the EPN22 field.
func (o *NssfFunctionSingleAllOf1) SetEPN22(v []EPN22Single) {
	o.EPN22 = v
}

// GetEPN31 returns the EPN31 field value if set, zero value otherwise.
func (o *NssfFunctionSingleAllOf1) GetEPN31() []EPN31Single {
	if o == nil || isNil(o.EPN31) {
		var ret []EPN31Single
		return ret
	}
	return o.EPN31
}

// GetEPN31Ok returns a tuple with the EPN31 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NssfFunctionSingleAllOf1) GetEPN31Ok() ([]EPN31Single, bool) {
	if o == nil || isNil(o.EPN31) {
		return nil, false
	}
	return o.EPN31, true
}

// HasEPN31 returns a boolean if a field has been set.
func (o *NssfFunctionSingleAllOf1) HasEPN31() bool {
	if o != nil && !isNil(o.EPN31) {
		return true
	}

	return false
}

// SetEPN31 gets a reference to the given []EPN31Single and assigns it to the EPN31 field.
func (o *NssfFunctionSingleAllOf1) SetEPN31(v []EPN31Single) {
	o.EPN31 = v
}

func (o NssfFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NssfFunctionSingleAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EPN22) {
		toSerialize["EP_N22"] = o.EPN22
	}
	if !isNil(o.EPN31) {
		toSerialize["EP_N31"] = o.EPN31
	}
	return toSerialize, nil
}

type NullableNssfFunctionSingleAllOf1 struct {
	value *NssfFunctionSingleAllOf1
	isSet bool
}

func (v NullableNssfFunctionSingleAllOf1) Get() *NssfFunctionSingleAllOf1 {
	return v.value
}

func (v *NullableNssfFunctionSingleAllOf1) Set(val *NssfFunctionSingleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableNssfFunctionSingleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableNssfFunctionSingleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNssfFunctionSingleAllOf1(val *NssfFunctionSingleAllOf1) *NullableNssfFunctionSingleAllOf1 {
	return &NullableNssfFunctionSingleAllOf1{value: val, isSet: true}
}

func (v NullableNssfFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNssfFunctionSingleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


