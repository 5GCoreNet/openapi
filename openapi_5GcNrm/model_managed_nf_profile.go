/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GcNrm

import (
	"encoding/json"
	"time"
)

// checks if the ManagedNFProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedNFProfile{}

// ManagedNFProfile struct for ManagedNFProfile
type ManagedNFProfile struct {
	NfInstanceID *string `json:"nfInstanceID,omitempty"`
	NfType *NFType `json:"nfType,omitempty"`
	HeartbeatTimer *int32 `json:"heartbeatTimer,omitempty"`
	AuthzInfo *string `json:"authzInfo,omitempty"`
	HostAddr *HostAddr `json:"hostAddr,omitempty"`
	AllowedPLMNs []PlmnId `json:"allowedPLMNs,omitempty"`
	AllowedSNPNs []SnpnInfo `json:"allowedSNPNs,omitempty"`
	AllowedNfTypes []NFType `json:"allowedNfTypes,omitempty"`
	AllowedNfDomains []string `json:"allowedNfDomains,omitempty"`
	AllowedNSSAIs []Snssai `json:"allowedNSSAIs,omitempty"`
	Locality *string `json:"locality,omitempty"`
	Capacity *int32 `json:"capacity,omitempty"`
	NfSetIdList []string `json:"nfSetIdList,omitempty"`
	ServingScope []string `json:"servingScope,omitempty"`
	LcHSupportInd *bool `json:"lcHSupportInd,omitempty"`
	OlcHSupportInd *bool `json:"olcHSupportInd,omitempty"`
	NfSetRecoveryTimeList []time.Time `json:"nfSetRecoveryTimeList,omitempty"`
	ScpDomains []string `json:"scpDomains,omitempty"`
	VendorId *string `json:"vendorId,omitempty"`
}

// NewManagedNFProfile instantiates a new ManagedNFProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedNFProfile() *ManagedNFProfile {
	this := ManagedNFProfile{}
	return &this
}

// NewManagedNFProfileWithDefaults instantiates a new ManagedNFProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedNFProfileWithDefaults() *ManagedNFProfile {
	this := ManagedNFProfile{}
	return &this
}

// GetNfInstanceID returns the NfInstanceID field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetNfInstanceID() string {
	if o == nil || IsNil(o.NfInstanceID) {
		var ret string
		return ret
	}
	return *o.NfInstanceID
}

// GetNfInstanceIDOk returns a tuple with the NfInstanceID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetNfInstanceIDOk() (*string, bool) {
	if o == nil || IsNil(o.NfInstanceID) {
		return nil, false
	}
	return o.NfInstanceID, true
}

// HasNfInstanceID returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasNfInstanceID() bool {
	if o != nil && !IsNil(o.NfInstanceID) {
		return true
	}

	return false
}

// SetNfInstanceID gets a reference to the given string and assigns it to the NfInstanceID field.
func (o *ManagedNFProfile) SetNfInstanceID(v string) {
	o.NfInstanceID = &v
}

// GetNfType returns the NfType field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetNfType() NFType {
	if o == nil || IsNil(o.NfType) {
		var ret NFType
		return ret
	}
	return *o.NfType
}

// GetNfTypeOk returns a tuple with the NfType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetNfTypeOk() (*NFType, bool) {
	if o == nil || IsNil(o.NfType) {
		return nil, false
	}
	return o.NfType, true
}

// HasNfType returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasNfType() bool {
	if o != nil && !IsNil(o.NfType) {
		return true
	}

	return false
}

// SetNfType gets a reference to the given NFType and assigns it to the NfType field.
func (o *ManagedNFProfile) SetNfType(v NFType) {
	o.NfType = &v
}

// GetHeartbeatTimer returns the HeartbeatTimer field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetHeartbeatTimer() int32 {
	if o == nil || IsNil(o.HeartbeatTimer) {
		var ret int32
		return ret
	}
	return *o.HeartbeatTimer
}

// GetHeartbeatTimerOk returns a tuple with the HeartbeatTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetHeartbeatTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.HeartbeatTimer) {
		return nil, false
	}
	return o.HeartbeatTimer, true
}

// HasHeartbeatTimer returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasHeartbeatTimer() bool {
	if o != nil && !IsNil(o.HeartbeatTimer) {
		return true
	}

	return false
}

// SetHeartbeatTimer gets a reference to the given int32 and assigns it to the HeartbeatTimer field.
func (o *ManagedNFProfile) SetHeartbeatTimer(v int32) {
	o.HeartbeatTimer = &v
}

// GetAuthzInfo returns the AuthzInfo field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAuthzInfo() string {
	if o == nil || IsNil(o.AuthzInfo) {
		var ret string
		return ret
	}
	return *o.AuthzInfo
}

// GetAuthzInfoOk returns a tuple with the AuthzInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAuthzInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AuthzInfo) {
		return nil, false
	}
	return o.AuthzInfo, true
}

// HasAuthzInfo returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAuthzInfo() bool {
	if o != nil && !IsNil(o.AuthzInfo) {
		return true
	}

	return false
}

// SetAuthzInfo gets a reference to the given string and assigns it to the AuthzInfo field.
func (o *ManagedNFProfile) SetAuthzInfo(v string) {
	o.AuthzInfo = &v
}

// GetHostAddr returns the HostAddr field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetHostAddr() HostAddr {
	if o == nil || IsNil(o.HostAddr) {
		var ret HostAddr
		return ret
	}
	return *o.HostAddr
}

// GetHostAddrOk returns a tuple with the HostAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetHostAddrOk() (*HostAddr, bool) {
	if o == nil || IsNil(o.HostAddr) {
		return nil, false
	}
	return o.HostAddr, true
}

// HasHostAddr returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasHostAddr() bool {
	if o != nil && !IsNil(o.HostAddr) {
		return true
	}

	return false
}

// SetHostAddr gets a reference to the given HostAddr and assigns it to the HostAddr field.
func (o *ManagedNFProfile) SetHostAddr(v HostAddr) {
	o.HostAddr = &v
}

// GetAllowedPLMNs returns the AllowedPLMNs field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAllowedPLMNs() []PlmnId {
	if o == nil || IsNil(o.AllowedPLMNs) {
		var ret []PlmnId
		return ret
	}
	return o.AllowedPLMNs
}

// GetAllowedPLMNsOk returns a tuple with the AllowedPLMNs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAllowedPLMNsOk() ([]PlmnId, bool) {
	if o == nil || IsNil(o.AllowedPLMNs) {
		return nil, false
	}
	return o.AllowedPLMNs, true
}

// HasAllowedPLMNs returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAllowedPLMNs() bool {
	if o != nil && !IsNil(o.AllowedPLMNs) {
		return true
	}

	return false
}

// SetAllowedPLMNs gets a reference to the given []PlmnId and assigns it to the AllowedPLMNs field.
func (o *ManagedNFProfile) SetAllowedPLMNs(v []PlmnId) {
	o.AllowedPLMNs = v
}

// GetAllowedSNPNs returns the AllowedSNPNs field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAllowedSNPNs() []SnpnInfo {
	if o == nil || IsNil(o.AllowedSNPNs) {
		var ret []SnpnInfo
		return ret
	}
	return o.AllowedSNPNs
}

// GetAllowedSNPNsOk returns a tuple with the AllowedSNPNs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAllowedSNPNsOk() ([]SnpnInfo, bool) {
	if o == nil || IsNil(o.AllowedSNPNs) {
		return nil, false
	}
	return o.AllowedSNPNs, true
}

// HasAllowedSNPNs returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAllowedSNPNs() bool {
	if o != nil && !IsNil(o.AllowedSNPNs) {
		return true
	}

	return false
}

// SetAllowedSNPNs gets a reference to the given []SnpnInfo and assigns it to the AllowedSNPNs field.
func (o *ManagedNFProfile) SetAllowedSNPNs(v []SnpnInfo) {
	o.AllowedSNPNs = v
}

// GetAllowedNfTypes returns the AllowedNfTypes field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAllowedNfTypes() []NFType {
	if o == nil || IsNil(o.AllowedNfTypes) {
		var ret []NFType
		return ret
	}
	return o.AllowedNfTypes
}

// GetAllowedNfTypesOk returns a tuple with the AllowedNfTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAllowedNfTypesOk() ([]NFType, bool) {
	if o == nil || IsNil(o.AllowedNfTypes) {
		return nil, false
	}
	return o.AllowedNfTypes, true
}

// HasAllowedNfTypes returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAllowedNfTypes() bool {
	if o != nil && !IsNil(o.AllowedNfTypes) {
		return true
	}

	return false
}

// SetAllowedNfTypes gets a reference to the given []NFType and assigns it to the AllowedNfTypes field.
func (o *ManagedNFProfile) SetAllowedNfTypes(v []NFType) {
	o.AllowedNfTypes = v
}

// GetAllowedNfDomains returns the AllowedNfDomains field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAllowedNfDomains() []string {
	if o == nil || IsNil(o.AllowedNfDomains) {
		var ret []string
		return ret
	}
	return o.AllowedNfDomains
}

// GetAllowedNfDomainsOk returns a tuple with the AllowedNfDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAllowedNfDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.AllowedNfDomains) {
		return nil, false
	}
	return o.AllowedNfDomains, true
}

// HasAllowedNfDomains returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAllowedNfDomains() bool {
	if o != nil && !IsNil(o.AllowedNfDomains) {
		return true
	}

	return false
}

// SetAllowedNfDomains gets a reference to the given []string and assigns it to the AllowedNfDomains field.
func (o *ManagedNFProfile) SetAllowedNfDomains(v []string) {
	o.AllowedNfDomains = v
}

// GetAllowedNSSAIs returns the AllowedNSSAIs field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetAllowedNSSAIs() []Snssai {
	if o == nil || IsNil(o.AllowedNSSAIs) {
		var ret []Snssai
		return ret
	}
	return o.AllowedNSSAIs
}

// GetAllowedNSSAIsOk returns a tuple with the AllowedNSSAIs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetAllowedNSSAIsOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.AllowedNSSAIs) {
		return nil, false
	}
	return o.AllowedNSSAIs, true
}

// HasAllowedNSSAIs returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasAllowedNSSAIs() bool {
	if o != nil && !IsNil(o.AllowedNSSAIs) {
		return true
	}

	return false
}

// SetAllowedNSSAIs gets a reference to the given []Snssai and assigns it to the AllowedNSSAIs field.
func (o *ManagedNFProfile) SetAllowedNSSAIs(v []Snssai) {
	o.AllowedNSSAIs = v
}

// GetLocality returns the Locality field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetLocality() string {
	if o == nil || IsNil(o.Locality) {
		var ret string
		return ret
	}
	return *o.Locality
}

// GetLocalityOk returns a tuple with the Locality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetLocalityOk() (*string, bool) {
	if o == nil || IsNil(o.Locality) {
		return nil, false
	}
	return o.Locality, true
}

// HasLocality returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasLocality() bool {
	if o != nil && !IsNil(o.Locality) {
		return true
	}

	return false
}

// SetLocality gets a reference to the given string and assigns it to the Locality field.
func (o *ManagedNFProfile) SetLocality(v string) {
	o.Locality = &v
}

// GetCapacity returns the Capacity field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetCapacity() int32 {
	if o == nil || IsNil(o.Capacity) {
		var ret int32
		return ret
	}
	return *o.Capacity
}

// GetCapacityOk returns a tuple with the Capacity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetCapacityOk() (*int32, bool) {
	if o == nil || IsNil(o.Capacity) {
		return nil, false
	}
	return o.Capacity, true
}

// HasCapacity returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasCapacity() bool {
	if o != nil && !IsNil(o.Capacity) {
		return true
	}

	return false
}

// SetCapacity gets a reference to the given int32 and assigns it to the Capacity field.
func (o *ManagedNFProfile) SetCapacity(v int32) {
	o.Capacity = &v
}

// GetNfSetIdList returns the NfSetIdList field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetNfSetIdList() []string {
	if o == nil || IsNil(o.NfSetIdList) {
		var ret []string
		return ret
	}
	return o.NfSetIdList
}

// GetNfSetIdListOk returns a tuple with the NfSetIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetNfSetIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.NfSetIdList) {
		return nil, false
	}
	return o.NfSetIdList, true
}

// HasNfSetIdList returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasNfSetIdList() bool {
	if o != nil && !IsNil(o.NfSetIdList) {
		return true
	}

	return false
}

// SetNfSetIdList gets a reference to the given []string and assigns it to the NfSetIdList field.
func (o *ManagedNFProfile) SetNfSetIdList(v []string) {
	o.NfSetIdList = v
}

// GetServingScope returns the ServingScope field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetServingScope() []string {
	if o == nil || IsNil(o.ServingScope) {
		var ret []string
		return ret
	}
	return o.ServingScope
}

// GetServingScopeOk returns a tuple with the ServingScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetServingScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.ServingScope) {
		return nil, false
	}
	return o.ServingScope, true
}

// HasServingScope returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasServingScope() bool {
	if o != nil && !IsNil(o.ServingScope) {
		return true
	}

	return false
}

// SetServingScope gets a reference to the given []string and assigns it to the ServingScope field.
func (o *ManagedNFProfile) SetServingScope(v []string) {
	o.ServingScope = v
}

// GetLcHSupportInd returns the LcHSupportInd field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetLcHSupportInd() bool {
	if o == nil || IsNil(o.LcHSupportInd) {
		var ret bool
		return ret
	}
	return *o.LcHSupportInd
}

// GetLcHSupportIndOk returns a tuple with the LcHSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetLcHSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.LcHSupportInd) {
		return nil, false
	}
	return o.LcHSupportInd, true
}

// HasLcHSupportInd returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasLcHSupportInd() bool {
	if o != nil && !IsNil(o.LcHSupportInd) {
		return true
	}

	return false
}

// SetLcHSupportInd gets a reference to the given bool and assigns it to the LcHSupportInd field.
func (o *ManagedNFProfile) SetLcHSupportInd(v bool) {
	o.LcHSupportInd = &v
}

// GetOlcHSupportInd returns the OlcHSupportInd field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetOlcHSupportInd() bool {
	if o == nil || IsNil(o.OlcHSupportInd) {
		var ret bool
		return ret
	}
	return *o.OlcHSupportInd
}

// GetOlcHSupportIndOk returns a tuple with the OlcHSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetOlcHSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.OlcHSupportInd) {
		return nil, false
	}
	return o.OlcHSupportInd, true
}

// HasOlcHSupportInd returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasOlcHSupportInd() bool {
	if o != nil && !IsNil(o.OlcHSupportInd) {
		return true
	}

	return false
}

// SetOlcHSupportInd gets a reference to the given bool and assigns it to the OlcHSupportInd field.
func (o *ManagedNFProfile) SetOlcHSupportInd(v bool) {
	o.OlcHSupportInd = &v
}

// GetNfSetRecoveryTimeList returns the NfSetRecoveryTimeList field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetNfSetRecoveryTimeList() []time.Time {
	if o == nil || IsNil(o.NfSetRecoveryTimeList) {
		var ret []time.Time
		return ret
	}
	return o.NfSetRecoveryTimeList
}

// GetNfSetRecoveryTimeListOk returns a tuple with the NfSetRecoveryTimeList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetNfSetRecoveryTimeListOk() ([]time.Time, bool) {
	if o == nil || IsNil(o.NfSetRecoveryTimeList) {
		return nil, false
	}
	return o.NfSetRecoveryTimeList, true
}

// HasNfSetRecoveryTimeList returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasNfSetRecoveryTimeList() bool {
	if o != nil && !IsNil(o.NfSetRecoveryTimeList) {
		return true
	}

	return false
}

// SetNfSetRecoveryTimeList gets a reference to the given []time.Time and assigns it to the NfSetRecoveryTimeList field.
func (o *ManagedNFProfile) SetNfSetRecoveryTimeList(v []time.Time) {
	o.NfSetRecoveryTimeList = v
}

// GetScpDomains returns the ScpDomains field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetScpDomains() []string {
	if o == nil || IsNil(o.ScpDomains) {
		var ret []string
		return ret
	}
	return o.ScpDomains
}

// GetScpDomainsOk returns a tuple with the ScpDomains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetScpDomainsOk() ([]string, bool) {
	if o == nil || IsNil(o.ScpDomains) {
		return nil, false
	}
	return o.ScpDomains, true
}

// HasScpDomains returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasScpDomains() bool {
	if o != nil && !IsNil(o.ScpDomains) {
		return true
	}

	return false
}

// SetScpDomains gets a reference to the given []string and assigns it to the ScpDomains field.
func (o *ManagedNFProfile) SetScpDomains(v []string) {
	o.ScpDomains = v
}

// GetVendorId returns the VendorId field value if set, zero value otherwise.
func (o *ManagedNFProfile) GetVendorId() string {
	if o == nil || IsNil(o.VendorId) {
		var ret string
		return ret
	}
	return *o.VendorId
}

// GetVendorIdOk returns a tuple with the VendorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedNFProfile) GetVendorIdOk() (*string, bool) {
	if o == nil || IsNil(o.VendorId) {
		return nil, false
	}
	return o.VendorId, true
}

// HasVendorId returns a boolean if a field has been set.
func (o *ManagedNFProfile) HasVendorId() bool {
	if o != nil && !IsNil(o.VendorId) {
		return true
	}

	return false
}

// SetVendorId gets a reference to the given string and assigns it to the VendorId field.
func (o *ManagedNFProfile) SetVendorId(v string) {
	o.VendorId = &v
}

func (o ManagedNFProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedNFProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NfInstanceID) {
		toSerialize["nfInstanceID"] = o.NfInstanceID
	}
	if !IsNil(o.NfType) {
		toSerialize["nfType"] = o.NfType
	}
	if !IsNil(o.HeartbeatTimer) {
		toSerialize["heartbeatTimer"] = o.HeartbeatTimer
	}
	if !IsNil(o.AuthzInfo) {
		toSerialize["authzInfo"] = o.AuthzInfo
	}
	if !IsNil(o.HostAddr) {
		toSerialize["hostAddr"] = o.HostAddr
	}
	if !IsNil(o.AllowedPLMNs) {
		toSerialize["allowedPLMNs"] = o.AllowedPLMNs
	}
	if !IsNil(o.AllowedSNPNs) {
		toSerialize["allowedSNPNs"] = o.AllowedSNPNs
	}
	if !IsNil(o.AllowedNfTypes) {
		toSerialize["allowedNfTypes"] = o.AllowedNfTypes
	}
	if !IsNil(o.AllowedNfDomains) {
		toSerialize["allowedNfDomains"] = o.AllowedNfDomains
	}
	if !IsNil(o.AllowedNSSAIs) {
		toSerialize["allowedNSSAIs"] = o.AllowedNSSAIs
	}
	if !IsNil(o.Locality) {
		toSerialize["locality"] = o.Locality
	}
	if !IsNil(o.Capacity) {
		toSerialize["capacity"] = o.Capacity
	}
	if !IsNil(o.NfSetIdList) {
		toSerialize["nfSetIdList"] = o.NfSetIdList
	}
	if !IsNil(o.ServingScope) {
		toSerialize["servingScope"] = o.ServingScope
	}
	if !IsNil(o.LcHSupportInd) {
		toSerialize["lcHSupportInd"] = o.LcHSupportInd
	}
	if !IsNil(o.OlcHSupportInd) {
		toSerialize["olcHSupportInd"] = o.OlcHSupportInd
	}
	if !IsNil(o.NfSetRecoveryTimeList) {
		toSerialize["nfSetRecoveryTimeList"] = o.NfSetRecoveryTimeList
	}
	if !IsNil(o.ScpDomains) {
		toSerialize["scpDomains"] = o.ScpDomains
	}
	if !IsNil(o.VendorId) {
		toSerialize["vendorId"] = o.VendorId
	}
	return toSerialize, nil
}

type NullableManagedNFProfile struct {
	value *ManagedNFProfile
	isSet bool
}

func (v NullableManagedNFProfile) Get() *ManagedNFProfile {
	return v.value
}

func (v *NullableManagedNFProfile) Set(val *ManagedNFProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedNFProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedNFProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedNFProfile(val *ManagedNFProfile) *NullableManagedNFProfile {
	return &NullableManagedNFProfile{value: val, isSet: true}
}

func (v NullableManagedNFProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedNFProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


