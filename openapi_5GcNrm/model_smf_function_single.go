/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GcNrm

import (
	"encoding/json"
)

// checks if the SmfFunctionSingle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmfFunctionSingle{}

// SmfFunctionSingle struct for SmfFunctionSingle
type SmfFunctionSingle struct {
	Id NullableString `json:"id"`
	ObjectClass *string `json:"objectClass,omitempty"`
	ObjectInstance *string `json:"objectInstance,omitempty"`
	VsDataContainer []VsDataContainerSingle `json:"VsDataContainer,omitempty"`
	Attributes *SmfFunctionSingleAllOfAttributes `json:"attributes,omitempty"`
	PerfMetricJob []PerfMetricJobSingle `json:"PerfMetricJob,omitempty"`
	ThresholdMonitor []ThresholdMonitorSingle `json:"ThresholdMonitor,omitempty"`
	ManagedNFService []ManagedNFServiceSingle `json:"ManagedNFService,omitempty"`
	TraceJob []TraceJobSingle `json:"TraceJob,omitempty"`
	EPN4 []EPN4Single `json:"EP_N4,omitempty"`
	EPN7 []EPN7Single `json:"EP_N7,omitempty"`
	EPN10 []EPN10Single `json:"EP_N10,omitempty"`
	EPN11 []EPN11Single `json:"EP_N11,omitempty"`
	EPN16 []EPN16Single `json:"EP_N16,omitempty"`
	EPS5C []EPS5CSingle `json:"EP_S5C,omitempty"`
	FiveQiDscpMappingSet *FiveQiDscpMappingSetSingle `json:"FiveQiDscpMappingSet,omitempty"`
	GtpUPathQoSMonitoringControl *GtpUPathQoSMonitoringControlSingle `json:"GtpUPathQoSMonitoringControl,omitempty"`
	QFQoSMonitoringControl *QFQoSMonitoringControlSingle `json:"QFQoSMonitoringControl,omitempty"`
	PredefinedPccRuleSet *PredefinedPccRuleSetSingle `json:"PredefinedPccRuleSet,omitempty"`
}

// NewSmfFunctionSingle instantiates a new SmfFunctionSingle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmfFunctionSingle(id NullableString) *SmfFunctionSingle {
	this := SmfFunctionSingle{}
	this.Id = id
	return &this
}

// NewSmfFunctionSingleWithDefaults instantiates a new SmfFunctionSingle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmfFunctionSingleWithDefaults() *SmfFunctionSingle {
	this := SmfFunctionSingle{}
	return &this
}

// GetId returns the Id field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SmfFunctionSingle) GetId() string {
	if o == nil || o.Id.Get() == nil {
		var ret string
		return ret
	}

	return *o.Id.Get()
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SmfFunctionSingle) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Id.Get(), o.Id.IsSet()
}

// SetId sets field value
func (o *SmfFunctionSingle) SetId(v string) {
	o.Id.Set(&v)
}

// GetObjectClass returns the ObjectClass field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetObjectClass() string {
	if o == nil || IsNil(o.ObjectClass) {
		var ret string
		return ret
	}
	return *o.ObjectClass
}

// GetObjectClassOk returns a tuple with the ObjectClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetObjectClassOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectClass) {
		return nil, false
	}
	return o.ObjectClass, true
}

// HasObjectClass returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasObjectClass() bool {
	if o != nil && !IsNil(o.ObjectClass) {
		return true
	}

	return false
}

// SetObjectClass gets a reference to the given string and assigns it to the ObjectClass field.
func (o *SmfFunctionSingle) SetObjectClass(v string) {
	o.ObjectClass = &v
}

// GetObjectInstance returns the ObjectInstance field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetObjectInstance() string {
	if o == nil || IsNil(o.ObjectInstance) {
		var ret string
		return ret
	}
	return *o.ObjectInstance
}

// GetObjectInstanceOk returns a tuple with the ObjectInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetObjectInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.ObjectInstance) {
		return nil, false
	}
	return o.ObjectInstance, true
}

// HasObjectInstance returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasObjectInstance() bool {
	if o != nil && !IsNil(o.ObjectInstance) {
		return true
	}

	return false
}

// SetObjectInstance gets a reference to the given string and assigns it to the ObjectInstance field.
func (o *SmfFunctionSingle) SetObjectInstance(v string) {
	o.ObjectInstance = &v
}

// GetVsDataContainer returns the VsDataContainer field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetVsDataContainer() []VsDataContainerSingle {
	if o == nil || IsNil(o.VsDataContainer) {
		var ret []VsDataContainerSingle
		return ret
	}
	return o.VsDataContainer
}

// GetVsDataContainerOk returns a tuple with the VsDataContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetVsDataContainerOk() ([]VsDataContainerSingle, bool) {
	if o == nil || IsNil(o.VsDataContainer) {
		return nil, false
	}
	return o.VsDataContainer, true
}

// HasVsDataContainer returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasVsDataContainer() bool {
	if o != nil && !IsNil(o.VsDataContainer) {
		return true
	}

	return false
}

// SetVsDataContainer gets a reference to the given []VsDataContainerSingle and assigns it to the VsDataContainer field.
func (o *SmfFunctionSingle) SetVsDataContainer(v []VsDataContainerSingle) {
	o.VsDataContainer = v
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetAttributes() SmfFunctionSingleAllOfAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret SmfFunctionSingleAllOfAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetAttributesOk() (*SmfFunctionSingleAllOfAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given SmfFunctionSingleAllOfAttributes and assigns it to the Attributes field.
func (o *SmfFunctionSingle) SetAttributes(v SmfFunctionSingleAllOfAttributes) {
	o.Attributes = &v
}

// GetPerfMetricJob returns the PerfMetricJob field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetPerfMetricJob() []PerfMetricJobSingle {
	if o == nil || IsNil(o.PerfMetricJob) {
		var ret []PerfMetricJobSingle
		return ret
	}
	return o.PerfMetricJob
}

// GetPerfMetricJobOk returns a tuple with the PerfMetricJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetPerfMetricJobOk() ([]PerfMetricJobSingle, bool) {
	if o == nil || IsNil(o.PerfMetricJob) {
		return nil, false
	}
	return o.PerfMetricJob, true
}

// HasPerfMetricJob returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasPerfMetricJob() bool {
	if o != nil && !IsNil(o.PerfMetricJob) {
		return true
	}

	return false
}

// SetPerfMetricJob gets a reference to the given []PerfMetricJobSingle and assigns it to the PerfMetricJob field.
func (o *SmfFunctionSingle) SetPerfMetricJob(v []PerfMetricJobSingle) {
	o.PerfMetricJob = v
}

// GetThresholdMonitor returns the ThresholdMonitor field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetThresholdMonitor() []ThresholdMonitorSingle {
	if o == nil || IsNil(o.ThresholdMonitor) {
		var ret []ThresholdMonitorSingle
		return ret
	}
	return o.ThresholdMonitor
}

// GetThresholdMonitorOk returns a tuple with the ThresholdMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetThresholdMonitorOk() ([]ThresholdMonitorSingle, bool) {
	if o == nil || IsNil(o.ThresholdMonitor) {
		return nil, false
	}
	return o.ThresholdMonitor, true
}

// HasThresholdMonitor returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasThresholdMonitor() bool {
	if o != nil && !IsNil(o.ThresholdMonitor) {
		return true
	}

	return false
}

// SetThresholdMonitor gets a reference to the given []ThresholdMonitorSingle and assigns it to the ThresholdMonitor field.
func (o *SmfFunctionSingle) SetThresholdMonitor(v []ThresholdMonitorSingle) {
	o.ThresholdMonitor = v
}

// GetManagedNFService returns the ManagedNFService field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetManagedNFService() []ManagedNFServiceSingle {
	if o == nil || IsNil(o.ManagedNFService) {
		var ret []ManagedNFServiceSingle
		return ret
	}
	return o.ManagedNFService
}

// GetManagedNFServiceOk returns a tuple with the ManagedNFService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetManagedNFServiceOk() ([]ManagedNFServiceSingle, bool) {
	if o == nil || IsNil(o.ManagedNFService) {
		return nil, false
	}
	return o.ManagedNFService, true
}

// HasManagedNFService returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasManagedNFService() bool {
	if o != nil && !IsNil(o.ManagedNFService) {
		return true
	}

	return false
}

// SetManagedNFService gets a reference to the given []ManagedNFServiceSingle and assigns it to the ManagedNFService field.
func (o *SmfFunctionSingle) SetManagedNFService(v []ManagedNFServiceSingle) {
	o.ManagedNFService = v
}

// GetTraceJob returns the TraceJob field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetTraceJob() []TraceJobSingle {
	if o == nil || IsNil(o.TraceJob) {
		var ret []TraceJobSingle
		return ret
	}
	return o.TraceJob
}

// GetTraceJobOk returns a tuple with the TraceJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetTraceJobOk() ([]TraceJobSingle, bool) {
	if o == nil || IsNil(o.TraceJob) {
		return nil, false
	}
	return o.TraceJob, true
}

// HasTraceJob returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasTraceJob() bool {
	if o != nil && !IsNil(o.TraceJob) {
		return true
	}

	return false
}

// SetTraceJob gets a reference to the given []TraceJobSingle and assigns it to the TraceJob field.
func (o *SmfFunctionSingle) SetTraceJob(v []TraceJobSingle) {
	o.TraceJob = v
}

// GetEPN4 returns the EPN4 field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPN4() []EPN4Single {
	if o == nil || IsNil(o.EPN4) {
		var ret []EPN4Single
		return ret
	}
	return o.EPN4
}

// GetEPN4Ok returns a tuple with the EPN4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPN4Ok() ([]EPN4Single, bool) {
	if o == nil || IsNil(o.EPN4) {
		return nil, false
	}
	return o.EPN4, true
}

// HasEPN4 returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPN4() bool {
	if o != nil && !IsNil(o.EPN4) {
		return true
	}

	return false
}

// SetEPN4 gets a reference to the given []EPN4Single and assigns it to the EPN4 field.
func (o *SmfFunctionSingle) SetEPN4(v []EPN4Single) {
	o.EPN4 = v
}

// GetEPN7 returns the EPN7 field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPN7() []EPN7Single {
	if o == nil || IsNil(o.EPN7) {
		var ret []EPN7Single
		return ret
	}
	return o.EPN7
}

// GetEPN7Ok returns a tuple with the EPN7 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPN7Ok() ([]EPN7Single, bool) {
	if o == nil || IsNil(o.EPN7) {
		return nil, false
	}
	return o.EPN7, true
}

// HasEPN7 returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPN7() bool {
	if o != nil && !IsNil(o.EPN7) {
		return true
	}

	return false
}

// SetEPN7 gets a reference to the given []EPN7Single and assigns it to the EPN7 field.
func (o *SmfFunctionSingle) SetEPN7(v []EPN7Single) {
	o.EPN7 = v
}

// GetEPN10 returns the EPN10 field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPN10() []EPN10Single {
	if o == nil || IsNil(o.EPN10) {
		var ret []EPN10Single
		return ret
	}
	return o.EPN10
}

// GetEPN10Ok returns a tuple with the EPN10 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPN10Ok() ([]EPN10Single, bool) {
	if o == nil || IsNil(o.EPN10) {
		return nil, false
	}
	return o.EPN10, true
}

// HasEPN10 returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPN10() bool {
	if o != nil && !IsNil(o.EPN10) {
		return true
	}

	return false
}

// SetEPN10 gets a reference to the given []EPN10Single and assigns it to the EPN10 field.
func (o *SmfFunctionSingle) SetEPN10(v []EPN10Single) {
	o.EPN10 = v
}

// GetEPN11 returns the EPN11 field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPN11() []EPN11Single {
	if o == nil || IsNil(o.EPN11) {
		var ret []EPN11Single
		return ret
	}
	return o.EPN11
}

// GetEPN11Ok returns a tuple with the EPN11 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPN11Ok() ([]EPN11Single, bool) {
	if o == nil || IsNil(o.EPN11) {
		return nil, false
	}
	return o.EPN11, true
}

// HasEPN11 returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPN11() bool {
	if o != nil && !IsNil(o.EPN11) {
		return true
	}

	return false
}

// SetEPN11 gets a reference to the given []EPN11Single and assigns it to the EPN11 field.
func (o *SmfFunctionSingle) SetEPN11(v []EPN11Single) {
	o.EPN11 = v
}

// GetEPN16 returns the EPN16 field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPN16() []EPN16Single {
	if o == nil || IsNil(o.EPN16) {
		var ret []EPN16Single
		return ret
	}
	return o.EPN16
}

// GetEPN16Ok returns a tuple with the EPN16 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPN16Ok() ([]EPN16Single, bool) {
	if o == nil || IsNil(o.EPN16) {
		return nil, false
	}
	return o.EPN16, true
}

// HasEPN16 returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPN16() bool {
	if o != nil && !IsNil(o.EPN16) {
		return true
	}

	return false
}

// SetEPN16 gets a reference to the given []EPN16Single and assigns it to the EPN16 field.
func (o *SmfFunctionSingle) SetEPN16(v []EPN16Single) {
	o.EPN16 = v
}

// GetEPS5C returns the EPS5C field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetEPS5C() []EPS5CSingle {
	if o == nil || IsNil(o.EPS5C) {
		var ret []EPS5CSingle
		return ret
	}
	return o.EPS5C
}

// GetEPS5COk returns a tuple with the EPS5C field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetEPS5COk() ([]EPS5CSingle, bool) {
	if o == nil || IsNil(o.EPS5C) {
		return nil, false
	}
	return o.EPS5C, true
}

// HasEPS5C returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasEPS5C() bool {
	if o != nil && !IsNil(o.EPS5C) {
		return true
	}

	return false
}

// SetEPS5C gets a reference to the given []EPS5CSingle and assigns it to the EPS5C field.
func (o *SmfFunctionSingle) SetEPS5C(v []EPS5CSingle) {
	o.EPS5C = v
}

// GetFiveQiDscpMappingSet returns the FiveQiDscpMappingSet field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetFiveQiDscpMappingSet() FiveQiDscpMappingSetSingle {
	if o == nil || IsNil(o.FiveQiDscpMappingSet) {
		var ret FiveQiDscpMappingSetSingle
		return ret
	}
	return *o.FiveQiDscpMappingSet
}

// GetFiveQiDscpMappingSetOk returns a tuple with the FiveQiDscpMappingSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetFiveQiDscpMappingSetOk() (*FiveQiDscpMappingSetSingle, bool) {
	if o == nil || IsNil(o.FiveQiDscpMappingSet) {
		return nil, false
	}
	return o.FiveQiDscpMappingSet, true
}

// HasFiveQiDscpMappingSet returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasFiveQiDscpMappingSet() bool {
	if o != nil && !IsNil(o.FiveQiDscpMappingSet) {
		return true
	}

	return false
}

// SetFiveQiDscpMappingSet gets a reference to the given FiveQiDscpMappingSetSingle and assigns it to the FiveQiDscpMappingSet field.
func (o *SmfFunctionSingle) SetFiveQiDscpMappingSet(v FiveQiDscpMappingSetSingle) {
	o.FiveQiDscpMappingSet = &v
}

// GetGtpUPathQoSMonitoringControl returns the GtpUPathQoSMonitoringControl field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetGtpUPathQoSMonitoringControl() GtpUPathQoSMonitoringControlSingle {
	if o == nil || IsNil(o.GtpUPathQoSMonitoringControl) {
		var ret GtpUPathQoSMonitoringControlSingle
		return ret
	}
	return *o.GtpUPathQoSMonitoringControl
}

// GetGtpUPathQoSMonitoringControlOk returns a tuple with the GtpUPathQoSMonitoringControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetGtpUPathQoSMonitoringControlOk() (*GtpUPathQoSMonitoringControlSingle, bool) {
	if o == nil || IsNil(o.GtpUPathQoSMonitoringControl) {
		return nil, false
	}
	return o.GtpUPathQoSMonitoringControl, true
}

// HasGtpUPathQoSMonitoringControl returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasGtpUPathQoSMonitoringControl() bool {
	if o != nil && !IsNil(o.GtpUPathQoSMonitoringControl) {
		return true
	}

	return false
}

// SetGtpUPathQoSMonitoringControl gets a reference to the given GtpUPathQoSMonitoringControlSingle and assigns it to the GtpUPathQoSMonitoringControl field.
func (o *SmfFunctionSingle) SetGtpUPathQoSMonitoringControl(v GtpUPathQoSMonitoringControlSingle) {
	o.GtpUPathQoSMonitoringControl = &v
}

// GetQFQoSMonitoringControl returns the QFQoSMonitoringControl field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetQFQoSMonitoringControl() QFQoSMonitoringControlSingle {
	if o == nil || IsNil(o.QFQoSMonitoringControl) {
		var ret QFQoSMonitoringControlSingle
		return ret
	}
	return *o.QFQoSMonitoringControl
}

// GetQFQoSMonitoringControlOk returns a tuple with the QFQoSMonitoringControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetQFQoSMonitoringControlOk() (*QFQoSMonitoringControlSingle, bool) {
	if o == nil || IsNil(o.QFQoSMonitoringControl) {
		return nil, false
	}
	return o.QFQoSMonitoringControl, true
}

// HasQFQoSMonitoringControl returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasQFQoSMonitoringControl() bool {
	if o != nil && !IsNil(o.QFQoSMonitoringControl) {
		return true
	}

	return false
}

// SetQFQoSMonitoringControl gets a reference to the given QFQoSMonitoringControlSingle and assigns it to the QFQoSMonitoringControl field.
func (o *SmfFunctionSingle) SetQFQoSMonitoringControl(v QFQoSMonitoringControlSingle) {
	o.QFQoSMonitoringControl = &v
}

// GetPredefinedPccRuleSet returns the PredefinedPccRuleSet field value if set, zero value otherwise.
func (o *SmfFunctionSingle) GetPredefinedPccRuleSet() PredefinedPccRuleSetSingle {
	if o == nil || IsNil(o.PredefinedPccRuleSet) {
		var ret PredefinedPccRuleSetSingle
		return ret
	}
	return *o.PredefinedPccRuleSet
}

// GetPredefinedPccRuleSetOk returns a tuple with the PredefinedPccRuleSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmfFunctionSingle) GetPredefinedPccRuleSetOk() (*PredefinedPccRuleSetSingle, bool) {
	if o == nil || IsNil(o.PredefinedPccRuleSet) {
		return nil, false
	}
	return o.PredefinedPccRuleSet, true
}

// HasPredefinedPccRuleSet returns a boolean if a field has been set.
func (o *SmfFunctionSingle) HasPredefinedPccRuleSet() bool {
	if o != nil && !IsNil(o.PredefinedPccRuleSet) {
		return true
	}

	return false
}

// SetPredefinedPccRuleSet gets a reference to the given PredefinedPccRuleSetSingle and assigns it to the PredefinedPccRuleSet field.
func (o *SmfFunctionSingle) SetPredefinedPccRuleSet(v PredefinedPccRuleSetSingle) {
	o.PredefinedPccRuleSet = &v
}

func (o SmfFunctionSingle) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmfFunctionSingle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id.Get()
	if !IsNil(o.ObjectClass) {
		toSerialize["objectClass"] = o.ObjectClass
	}
	if !IsNil(o.ObjectInstance) {
		toSerialize["objectInstance"] = o.ObjectInstance
	}
	if !IsNil(o.VsDataContainer) {
		toSerialize["VsDataContainer"] = o.VsDataContainer
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.PerfMetricJob) {
		toSerialize["PerfMetricJob"] = o.PerfMetricJob
	}
	if !IsNil(o.ThresholdMonitor) {
		toSerialize["ThresholdMonitor"] = o.ThresholdMonitor
	}
	if !IsNil(o.ManagedNFService) {
		toSerialize["ManagedNFService"] = o.ManagedNFService
	}
	if !IsNil(o.TraceJob) {
		toSerialize["TraceJob"] = o.TraceJob
	}
	if !IsNil(o.EPN4) {
		toSerialize["EP_N4"] = o.EPN4
	}
	if !IsNil(o.EPN7) {
		toSerialize["EP_N7"] = o.EPN7
	}
	if !IsNil(o.EPN10) {
		toSerialize["EP_N10"] = o.EPN10
	}
	if !IsNil(o.EPN11) {
		toSerialize["EP_N11"] = o.EPN11
	}
	if !IsNil(o.EPN16) {
		toSerialize["EP_N16"] = o.EPN16
	}
	if !IsNil(o.EPS5C) {
		toSerialize["EP_S5C"] = o.EPS5C
	}
	if !IsNil(o.FiveQiDscpMappingSet) {
		toSerialize["FiveQiDscpMappingSet"] = o.FiveQiDscpMappingSet
	}
	if !IsNil(o.GtpUPathQoSMonitoringControl) {
		toSerialize["GtpUPathQoSMonitoringControl"] = o.GtpUPathQoSMonitoringControl
	}
	if !IsNil(o.QFQoSMonitoringControl) {
		toSerialize["QFQoSMonitoringControl"] = o.QFQoSMonitoringControl
	}
	if !IsNil(o.PredefinedPccRuleSet) {
		toSerialize["PredefinedPccRuleSet"] = o.PredefinedPccRuleSet
	}
	return toSerialize, nil
}

type NullableSmfFunctionSingle struct {
	value *SmfFunctionSingle
	isSet bool
}

func (v NullableSmfFunctionSingle) Get() *SmfFunctionSingle {
	return v.value
}

func (v *NullableSmfFunctionSingle) Set(val *SmfFunctionSingle) {
	v.value = val
	v.isSet = true
}

func (v NullableSmfFunctionSingle) IsSet() bool {
	return v.isSet
}

func (v *NullableSmfFunctionSingle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmfFunctionSingle(val *SmfFunctionSingle) *NullableSmfFunctionSingle {
	return &NullableSmfFunctionSingle{value: val, isSet: true}
}

func (v NullableSmfFunctionSingle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmfFunctionSingle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


