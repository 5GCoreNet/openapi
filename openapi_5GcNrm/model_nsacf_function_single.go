/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GcNrm

import (
	"encoding/json"
)

// checks if the NsacfFunctionSingle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NsacfFunctionSingle{}

// NsacfFunctionSingle struct for NsacfFunctionSingle
type NsacfFunctionSingle struct {
	Top
	Attributes       *NsacfFunctionSingleAllOfAttributes `json:"attributes,omitempty"`
	PerfMetricJob    []PerfMetricJobSingle               `json:"PerfMetricJob,omitempty"`
	ThresholdMonitor []ThresholdMonitorSingle            `json:"ThresholdMonitor,omitempty"`
	ManagedNFService []ManagedNFServiceSingle            `json:"ManagedNFService,omitempty"`
	TraceJob         []TraceJobSingle                    `json:"TraceJob,omitempty"`
	EPN60            []EPN60Single                       `json:"EP_N60,omitempty"`
}

// NewNsacfFunctionSingle instantiates a new NsacfFunctionSingle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNsacfFunctionSingle(id NullableString) *NsacfFunctionSingle {
	this := NsacfFunctionSingle{}
	this.Id = id
	return &this
}

// NewNsacfFunctionSingleWithDefaults instantiates a new NsacfFunctionSingle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNsacfFunctionSingleWithDefaults() *NsacfFunctionSingle {
	this := NsacfFunctionSingle{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetAttributes() NsacfFunctionSingleAllOfAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret NsacfFunctionSingleAllOfAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetAttributesOk() (*NsacfFunctionSingleAllOfAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given NsacfFunctionSingleAllOfAttributes and assigns it to the Attributes field.
func (o *NsacfFunctionSingle) SetAttributes(v NsacfFunctionSingleAllOfAttributes) {
	o.Attributes = &v
}

// GetPerfMetricJob returns the PerfMetricJob field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetPerfMetricJob() []PerfMetricJobSingle {
	if o == nil || IsNil(o.PerfMetricJob) {
		var ret []PerfMetricJobSingle
		return ret
	}
	return o.PerfMetricJob
}

// GetPerfMetricJobOk returns a tuple with the PerfMetricJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetPerfMetricJobOk() ([]PerfMetricJobSingle, bool) {
	if o == nil || IsNil(o.PerfMetricJob) {
		return nil, false
	}
	return o.PerfMetricJob, true
}

// HasPerfMetricJob returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasPerfMetricJob() bool {
	if o != nil && !IsNil(o.PerfMetricJob) {
		return true
	}

	return false
}

// SetPerfMetricJob gets a reference to the given []PerfMetricJobSingle and assigns it to the PerfMetricJob field.
func (o *NsacfFunctionSingle) SetPerfMetricJob(v []PerfMetricJobSingle) {
	o.PerfMetricJob = v
}

// GetThresholdMonitor returns the ThresholdMonitor field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetThresholdMonitor() []ThresholdMonitorSingle {
	if o == nil || IsNil(o.ThresholdMonitor) {
		var ret []ThresholdMonitorSingle
		return ret
	}
	return o.ThresholdMonitor
}

// GetThresholdMonitorOk returns a tuple with the ThresholdMonitor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetThresholdMonitorOk() ([]ThresholdMonitorSingle, bool) {
	if o == nil || IsNil(o.ThresholdMonitor) {
		return nil, false
	}
	return o.ThresholdMonitor, true
}

// HasThresholdMonitor returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasThresholdMonitor() bool {
	if o != nil && !IsNil(o.ThresholdMonitor) {
		return true
	}

	return false
}

// SetThresholdMonitor gets a reference to the given []ThresholdMonitorSingle and assigns it to the ThresholdMonitor field.
func (o *NsacfFunctionSingle) SetThresholdMonitor(v []ThresholdMonitorSingle) {
	o.ThresholdMonitor = v
}

// GetManagedNFService returns the ManagedNFService field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetManagedNFService() []ManagedNFServiceSingle {
	if o == nil || IsNil(o.ManagedNFService) {
		var ret []ManagedNFServiceSingle
		return ret
	}
	return o.ManagedNFService
}

// GetManagedNFServiceOk returns a tuple with the ManagedNFService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetManagedNFServiceOk() ([]ManagedNFServiceSingle, bool) {
	if o == nil || IsNil(o.ManagedNFService) {
		return nil, false
	}
	return o.ManagedNFService, true
}

// HasManagedNFService returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasManagedNFService() bool {
	if o != nil && !IsNil(o.ManagedNFService) {
		return true
	}

	return false
}

// SetManagedNFService gets a reference to the given []ManagedNFServiceSingle and assigns it to the ManagedNFService field.
func (o *NsacfFunctionSingle) SetManagedNFService(v []ManagedNFServiceSingle) {
	o.ManagedNFService = v
}

// GetTraceJob returns the TraceJob field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetTraceJob() []TraceJobSingle {
	if o == nil || IsNil(o.TraceJob) {
		var ret []TraceJobSingle
		return ret
	}
	return o.TraceJob
}

// GetTraceJobOk returns a tuple with the TraceJob field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetTraceJobOk() ([]TraceJobSingle, bool) {
	if o == nil || IsNil(o.TraceJob) {
		return nil, false
	}
	return o.TraceJob, true
}

// HasTraceJob returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasTraceJob() bool {
	if o != nil && !IsNil(o.TraceJob) {
		return true
	}

	return false
}

// SetTraceJob gets a reference to the given []TraceJobSingle and assigns it to the TraceJob field.
func (o *NsacfFunctionSingle) SetTraceJob(v []TraceJobSingle) {
	o.TraceJob = v
}

// GetEPN60 returns the EPN60 field value if set, zero value otherwise.
func (o *NsacfFunctionSingle) GetEPN60() []EPN60Single {
	if o == nil || IsNil(o.EPN60) {
		var ret []EPN60Single
		return ret
	}
	return o.EPN60
}

// GetEPN60Ok returns a tuple with the EPN60 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NsacfFunctionSingle) GetEPN60Ok() ([]EPN60Single, bool) {
	if o == nil || IsNil(o.EPN60) {
		return nil, false
	}
	return o.EPN60, true
}

// HasEPN60 returns a boolean if a field has been set.
func (o *NsacfFunctionSingle) HasEPN60() bool {
	if o != nil && !IsNil(o.EPN60) {
		return true
	}

	return false
}

// SetEPN60 gets a reference to the given []EPN60Single and assigns it to the EPN60 field.
func (o *NsacfFunctionSingle) SetEPN60(v []EPN60Single) {
	o.EPN60 = v
}

func (o NsacfFunctionSingle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NsacfFunctionSingle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTop, errTop := json.Marshal(o.Top)
	if errTop != nil {
		return map[string]interface{}{}, errTop
	}
	errTop = json.Unmarshal([]byte(serializedTop), &toSerialize)
	if errTop != nil {
		return map[string]interface{}{}, errTop
	}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	if !IsNil(o.PerfMetricJob) {
		toSerialize["PerfMetricJob"] = o.PerfMetricJob
	}
	if !IsNil(o.ThresholdMonitor) {
		toSerialize["ThresholdMonitor"] = o.ThresholdMonitor
	}
	if !IsNil(o.ManagedNFService) {
		toSerialize["ManagedNFService"] = o.ManagedNFService
	}
	if !IsNil(o.TraceJob) {
		toSerialize["TraceJob"] = o.TraceJob
	}
	if !IsNil(o.EPN60) {
		toSerialize["EP_N60"] = o.EPN60
	}
	return toSerialize, nil
}

type NullableNsacfFunctionSingle struct {
	value *NsacfFunctionSingle
	isSet bool
}

func (v NullableNsacfFunctionSingle) Get() *NsacfFunctionSingle {
	return v.value
}

func (v *NullableNsacfFunctionSingle) Set(val *NsacfFunctionSingle) {
	v.value = val
	v.isSet = true
}

func (v NullableNsacfFunctionSingle) IsSet() bool {
	return v.isSet
}

func (v *NullableNsacfFunctionSingle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNsacfFunctionSingle(val *NsacfFunctionSingle) *NullableNsacfFunctionSingle {
	return &NullableNsacfFunctionSingle{value: val, isSet: true}
}

func (v NullableNsacfFunctionSingle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNsacfFunctionSingle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
