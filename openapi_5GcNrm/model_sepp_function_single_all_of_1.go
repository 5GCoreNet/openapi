/*
3GPP 5GC NRM

OAS 3.0.1 specification of the 5GC NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GcNrm

import (
	"encoding/json"
)

// checks if the SeppFunctionSingleAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SeppFunctionSingleAllOf1{}

// SeppFunctionSingleAllOf1 struct for SeppFunctionSingleAllOf1
type SeppFunctionSingleAllOf1 struct {
	EPN32 []EPN32Single `json:"EP_N32,omitempty"`
}

// NewSeppFunctionSingleAllOf1 instantiates a new SeppFunctionSingleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSeppFunctionSingleAllOf1() *SeppFunctionSingleAllOf1 {
	this := SeppFunctionSingleAllOf1{}
	return &this
}

// NewSeppFunctionSingleAllOf1WithDefaults instantiates a new SeppFunctionSingleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSeppFunctionSingleAllOf1WithDefaults() *SeppFunctionSingleAllOf1 {
	this := SeppFunctionSingleAllOf1{}
	return &this
}

// GetEPN32 returns the EPN32 field value if set, zero value otherwise.
func (o *SeppFunctionSingleAllOf1) GetEPN32() []EPN32Single {
	if o == nil || isNil(o.EPN32) {
		var ret []EPN32Single
		return ret
	}
	return o.EPN32
}

// GetEPN32Ok returns a tuple with the EPN32 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SeppFunctionSingleAllOf1) GetEPN32Ok() ([]EPN32Single, bool) {
	if o == nil || isNil(o.EPN32) {
		return nil, false
	}
	return o.EPN32, true
}

// HasEPN32 returns a boolean if a field has been set.
func (o *SeppFunctionSingleAllOf1) HasEPN32() bool {
	if o != nil && !isNil(o.EPN32) {
		return true
	}

	return false
}

// SetEPN32 gets a reference to the given []EPN32Single and assigns it to the EPN32 field.
func (o *SeppFunctionSingleAllOf1) SetEPN32(v []EPN32Single) {
	o.EPN32 = v
}

func (o SeppFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SeppFunctionSingleAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.EPN32) {
		toSerialize["EP_N32"] = o.EPN32
	}
	return toSerialize, nil
}

type NullableSeppFunctionSingleAllOf1 struct {
	value *SeppFunctionSingleAllOf1
	isSet bool
}

func (v NullableSeppFunctionSingleAllOf1) Get() *SeppFunctionSingleAllOf1 {
	return v.value
}

func (v *NullableSeppFunctionSingleAllOf1) Set(val *SeppFunctionSingleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableSeppFunctionSingleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableSeppFunctionSingleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSeppFunctionSingleAllOf1(val *SeppFunctionSingleAllOf1) *NullableSeppFunctionSingleAllOf1 {
	return &NullableSeppFunctionSingleAllOf1{value: val, isSet: true}
}

func (v NullableSeppFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSeppFunctionSingleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


