/*
Eees Application Context Relocation Service

Eees Application Context Relocation Service.   Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_AppContextRelocation

import (
	"encoding/json"
)

// checks if the AcrDecReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcrDecReq{}

// AcrDecReq Represents the parameters to inform about the selected target EAS and provide the associated information. 
type AcrDecReq struct {
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	UeId string `json:"ueId"`
	AcId *string `json:"acId,omitempty"`
	TEasId string `json:"tEasId"`
	TEasEndpoint EndPoint `json:"tEasEndpoint"`
}

// NewAcrDecReq instantiates a new AcrDecReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcrDecReq(ueId string, tEasId string, tEasEndpoint EndPoint) *AcrDecReq {
	this := AcrDecReq{}
	this.UeId = ueId
	this.TEasId = tEasId
	this.TEasEndpoint = tEasEndpoint
	return &this
}

// NewAcrDecReqWithDefaults instantiates a new AcrDecReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcrDecReqWithDefaults() *AcrDecReq {
	this := AcrDecReq{}
	return &this
}

// GetUeId returns the UeId field value
func (o *AcrDecReq) GetUeId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UeId
}

// GetUeIdOk returns a tuple with the UeId field value
// and a boolean to check if the value has been set.
func (o *AcrDecReq) GetUeIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UeId, true
}

// SetUeId sets field value
func (o *AcrDecReq) SetUeId(v string) {
	o.UeId = v
}

// GetAcId returns the AcId field value if set, zero value otherwise.
func (o *AcrDecReq) GetAcId() string {
	if o == nil || isNil(o.AcId) {
		var ret string
		return ret
	}
	return *o.AcId
}

// GetAcIdOk returns a tuple with the AcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrDecReq) GetAcIdOk() (*string, bool) {
	if o == nil || isNil(o.AcId) {
		return nil, false
	}
	return o.AcId, true
}

// HasAcId returns a boolean if a field has been set.
func (o *AcrDecReq) HasAcId() bool {
	if o != nil && !isNil(o.AcId) {
		return true
	}

	return false
}

// SetAcId gets a reference to the given string and assigns it to the AcId field.
func (o *AcrDecReq) SetAcId(v string) {
	o.AcId = &v
}

// GetTEasId returns the TEasId field value
func (o *AcrDecReq) GetTEasId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TEasId
}

// GetTEasIdOk returns a tuple with the TEasId field value
// and a boolean to check if the value has been set.
func (o *AcrDecReq) GetTEasIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TEasId, true
}

// SetTEasId sets field value
func (o *AcrDecReq) SetTEasId(v string) {
	o.TEasId = v
}

// GetTEasEndpoint returns the TEasEndpoint field value
func (o *AcrDecReq) GetTEasEndpoint() EndPoint {
	if o == nil {
		var ret EndPoint
		return ret
	}

	return o.TEasEndpoint
}

// GetTEasEndpointOk returns a tuple with the TEasEndpoint field value
// and a boolean to check if the value has been set.
func (o *AcrDecReq) GetTEasEndpointOk() (*EndPoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TEasEndpoint, true
}

// SetTEasEndpoint sets field value
func (o *AcrDecReq) SetTEasEndpoint(v EndPoint) {
	o.TEasEndpoint = v
}

func (o AcrDecReq) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcrDecReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ueId"] = o.UeId
	if !isNil(o.AcId) {
		toSerialize["acId"] = o.AcId
	}
	toSerialize["tEasId"] = o.TEasId
	toSerialize["tEasEndpoint"] = o.TEasEndpoint
	return toSerialize, nil
}

type NullableAcrDecReq struct {
	value *AcrDecReq
	isSet bool
}

func (v NullableAcrDecReq) Get() *AcrDecReq {
	return v.value
}

func (v *NullableAcrDecReq) Set(val *AcrDecReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAcrDecReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAcrDecReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcrDecReq(val *AcrDecReq) *NullableAcrDecReq {
	return &NullableAcrDecReq{value: val, isSet: true}
}

func (v NullableAcrDecReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcrDecReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


