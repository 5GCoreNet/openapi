/*
Eees Application Context Relocation Service

Eees Application Context Relocation Service.   Â© 2021, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_AppContextRelocation

import (
	"encoding/json"
)

// checks if the AcrInitReq type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcrInitReq{}

// AcrInitReq Represents the parameters to request ACR with action initiation.
type AcrInitReq struct {
	RequestorId string `json:"requestorId"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	UeId             *string                 `json:"ueId,omitempty"`
	AcId             *string                 `json:"acId,omitempty"`
	EasId            *string                 `json:"easId,omitempty"`
	TEasEndpoint     EndPoint                `json:"tEasEndpoint"`
	SEasEndpoint     *EndPoint               `json:"sEasEndpoint,omitempty"`
	PrevTEasEndpoint *EndPoint               `json:"prevTEasEndpoint,omitempty"`
	RouteReq         NullableRouteToLocation `json:"routeReq,omitempty"`
	EasNotifInd      bool                    `json:"easNotifInd"`
	PrevEasNotifInd  *bool                   `json:"prevEasNotifInd,omitempty"`
	EecCtxtReloc     *EecCtxtReloc           `json:"eecCtxtReloc,omitempty"`
}

// NewAcrInitReq instantiates a new AcrInitReq object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcrInitReq(requestorId string, tEasEndpoint EndPoint, easNotifInd bool) *AcrInitReq {
	this := AcrInitReq{}
	this.RequestorId = requestorId
	this.TEasEndpoint = tEasEndpoint
	this.EasNotifInd = easNotifInd
	var prevEasNotifInd bool = false
	this.PrevEasNotifInd = &prevEasNotifInd
	return &this
}

// NewAcrInitReqWithDefaults instantiates a new AcrInitReq object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcrInitReqWithDefaults() *AcrInitReq {
	this := AcrInitReq{}
	var easNotifInd bool = false
	this.EasNotifInd = easNotifInd
	var prevEasNotifInd bool = false
	this.PrevEasNotifInd = &prevEasNotifInd
	return &this
}

// GetRequestorId returns the RequestorId field value
func (o *AcrInitReq) GetRequestorId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestorId
}

// GetRequestorIdOk returns a tuple with the RequestorId field value
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetRequestorIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestorId, true
}

// SetRequestorId sets field value
func (o *AcrInitReq) SetRequestorId(v string) {
	o.RequestorId = v
}

// GetUeId returns the UeId field value if set, zero value otherwise.
func (o *AcrInitReq) GetUeId() string {
	if o == nil || IsNil(o.UeId) {
		var ret string
		return ret
	}
	return *o.UeId
}

// GetUeIdOk returns a tuple with the UeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetUeIdOk() (*string, bool) {
	if o == nil || IsNil(o.UeId) {
		return nil, false
	}
	return o.UeId, true
}

// HasUeId returns a boolean if a field has been set.
func (o *AcrInitReq) HasUeId() bool {
	if o != nil && !IsNil(o.UeId) {
		return true
	}

	return false
}

// SetUeId gets a reference to the given string and assigns it to the UeId field.
func (o *AcrInitReq) SetUeId(v string) {
	o.UeId = &v
}

// GetAcId returns the AcId field value if set, zero value otherwise.
func (o *AcrInitReq) GetAcId() string {
	if o == nil || IsNil(o.AcId) {
		var ret string
		return ret
	}
	return *o.AcId
}

// GetAcIdOk returns a tuple with the AcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetAcIdOk() (*string, bool) {
	if o == nil || IsNil(o.AcId) {
		return nil, false
	}
	return o.AcId, true
}

// HasAcId returns a boolean if a field has been set.
func (o *AcrInitReq) HasAcId() bool {
	if o != nil && !IsNil(o.AcId) {
		return true
	}

	return false
}

// SetAcId gets a reference to the given string and assigns it to the AcId field.
func (o *AcrInitReq) SetAcId(v string) {
	o.AcId = &v
}

// GetEasId returns the EasId field value if set, zero value otherwise.
func (o *AcrInitReq) GetEasId() string {
	if o == nil || IsNil(o.EasId) {
		var ret string
		return ret
	}
	return *o.EasId
}

// GetEasIdOk returns a tuple with the EasId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetEasIdOk() (*string, bool) {
	if o == nil || IsNil(o.EasId) {
		return nil, false
	}
	return o.EasId, true
}

// HasEasId returns a boolean if a field has been set.
func (o *AcrInitReq) HasEasId() bool {
	if o != nil && !IsNil(o.EasId) {
		return true
	}

	return false
}

// SetEasId gets a reference to the given string and assigns it to the EasId field.
func (o *AcrInitReq) SetEasId(v string) {
	o.EasId = &v
}

// GetTEasEndpoint returns the TEasEndpoint field value
func (o *AcrInitReq) GetTEasEndpoint() EndPoint {
	if o == nil {
		var ret EndPoint
		return ret
	}

	return o.TEasEndpoint
}

// GetTEasEndpointOk returns a tuple with the TEasEndpoint field value
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetTEasEndpointOk() (*EndPoint, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TEasEndpoint, true
}

// SetTEasEndpoint sets field value
func (o *AcrInitReq) SetTEasEndpoint(v EndPoint) {
	o.TEasEndpoint = v
}

// GetSEasEndpoint returns the SEasEndpoint field value if set, zero value otherwise.
func (o *AcrInitReq) GetSEasEndpoint() EndPoint {
	if o == nil || IsNil(o.SEasEndpoint) {
		var ret EndPoint
		return ret
	}
	return *o.SEasEndpoint
}

// GetSEasEndpointOk returns a tuple with the SEasEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetSEasEndpointOk() (*EndPoint, bool) {
	if o == nil || IsNil(o.SEasEndpoint) {
		return nil, false
	}
	return o.SEasEndpoint, true
}

// HasSEasEndpoint returns a boolean if a field has been set.
func (o *AcrInitReq) HasSEasEndpoint() bool {
	if o != nil && !IsNil(o.SEasEndpoint) {
		return true
	}

	return false
}

// SetSEasEndpoint gets a reference to the given EndPoint and assigns it to the SEasEndpoint field.
func (o *AcrInitReq) SetSEasEndpoint(v EndPoint) {
	o.SEasEndpoint = &v
}

// GetPrevTEasEndpoint returns the PrevTEasEndpoint field value if set, zero value otherwise.
func (o *AcrInitReq) GetPrevTEasEndpoint() EndPoint {
	if o == nil || IsNil(o.PrevTEasEndpoint) {
		var ret EndPoint
		return ret
	}
	return *o.PrevTEasEndpoint
}

// GetPrevTEasEndpointOk returns a tuple with the PrevTEasEndpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetPrevTEasEndpointOk() (*EndPoint, bool) {
	if o == nil || IsNil(o.PrevTEasEndpoint) {
		return nil, false
	}
	return o.PrevTEasEndpoint, true
}

// HasPrevTEasEndpoint returns a boolean if a field has been set.
func (o *AcrInitReq) HasPrevTEasEndpoint() bool {
	if o != nil && !IsNil(o.PrevTEasEndpoint) {
		return true
	}

	return false
}

// SetPrevTEasEndpoint gets a reference to the given EndPoint and assigns it to the PrevTEasEndpoint field.
func (o *AcrInitReq) SetPrevTEasEndpoint(v EndPoint) {
	o.PrevTEasEndpoint = &v
}

// GetRouteReq returns the RouteReq field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AcrInitReq) GetRouteReq() RouteToLocation {
	if o == nil || IsNil(o.RouteReq.Get()) {
		var ret RouteToLocation
		return ret
	}
	return *o.RouteReq.Get()
}

// GetRouteReqOk returns a tuple with the RouteReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AcrInitReq) GetRouteReqOk() (*RouteToLocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteReq.Get(), o.RouteReq.IsSet()
}

// HasRouteReq returns a boolean if a field has been set.
func (o *AcrInitReq) HasRouteReq() bool {
	if o != nil && o.RouteReq.IsSet() {
		return true
	}

	return false
}

// SetRouteReq gets a reference to the given NullableRouteToLocation and assigns it to the RouteReq field.
func (o *AcrInitReq) SetRouteReq(v RouteToLocation) {
	o.RouteReq.Set(&v)
}

// SetRouteReqNil sets the value for RouteReq to be an explicit nil
func (o *AcrInitReq) SetRouteReqNil() {
	o.RouteReq.Set(nil)
}

// UnsetRouteReq ensures that no value is present for RouteReq, not even an explicit nil
func (o *AcrInitReq) UnsetRouteReq() {
	o.RouteReq.Unset()
}

// GetEasNotifInd returns the EasNotifInd field value
func (o *AcrInitReq) GetEasNotifInd() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.EasNotifInd
}

// GetEasNotifIndOk returns a tuple with the EasNotifInd field value
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetEasNotifIndOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EasNotifInd, true
}

// SetEasNotifInd sets field value
func (o *AcrInitReq) SetEasNotifInd(v bool) {
	o.EasNotifInd = v
}

// GetPrevEasNotifInd returns the PrevEasNotifInd field value if set, zero value otherwise.
func (o *AcrInitReq) GetPrevEasNotifInd() bool {
	if o == nil || IsNil(o.PrevEasNotifInd) {
		var ret bool
		return ret
	}
	return *o.PrevEasNotifInd
}

// GetPrevEasNotifIndOk returns a tuple with the PrevEasNotifInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetPrevEasNotifIndOk() (*bool, bool) {
	if o == nil || IsNil(o.PrevEasNotifInd) {
		return nil, false
	}
	return o.PrevEasNotifInd, true
}

// HasPrevEasNotifInd returns a boolean if a field has been set.
func (o *AcrInitReq) HasPrevEasNotifInd() bool {
	if o != nil && !IsNil(o.PrevEasNotifInd) {
		return true
	}

	return false
}

// SetPrevEasNotifInd gets a reference to the given bool and assigns it to the PrevEasNotifInd field.
func (o *AcrInitReq) SetPrevEasNotifInd(v bool) {
	o.PrevEasNotifInd = &v
}

// GetEecCtxtReloc returns the EecCtxtReloc field value if set, zero value otherwise.
func (o *AcrInitReq) GetEecCtxtReloc() EecCtxtReloc {
	if o == nil || IsNil(o.EecCtxtReloc) {
		var ret EecCtxtReloc
		return ret
	}
	return *o.EecCtxtReloc
}

// GetEecCtxtRelocOk returns a tuple with the EecCtxtReloc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcrInitReq) GetEecCtxtRelocOk() (*EecCtxtReloc, bool) {
	if o == nil || IsNil(o.EecCtxtReloc) {
		return nil, false
	}
	return o.EecCtxtReloc, true
}

// HasEecCtxtReloc returns a boolean if a field has been set.
func (o *AcrInitReq) HasEecCtxtReloc() bool {
	if o != nil && !IsNil(o.EecCtxtReloc) {
		return true
	}

	return false
}

// SetEecCtxtReloc gets a reference to the given EecCtxtReloc and assigns it to the EecCtxtReloc field.
func (o *AcrInitReq) SetEecCtxtReloc(v EecCtxtReloc) {
	o.EecCtxtReloc = &v
}

func (o AcrInitReq) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcrInitReq) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestorId"] = o.RequestorId
	if !IsNil(o.UeId) {
		toSerialize["ueId"] = o.UeId
	}
	if !IsNil(o.AcId) {
		toSerialize["acId"] = o.AcId
	}
	if !IsNil(o.EasId) {
		toSerialize["easId"] = o.EasId
	}
	toSerialize["tEasEndpoint"] = o.TEasEndpoint
	if !IsNil(o.SEasEndpoint) {
		toSerialize["sEasEndpoint"] = o.SEasEndpoint
	}
	if !IsNil(o.PrevTEasEndpoint) {
		toSerialize["prevTEasEndpoint"] = o.PrevTEasEndpoint
	}
	if o.RouteReq.IsSet() {
		toSerialize["routeReq"] = o.RouteReq.Get()
	}
	toSerialize["easNotifInd"] = o.EasNotifInd
	if !IsNil(o.PrevEasNotifInd) {
		toSerialize["prevEasNotifInd"] = o.PrevEasNotifInd
	}
	if !IsNil(o.EecCtxtReloc) {
		toSerialize["eecCtxtReloc"] = o.EecCtxtReloc
	}
	return toSerialize, nil
}

type NullableAcrInitReq struct {
	value *AcrInitReq
	isSet bool
}

func (v NullableAcrInitReq) Get() *AcrInitReq {
	return v.value
}

func (v *NullableAcrInitReq) Set(val *AcrInitReq) {
	v.value = val
	v.isSet = true
}

func (v NullableAcrInitReq) IsSet() bool {
	return v.isSet
}

func (v *NullableAcrInitReq) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcrInitReq(val *AcrInitReq) *NullableAcrInitReq {
	return &NullableAcrInitReq{value: val, isSet: true}
}

func (v NullableAcrInitReq) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcrInitReq) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
