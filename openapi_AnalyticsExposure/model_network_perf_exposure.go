/*
3gpp-analyticsexposure

API for Analytics Exposure.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AnalyticsExposure

import (
	"encoding/json"
)

// checks if the NetworkPerfExposure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkPerfExposure{}

// NetworkPerfExposure Represents network performance information.
type NetworkPerfExposure struct {
	LocArea LocationArea5G `json:"locArea"`
	NwPerfType NetworkPerfType `json:"nwPerfType"`
	// Unsigned integer indicating Sampling Ratio (see clauses 4.15.1 of 3GPP TS 23.502), expressed in percent.  
	RelativeRatio *int32 `json:"relativeRatio,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	AbsoluteNum *int32 `json:"absoluteNum,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Confidence *int32 `json:"confidence,omitempty"`
}

// NewNetworkPerfExposure instantiates a new NetworkPerfExposure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkPerfExposure(locArea LocationArea5G, nwPerfType NetworkPerfType) *NetworkPerfExposure {
	this := NetworkPerfExposure{}
	this.LocArea = locArea
	this.NwPerfType = nwPerfType
	return &this
}

// NewNetworkPerfExposureWithDefaults instantiates a new NetworkPerfExposure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkPerfExposureWithDefaults() *NetworkPerfExposure {
	this := NetworkPerfExposure{}
	return &this
}

// GetLocArea returns the LocArea field value
func (o *NetworkPerfExposure) GetLocArea() LocationArea5G {
	if o == nil {
		var ret LocationArea5G
		return ret
	}

	return o.LocArea
}

// GetLocAreaOk returns a tuple with the LocArea field value
// and a boolean to check if the value has been set.
func (o *NetworkPerfExposure) GetLocAreaOk() (*LocationArea5G, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocArea, true
}

// SetLocArea sets field value
func (o *NetworkPerfExposure) SetLocArea(v LocationArea5G) {
	o.LocArea = v
}

// GetNwPerfType returns the NwPerfType field value
func (o *NetworkPerfExposure) GetNwPerfType() NetworkPerfType {
	if o == nil {
		var ret NetworkPerfType
		return ret
	}

	return o.NwPerfType
}

// GetNwPerfTypeOk returns a tuple with the NwPerfType field value
// and a boolean to check if the value has been set.
func (o *NetworkPerfExposure) GetNwPerfTypeOk() (*NetworkPerfType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NwPerfType, true
}

// SetNwPerfType sets field value
func (o *NetworkPerfExposure) SetNwPerfType(v NetworkPerfType) {
	o.NwPerfType = v
}

// GetRelativeRatio returns the RelativeRatio field value if set, zero value otherwise.
func (o *NetworkPerfExposure) GetRelativeRatio() int32 {
	if o == nil || IsNil(o.RelativeRatio) {
		var ret int32
		return ret
	}
	return *o.RelativeRatio
}

// GetRelativeRatioOk returns a tuple with the RelativeRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPerfExposure) GetRelativeRatioOk() (*int32, bool) {
	if o == nil || IsNil(o.RelativeRatio) {
		return nil, false
	}
	return o.RelativeRatio, true
}

// HasRelativeRatio returns a boolean if a field has been set.
func (o *NetworkPerfExposure) HasRelativeRatio() bool {
	if o != nil && !IsNil(o.RelativeRatio) {
		return true
	}

	return false
}

// SetRelativeRatio gets a reference to the given int32 and assigns it to the RelativeRatio field.
func (o *NetworkPerfExposure) SetRelativeRatio(v int32) {
	o.RelativeRatio = &v
}

// GetAbsoluteNum returns the AbsoluteNum field value if set, zero value otherwise.
func (o *NetworkPerfExposure) GetAbsoluteNum() int32 {
	if o == nil || IsNil(o.AbsoluteNum) {
		var ret int32
		return ret
	}
	return *o.AbsoluteNum
}

// GetAbsoluteNumOk returns a tuple with the AbsoluteNum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPerfExposure) GetAbsoluteNumOk() (*int32, bool) {
	if o == nil || IsNil(o.AbsoluteNum) {
		return nil, false
	}
	return o.AbsoluteNum, true
}

// HasAbsoluteNum returns a boolean if a field has been set.
func (o *NetworkPerfExposure) HasAbsoluteNum() bool {
	if o != nil && !IsNil(o.AbsoluteNum) {
		return true
	}

	return false
}

// SetAbsoluteNum gets a reference to the given int32 and assigns it to the AbsoluteNum field.
func (o *NetworkPerfExposure) SetAbsoluteNum(v int32) {
	o.AbsoluteNum = &v
}

// GetConfidence returns the Confidence field value if set, zero value otherwise.
func (o *NetworkPerfExposure) GetConfidence() int32 {
	if o == nil || IsNil(o.Confidence) {
		var ret int32
		return ret
	}
	return *o.Confidence
}

// GetConfidenceOk returns a tuple with the Confidence field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkPerfExposure) GetConfidenceOk() (*int32, bool) {
	if o == nil || IsNil(o.Confidence) {
		return nil, false
	}
	return o.Confidence, true
}

// HasConfidence returns a boolean if a field has been set.
func (o *NetworkPerfExposure) HasConfidence() bool {
	if o != nil && !IsNil(o.Confidence) {
		return true
	}

	return false
}

// SetConfidence gets a reference to the given int32 and assigns it to the Confidence field.
func (o *NetworkPerfExposure) SetConfidence(v int32) {
	o.Confidence = &v
}

func (o NetworkPerfExposure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkPerfExposure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locArea"] = o.LocArea
	toSerialize["nwPerfType"] = o.NwPerfType
	if !IsNil(o.RelativeRatio) {
		toSerialize["relativeRatio"] = o.RelativeRatio
	}
	if !IsNil(o.AbsoluteNum) {
		toSerialize["absoluteNum"] = o.AbsoluteNum
	}
	if !IsNil(o.Confidence) {
		toSerialize["confidence"] = o.Confidence
	}
	return toSerialize, nil
}

type NullableNetworkPerfExposure struct {
	value *NetworkPerfExposure
	isSet bool
}

func (v NullableNetworkPerfExposure) Get() *NetworkPerfExposure {
	return v.value
}

func (v *NullableNetworkPerfExposure) Set(val *NetworkPerfExposure) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkPerfExposure) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkPerfExposure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkPerfExposure(val *NetworkPerfExposure) *NullableNetworkPerfExposure {
	return &NullableNetworkPerfExposure{value: val, isSet: true}
}

func (v NullableNetworkPerfExposure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkPerfExposure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


