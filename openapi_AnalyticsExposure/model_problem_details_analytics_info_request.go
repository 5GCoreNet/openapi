/*
3gpp-analyticsexposure

API for Analytics Exposure.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AnalyticsExposure

import (
	"encoding/json"
)

// checks if the ProblemDetailsAnalyticsInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProblemDetailsAnalyticsInfoRequest{}

// ProblemDetailsAnalyticsInfoRequest Extends ProblemDetails to indicate more details why the analytics request is rejected.
type ProblemDetailsAnalyticsInfoRequest struct {
	ProblemDetails1
	// indicating a time in seconds.
	RvWaitTime *int32 `json:"rvWaitTime,omitempty"`
}

// NewProblemDetailsAnalyticsInfoRequest instantiates a new ProblemDetailsAnalyticsInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProblemDetailsAnalyticsInfoRequest() *ProblemDetailsAnalyticsInfoRequest {
	this := ProblemDetailsAnalyticsInfoRequest{}
	return &this
}

// NewProblemDetailsAnalyticsInfoRequestWithDefaults instantiates a new ProblemDetailsAnalyticsInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProblemDetailsAnalyticsInfoRequestWithDefaults() *ProblemDetailsAnalyticsInfoRequest {
	this := ProblemDetailsAnalyticsInfoRequest{}
	return &this
}

// GetRvWaitTime returns the RvWaitTime field value if set, zero value otherwise.
func (o *ProblemDetailsAnalyticsInfoRequest) GetRvWaitTime() int32 {
	if o == nil || IsNil(o.RvWaitTime) {
		var ret int32
		return ret
	}
	return *o.RvWaitTime
}

// GetRvWaitTimeOk returns a tuple with the RvWaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProblemDetailsAnalyticsInfoRequest) GetRvWaitTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.RvWaitTime) {
		return nil, false
	}
	return o.RvWaitTime, true
}

// HasRvWaitTime returns a boolean if a field has been set.
func (o *ProblemDetailsAnalyticsInfoRequest) HasRvWaitTime() bool {
	if o != nil && !IsNil(o.RvWaitTime) {
		return true
	}

	return false
}

// SetRvWaitTime gets a reference to the given int32 and assigns it to the RvWaitTime field.
func (o *ProblemDetailsAnalyticsInfoRequest) SetRvWaitTime(v int32) {
	o.RvWaitTime = &v
}

func (o ProblemDetailsAnalyticsInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProblemDetailsAnalyticsInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedProblemDetails1, errProblemDetails1 := json.Marshal(o.ProblemDetails1)
	if errProblemDetails1 != nil {
		return map[string]interface{}{}, errProblemDetails1
	}
	errProblemDetails1 = json.Unmarshal([]byte(serializedProblemDetails1), &toSerialize)
	if errProblemDetails1 != nil {
		return map[string]interface{}{}, errProblemDetails1
	}
	if !IsNil(o.RvWaitTime) {
		toSerialize["rvWaitTime"] = o.RvWaitTime
	}
	return toSerialize, nil
}

type NullableProblemDetailsAnalyticsInfoRequest struct {
	value *ProblemDetailsAnalyticsInfoRequest
	isSet bool
}

func (v NullableProblemDetailsAnalyticsInfoRequest) Get() *ProblemDetailsAnalyticsInfoRequest {
	return v.value
}

func (v *NullableProblemDetailsAnalyticsInfoRequest) Set(val *ProblemDetailsAnalyticsInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableProblemDetailsAnalyticsInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableProblemDetailsAnalyticsInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProblemDetailsAnalyticsInfoRequest(val *ProblemDetailsAnalyticsInfoRequest) *NullableProblemDetailsAnalyticsInfoRequest {
	return &NullableProblemDetailsAnalyticsInfoRequest{value: val, isSet: true}
}

func (v NullableProblemDetailsAnalyticsInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProblemDetailsAnalyticsInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
