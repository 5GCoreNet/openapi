/*
CAPIF_Security_API

API for CAPIF security management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CAPIF_Security_API

import (
	"encoding/json"
)

// checks if the AccessTokenErr1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessTokenErr1{}

// AccessTokenErr1 Error returned in the access token response message
type AccessTokenErr1 struct {
	Error string `json:"error"`
	ErrorDescription *string `json:"error_description,omitempty"`
	ErrorUri *string `json:"error_uri,omitempty"`
}

// NewAccessTokenErr1 instantiates a new AccessTokenErr1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessTokenErr1(error_ string) *AccessTokenErr1 {
	this := AccessTokenErr1{}
	this.Error = error_
	return &this
}

// NewAccessTokenErr1WithDefaults instantiates a new AccessTokenErr1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessTokenErr1WithDefaults() *AccessTokenErr1 {
	this := AccessTokenErr1{}
	return &this
}

// GetError returns the Error field value
func (o *AccessTokenErr1) GetError() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *AccessTokenErr1) GetErrorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *AccessTokenErr1) SetError(v string) {
	o.Error = v
}

// GetErrorDescription returns the ErrorDescription field value if set, zero value otherwise.
func (o *AccessTokenErr1) GetErrorDescription() string {
	if o == nil || isNil(o.ErrorDescription) {
		var ret string
		return ret
	}
	return *o.ErrorDescription
}

// GetErrorDescriptionOk returns a tuple with the ErrorDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenErr1) GetErrorDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.ErrorDescription) {
		return nil, false
	}
	return o.ErrorDescription, true
}

// HasErrorDescription returns a boolean if a field has been set.
func (o *AccessTokenErr1) HasErrorDescription() bool {
	if o != nil && !isNil(o.ErrorDescription) {
		return true
	}

	return false
}

// SetErrorDescription gets a reference to the given string and assigns it to the ErrorDescription field.
func (o *AccessTokenErr1) SetErrorDescription(v string) {
	o.ErrorDescription = &v
}

// GetErrorUri returns the ErrorUri field value if set, zero value otherwise.
func (o *AccessTokenErr1) GetErrorUri() string {
	if o == nil || isNil(o.ErrorUri) {
		var ret string
		return ret
	}
	return *o.ErrorUri
}

// GetErrorUriOk returns a tuple with the ErrorUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessTokenErr1) GetErrorUriOk() (*string, bool) {
	if o == nil || isNil(o.ErrorUri) {
		return nil, false
	}
	return o.ErrorUri, true
}

// HasErrorUri returns a boolean if a field has been set.
func (o *AccessTokenErr1) HasErrorUri() bool {
	if o != nil && !isNil(o.ErrorUri) {
		return true
	}

	return false
}

// SetErrorUri gets a reference to the given string and assigns it to the ErrorUri field.
func (o *AccessTokenErr1) SetErrorUri(v string) {
	o.ErrorUri = &v
}

func (o AccessTokenErr1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessTokenErr1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	if !isNil(o.ErrorDescription) {
		toSerialize["error_description"] = o.ErrorDescription
	}
	if !isNil(o.ErrorUri) {
		toSerialize["error_uri"] = o.ErrorUri
	}
	return toSerialize, nil
}

type NullableAccessTokenErr1 struct {
	value *AccessTokenErr1
	isSet bool
}

func (v NullableAccessTokenErr1) Get() *AccessTokenErr1 {
	return v.value
}

func (v *NullableAccessTokenErr1) Set(val *AccessTokenErr1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessTokenErr1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessTokenErr1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessTokenErr1(val *AccessTokenErr1) *NullableAccessTokenErr1 {
	return &NullableAccessTokenErr1{value: val, isSet: true}
}

func (v NullableAccessTokenErr1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessTokenErr1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


