/*
MDA NRM

OAS 3.0.1 specification of the MDA NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MdaNrm

import (
	"encoding/json"
)

// checks if the ManagedElementSingleAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedElementSingleAllOf1{}

// ManagedElementSingleAllOf1 struct for ManagedElementSingleAllOf1
type ManagedElementSingleAllOf1 struct {
	MDAFunction []MDAFunctionSingle `json:"MDAFunction,omitempty"`
}

// NewManagedElementSingleAllOf1 instantiates a new ManagedElementSingleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedElementSingleAllOf1() *ManagedElementSingleAllOf1 {
	this := ManagedElementSingleAllOf1{}
	return &this
}

// NewManagedElementSingleAllOf1WithDefaults instantiates a new ManagedElementSingleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedElementSingleAllOf1WithDefaults() *ManagedElementSingleAllOf1 {
	this := ManagedElementSingleAllOf1{}
	return &this
}

// GetMDAFunction returns the MDAFunction field value if set, zero value otherwise.
func (o *ManagedElementSingleAllOf1) GetMDAFunction() []MDAFunctionSingle {
	if o == nil || isNil(o.MDAFunction) {
		var ret []MDAFunctionSingle
		return ret
	}
	return o.MDAFunction
}

// GetMDAFunctionOk returns a tuple with the MDAFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ManagedElementSingleAllOf1) GetMDAFunctionOk() ([]MDAFunctionSingle, bool) {
	if o == nil || isNil(o.MDAFunction) {
		return nil, false
	}
	return o.MDAFunction, true
}

// HasMDAFunction returns a boolean if a field has been set.
func (o *ManagedElementSingleAllOf1) HasMDAFunction() bool {
	if o != nil && !isNil(o.MDAFunction) {
		return true
	}

	return false
}

// SetMDAFunction gets a reference to the given []MDAFunctionSingle and assigns it to the MDAFunction field.
func (o *ManagedElementSingleAllOf1) SetMDAFunction(v []MDAFunctionSingle) {
	o.MDAFunction = v
}

func (o ManagedElementSingleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedElementSingleAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MDAFunction) {
		toSerialize["MDAFunction"] = o.MDAFunction
	}
	return toSerialize, nil
}

type NullableManagedElementSingleAllOf1 struct {
	value *ManagedElementSingleAllOf1
	isSet bool
}

func (v NullableManagedElementSingleAllOf1) Get() *ManagedElementSingleAllOf1 {
	return v.value
}

func (v *NullableManagedElementSingleAllOf1) Set(val *ManagedElementSingleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedElementSingleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedElementSingleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedElementSingleAllOf1(val *ManagedElementSingleAllOf1) *NullableManagedElementSingleAllOf1 {
	return &NullableManagedElementSingleAllOf1{value: val, isSet: true}
}

func (v NullableManagedElementSingleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedElementSingleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


