/*
MDA NRM

OAS 3.0.1 specification of the MDA NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MdaNrm

import (
	"encoding/json"
)

// checks if the AnalyticsScopeTypeOneOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsScopeTypeOneOf{}

// AnalyticsScopeTypeOneOf struct for AnalyticsScopeTypeOneOf
type AnalyticsScopeTypeOneOf struct {
	ManagedEntitiesScope []string `json:"managedEntitiesScope,omitempty"`
}

// NewAnalyticsScopeTypeOneOf instantiates a new AnalyticsScopeTypeOneOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsScopeTypeOneOf() *AnalyticsScopeTypeOneOf {
	this := AnalyticsScopeTypeOneOf{}
	return &this
}

// NewAnalyticsScopeTypeOneOfWithDefaults instantiates a new AnalyticsScopeTypeOneOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsScopeTypeOneOfWithDefaults() *AnalyticsScopeTypeOneOf {
	this := AnalyticsScopeTypeOneOf{}
	return &this
}

// GetManagedEntitiesScope returns the ManagedEntitiesScope field value if set, zero value otherwise.
func (o *AnalyticsScopeTypeOneOf) GetManagedEntitiesScope() []string {
	if o == nil || IsNil(o.ManagedEntitiesScope) {
		var ret []string
		return ret
	}
	return o.ManagedEntitiesScope
}

// GetManagedEntitiesScopeOk returns a tuple with the ManagedEntitiesScope field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsScopeTypeOneOf) GetManagedEntitiesScopeOk() ([]string, bool) {
	if o == nil || IsNil(o.ManagedEntitiesScope) {
		return nil, false
	}
	return o.ManagedEntitiesScope, true
}

// HasManagedEntitiesScope returns a boolean if a field has been set.
func (o *AnalyticsScopeTypeOneOf) HasManagedEntitiesScope() bool {
	if o != nil && !IsNil(o.ManagedEntitiesScope) {
		return true
	}

	return false
}

// SetManagedEntitiesScope gets a reference to the given []string and assigns it to the ManagedEntitiesScope field.
func (o *AnalyticsScopeTypeOneOf) SetManagedEntitiesScope(v []string) {
	o.ManagedEntitiesScope = v
}

func (o AnalyticsScopeTypeOneOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsScopeTypeOneOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ManagedEntitiesScope) {
		toSerialize["managedEntitiesScope"] = o.ManagedEntitiesScope
	}
	return toSerialize, nil
}

type NullableAnalyticsScopeTypeOneOf struct {
	value *AnalyticsScopeTypeOneOf
	isSet bool
}

func (v NullableAnalyticsScopeTypeOneOf) Get() *AnalyticsScopeTypeOneOf {
	return v.value
}

func (v *NullableAnalyticsScopeTypeOneOf) Set(val *AnalyticsScopeTypeOneOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsScopeTypeOneOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsScopeTypeOneOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsScopeTypeOneOf(val *AnalyticsScopeTypeOneOf) *NullableAnalyticsScopeTypeOneOf {
	return &NullableAnalyticsScopeTypeOneOf{value: val, isSet: true}
}

func (v NullableAnalyticsScopeTypeOneOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsScopeTypeOneOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
