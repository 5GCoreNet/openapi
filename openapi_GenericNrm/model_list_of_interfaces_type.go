/*
Generic NRM

OAS 3.0.1 definition of the Generic NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_GenericNrm

import (
	"encoding/json"
)

// checks if the ListOfInterfacesType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListOfInterfacesType{}

// ListOfInterfacesType The interfaces to be recorded in the Network Element. See 3GPP TS 32.422 clause 5.5 for additional details.
type ListOfInterfacesType struct {
	MSCServerInterfaces []string `json:"MSCServerInterfaces,omitempty"`
	MGWInterfaces       []string `json:"MGWInterfaces,omitempty"`
	RNCInterfaces       []string `json:"RNCInterfaces,omitempty"`
	SGSNInterfaces      []string `json:"SGSNInterfaces,omitempty"`
	GGSNInterfaces      []string `json:"GGSNInterfaces,omitempty"`
	SCSCFInterfaces     []string `json:"S-CSCFInterfaces,omitempty"`
	PCSCFInterfaces     []string `json:"P-CSCFInterfaces,omitempty"`
	ICSCFInterfaces     []string `json:"I-CSCFInterfaces,omitempty"`
	MRFCInterfaces      []string `json:"MRFCInterfaces,omitempty"`
	MGCFInterfaces      []string `json:"MGCFInterfaces,omitempty"`
	IBCFInterfaces      []string `json:"IBCFInterfaces,omitempty"`
	ECSCFInterfaces     []string `json:"E-CSCFInterfaces,omitempty"`
	BGCFInterfaces      []string `json:"BGCFInterfaces,omitempty"`
	ASInterfaces        []string `json:"ASInterfaces,omitempty"`
	HSSInterfaces       []string `json:"HSSInterfaces,omitempty"`
	EIRInterfaces       []string `json:"EIRInterfaces,omitempty"`
	BMSCInterfaces      []string `json:"BM-SCInterfaces,omitempty"`
	MMEInterfaces       []string `json:"MMEInterfaces,omitempty"`
	SGWInterfaces       []string `json:"SGWInterfaces,omitempty"`
	PDNGWInterfaces     []string `json:"PDN_GWInterfaces,omitempty"`
	ENBInterfaces       []string `json:"eNBInterfaces,omitempty"`
	EnGNBInterfaces     []string `json:"en-gNBInterfaces,omitempty"`
	AMFInterfaces       []string `json:"AMFInterfaces,omitempty"`
	AUSFInterfaces      []string `json:"AUSFInterfaces,omitempty"`
	NEFInterfaces       []string `json:"NEFInterfaces,omitempty"`
	NRFInterfaces       []string `json:"NRFInterfaces,omitempty"`
	NSSFInterfaces      []string `json:"NSSFInterfaces,omitempty"`
	PCFInterfaces       []string `json:"PCFInterfaces,omitempty"`
	SMFInterfaces       []string `json:"SMFInterfaces,omitempty"`
	SMSFInterfaces      []string `json:"SMSFInterfaces,omitempty"`
	UDMInterfaces       []string `json:"UDMInterfaces,omitempty"`
	UPFInterfaces       []string `json:"UPFInterfaces,omitempty"`
	NgENBInterfaces     []string `json:"ng-eNBInterfaces,omitempty"`
	GNBCUCPInterfaces   []string `json:"gNB-CU-CPInterfaces,omitempty"`
	GNBCUUPInterfaces   []string `json:"gNB-CU-UPInterfaces,omitempty"`
	GNBDUInterfaces     []string `json:"gNB-DUInterfaces,omitempty"`
}

// NewListOfInterfacesType instantiates a new ListOfInterfacesType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListOfInterfacesType() *ListOfInterfacesType {
	this := ListOfInterfacesType{}
	return &this
}

// NewListOfInterfacesTypeWithDefaults instantiates a new ListOfInterfacesType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListOfInterfacesTypeWithDefaults() *ListOfInterfacesType {
	this := ListOfInterfacesType{}
	return &this
}

// GetMSCServerInterfaces returns the MSCServerInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetMSCServerInterfaces() []string {
	if o == nil || IsNil(o.MSCServerInterfaces) {
		var ret []string
		return ret
	}
	return o.MSCServerInterfaces
}

// GetMSCServerInterfacesOk returns a tuple with the MSCServerInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetMSCServerInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.MSCServerInterfaces) {
		return nil, false
	}
	return o.MSCServerInterfaces, true
}

// HasMSCServerInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasMSCServerInterfaces() bool {
	if o != nil && !IsNil(o.MSCServerInterfaces) {
		return true
	}

	return false
}

// SetMSCServerInterfaces gets a reference to the given []string and assigns it to the MSCServerInterfaces field.
func (o *ListOfInterfacesType) SetMSCServerInterfaces(v []string) {
	o.MSCServerInterfaces = v
}

// GetMGWInterfaces returns the MGWInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetMGWInterfaces() []string {
	if o == nil || IsNil(o.MGWInterfaces) {
		var ret []string
		return ret
	}
	return o.MGWInterfaces
}

// GetMGWInterfacesOk returns a tuple with the MGWInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetMGWInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.MGWInterfaces) {
		return nil, false
	}
	return o.MGWInterfaces, true
}

// HasMGWInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasMGWInterfaces() bool {
	if o != nil && !IsNil(o.MGWInterfaces) {
		return true
	}

	return false
}

// SetMGWInterfaces gets a reference to the given []string and assigns it to the MGWInterfaces field.
func (o *ListOfInterfacesType) SetMGWInterfaces(v []string) {
	o.MGWInterfaces = v
}

// GetRNCInterfaces returns the RNCInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetRNCInterfaces() []string {
	if o == nil || IsNil(o.RNCInterfaces) {
		var ret []string
		return ret
	}
	return o.RNCInterfaces
}

// GetRNCInterfacesOk returns a tuple with the RNCInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetRNCInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.RNCInterfaces) {
		return nil, false
	}
	return o.RNCInterfaces, true
}

// HasRNCInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasRNCInterfaces() bool {
	if o != nil && !IsNil(o.RNCInterfaces) {
		return true
	}

	return false
}

// SetRNCInterfaces gets a reference to the given []string and assigns it to the RNCInterfaces field.
func (o *ListOfInterfacesType) SetRNCInterfaces(v []string) {
	o.RNCInterfaces = v
}

// GetSGSNInterfaces returns the SGSNInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetSGSNInterfaces() []string {
	if o == nil || IsNil(o.SGSNInterfaces) {
		var ret []string
		return ret
	}
	return o.SGSNInterfaces
}

// GetSGSNInterfacesOk returns a tuple with the SGSNInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetSGSNInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.SGSNInterfaces) {
		return nil, false
	}
	return o.SGSNInterfaces, true
}

// HasSGSNInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasSGSNInterfaces() bool {
	if o != nil && !IsNil(o.SGSNInterfaces) {
		return true
	}

	return false
}

// SetSGSNInterfaces gets a reference to the given []string and assigns it to the SGSNInterfaces field.
func (o *ListOfInterfacesType) SetSGSNInterfaces(v []string) {
	o.SGSNInterfaces = v
}

// GetGGSNInterfaces returns the GGSNInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetGGSNInterfaces() []string {
	if o == nil || IsNil(o.GGSNInterfaces) {
		var ret []string
		return ret
	}
	return o.GGSNInterfaces
}

// GetGGSNInterfacesOk returns a tuple with the GGSNInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetGGSNInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.GGSNInterfaces) {
		return nil, false
	}
	return o.GGSNInterfaces, true
}

// HasGGSNInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasGGSNInterfaces() bool {
	if o != nil && !IsNil(o.GGSNInterfaces) {
		return true
	}

	return false
}

// SetGGSNInterfaces gets a reference to the given []string and assigns it to the GGSNInterfaces field.
func (o *ListOfInterfacesType) SetGGSNInterfaces(v []string) {
	o.GGSNInterfaces = v
}

// GetSCSCFInterfaces returns the SCSCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetSCSCFInterfaces() []string {
	if o == nil || IsNil(o.SCSCFInterfaces) {
		var ret []string
		return ret
	}
	return o.SCSCFInterfaces
}

// GetSCSCFInterfacesOk returns a tuple with the SCSCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetSCSCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.SCSCFInterfaces) {
		return nil, false
	}
	return o.SCSCFInterfaces, true
}

// HasSCSCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasSCSCFInterfaces() bool {
	if o != nil && !IsNil(o.SCSCFInterfaces) {
		return true
	}

	return false
}

// SetSCSCFInterfaces gets a reference to the given []string and assigns it to the SCSCFInterfaces field.
func (o *ListOfInterfacesType) SetSCSCFInterfaces(v []string) {
	o.SCSCFInterfaces = v
}

// GetPCSCFInterfaces returns the PCSCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetPCSCFInterfaces() []string {
	if o == nil || IsNil(o.PCSCFInterfaces) {
		var ret []string
		return ret
	}
	return o.PCSCFInterfaces
}

// GetPCSCFInterfacesOk returns a tuple with the PCSCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetPCSCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.PCSCFInterfaces) {
		return nil, false
	}
	return o.PCSCFInterfaces, true
}

// HasPCSCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasPCSCFInterfaces() bool {
	if o != nil && !IsNil(o.PCSCFInterfaces) {
		return true
	}

	return false
}

// SetPCSCFInterfaces gets a reference to the given []string and assigns it to the PCSCFInterfaces field.
func (o *ListOfInterfacesType) SetPCSCFInterfaces(v []string) {
	o.PCSCFInterfaces = v
}

// GetICSCFInterfaces returns the ICSCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetICSCFInterfaces() []string {
	if o == nil || IsNil(o.ICSCFInterfaces) {
		var ret []string
		return ret
	}
	return o.ICSCFInterfaces
}

// GetICSCFInterfacesOk returns a tuple with the ICSCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetICSCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.ICSCFInterfaces) {
		return nil, false
	}
	return o.ICSCFInterfaces, true
}

// HasICSCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasICSCFInterfaces() bool {
	if o != nil && !IsNil(o.ICSCFInterfaces) {
		return true
	}

	return false
}

// SetICSCFInterfaces gets a reference to the given []string and assigns it to the ICSCFInterfaces field.
func (o *ListOfInterfacesType) SetICSCFInterfaces(v []string) {
	o.ICSCFInterfaces = v
}

// GetMRFCInterfaces returns the MRFCInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetMRFCInterfaces() []string {
	if o == nil || IsNil(o.MRFCInterfaces) {
		var ret []string
		return ret
	}
	return o.MRFCInterfaces
}

// GetMRFCInterfacesOk returns a tuple with the MRFCInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetMRFCInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.MRFCInterfaces) {
		return nil, false
	}
	return o.MRFCInterfaces, true
}

// HasMRFCInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasMRFCInterfaces() bool {
	if o != nil && !IsNil(o.MRFCInterfaces) {
		return true
	}

	return false
}

// SetMRFCInterfaces gets a reference to the given []string and assigns it to the MRFCInterfaces field.
func (o *ListOfInterfacesType) SetMRFCInterfaces(v []string) {
	o.MRFCInterfaces = v
}

// GetMGCFInterfaces returns the MGCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetMGCFInterfaces() []string {
	if o == nil || IsNil(o.MGCFInterfaces) {
		var ret []string
		return ret
	}
	return o.MGCFInterfaces
}

// GetMGCFInterfacesOk returns a tuple with the MGCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetMGCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.MGCFInterfaces) {
		return nil, false
	}
	return o.MGCFInterfaces, true
}

// HasMGCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasMGCFInterfaces() bool {
	if o != nil && !IsNil(o.MGCFInterfaces) {
		return true
	}

	return false
}

// SetMGCFInterfaces gets a reference to the given []string and assigns it to the MGCFInterfaces field.
func (o *ListOfInterfacesType) SetMGCFInterfaces(v []string) {
	o.MGCFInterfaces = v
}

// GetIBCFInterfaces returns the IBCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetIBCFInterfaces() []string {
	if o == nil || IsNil(o.IBCFInterfaces) {
		var ret []string
		return ret
	}
	return o.IBCFInterfaces
}

// GetIBCFInterfacesOk returns a tuple with the IBCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetIBCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.IBCFInterfaces) {
		return nil, false
	}
	return o.IBCFInterfaces, true
}

// HasIBCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasIBCFInterfaces() bool {
	if o != nil && !IsNil(o.IBCFInterfaces) {
		return true
	}

	return false
}

// SetIBCFInterfaces gets a reference to the given []string and assigns it to the IBCFInterfaces field.
func (o *ListOfInterfacesType) SetIBCFInterfaces(v []string) {
	o.IBCFInterfaces = v
}

// GetECSCFInterfaces returns the ECSCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetECSCFInterfaces() []string {
	if o == nil || IsNil(o.ECSCFInterfaces) {
		var ret []string
		return ret
	}
	return o.ECSCFInterfaces
}

// GetECSCFInterfacesOk returns a tuple with the ECSCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetECSCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.ECSCFInterfaces) {
		return nil, false
	}
	return o.ECSCFInterfaces, true
}

// HasECSCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasECSCFInterfaces() bool {
	if o != nil && !IsNil(o.ECSCFInterfaces) {
		return true
	}

	return false
}

// SetECSCFInterfaces gets a reference to the given []string and assigns it to the ECSCFInterfaces field.
func (o *ListOfInterfacesType) SetECSCFInterfaces(v []string) {
	o.ECSCFInterfaces = v
}

// GetBGCFInterfaces returns the BGCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetBGCFInterfaces() []string {
	if o == nil || IsNil(o.BGCFInterfaces) {
		var ret []string
		return ret
	}
	return o.BGCFInterfaces
}

// GetBGCFInterfacesOk returns a tuple with the BGCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetBGCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.BGCFInterfaces) {
		return nil, false
	}
	return o.BGCFInterfaces, true
}

// HasBGCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasBGCFInterfaces() bool {
	if o != nil && !IsNil(o.BGCFInterfaces) {
		return true
	}

	return false
}

// SetBGCFInterfaces gets a reference to the given []string and assigns it to the BGCFInterfaces field.
func (o *ListOfInterfacesType) SetBGCFInterfaces(v []string) {
	o.BGCFInterfaces = v
}

// GetASInterfaces returns the ASInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetASInterfaces() []string {
	if o == nil || IsNil(o.ASInterfaces) {
		var ret []string
		return ret
	}
	return o.ASInterfaces
}

// GetASInterfacesOk returns a tuple with the ASInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetASInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.ASInterfaces) {
		return nil, false
	}
	return o.ASInterfaces, true
}

// HasASInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasASInterfaces() bool {
	if o != nil && !IsNil(o.ASInterfaces) {
		return true
	}

	return false
}

// SetASInterfaces gets a reference to the given []string and assigns it to the ASInterfaces field.
func (o *ListOfInterfacesType) SetASInterfaces(v []string) {
	o.ASInterfaces = v
}

// GetHSSInterfaces returns the HSSInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetHSSInterfaces() []string {
	if o == nil || IsNil(o.HSSInterfaces) {
		var ret []string
		return ret
	}
	return o.HSSInterfaces
}

// GetHSSInterfacesOk returns a tuple with the HSSInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetHSSInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.HSSInterfaces) {
		return nil, false
	}
	return o.HSSInterfaces, true
}

// HasHSSInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasHSSInterfaces() bool {
	if o != nil && !IsNil(o.HSSInterfaces) {
		return true
	}

	return false
}

// SetHSSInterfaces gets a reference to the given []string and assigns it to the HSSInterfaces field.
func (o *ListOfInterfacesType) SetHSSInterfaces(v []string) {
	o.HSSInterfaces = v
}

// GetEIRInterfaces returns the EIRInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetEIRInterfaces() []string {
	if o == nil || IsNil(o.EIRInterfaces) {
		var ret []string
		return ret
	}
	return o.EIRInterfaces
}

// GetEIRInterfacesOk returns a tuple with the EIRInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetEIRInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.EIRInterfaces) {
		return nil, false
	}
	return o.EIRInterfaces, true
}

// HasEIRInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasEIRInterfaces() bool {
	if o != nil && !IsNil(o.EIRInterfaces) {
		return true
	}

	return false
}

// SetEIRInterfaces gets a reference to the given []string and assigns it to the EIRInterfaces field.
func (o *ListOfInterfacesType) SetEIRInterfaces(v []string) {
	o.EIRInterfaces = v
}

// GetBMSCInterfaces returns the BMSCInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetBMSCInterfaces() []string {
	if o == nil || IsNil(o.BMSCInterfaces) {
		var ret []string
		return ret
	}
	return o.BMSCInterfaces
}

// GetBMSCInterfacesOk returns a tuple with the BMSCInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetBMSCInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.BMSCInterfaces) {
		return nil, false
	}
	return o.BMSCInterfaces, true
}

// HasBMSCInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasBMSCInterfaces() bool {
	if o != nil && !IsNil(o.BMSCInterfaces) {
		return true
	}

	return false
}

// SetBMSCInterfaces gets a reference to the given []string and assigns it to the BMSCInterfaces field.
func (o *ListOfInterfacesType) SetBMSCInterfaces(v []string) {
	o.BMSCInterfaces = v
}

// GetMMEInterfaces returns the MMEInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetMMEInterfaces() []string {
	if o == nil || IsNil(o.MMEInterfaces) {
		var ret []string
		return ret
	}
	return o.MMEInterfaces
}

// GetMMEInterfacesOk returns a tuple with the MMEInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetMMEInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.MMEInterfaces) {
		return nil, false
	}
	return o.MMEInterfaces, true
}

// HasMMEInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasMMEInterfaces() bool {
	if o != nil && !IsNil(o.MMEInterfaces) {
		return true
	}

	return false
}

// SetMMEInterfaces gets a reference to the given []string and assigns it to the MMEInterfaces field.
func (o *ListOfInterfacesType) SetMMEInterfaces(v []string) {
	o.MMEInterfaces = v
}

// GetSGWInterfaces returns the SGWInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetSGWInterfaces() []string {
	if o == nil || IsNil(o.SGWInterfaces) {
		var ret []string
		return ret
	}
	return o.SGWInterfaces
}

// GetSGWInterfacesOk returns a tuple with the SGWInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetSGWInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.SGWInterfaces) {
		return nil, false
	}
	return o.SGWInterfaces, true
}

// HasSGWInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasSGWInterfaces() bool {
	if o != nil && !IsNil(o.SGWInterfaces) {
		return true
	}

	return false
}

// SetSGWInterfaces gets a reference to the given []string and assigns it to the SGWInterfaces field.
func (o *ListOfInterfacesType) SetSGWInterfaces(v []string) {
	o.SGWInterfaces = v
}

// GetPDNGWInterfaces returns the PDNGWInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetPDNGWInterfaces() []string {
	if o == nil || IsNil(o.PDNGWInterfaces) {
		var ret []string
		return ret
	}
	return o.PDNGWInterfaces
}

// GetPDNGWInterfacesOk returns a tuple with the PDNGWInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetPDNGWInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.PDNGWInterfaces) {
		return nil, false
	}
	return o.PDNGWInterfaces, true
}

// HasPDNGWInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasPDNGWInterfaces() bool {
	if o != nil && !IsNil(o.PDNGWInterfaces) {
		return true
	}

	return false
}

// SetPDNGWInterfaces gets a reference to the given []string and assigns it to the PDNGWInterfaces field.
func (o *ListOfInterfacesType) SetPDNGWInterfaces(v []string) {
	o.PDNGWInterfaces = v
}

// GetENBInterfaces returns the ENBInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetENBInterfaces() []string {
	if o == nil || IsNil(o.ENBInterfaces) {
		var ret []string
		return ret
	}
	return o.ENBInterfaces
}

// GetENBInterfacesOk returns a tuple with the ENBInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetENBInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.ENBInterfaces) {
		return nil, false
	}
	return o.ENBInterfaces, true
}

// HasENBInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasENBInterfaces() bool {
	if o != nil && !IsNil(o.ENBInterfaces) {
		return true
	}

	return false
}

// SetENBInterfaces gets a reference to the given []string and assigns it to the ENBInterfaces field.
func (o *ListOfInterfacesType) SetENBInterfaces(v []string) {
	o.ENBInterfaces = v
}

// GetEnGNBInterfaces returns the EnGNBInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetEnGNBInterfaces() []string {
	if o == nil || IsNil(o.EnGNBInterfaces) {
		var ret []string
		return ret
	}
	return o.EnGNBInterfaces
}

// GetEnGNBInterfacesOk returns a tuple with the EnGNBInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetEnGNBInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.EnGNBInterfaces) {
		return nil, false
	}
	return o.EnGNBInterfaces, true
}

// HasEnGNBInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasEnGNBInterfaces() bool {
	if o != nil && !IsNil(o.EnGNBInterfaces) {
		return true
	}

	return false
}

// SetEnGNBInterfaces gets a reference to the given []string and assigns it to the EnGNBInterfaces field.
func (o *ListOfInterfacesType) SetEnGNBInterfaces(v []string) {
	o.EnGNBInterfaces = v
}

// GetAMFInterfaces returns the AMFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetAMFInterfaces() []string {
	if o == nil || IsNil(o.AMFInterfaces) {
		var ret []string
		return ret
	}
	return o.AMFInterfaces
}

// GetAMFInterfacesOk returns a tuple with the AMFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetAMFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.AMFInterfaces) {
		return nil, false
	}
	return o.AMFInterfaces, true
}

// HasAMFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasAMFInterfaces() bool {
	if o != nil && !IsNil(o.AMFInterfaces) {
		return true
	}

	return false
}

// SetAMFInterfaces gets a reference to the given []string and assigns it to the AMFInterfaces field.
func (o *ListOfInterfacesType) SetAMFInterfaces(v []string) {
	o.AMFInterfaces = v
}

// GetAUSFInterfaces returns the AUSFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetAUSFInterfaces() []string {
	if o == nil || IsNil(o.AUSFInterfaces) {
		var ret []string
		return ret
	}
	return o.AUSFInterfaces
}

// GetAUSFInterfacesOk returns a tuple with the AUSFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetAUSFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.AUSFInterfaces) {
		return nil, false
	}
	return o.AUSFInterfaces, true
}

// HasAUSFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasAUSFInterfaces() bool {
	if o != nil && !IsNil(o.AUSFInterfaces) {
		return true
	}

	return false
}

// SetAUSFInterfaces gets a reference to the given []string and assigns it to the AUSFInterfaces field.
func (o *ListOfInterfacesType) SetAUSFInterfaces(v []string) {
	o.AUSFInterfaces = v
}

// GetNEFInterfaces returns the NEFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetNEFInterfaces() []string {
	if o == nil || IsNil(o.NEFInterfaces) {
		var ret []string
		return ret
	}
	return o.NEFInterfaces
}

// GetNEFInterfacesOk returns a tuple with the NEFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetNEFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.NEFInterfaces) {
		return nil, false
	}
	return o.NEFInterfaces, true
}

// HasNEFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasNEFInterfaces() bool {
	if o != nil && !IsNil(o.NEFInterfaces) {
		return true
	}

	return false
}

// SetNEFInterfaces gets a reference to the given []string and assigns it to the NEFInterfaces field.
func (o *ListOfInterfacesType) SetNEFInterfaces(v []string) {
	o.NEFInterfaces = v
}

// GetNRFInterfaces returns the NRFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetNRFInterfaces() []string {
	if o == nil || IsNil(o.NRFInterfaces) {
		var ret []string
		return ret
	}
	return o.NRFInterfaces
}

// GetNRFInterfacesOk returns a tuple with the NRFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetNRFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.NRFInterfaces) {
		return nil, false
	}
	return o.NRFInterfaces, true
}

// HasNRFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasNRFInterfaces() bool {
	if o != nil && !IsNil(o.NRFInterfaces) {
		return true
	}

	return false
}

// SetNRFInterfaces gets a reference to the given []string and assigns it to the NRFInterfaces field.
func (o *ListOfInterfacesType) SetNRFInterfaces(v []string) {
	o.NRFInterfaces = v
}

// GetNSSFInterfaces returns the NSSFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetNSSFInterfaces() []string {
	if o == nil || IsNil(o.NSSFInterfaces) {
		var ret []string
		return ret
	}
	return o.NSSFInterfaces
}

// GetNSSFInterfacesOk returns a tuple with the NSSFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetNSSFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.NSSFInterfaces) {
		return nil, false
	}
	return o.NSSFInterfaces, true
}

// HasNSSFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasNSSFInterfaces() bool {
	if o != nil && !IsNil(o.NSSFInterfaces) {
		return true
	}

	return false
}

// SetNSSFInterfaces gets a reference to the given []string and assigns it to the NSSFInterfaces field.
func (o *ListOfInterfacesType) SetNSSFInterfaces(v []string) {
	o.NSSFInterfaces = v
}

// GetPCFInterfaces returns the PCFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetPCFInterfaces() []string {
	if o == nil || IsNil(o.PCFInterfaces) {
		var ret []string
		return ret
	}
	return o.PCFInterfaces
}

// GetPCFInterfacesOk returns a tuple with the PCFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetPCFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.PCFInterfaces) {
		return nil, false
	}
	return o.PCFInterfaces, true
}

// HasPCFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasPCFInterfaces() bool {
	if o != nil && !IsNil(o.PCFInterfaces) {
		return true
	}

	return false
}

// SetPCFInterfaces gets a reference to the given []string and assigns it to the PCFInterfaces field.
func (o *ListOfInterfacesType) SetPCFInterfaces(v []string) {
	o.PCFInterfaces = v
}

// GetSMFInterfaces returns the SMFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetSMFInterfaces() []string {
	if o == nil || IsNil(o.SMFInterfaces) {
		var ret []string
		return ret
	}
	return o.SMFInterfaces
}

// GetSMFInterfacesOk returns a tuple with the SMFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetSMFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.SMFInterfaces) {
		return nil, false
	}
	return o.SMFInterfaces, true
}

// HasSMFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasSMFInterfaces() bool {
	if o != nil && !IsNil(o.SMFInterfaces) {
		return true
	}

	return false
}

// SetSMFInterfaces gets a reference to the given []string and assigns it to the SMFInterfaces field.
func (o *ListOfInterfacesType) SetSMFInterfaces(v []string) {
	o.SMFInterfaces = v
}

// GetSMSFInterfaces returns the SMSFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetSMSFInterfaces() []string {
	if o == nil || IsNil(o.SMSFInterfaces) {
		var ret []string
		return ret
	}
	return o.SMSFInterfaces
}

// GetSMSFInterfacesOk returns a tuple with the SMSFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetSMSFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.SMSFInterfaces) {
		return nil, false
	}
	return o.SMSFInterfaces, true
}

// HasSMSFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasSMSFInterfaces() bool {
	if o != nil && !IsNil(o.SMSFInterfaces) {
		return true
	}

	return false
}

// SetSMSFInterfaces gets a reference to the given []string and assigns it to the SMSFInterfaces field.
func (o *ListOfInterfacesType) SetSMSFInterfaces(v []string) {
	o.SMSFInterfaces = v
}

// GetUDMInterfaces returns the UDMInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetUDMInterfaces() []string {
	if o == nil || IsNil(o.UDMInterfaces) {
		var ret []string
		return ret
	}
	return o.UDMInterfaces
}

// GetUDMInterfacesOk returns a tuple with the UDMInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetUDMInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.UDMInterfaces) {
		return nil, false
	}
	return o.UDMInterfaces, true
}

// HasUDMInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasUDMInterfaces() bool {
	if o != nil && !IsNil(o.UDMInterfaces) {
		return true
	}

	return false
}

// SetUDMInterfaces gets a reference to the given []string and assigns it to the UDMInterfaces field.
func (o *ListOfInterfacesType) SetUDMInterfaces(v []string) {
	o.UDMInterfaces = v
}

// GetUPFInterfaces returns the UPFInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetUPFInterfaces() []string {
	if o == nil || IsNil(o.UPFInterfaces) {
		var ret []string
		return ret
	}
	return o.UPFInterfaces
}

// GetUPFInterfacesOk returns a tuple with the UPFInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetUPFInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.UPFInterfaces) {
		return nil, false
	}
	return o.UPFInterfaces, true
}

// HasUPFInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasUPFInterfaces() bool {
	if o != nil && !IsNil(o.UPFInterfaces) {
		return true
	}

	return false
}

// SetUPFInterfaces gets a reference to the given []string and assigns it to the UPFInterfaces field.
func (o *ListOfInterfacesType) SetUPFInterfaces(v []string) {
	o.UPFInterfaces = v
}

// GetNgENBInterfaces returns the NgENBInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetNgENBInterfaces() []string {
	if o == nil || IsNil(o.NgENBInterfaces) {
		var ret []string
		return ret
	}
	return o.NgENBInterfaces
}

// GetNgENBInterfacesOk returns a tuple with the NgENBInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetNgENBInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.NgENBInterfaces) {
		return nil, false
	}
	return o.NgENBInterfaces, true
}

// HasNgENBInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasNgENBInterfaces() bool {
	if o != nil && !IsNil(o.NgENBInterfaces) {
		return true
	}

	return false
}

// SetNgENBInterfaces gets a reference to the given []string and assigns it to the NgENBInterfaces field.
func (o *ListOfInterfacesType) SetNgENBInterfaces(v []string) {
	o.NgENBInterfaces = v
}

// GetGNBCUCPInterfaces returns the GNBCUCPInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetGNBCUCPInterfaces() []string {
	if o == nil || IsNil(o.GNBCUCPInterfaces) {
		var ret []string
		return ret
	}
	return o.GNBCUCPInterfaces
}

// GetGNBCUCPInterfacesOk returns a tuple with the GNBCUCPInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetGNBCUCPInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.GNBCUCPInterfaces) {
		return nil, false
	}
	return o.GNBCUCPInterfaces, true
}

// HasGNBCUCPInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasGNBCUCPInterfaces() bool {
	if o != nil && !IsNil(o.GNBCUCPInterfaces) {
		return true
	}

	return false
}

// SetGNBCUCPInterfaces gets a reference to the given []string and assigns it to the GNBCUCPInterfaces field.
func (o *ListOfInterfacesType) SetGNBCUCPInterfaces(v []string) {
	o.GNBCUCPInterfaces = v
}

// GetGNBCUUPInterfaces returns the GNBCUUPInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetGNBCUUPInterfaces() []string {
	if o == nil || IsNil(o.GNBCUUPInterfaces) {
		var ret []string
		return ret
	}
	return o.GNBCUUPInterfaces
}

// GetGNBCUUPInterfacesOk returns a tuple with the GNBCUUPInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetGNBCUUPInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.GNBCUUPInterfaces) {
		return nil, false
	}
	return o.GNBCUUPInterfaces, true
}

// HasGNBCUUPInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasGNBCUUPInterfaces() bool {
	if o != nil && !IsNil(o.GNBCUUPInterfaces) {
		return true
	}

	return false
}

// SetGNBCUUPInterfaces gets a reference to the given []string and assigns it to the GNBCUUPInterfaces field.
func (o *ListOfInterfacesType) SetGNBCUUPInterfaces(v []string) {
	o.GNBCUUPInterfaces = v
}

// GetGNBDUInterfaces returns the GNBDUInterfaces field value if set, zero value otherwise.
func (o *ListOfInterfacesType) GetGNBDUInterfaces() []string {
	if o == nil || IsNil(o.GNBDUInterfaces) {
		var ret []string
		return ret
	}
	return o.GNBDUInterfaces
}

// GetGNBDUInterfacesOk returns a tuple with the GNBDUInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListOfInterfacesType) GetGNBDUInterfacesOk() ([]string, bool) {
	if o == nil || IsNil(o.GNBDUInterfaces) {
		return nil, false
	}
	return o.GNBDUInterfaces, true
}

// HasGNBDUInterfaces returns a boolean if a field has been set.
func (o *ListOfInterfacesType) HasGNBDUInterfaces() bool {
	if o != nil && !IsNil(o.GNBDUInterfaces) {
		return true
	}

	return false
}

// SetGNBDUInterfaces gets a reference to the given []string and assigns it to the GNBDUInterfaces field.
func (o *ListOfInterfacesType) SetGNBDUInterfaces(v []string) {
	o.GNBDUInterfaces = v
}

func (o ListOfInterfacesType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListOfInterfacesType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MSCServerInterfaces) {
		toSerialize["MSCServerInterfaces"] = o.MSCServerInterfaces
	}
	if !IsNil(o.MGWInterfaces) {
		toSerialize["MGWInterfaces"] = o.MGWInterfaces
	}
	if !IsNil(o.RNCInterfaces) {
		toSerialize["RNCInterfaces"] = o.RNCInterfaces
	}
	if !IsNil(o.SGSNInterfaces) {
		toSerialize["SGSNInterfaces"] = o.SGSNInterfaces
	}
	if !IsNil(o.GGSNInterfaces) {
		toSerialize["GGSNInterfaces"] = o.GGSNInterfaces
	}
	if !IsNil(o.SCSCFInterfaces) {
		toSerialize["S-CSCFInterfaces"] = o.SCSCFInterfaces
	}
	if !IsNil(o.PCSCFInterfaces) {
		toSerialize["P-CSCFInterfaces"] = o.PCSCFInterfaces
	}
	if !IsNil(o.ICSCFInterfaces) {
		toSerialize["I-CSCFInterfaces"] = o.ICSCFInterfaces
	}
	if !IsNil(o.MRFCInterfaces) {
		toSerialize["MRFCInterfaces"] = o.MRFCInterfaces
	}
	if !IsNil(o.MGCFInterfaces) {
		toSerialize["MGCFInterfaces"] = o.MGCFInterfaces
	}
	if !IsNil(o.IBCFInterfaces) {
		toSerialize["IBCFInterfaces"] = o.IBCFInterfaces
	}
	if !IsNil(o.ECSCFInterfaces) {
		toSerialize["E-CSCFInterfaces"] = o.ECSCFInterfaces
	}
	if !IsNil(o.BGCFInterfaces) {
		toSerialize["BGCFInterfaces"] = o.BGCFInterfaces
	}
	if !IsNil(o.ASInterfaces) {
		toSerialize["ASInterfaces"] = o.ASInterfaces
	}
	if !IsNil(o.HSSInterfaces) {
		toSerialize["HSSInterfaces"] = o.HSSInterfaces
	}
	if !IsNil(o.EIRInterfaces) {
		toSerialize["EIRInterfaces"] = o.EIRInterfaces
	}
	if !IsNil(o.BMSCInterfaces) {
		toSerialize["BM-SCInterfaces"] = o.BMSCInterfaces
	}
	if !IsNil(o.MMEInterfaces) {
		toSerialize["MMEInterfaces"] = o.MMEInterfaces
	}
	if !IsNil(o.SGWInterfaces) {
		toSerialize["SGWInterfaces"] = o.SGWInterfaces
	}
	if !IsNil(o.PDNGWInterfaces) {
		toSerialize["PDN_GWInterfaces"] = o.PDNGWInterfaces
	}
	if !IsNil(o.ENBInterfaces) {
		toSerialize["eNBInterfaces"] = o.ENBInterfaces
	}
	if !IsNil(o.EnGNBInterfaces) {
		toSerialize["en-gNBInterfaces"] = o.EnGNBInterfaces
	}
	if !IsNil(o.AMFInterfaces) {
		toSerialize["AMFInterfaces"] = o.AMFInterfaces
	}
	if !IsNil(o.AUSFInterfaces) {
		toSerialize["AUSFInterfaces"] = o.AUSFInterfaces
	}
	if !IsNil(o.NEFInterfaces) {
		toSerialize["NEFInterfaces"] = o.NEFInterfaces
	}
	if !IsNil(o.NRFInterfaces) {
		toSerialize["NRFInterfaces"] = o.NRFInterfaces
	}
	if !IsNil(o.NSSFInterfaces) {
		toSerialize["NSSFInterfaces"] = o.NSSFInterfaces
	}
	if !IsNil(o.PCFInterfaces) {
		toSerialize["PCFInterfaces"] = o.PCFInterfaces
	}
	if !IsNil(o.SMFInterfaces) {
		toSerialize["SMFInterfaces"] = o.SMFInterfaces
	}
	if !IsNil(o.SMSFInterfaces) {
		toSerialize["SMSFInterfaces"] = o.SMSFInterfaces
	}
	if !IsNil(o.UDMInterfaces) {
		toSerialize["UDMInterfaces"] = o.UDMInterfaces
	}
	if !IsNil(o.UPFInterfaces) {
		toSerialize["UPFInterfaces"] = o.UPFInterfaces
	}
	if !IsNil(o.NgENBInterfaces) {
		toSerialize["ng-eNBInterfaces"] = o.NgENBInterfaces
	}
	if !IsNil(o.GNBCUCPInterfaces) {
		toSerialize["gNB-CU-CPInterfaces"] = o.GNBCUCPInterfaces
	}
	if !IsNil(o.GNBCUUPInterfaces) {
		toSerialize["gNB-CU-UPInterfaces"] = o.GNBCUUPInterfaces
	}
	if !IsNil(o.GNBDUInterfaces) {
		toSerialize["gNB-DUInterfaces"] = o.GNBDUInterfaces
	}
	return toSerialize, nil
}

type NullableListOfInterfacesType struct {
	value *ListOfInterfacesType
	isSet bool
}

func (v NullableListOfInterfacesType) Get() *ListOfInterfacesType {
	return v.value
}

func (v *NullableListOfInterfacesType) Set(val *ListOfInterfacesType) {
	v.value = val
	v.isSet = true
}

func (v NullableListOfInterfacesType) IsSet() bool {
	return v.isSet
}

func (v *NullableListOfInterfacesType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListOfInterfacesType(val *ListOfInterfacesType) *NullableListOfInterfacesType {
	return &NullableListOfInterfacesType{value: val, isSet: true}
}

func (v NullableListOfInterfacesType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListOfInterfacesType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
