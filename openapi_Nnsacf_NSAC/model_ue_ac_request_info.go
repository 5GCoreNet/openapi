/*
Nnsacf_NSAC

Nnsacf_NSAC Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnsacf_NSAC

import (
	"encoding/json"
)

// checks if the UeACRequestInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeACRequestInfo{}

// UeACRequestInfo struct for UeACRequestInfo
type UeACRequestInfo struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi             string             `json:"supi"`
	AnType           AccessType         `json:"anType"`
	AcuOperationList []AcuOperationItem `json:"acuOperationList"`
	AdditionalAnType *AccessType        `json:"additionalAnType,omitempty"`
}

// NewUeACRequestInfo instantiates a new UeACRequestInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeACRequestInfo(supi string, anType AccessType, acuOperationList []AcuOperationItem) *UeACRequestInfo {
	this := UeACRequestInfo{}
	this.Supi = supi
	this.AnType = anType
	this.AcuOperationList = acuOperationList
	return &this
}

// NewUeACRequestInfoWithDefaults instantiates a new UeACRequestInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeACRequestInfoWithDefaults() *UeACRequestInfo {
	this := UeACRequestInfo{}
	return &this
}

// GetSupi returns the Supi field value
func (o *UeACRequestInfo) GetSupi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Supi
}

// GetSupiOk returns a tuple with the Supi field value
// and a boolean to check if the value has been set.
func (o *UeACRequestInfo) GetSupiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Supi, true
}

// SetSupi sets field value
func (o *UeACRequestInfo) SetSupi(v string) {
	o.Supi = v
}

// GetAnType returns the AnType field value
func (o *UeACRequestInfo) GetAnType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value
// and a boolean to check if the value has been set.
func (o *UeACRequestInfo) GetAnTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnType, true
}

// SetAnType sets field value
func (o *UeACRequestInfo) SetAnType(v AccessType) {
	o.AnType = v
}

// GetAcuOperationList returns the AcuOperationList field value
func (o *UeACRequestInfo) GetAcuOperationList() []AcuOperationItem {
	if o == nil {
		var ret []AcuOperationItem
		return ret
	}

	return o.AcuOperationList
}

// GetAcuOperationListOk returns a tuple with the AcuOperationList field value
// and a boolean to check if the value has been set.
func (o *UeACRequestInfo) GetAcuOperationListOk() ([]AcuOperationItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.AcuOperationList, true
}

// SetAcuOperationList sets field value
func (o *UeACRequestInfo) SetAcuOperationList(v []AcuOperationItem) {
	o.AcuOperationList = v
}

// GetAdditionalAnType returns the AdditionalAnType field value if set, zero value otherwise.
func (o *UeACRequestInfo) GetAdditionalAnType() AccessType {
	if o == nil || IsNil(o.AdditionalAnType) {
		var ret AccessType
		return ret
	}
	return *o.AdditionalAnType
}

// GetAdditionalAnTypeOk returns a tuple with the AdditionalAnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeACRequestInfo) GetAdditionalAnTypeOk() (*AccessType, bool) {
	if o == nil || IsNil(o.AdditionalAnType) {
		return nil, false
	}
	return o.AdditionalAnType, true
}

// HasAdditionalAnType returns a boolean if a field has been set.
func (o *UeACRequestInfo) HasAdditionalAnType() bool {
	if o != nil && !IsNil(o.AdditionalAnType) {
		return true
	}

	return false
}

// SetAdditionalAnType gets a reference to the given AccessType and assigns it to the AdditionalAnType field.
func (o *UeACRequestInfo) SetAdditionalAnType(v AccessType) {
	o.AdditionalAnType = &v
}

func (o UeACRequestInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeACRequestInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["supi"] = o.Supi
	toSerialize["anType"] = o.AnType
	toSerialize["acuOperationList"] = o.AcuOperationList
	if !IsNil(o.AdditionalAnType) {
		toSerialize["additionalAnType"] = o.AdditionalAnType
	}
	return toSerialize, nil
}

type NullableUeACRequestInfo struct {
	value *UeACRequestInfo
	isSet bool
}

func (v NullableUeACRequestInfo) Get() *UeACRequestInfo {
	return v.value
}

func (v *NullableUeACRequestInfo) Set(val *UeACRequestInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableUeACRequestInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableUeACRequestInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeACRequestInfo(val *UeACRequestInfo) *NullableUeACRequestInfo {
	return &NullableUeACRequestInfo{value: val, isSet: true}
}

func (v NullableUeACRequestInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeACRequestInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
