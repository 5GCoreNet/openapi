/*
Nnsacf_NSAC

Nnsacf_NSAC Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnsacf_NSAC

import (
	"encoding/json"
)

// checks if the PduACResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PduACResponseData{}

// PduACResponseData struct for PduACResponseData
type PduACResponseData struct {
	// A map (list of key-value pairs) where the key of the map shall be UE's supi
	AcuFailureList *map[string][]AcuFailureItem `json:"acuFailureList,omitempty"`
}

// NewPduACResponseData instantiates a new PduACResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPduACResponseData() *PduACResponseData {
	this := PduACResponseData{}
	return &this
}

// NewPduACResponseDataWithDefaults instantiates a new PduACResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPduACResponseDataWithDefaults() *PduACResponseData {
	this := PduACResponseData{}
	return &this
}

// GetAcuFailureList returns the AcuFailureList field value if set, zero value otherwise.
func (o *PduACResponseData) GetAcuFailureList() map[string][]AcuFailureItem {
	if o == nil || IsNil(o.AcuFailureList) {
		var ret map[string][]AcuFailureItem
		return ret
	}
	return *o.AcuFailureList
}

// GetAcuFailureListOk returns a tuple with the AcuFailureList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduACResponseData) GetAcuFailureListOk() (*map[string][]AcuFailureItem, bool) {
	if o == nil || IsNil(o.AcuFailureList) {
		return nil, false
	}
	return o.AcuFailureList, true
}

// HasAcuFailureList returns a boolean if a field has been set.
func (o *PduACResponseData) HasAcuFailureList() bool {
	if o != nil && !IsNil(o.AcuFailureList) {
		return true
	}

	return false
}

// SetAcuFailureList gets a reference to the given map[string][]AcuFailureItem and assigns it to the AcuFailureList field.
func (o *PduACResponseData) SetAcuFailureList(v map[string][]AcuFailureItem) {
	o.AcuFailureList = &v
}

func (o PduACResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PduACResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcuFailureList) {
		toSerialize["acuFailureList"] = o.AcuFailureList
	}
	return toSerialize, nil
}

type NullablePduACResponseData struct {
	value *PduACResponseData
	isSet bool
}

func (v NullablePduACResponseData) Get() *PduACResponseData {
	return v.value
}

func (v *NullablePduACResponseData) Set(val *PduACResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullablePduACResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullablePduACResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePduACResponseData(val *PduACResponseData) *NullablePduACResponseData {
	return &NullablePduACResponseData{value: val, isSet: true}
}

func (v NullablePduACResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePduACResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


