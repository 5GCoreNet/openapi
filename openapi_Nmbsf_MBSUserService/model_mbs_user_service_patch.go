/*
nmbsf-mbs-us

API for MBS User Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbsf_MBSUserService

import (
	"encoding/json"
)

// checks if the MBSUserServicePatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MBSUserServicePatch{}

// MBSUserServicePatch Represents the requested modifications to the parameters of an MBS User Service. 
type MBSUserServicePatch struct {
	ExtServiceIds []string `json:"extServiceIds,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	ServClass *string `json:"servClass,omitempty"`
	ServAnnModes []ServiceAnnouncementMode `json:"servAnnModes,omitempty"`
	ServNameDescs []ServiceNameDescription `json:"servNameDescs,omitempty"`
	MainServLang *string `json:"mainServLang,omitempty"`
}

// NewMBSUserServicePatch instantiates a new MBSUserServicePatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMBSUserServicePatch() *MBSUserServicePatch {
	this := MBSUserServicePatch{}
	return &this
}

// NewMBSUserServicePatchWithDefaults instantiates a new MBSUserServicePatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMBSUserServicePatchWithDefaults() *MBSUserServicePatch {
	this := MBSUserServicePatch{}
	return &this
}

// GetExtServiceIds returns the ExtServiceIds field value if set, zero value otherwise.
func (o *MBSUserServicePatch) GetExtServiceIds() []string {
	if o == nil || IsNil(o.ExtServiceIds) {
		var ret []string
		return ret
	}
	return o.ExtServiceIds
}

// GetExtServiceIdsOk returns a tuple with the ExtServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MBSUserServicePatch) GetExtServiceIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ExtServiceIds) {
		return nil, false
	}
	return o.ExtServiceIds, true
}

// HasExtServiceIds returns a boolean if a field has been set.
func (o *MBSUserServicePatch) HasExtServiceIds() bool {
	if o != nil && !IsNil(o.ExtServiceIds) {
		return true
	}

	return false
}

// SetExtServiceIds gets a reference to the given []string and assigns it to the ExtServiceIds field.
func (o *MBSUserServicePatch) SetExtServiceIds(v []string) {
	o.ExtServiceIds = v
}

// GetServClass returns the ServClass field value if set, zero value otherwise.
func (o *MBSUserServicePatch) GetServClass() string {
	if o == nil || IsNil(o.ServClass) {
		var ret string
		return ret
	}
	return *o.ServClass
}

// GetServClassOk returns a tuple with the ServClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MBSUserServicePatch) GetServClassOk() (*string, bool) {
	if o == nil || IsNil(o.ServClass) {
		return nil, false
	}
	return o.ServClass, true
}

// HasServClass returns a boolean if a field has been set.
func (o *MBSUserServicePatch) HasServClass() bool {
	if o != nil && !IsNil(o.ServClass) {
		return true
	}

	return false
}

// SetServClass gets a reference to the given string and assigns it to the ServClass field.
func (o *MBSUserServicePatch) SetServClass(v string) {
	o.ServClass = &v
}

// GetServAnnModes returns the ServAnnModes field value if set, zero value otherwise.
func (o *MBSUserServicePatch) GetServAnnModes() []ServiceAnnouncementMode {
	if o == nil || IsNil(o.ServAnnModes) {
		var ret []ServiceAnnouncementMode
		return ret
	}
	return o.ServAnnModes
}

// GetServAnnModesOk returns a tuple with the ServAnnModes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MBSUserServicePatch) GetServAnnModesOk() ([]ServiceAnnouncementMode, bool) {
	if o == nil || IsNil(o.ServAnnModes) {
		return nil, false
	}
	return o.ServAnnModes, true
}

// HasServAnnModes returns a boolean if a field has been set.
func (o *MBSUserServicePatch) HasServAnnModes() bool {
	if o != nil && !IsNil(o.ServAnnModes) {
		return true
	}

	return false
}

// SetServAnnModes gets a reference to the given []ServiceAnnouncementMode and assigns it to the ServAnnModes field.
func (o *MBSUserServicePatch) SetServAnnModes(v []ServiceAnnouncementMode) {
	o.ServAnnModes = v
}

// GetServNameDescs returns the ServNameDescs field value if set, zero value otherwise.
func (o *MBSUserServicePatch) GetServNameDescs() []ServiceNameDescription {
	if o == nil || IsNil(o.ServNameDescs) {
		var ret []ServiceNameDescription
		return ret
	}
	return o.ServNameDescs
}

// GetServNameDescsOk returns a tuple with the ServNameDescs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MBSUserServicePatch) GetServNameDescsOk() ([]ServiceNameDescription, bool) {
	if o == nil || IsNil(o.ServNameDescs) {
		return nil, false
	}
	return o.ServNameDescs, true
}

// HasServNameDescs returns a boolean if a field has been set.
func (o *MBSUserServicePatch) HasServNameDescs() bool {
	if o != nil && !IsNil(o.ServNameDescs) {
		return true
	}

	return false
}

// SetServNameDescs gets a reference to the given []ServiceNameDescription and assigns it to the ServNameDescs field.
func (o *MBSUserServicePatch) SetServNameDescs(v []ServiceNameDescription) {
	o.ServNameDescs = v
}

// GetMainServLang returns the MainServLang field value if set, zero value otherwise.
func (o *MBSUserServicePatch) GetMainServLang() string {
	if o == nil || IsNil(o.MainServLang) {
		var ret string
		return ret
	}
	return *o.MainServLang
}

// GetMainServLangOk returns a tuple with the MainServLang field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MBSUserServicePatch) GetMainServLangOk() (*string, bool) {
	if o == nil || IsNil(o.MainServLang) {
		return nil, false
	}
	return o.MainServLang, true
}

// HasMainServLang returns a boolean if a field has been set.
func (o *MBSUserServicePatch) HasMainServLang() bool {
	if o != nil && !IsNil(o.MainServLang) {
		return true
	}

	return false
}

// SetMainServLang gets a reference to the given string and assigns it to the MainServLang field.
func (o *MBSUserServicePatch) SetMainServLang(v string) {
	o.MainServLang = &v
}

func (o MBSUserServicePatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MBSUserServicePatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExtServiceIds) {
		toSerialize["extServiceIds"] = o.ExtServiceIds
	}
	if !IsNil(o.ServClass) {
		toSerialize["servClass"] = o.ServClass
	}
	if !IsNil(o.ServAnnModes) {
		toSerialize["servAnnModes"] = o.ServAnnModes
	}
	if !IsNil(o.ServNameDescs) {
		toSerialize["servNameDescs"] = o.ServNameDescs
	}
	if !IsNil(o.MainServLang) {
		toSerialize["mainServLang"] = o.MainServLang
	}
	return toSerialize, nil
}

type NullableMBSUserServicePatch struct {
	value *MBSUserServicePatch
	isSet bool
}

func (v NullableMBSUserServicePatch) Get() *MBSUserServicePatch {
	return v.value
}

func (v *NullableMBSUserServicePatch) Set(val *MBSUserServicePatch) {
	v.value = val
	v.isSet = true
}

func (v NullableMBSUserServicePatch) IsSet() bool {
	return v.isSet
}

func (v *NullableMBSUserServicePatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMBSUserServicePatch(val *MBSUserServicePatch) *NullableMBSUserServicePatch {
	return &NullableMBSUserServicePatch{value: val, isSet: true}
}

func (v NullableMBSUserServicePatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMBSUserServicePatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


