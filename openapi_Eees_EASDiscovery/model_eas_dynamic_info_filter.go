/*
Eees_EASDiscovery

API for EAS Discovery. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_EASDiscovery

import (
	"encoding/json"
)

// checks if the EasDynamicInfoFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EasDynamicInfoFilter{}

// EasDynamicInfoFilter Represents EAS dynamic information changes filter.
type EasDynamicInfoFilter struct {
	// List of EAS dynamic information required by the EEC per EAS.
	DynInfoFilter []EasDynamicInfoFilterData `json:"dynInfoFilter"`
}

// NewEasDynamicInfoFilter instantiates a new EasDynamicInfoFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEasDynamicInfoFilter(dynInfoFilter []EasDynamicInfoFilterData) *EasDynamicInfoFilter {
	this := EasDynamicInfoFilter{}
	this.DynInfoFilter = dynInfoFilter
	return &this
}

// NewEasDynamicInfoFilterWithDefaults instantiates a new EasDynamicInfoFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEasDynamicInfoFilterWithDefaults() *EasDynamicInfoFilter {
	this := EasDynamicInfoFilter{}
	return &this
}

// GetDynInfoFilter returns the DynInfoFilter field value
func (o *EasDynamicInfoFilter) GetDynInfoFilter() []EasDynamicInfoFilterData {
	if o == nil {
		var ret []EasDynamicInfoFilterData
		return ret
	}

	return o.DynInfoFilter
}

// GetDynInfoFilterOk returns a tuple with the DynInfoFilter field value
// and a boolean to check if the value has been set.
func (o *EasDynamicInfoFilter) GetDynInfoFilterOk() ([]EasDynamicInfoFilterData, bool) {
	if o == nil {
		return nil, false
	}
	return o.DynInfoFilter, true
}

// SetDynInfoFilter sets field value
func (o *EasDynamicInfoFilter) SetDynInfoFilter(v []EasDynamicInfoFilterData) {
	o.DynInfoFilter = v
}

func (o EasDynamicInfoFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EasDynamicInfoFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dynInfoFilter"] = o.DynInfoFilter
	return toSerialize, nil
}

type NullableEasDynamicInfoFilter struct {
	value *EasDynamicInfoFilter
	isSet bool
}

func (v NullableEasDynamicInfoFilter) Get() *EasDynamicInfoFilter {
	return v.value
}

func (v *NullableEasDynamicInfoFilter) Set(val *EasDynamicInfoFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableEasDynamicInfoFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableEasDynamicInfoFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEasDynamicInfoFilter(val *EasDynamicInfoFilter) *NullableEasDynamicInfoFilter {
	return &NullableEasDynamicInfoFilter{value: val, isSet: true}
}

func (v NullableEasDynamicInfoFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEasDynamicInfoFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


