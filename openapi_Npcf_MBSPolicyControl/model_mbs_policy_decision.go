/*
Npcf_MBSPolicyControl API

MBS Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_MBSPolicyControl

import (
	"encoding/json"
)

// checks if the MbsPolicyDecision type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MbsPolicyDecision{}

// MbsPolicyDecision Represents the parameters constituting an MBS Policy Decision. 
type MbsPolicyDecision struct {
	// A map of MBS PCC rule(s) with each map entry containing the MbsPccRule data structure. The key of the map for each entry is the mbsPccRuleId attribute of the corresponding MbsPccRule data structure. 
	MbsPccRules map[string]MbsPccRule `json:"mbsPccRules,omitempty"`
	// A map of MBS QoS Decision(s) with each map entry containing the MbsQosDec data structure. The key of the map for each entry is the mbsQosId attribute of the corresponding MbsQosDec data structure. 
	MbsQosDecs *map[string]MbsQosDec `json:"mbsQosDecs,omitempty"`
	// A map of MBS QoS Characteristics set(s) with each map entry containing the MbsQosChar data structure. The key of the map for each entry is the 5QI attribute of the corresponding MbsQosDec data structure. 
	MbsQosChars *map[string]MbsQosChar `json:"mbsQosChars,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	AuthMbsSessAmbr *string `json:"authMbsSessAmbr,omitempty"`
	MbsPcrts []MbsPcrt `json:"mbsPcrts,omitempty"`
}

// NewMbsPolicyDecision instantiates a new MbsPolicyDecision object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbsPolicyDecision() *MbsPolicyDecision {
	this := MbsPolicyDecision{}
	return &this
}

// NewMbsPolicyDecisionWithDefaults instantiates a new MbsPolicyDecision object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbsPolicyDecisionWithDefaults() *MbsPolicyDecision {
	this := MbsPolicyDecision{}
	return &this
}

// GetMbsPccRules returns the MbsPccRules field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MbsPolicyDecision) GetMbsPccRules() map[string]MbsPccRule {
	if o == nil {
		var ret map[string]MbsPccRule
		return ret
	}
	return o.MbsPccRules
}

// GetMbsPccRulesOk returns a tuple with the MbsPccRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MbsPolicyDecision) GetMbsPccRulesOk() (*map[string]MbsPccRule, bool) {
	if o == nil || IsNil(o.MbsPccRules) {
		return nil, false
	}
	return &o.MbsPccRules, true
}

// HasMbsPccRules returns a boolean if a field has been set.
func (o *MbsPolicyDecision) HasMbsPccRules() bool {
	if o != nil && IsNil(o.MbsPccRules) {
		return true
	}

	return false
}

// SetMbsPccRules gets a reference to the given map[string]MbsPccRule and assigns it to the MbsPccRules field.
func (o *MbsPolicyDecision) SetMbsPccRules(v map[string]MbsPccRule) {
	o.MbsPccRules = v
}

// GetMbsQosDecs returns the MbsQosDecs field value if set, zero value otherwise.
func (o *MbsPolicyDecision) GetMbsQosDecs() map[string]MbsQosDec {
	if o == nil || IsNil(o.MbsQosDecs) {
		var ret map[string]MbsQosDec
		return ret
	}
	return *o.MbsQosDecs
}

// GetMbsQosDecsOk returns a tuple with the MbsQosDecs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsPolicyDecision) GetMbsQosDecsOk() (*map[string]MbsQosDec, bool) {
	if o == nil || IsNil(o.MbsQosDecs) {
		return nil, false
	}
	return o.MbsQosDecs, true
}

// HasMbsQosDecs returns a boolean if a field has been set.
func (o *MbsPolicyDecision) HasMbsQosDecs() bool {
	if o != nil && !IsNil(o.MbsQosDecs) {
		return true
	}

	return false
}

// SetMbsQosDecs gets a reference to the given map[string]MbsQosDec and assigns it to the MbsQosDecs field.
func (o *MbsPolicyDecision) SetMbsQosDecs(v map[string]MbsQosDec) {
	o.MbsQosDecs = &v
}

// GetMbsQosChars returns the MbsQosChars field value if set, zero value otherwise.
func (o *MbsPolicyDecision) GetMbsQosChars() map[string]MbsQosChar {
	if o == nil || IsNil(o.MbsQosChars) {
		var ret map[string]MbsQosChar
		return ret
	}
	return *o.MbsQosChars
}

// GetMbsQosCharsOk returns a tuple with the MbsQosChars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsPolicyDecision) GetMbsQosCharsOk() (*map[string]MbsQosChar, bool) {
	if o == nil || IsNil(o.MbsQosChars) {
		return nil, false
	}
	return o.MbsQosChars, true
}

// HasMbsQosChars returns a boolean if a field has been set.
func (o *MbsPolicyDecision) HasMbsQosChars() bool {
	if o != nil && !IsNil(o.MbsQosChars) {
		return true
	}

	return false
}

// SetMbsQosChars gets a reference to the given map[string]MbsQosChar and assigns it to the MbsQosChars field.
func (o *MbsPolicyDecision) SetMbsQosChars(v map[string]MbsQosChar) {
	o.MbsQosChars = &v
}

// GetAuthMbsSessAmbr returns the AuthMbsSessAmbr field value if set, zero value otherwise.
func (o *MbsPolicyDecision) GetAuthMbsSessAmbr() string {
	if o == nil || IsNil(o.AuthMbsSessAmbr) {
		var ret string
		return ret
	}
	return *o.AuthMbsSessAmbr
}

// GetAuthMbsSessAmbrOk returns a tuple with the AuthMbsSessAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsPolicyDecision) GetAuthMbsSessAmbrOk() (*string, bool) {
	if o == nil || IsNil(o.AuthMbsSessAmbr) {
		return nil, false
	}
	return o.AuthMbsSessAmbr, true
}

// HasAuthMbsSessAmbr returns a boolean if a field has been set.
func (o *MbsPolicyDecision) HasAuthMbsSessAmbr() bool {
	if o != nil && !IsNil(o.AuthMbsSessAmbr) {
		return true
	}

	return false
}

// SetAuthMbsSessAmbr gets a reference to the given string and assigns it to the AuthMbsSessAmbr field.
func (o *MbsPolicyDecision) SetAuthMbsSessAmbr(v string) {
	o.AuthMbsSessAmbr = &v
}

// GetMbsPcrts returns the MbsPcrts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MbsPolicyDecision) GetMbsPcrts() []MbsPcrt {
	if o == nil {
		var ret []MbsPcrt
		return ret
	}
	return o.MbsPcrts
}

// GetMbsPcrtsOk returns a tuple with the MbsPcrts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MbsPolicyDecision) GetMbsPcrtsOk() ([]MbsPcrt, bool) {
	if o == nil || IsNil(o.MbsPcrts) {
		return nil, false
	}
	return o.MbsPcrts, true
}

// HasMbsPcrts returns a boolean if a field has been set.
func (o *MbsPolicyDecision) HasMbsPcrts() bool {
	if o != nil && IsNil(o.MbsPcrts) {
		return true
	}

	return false
}

// SetMbsPcrts gets a reference to the given []MbsPcrt and assigns it to the MbsPcrts field.
func (o *MbsPolicyDecision) SetMbsPcrts(v []MbsPcrt) {
	o.MbsPcrts = v
}

func (o MbsPolicyDecision) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MbsPolicyDecision) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MbsPccRules != nil {
		toSerialize["mbsPccRules"] = o.MbsPccRules
	}
	if !IsNil(o.MbsQosDecs) {
		toSerialize["mbsQosDecs"] = o.MbsQosDecs
	}
	if !IsNil(o.MbsQosChars) {
		toSerialize["mbsQosChars"] = o.MbsQosChars
	}
	if !IsNil(o.AuthMbsSessAmbr) {
		toSerialize["authMbsSessAmbr"] = o.AuthMbsSessAmbr
	}
	if o.MbsPcrts != nil {
		toSerialize["mbsPcrts"] = o.MbsPcrts
	}
	return toSerialize, nil
}

type NullableMbsPolicyDecision struct {
	value *MbsPolicyDecision
	isSet bool
}

func (v NullableMbsPolicyDecision) Get() *MbsPolicyDecision {
	return v.value
}

func (v *NullableMbsPolicyDecision) Set(val *MbsPolicyDecision) {
	v.value = val
	v.isSet = true
}

func (v NullableMbsPolicyDecision) IsSet() bool {
	return v.isSet
}

func (v *NullableMbsPolicyDecision) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbsPolicyDecision(val *MbsPolicyDecision) *NullableMbsPolicyDecision {
	return &NullableMbsPolicyDecision{value: val, isSet: true}
}

func (v NullableMbsPolicyDecision) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbsPolicyDecision) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


