/*
Nchf_OfflineOnlyCharging

OfflineOnlyCharging Service Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_OfflineOnlyCharging

import (
	"encoding/json"
)

// checks if the RoamingQBCInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoamingQBCInformation{}

// RoamingQBCInformation struct for RoamingQBCInformation
type RoamingQBCInformation struct {
	MultipleQFIcontainer []MultipleQFIcontainer `json:"multipleQFIcontainer,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	UPFID *string `json:"uPFID,omitempty"`
	RoamingChargingProfile *RoamingChargingProfile `json:"roamingChargingProfile,omitempty"`
}

// NewRoamingQBCInformation instantiates a new RoamingQBCInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoamingQBCInformation() *RoamingQBCInformation {
	this := RoamingQBCInformation{}
	return &this
}

// NewRoamingQBCInformationWithDefaults instantiates a new RoamingQBCInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoamingQBCInformationWithDefaults() *RoamingQBCInformation {
	this := RoamingQBCInformation{}
	return &this
}

// GetMultipleQFIcontainer returns the MultipleQFIcontainer field value if set, zero value otherwise.
func (o *RoamingQBCInformation) GetMultipleQFIcontainer() []MultipleQFIcontainer {
	if o == nil || IsNil(o.MultipleQFIcontainer) {
		var ret []MultipleQFIcontainer
		return ret
	}
	return o.MultipleQFIcontainer
}

// GetMultipleQFIcontainerOk returns a tuple with the MultipleQFIcontainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoamingQBCInformation) GetMultipleQFIcontainerOk() ([]MultipleQFIcontainer, bool) {
	if o == nil || IsNil(o.MultipleQFIcontainer) {
		return nil, false
	}
	return o.MultipleQFIcontainer, true
}

// HasMultipleQFIcontainer returns a boolean if a field has been set.
func (o *RoamingQBCInformation) HasMultipleQFIcontainer() bool {
	if o != nil && !IsNil(o.MultipleQFIcontainer) {
		return true
	}

	return false
}

// SetMultipleQFIcontainer gets a reference to the given []MultipleQFIcontainer and assigns it to the MultipleQFIcontainer field.
func (o *RoamingQBCInformation) SetMultipleQFIcontainer(v []MultipleQFIcontainer) {
	o.MultipleQFIcontainer = v
}

// GetUPFID returns the UPFID field value if set, zero value otherwise.
func (o *RoamingQBCInformation) GetUPFID() string {
	if o == nil || IsNil(o.UPFID) {
		var ret string
		return ret
	}
	return *o.UPFID
}

// GetUPFIDOk returns a tuple with the UPFID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoamingQBCInformation) GetUPFIDOk() (*string, bool) {
	if o == nil || IsNil(o.UPFID) {
		return nil, false
	}
	return o.UPFID, true
}

// HasUPFID returns a boolean if a field has been set.
func (o *RoamingQBCInformation) HasUPFID() bool {
	if o != nil && !IsNil(o.UPFID) {
		return true
	}

	return false
}

// SetUPFID gets a reference to the given string and assigns it to the UPFID field.
func (o *RoamingQBCInformation) SetUPFID(v string) {
	o.UPFID = &v
}

// GetRoamingChargingProfile returns the RoamingChargingProfile field value if set, zero value otherwise.
func (o *RoamingQBCInformation) GetRoamingChargingProfile() RoamingChargingProfile {
	if o == nil || IsNil(o.RoamingChargingProfile) {
		var ret RoamingChargingProfile
		return ret
	}
	return *o.RoamingChargingProfile
}

// GetRoamingChargingProfileOk returns a tuple with the RoamingChargingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoamingQBCInformation) GetRoamingChargingProfileOk() (*RoamingChargingProfile, bool) {
	if o == nil || IsNil(o.RoamingChargingProfile) {
		return nil, false
	}
	return o.RoamingChargingProfile, true
}

// HasRoamingChargingProfile returns a boolean if a field has been set.
func (o *RoamingQBCInformation) HasRoamingChargingProfile() bool {
	if o != nil && !IsNil(o.RoamingChargingProfile) {
		return true
	}

	return false
}

// SetRoamingChargingProfile gets a reference to the given RoamingChargingProfile and assigns it to the RoamingChargingProfile field.
func (o *RoamingQBCInformation) SetRoamingChargingProfile(v RoamingChargingProfile) {
	o.RoamingChargingProfile = &v
}

func (o RoamingQBCInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoamingQBCInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MultipleQFIcontainer) {
		toSerialize["multipleQFIcontainer"] = o.MultipleQFIcontainer
	}
	if !IsNil(o.UPFID) {
		toSerialize["uPFID"] = o.UPFID
	}
	if !IsNil(o.RoamingChargingProfile) {
		toSerialize["roamingChargingProfile"] = o.RoamingChargingProfile
	}
	return toSerialize, nil
}

type NullableRoamingQBCInformation struct {
	value *RoamingQBCInformation
	isSet bool
}

func (v NullableRoamingQBCInformation) Get() *RoamingQBCInformation {
	return v.value
}

func (v *NullableRoamingQBCInformation) Set(val *RoamingQBCInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableRoamingQBCInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableRoamingQBCInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoamingQBCInformation(val *RoamingQBCInformation) *NullableRoamingQBCInformation {
	return &NullableRoamingQBCInformation{value: val, isSet: true}
}

func (v NullableRoamingQBCInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoamingQBCInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


