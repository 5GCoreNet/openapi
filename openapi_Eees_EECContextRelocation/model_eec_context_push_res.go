/*
EES EEC Context Relocation API

API for EEC Context Relocation.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_EECContextRelocation

import (
	"encoding/json"
)

// checks if the EECContextPushRes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EECContextPushRes{}

// EECContextPushRes Represents the EEC context push response data.
type EECContextPushRes struct {
	ImplReg *ImplicitRegDetails `json:"implReg,omitempty"`
}

// NewEECContextPushRes instantiates a new EECContextPushRes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEECContextPushRes() *EECContextPushRes {
	this := EECContextPushRes{}
	return &this
}

// NewEECContextPushResWithDefaults instantiates a new EECContextPushRes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEECContextPushResWithDefaults() *EECContextPushRes {
	this := EECContextPushRes{}
	return &this
}

// GetImplReg returns the ImplReg field value if set, zero value otherwise.
func (o *EECContextPushRes) GetImplReg() ImplicitRegDetails {
	if o == nil || isNil(o.ImplReg) {
		var ret ImplicitRegDetails
		return ret
	}
	return *o.ImplReg
}

// GetImplRegOk returns a tuple with the ImplReg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EECContextPushRes) GetImplRegOk() (*ImplicitRegDetails, bool) {
	if o == nil || isNil(o.ImplReg) {
		return nil, false
	}
	return o.ImplReg, true
}

// HasImplReg returns a boolean if a field has been set.
func (o *EECContextPushRes) HasImplReg() bool {
	if o != nil && !isNil(o.ImplReg) {
		return true
	}

	return false
}

// SetImplReg gets a reference to the given ImplicitRegDetails and assigns it to the ImplReg field.
func (o *EECContextPushRes) SetImplReg(v ImplicitRegDetails) {
	o.ImplReg = &v
}

func (o EECContextPushRes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EECContextPushRes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ImplReg) {
		toSerialize["implReg"] = o.ImplReg
	}
	return toSerialize, nil
}

type NullableEECContextPushRes struct {
	value *EECContextPushRes
	isSet bool
}

func (v NullableEECContextPushRes) Get() *EECContextPushRes {
	return v.value
}

func (v *NullableEECContextPushRes) Set(val *EECContextPushRes) {
	v.value = val
	v.isSet = true
}

func (v NullableEECContextPushRes) IsSet() bool {
	return v.isSet
}

func (v *NullableEECContextPushRes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEECContextPushRes(val *EECContextPushRes) *NullableEECContextPushRes {
	return &NullableEECContextPushRes{value: val, isSet: true}
}

func (v NullableEECContextPushRes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEECContextPushRes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


