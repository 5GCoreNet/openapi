/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the NiddInformation1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NiddInformation1{}

// NiddInformation1 struct for NiddInformation1
type NiddInformation1 struct {
	AfId string `json:"afId"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	Gpsi *string `json:"gpsi,omitempty"`
	// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.  
	ExtGroupId *string `json:"extGroupId,omitempty"`
}

// NewNiddInformation1 instantiates a new NiddInformation1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNiddInformation1(afId string) *NiddInformation1 {
	this := NiddInformation1{}
	this.AfId = afId
	return &this
}

// NewNiddInformation1WithDefaults instantiates a new NiddInformation1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNiddInformation1WithDefaults() *NiddInformation1 {
	this := NiddInformation1{}
	return &this
}

// GetAfId returns the AfId field value
func (o *NiddInformation1) GetAfId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AfId
}

// GetAfIdOk returns a tuple with the AfId field value
// and a boolean to check if the value has been set.
func (o *NiddInformation1) GetAfIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AfId, true
}

// SetAfId sets field value
func (o *NiddInformation1) SetAfId(v string) {
	o.AfId = v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *NiddInformation1) GetGpsi() string {
	if o == nil || IsNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NiddInformation1) GetGpsiOk() (*string, bool) {
	if o == nil || IsNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *NiddInformation1) HasGpsi() bool {
	if o != nil && !IsNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *NiddInformation1) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetExtGroupId returns the ExtGroupId field value if set, zero value otherwise.
func (o *NiddInformation1) GetExtGroupId() string {
	if o == nil || IsNil(o.ExtGroupId) {
		var ret string
		return ret
	}
	return *o.ExtGroupId
}

// GetExtGroupIdOk returns a tuple with the ExtGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NiddInformation1) GetExtGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExtGroupId) {
		return nil, false
	}
	return o.ExtGroupId, true
}

// HasExtGroupId returns a boolean if a field has been set.
func (o *NiddInformation1) HasExtGroupId() bool {
	if o != nil && !IsNil(o.ExtGroupId) {
		return true
	}

	return false
}

// SetExtGroupId gets a reference to the given string and assigns it to the ExtGroupId field.
func (o *NiddInformation1) SetExtGroupId(v string) {
	o.ExtGroupId = &v
}

func (o NiddInformation1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NiddInformation1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["afId"] = o.AfId
	if !IsNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !IsNil(o.ExtGroupId) {
		toSerialize["extGroupId"] = o.ExtGroupId
	}
	return toSerialize, nil
}

type NullableNiddInformation1 struct {
	value *NiddInformation1
	isSet bool
}

func (v NullableNiddInformation1) Get() *NiddInformation1 {
	return v.value
}

func (v *NullableNiddInformation1) Set(val *NiddInformation1) {
	v.value = val
	v.isSet = true
}

func (v NullableNiddInformation1) IsSet() bool {
	return v.isSet
}

func (v *NullableNiddInformation1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNiddInformation1(val *NiddInformation1) *NullableNiddInformation1 {
	return &NullableNiddInformation1{value: val, isSet: true}
}

func (v NullableNiddInformation1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNiddInformation1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


