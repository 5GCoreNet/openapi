/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the ProSeAllowedPlmn type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProSeAllowedPlmn{}

// ProSeAllowedPlmn Contains the PLMN identities where the Prose services are authorised to use and the authorised Prose services on this given PLMNs.
type ProSeAllowedPlmn struct {
	VisitedPlmn PlmnId `json:"visitedPlmn"`
	ProseDirectAllowed []ProseDirectAllowed `json:"proseDirectAllowed,omitempty"`
}

// NewProSeAllowedPlmn instantiates a new ProSeAllowedPlmn object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProSeAllowedPlmn(visitedPlmn PlmnId) *ProSeAllowedPlmn {
	this := ProSeAllowedPlmn{}
	this.VisitedPlmn = visitedPlmn
	return &this
}

// NewProSeAllowedPlmnWithDefaults instantiates a new ProSeAllowedPlmn object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProSeAllowedPlmnWithDefaults() *ProSeAllowedPlmn {
	this := ProSeAllowedPlmn{}
	return &this
}

// GetVisitedPlmn returns the VisitedPlmn field value
func (o *ProSeAllowedPlmn) GetVisitedPlmn() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.VisitedPlmn
}

// GetVisitedPlmnOk returns a tuple with the VisitedPlmn field value
// and a boolean to check if the value has been set.
func (o *ProSeAllowedPlmn) GetVisitedPlmnOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VisitedPlmn, true
}

// SetVisitedPlmn sets field value
func (o *ProSeAllowedPlmn) SetVisitedPlmn(v PlmnId) {
	o.VisitedPlmn = v
}

// GetProseDirectAllowed returns the ProseDirectAllowed field value if set, zero value otherwise.
func (o *ProSeAllowedPlmn) GetProseDirectAllowed() []ProseDirectAllowed {
	if o == nil || isNil(o.ProseDirectAllowed) {
		var ret []ProseDirectAllowed
		return ret
	}
	return o.ProseDirectAllowed
}

// GetProseDirectAllowedOk returns a tuple with the ProseDirectAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProSeAllowedPlmn) GetProseDirectAllowedOk() ([]ProseDirectAllowed, bool) {
	if o == nil || isNil(o.ProseDirectAllowed) {
		return nil, false
	}
	return o.ProseDirectAllowed, true
}

// HasProseDirectAllowed returns a boolean if a field has been set.
func (o *ProSeAllowedPlmn) HasProseDirectAllowed() bool {
	if o != nil && !isNil(o.ProseDirectAllowed) {
		return true
	}

	return false
}

// SetProseDirectAllowed gets a reference to the given []ProseDirectAllowed and assigns it to the ProseDirectAllowed field.
func (o *ProSeAllowedPlmn) SetProseDirectAllowed(v []ProseDirectAllowed) {
	o.ProseDirectAllowed = v
}

func (o ProSeAllowedPlmn) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProSeAllowedPlmn) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["visitedPlmn"] = o.VisitedPlmn
	if !isNil(o.ProseDirectAllowed) {
		toSerialize["proseDirectAllowed"] = o.ProseDirectAllowed
	}
	return toSerialize, nil
}

type NullableProSeAllowedPlmn struct {
	value *ProSeAllowedPlmn
	isSet bool
}

func (v NullableProSeAllowedPlmn) Get() *ProSeAllowedPlmn {
	return v.value
}

func (v *NullableProSeAllowedPlmn) Set(val *ProSeAllowedPlmn) {
	v.value = val
	v.isSet = true
}

func (v NullableProSeAllowedPlmn) IsSet() bool {
	return v.isSet
}

func (v *NullableProSeAllowedPlmn) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProSeAllowedPlmn(val *ProSeAllowedPlmn) *NullableProSeAllowedPlmn {
	return &NullableProSeAllowedPlmn{value: val, isSet: true}
}

func (v NullableProSeAllowedPlmn) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProSeAllowedPlmn) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


