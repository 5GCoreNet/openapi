/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the Ambr1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Ambr1{}

// Ambr1 Contains the maximum aggregated uplink and downlink bit rates.
type Ambr1 struct {
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	Uplink string `json:"uplink"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	Downlink string `json:"downlink"`
}

// NewAmbr1 instantiates a new Ambr1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmbr1(uplink string, downlink string) *Ambr1 {
	this := Ambr1{}
	this.Uplink = uplink
	this.Downlink = downlink
	return &this
}

// NewAmbr1WithDefaults instantiates a new Ambr1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmbr1WithDefaults() *Ambr1 {
	this := Ambr1{}
	return &this
}

// GetUplink returns the Uplink field value
func (o *Ambr1) GetUplink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Uplink
}

// GetUplinkOk returns a tuple with the Uplink field value
// and a boolean to check if the value has been set.
func (o *Ambr1) GetUplinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uplink, true
}

// SetUplink sets field value
func (o *Ambr1) SetUplink(v string) {
	o.Uplink = v
}

// GetDownlink returns the Downlink field value
func (o *Ambr1) GetDownlink() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Downlink
}

// GetDownlinkOk returns a tuple with the Downlink field value
// and a boolean to check if the value has been set.
func (o *Ambr1) GetDownlinkOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Downlink, true
}

// SetDownlink sets field value
func (o *Ambr1) SetDownlink(v string) {
	o.Downlink = v
}

func (o Ambr1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Ambr1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uplink"] = o.Uplink
	toSerialize["downlink"] = o.Downlink
	return toSerialize, nil
}

type NullableAmbr1 struct {
	value *Ambr1
	isSet bool
}

func (v NullableAmbr1) Get() *Ambr1 {
	return v.value
}

func (v *NullableAmbr1) Set(val *Ambr1) {
	v.value = val
	v.isSet = true
}

func (v NullableAmbr1) IsSet() bool {
	return v.isSet
}

func (v *NullableAmbr1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmbr1(val *Ambr1) *NullableAmbr1 {
	return &NullableAmbr1{value: val, isSet: true}
}

func (v NullableAmbr1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmbr1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


