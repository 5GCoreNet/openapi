/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the UePolicySetPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UePolicySetPatch{}

// UePolicySetPatch Contains the UE policy set for a given subscriber.
type UePolicySetPatch struct {
	// Contains the UE Policy Sections. The UE Policy Section Identifier is used as the key of the map.
	UePolicySections *map[string]UePolicySection `json:"uePolicySections,omitempty"`
	Upsis            []string                    `json:"upsis,omitempty"`
	AndspInd         *bool                       `json:"andspInd,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.
	Pei   *string  `json:"pei,omitempty"`
	OsIds []string `json:"osIds,omitempty"`
}

// NewUePolicySetPatch instantiates a new UePolicySetPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUePolicySetPatch() *UePolicySetPatch {
	this := UePolicySetPatch{}
	return &this
}

// NewUePolicySetPatchWithDefaults instantiates a new UePolicySetPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUePolicySetPatchWithDefaults() *UePolicySetPatch {
	this := UePolicySetPatch{}
	return &this
}

// GetUePolicySections returns the UePolicySections field value if set, zero value otherwise.
func (o *UePolicySetPatch) GetUePolicySections() map[string]UePolicySection {
	if o == nil || IsNil(o.UePolicySections) {
		var ret map[string]UePolicySection
		return ret
	}
	return *o.UePolicySections
}

// GetUePolicySectionsOk returns a tuple with the UePolicySections field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UePolicySetPatch) GetUePolicySectionsOk() (*map[string]UePolicySection, bool) {
	if o == nil || IsNil(o.UePolicySections) {
		return nil, false
	}
	return o.UePolicySections, true
}

// HasUePolicySections returns a boolean if a field has been set.
func (o *UePolicySetPatch) HasUePolicySections() bool {
	if o != nil && !IsNil(o.UePolicySections) {
		return true
	}

	return false
}

// SetUePolicySections gets a reference to the given map[string]UePolicySection and assigns it to the UePolicySections field.
func (o *UePolicySetPatch) SetUePolicySections(v map[string]UePolicySection) {
	o.UePolicySections = &v
}

// GetUpsis returns the Upsis field value if set, zero value otherwise.
func (o *UePolicySetPatch) GetUpsis() []string {
	if o == nil || IsNil(o.Upsis) {
		var ret []string
		return ret
	}
	return o.Upsis
}

// GetUpsisOk returns a tuple with the Upsis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UePolicySetPatch) GetUpsisOk() ([]string, bool) {
	if o == nil || IsNil(o.Upsis) {
		return nil, false
	}
	return o.Upsis, true
}

// HasUpsis returns a boolean if a field has been set.
func (o *UePolicySetPatch) HasUpsis() bool {
	if o != nil && !IsNil(o.Upsis) {
		return true
	}

	return false
}

// SetUpsis gets a reference to the given []string and assigns it to the Upsis field.
func (o *UePolicySetPatch) SetUpsis(v []string) {
	o.Upsis = v
}

// GetAndspInd returns the AndspInd field value if set, zero value otherwise.
func (o *UePolicySetPatch) GetAndspInd() bool {
	if o == nil || IsNil(o.AndspInd) {
		var ret bool
		return ret
	}
	return *o.AndspInd
}

// GetAndspIndOk returns a tuple with the AndspInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UePolicySetPatch) GetAndspIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AndspInd) {
		return nil, false
	}
	return o.AndspInd, true
}

// HasAndspInd returns a boolean if a field has been set.
func (o *UePolicySetPatch) HasAndspInd() bool {
	if o != nil && !IsNil(o.AndspInd) {
		return true
	}

	return false
}

// SetAndspInd gets a reference to the given bool and assigns it to the AndspInd field.
func (o *UePolicySetPatch) SetAndspInd(v bool) {
	o.AndspInd = &v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *UePolicySetPatch) GetPei() string {
	if o == nil || IsNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UePolicySetPatch) GetPeiOk() (*string, bool) {
	if o == nil || IsNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *UePolicySetPatch) HasPei() bool {
	if o != nil && !IsNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *UePolicySetPatch) SetPei(v string) {
	o.Pei = &v
}

// GetOsIds returns the OsIds field value if set, zero value otherwise.
func (o *UePolicySetPatch) GetOsIds() []string {
	if o == nil || IsNil(o.OsIds) {
		var ret []string
		return ret
	}
	return o.OsIds
}

// GetOsIdsOk returns a tuple with the OsIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UePolicySetPatch) GetOsIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OsIds) {
		return nil, false
	}
	return o.OsIds, true
}

// HasOsIds returns a boolean if a field has been set.
func (o *UePolicySetPatch) HasOsIds() bool {
	if o != nil && !IsNil(o.OsIds) {
		return true
	}

	return false
}

// SetOsIds gets a reference to the given []string and assigns it to the OsIds field.
func (o *UePolicySetPatch) SetOsIds(v []string) {
	o.OsIds = v
}

func (o UePolicySetPatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UePolicySetPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UePolicySections) {
		toSerialize["uePolicySections"] = o.UePolicySections
	}
	if !IsNil(o.Upsis) {
		toSerialize["upsis"] = o.Upsis
	}
	if !IsNil(o.AndspInd) {
		toSerialize["andspInd"] = o.AndspInd
	}
	if !IsNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !IsNil(o.OsIds) {
		toSerialize["osIds"] = o.OsIds
	}
	return toSerialize, nil
}

type NullableUePolicySetPatch struct {
	value *UePolicySetPatch
	isSet bool
}

func (v NullableUePolicySetPatch) Get() *UePolicySetPatch {
	return v.value
}

func (v *NullableUePolicySetPatch) Set(val *UePolicySetPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableUePolicySetPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableUePolicySetPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUePolicySetPatch(val *UePolicySetPatch) *NullableUePolicySetPatch {
	return &NullableUePolicySetPatch{value: val, isSet: true}
}

func (v NullableUePolicySetPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUePolicySetPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
