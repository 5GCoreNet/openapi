/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the AmfSubscriptionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmfSubscriptionInfo{}

// AmfSubscriptionInfo Information the UDR stores and retrieves related to active subscriptions at the AMF(s).
type AmfSubscriptionInfo struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AmfInstanceId string `json:"amfInstanceId"`
	// String providing an URI formatted according to RFC 3986.
	SubscriptionId string `json:"subscriptionId"`
	SubsChangeNotifyCorrelationId *string `json:"subsChangeNotifyCorrelationId,omitempty"`
	ContextInfo *ContextInfo `json:"contextInfo,omitempty"`
}

// NewAmfSubscriptionInfo instantiates a new AmfSubscriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmfSubscriptionInfo(amfInstanceId string, subscriptionId string) *AmfSubscriptionInfo {
	this := AmfSubscriptionInfo{}
	this.AmfInstanceId = amfInstanceId
	this.SubscriptionId = subscriptionId
	return &this
}

// NewAmfSubscriptionInfoWithDefaults instantiates a new AmfSubscriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmfSubscriptionInfoWithDefaults() *AmfSubscriptionInfo {
	this := AmfSubscriptionInfo{}
	return &this
}

// GetAmfInstanceId returns the AmfInstanceId field value
func (o *AmfSubscriptionInfo) GetAmfInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmfInstanceId
}

// GetAmfInstanceIdOk returns a tuple with the AmfInstanceId field value
// and a boolean to check if the value has been set.
func (o *AmfSubscriptionInfo) GetAmfInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmfInstanceId, true
}

// SetAmfInstanceId sets field value
func (o *AmfSubscriptionInfo) SetAmfInstanceId(v string) {
	o.AmfInstanceId = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *AmfSubscriptionInfo) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *AmfSubscriptionInfo) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *AmfSubscriptionInfo) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

// GetSubsChangeNotifyCorrelationId returns the SubsChangeNotifyCorrelationId field value if set, zero value otherwise.
func (o *AmfSubscriptionInfo) GetSubsChangeNotifyCorrelationId() string {
	if o == nil || isNil(o.SubsChangeNotifyCorrelationId) {
		var ret string
		return ret
	}
	return *o.SubsChangeNotifyCorrelationId
}

// GetSubsChangeNotifyCorrelationIdOk returns a tuple with the SubsChangeNotifyCorrelationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmfSubscriptionInfo) GetSubsChangeNotifyCorrelationIdOk() (*string, bool) {
	if o == nil || isNil(o.SubsChangeNotifyCorrelationId) {
		return nil, false
	}
	return o.SubsChangeNotifyCorrelationId, true
}

// HasSubsChangeNotifyCorrelationId returns a boolean if a field has been set.
func (o *AmfSubscriptionInfo) HasSubsChangeNotifyCorrelationId() bool {
	if o != nil && !isNil(o.SubsChangeNotifyCorrelationId) {
		return true
	}

	return false
}

// SetSubsChangeNotifyCorrelationId gets a reference to the given string and assigns it to the SubsChangeNotifyCorrelationId field.
func (o *AmfSubscriptionInfo) SetSubsChangeNotifyCorrelationId(v string) {
	o.SubsChangeNotifyCorrelationId = &v
}

// GetContextInfo returns the ContextInfo field value if set, zero value otherwise.
func (o *AmfSubscriptionInfo) GetContextInfo() ContextInfo {
	if o == nil || isNil(o.ContextInfo) {
		var ret ContextInfo
		return ret
	}
	return *o.ContextInfo
}

// GetContextInfoOk returns a tuple with the ContextInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmfSubscriptionInfo) GetContextInfoOk() (*ContextInfo, bool) {
	if o == nil || isNil(o.ContextInfo) {
		return nil, false
	}
	return o.ContextInfo, true
}

// HasContextInfo returns a boolean if a field has been set.
func (o *AmfSubscriptionInfo) HasContextInfo() bool {
	if o != nil && !isNil(o.ContextInfo) {
		return true
	}

	return false
}

// SetContextInfo gets a reference to the given ContextInfo and assigns it to the ContextInfo field.
func (o *AmfSubscriptionInfo) SetContextInfo(v ContextInfo) {
	o.ContextInfo = &v
}

func (o AmfSubscriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmfSubscriptionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amfInstanceId"] = o.AmfInstanceId
	toSerialize["subscriptionId"] = o.SubscriptionId
	if !isNil(o.SubsChangeNotifyCorrelationId) {
		toSerialize["subsChangeNotifyCorrelationId"] = o.SubsChangeNotifyCorrelationId
	}
	if !isNil(o.ContextInfo) {
		toSerialize["contextInfo"] = o.ContextInfo
	}
	return toSerialize, nil
}

type NullableAmfSubscriptionInfo struct {
	value *AmfSubscriptionInfo
	isSet bool
}

func (v NullableAmfSubscriptionInfo) Get() *AmfSubscriptionInfo {
	return v.value
}

func (v *NullableAmfSubscriptionInfo) Set(val *AmfSubscriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAmfSubscriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAmfSubscriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmfSubscriptionInfo(val *AmfSubscriptionInfo) *NullableAmfSubscriptionInfo {
	return &NullableAmfSubscriptionInfo{value: val, isSet: true}
}

func (v NullableAmfSubscriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmfSubscriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


