/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the UeContextInSmsfData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeContextInSmsfData{}

// UeContextInSmsfData struct for UeContextInSmsfData
type UeContextInSmsfData struct {
	SmsfInfo3GppAccess *SmsfInfo `json:"smsfInfo3GppAccess,omitempty"`
	SmsfInfoNon3GppAccess *SmsfInfo `json:"smsfInfoNon3GppAccess,omitempty"`
}

// NewUeContextInSmsfData instantiates a new UeContextInSmsfData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeContextInSmsfData() *UeContextInSmsfData {
	this := UeContextInSmsfData{}
	return &this
}

// NewUeContextInSmsfDataWithDefaults instantiates a new UeContextInSmsfData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeContextInSmsfDataWithDefaults() *UeContextInSmsfData {
	this := UeContextInSmsfData{}
	return &this
}

// GetSmsfInfo3GppAccess returns the SmsfInfo3GppAccess field value if set, zero value otherwise.
func (o *UeContextInSmsfData) GetSmsfInfo3GppAccess() SmsfInfo {
	if o == nil || IsNil(o.SmsfInfo3GppAccess) {
		var ret SmsfInfo
		return ret
	}
	return *o.SmsfInfo3GppAccess
}

// GetSmsfInfo3GppAccessOk returns a tuple with the SmsfInfo3GppAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContextInSmsfData) GetSmsfInfo3GppAccessOk() (*SmsfInfo, bool) {
	if o == nil || IsNil(o.SmsfInfo3GppAccess) {
		return nil, false
	}
	return o.SmsfInfo3GppAccess, true
}

// HasSmsfInfo3GppAccess returns a boolean if a field has been set.
func (o *UeContextInSmsfData) HasSmsfInfo3GppAccess() bool {
	if o != nil && !IsNil(o.SmsfInfo3GppAccess) {
		return true
	}

	return false
}

// SetSmsfInfo3GppAccess gets a reference to the given SmsfInfo and assigns it to the SmsfInfo3GppAccess field.
func (o *UeContextInSmsfData) SetSmsfInfo3GppAccess(v SmsfInfo) {
	o.SmsfInfo3GppAccess = &v
}

// GetSmsfInfoNon3GppAccess returns the SmsfInfoNon3GppAccess field value if set, zero value otherwise.
func (o *UeContextInSmsfData) GetSmsfInfoNon3GppAccess() SmsfInfo {
	if o == nil || IsNil(o.SmsfInfoNon3GppAccess) {
		var ret SmsfInfo
		return ret
	}
	return *o.SmsfInfoNon3GppAccess
}

// GetSmsfInfoNon3GppAccessOk returns a tuple with the SmsfInfoNon3GppAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeContextInSmsfData) GetSmsfInfoNon3GppAccessOk() (*SmsfInfo, bool) {
	if o == nil || IsNil(o.SmsfInfoNon3GppAccess) {
		return nil, false
	}
	return o.SmsfInfoNon3GppAccess, true
}

// HasSmsfInfoNon3GppAccess returns a boolean if a field has been set.
func (o *UeContextInSmsfData) HasSmsfInfoNon3GppAccess() bool {
	if o != nil && !IsNil(o.SmsfInfoNon3GppAccess) {
		return true
	}

	return false
}

// SetSmsfInfoNon3GppAccess gets a reference to the given SmsfInfo and assigns it to the SmsfInfoNon3GppAccess field.
func (o *UeContextInSmsfData) SetSmsfInfoNon3GppAccess(v SmsfInfo) {
	o.SmsfInfoNon3GppAccess = &v
}

func (o UeContextInSmsfData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeContextInSmsfData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmsfInfo3GppAccess) {
		toSerialize["smsfInfo3GppAccess"] = o.SmsfInfo3GppAccess
	}
	if !IsNil(o.SmsfInfoNon3GppAccess) {
		toSerialize["smsfInfoNon3GppAccess"] = o.SmsfInfoNon3GppAccess
	}
	return toSerialize, nil
}

type NullableUeContextInSmsfData struct {
	value *UeContextInSmsfData
	isSet bool
}

func (v NullableUeContextInSmsfData) Get() *UeContextInSmsfData {
	return v.value
}

func (v *NullableUeContextInSmsfData) Set(val *UeContextInSmsfData) {
	v.value = val
	v.isSet = true
}

func (v NullableUeContextInSmsfData) IsSet() bool {
	return v.isSet
}

func (v *NullableUeContextInSmsfData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeContextInSmsfData(val *UeContextInSmsfData) *NullableUeContextInSmsfData {
	return &NullableUeContextInSmsfData{value: val, isSet: true}
}

func (v NullableUeContextInSmsfData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeContextInSmsfData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


