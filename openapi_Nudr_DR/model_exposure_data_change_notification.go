/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the ExposureDataChangeNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExposureDataChangeNotification{}

// ExposureDataChangeNotification Represents changed exposure data for one UE for which Notification was requested.
type ExposureDataChangeNotification struct {
	// String represents the SUPI or GPSI
	UeId *string `json:"ueId,omitempty"`
	AccessAndMobilityData *AccessAndMobilityData `json:"accessAndMobilityData,omitempty"`
	PduSessionManagementData []PduSessionManagementData `json:"pduSessionManagementData,omitempty"`
	DelResources []string `json:"delResources,omitempty"`
}

// NewExposureDataChangeNotification instantiates a new ExposureDataChangeNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExposureDataChangeNotification() *ExposureDataChangeNotification {
	this := ExposureDataChangeNotification{}
	return &this
}

// NewExposureDataChangeNotificationWithDefaults instantiates a new ExposureDataChangeNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExposureDataChangeNotificationWithDefaults() *ExposureDataChangeNotification {
	this := ExposureDataChangeNotification{}
	return &this
}

// GetUeId returns the UeId field value if set, zero value otherwise.
func (o *ExposureDataChangeNotification) GetUeId() string {
	if o == nil || IsNil(o.UeId) {
		var ret string
		return ret
	}
	return *o.UeId
}

// GetUeIdOk returns a tuple with the UeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExposureDataChangeNotification) GetUeIdOk() (*string, bool) {
	if o == nil || IsNil(o.UeId) {
		return nil, false
	}
	return o.UeId, true
}

// HasUeId returns a boolean if a field has been set.
func (o *ExposureDataChangeNotification) HasUeId() bool {
	if o != nil && !IsNil(o.UeId) {
		return true
	}

	return false
}

// SetUeId gets a reference to the given string and assigns it to the UeId field.
func (o *ExposureDataChangeNotification) SetUeId(v string) {
	o.UeId = &v
}

// GetAccessAndMobilityData returns the AccessAndMobilityData field value if set, zero value otherwise.
func (o *ExposureDataChangeNotification) GetAccessAndMobilityData() AccessAndMobilityData {
	if o == nil || IsNil(o.AccessAndMobilityData) {
		var ret AccessAndMobilityData
		return ret
	}
	return *o.AccessAndMobilityData
}

// GetAccessAndMobilityDataOk returns a tuple with the AccessAndMobilityData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExposureDataChangeNotification) GetAccessAndMobilityDataOk() (*AccessAndMobilityData, bool) {
	if o == nil || IsNil(o.AccessAndMobilityData) {
		return nil, false
	}
	return o.AccessAndMobilityData, true
}

// HasAccessAndMobilityData returns a boolean if a field has been set.
func (o *ExposureDataChangeNotification) HasAccessAndMobilityData() bool {
	if o != nil && !IsNil(o.AccessAndMobilityData) {
		return true
	}

	return false
}

// SetAccessAndMobilityData gets a reference to the given AccessAndMobilityData and assigns it to the AccessAndMobilityData field.
func (o *ExposureDataChangeNotification) SetAccessAndMobilityData(v AccessAndMobilityData) {
	o.AccessAndMobilityData = &v
}

// GetPduSessionManagementData returns the PduSessionManagementData field value if set, zero value otherwise.
func (o *ExposureDataChangeNotification) GetPduSessionManagementData() []PduSessionManagementData {
	if o == nil || IsNil(o.PduSessionManagementData) {
		var ret []PduSessionManagementData
		return ret
	}
	return o.PduSessionManagementData
}

// GetPduSessionManagementDataOk returns a tuple with the PduSessionManagementData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExposureDataChangeNotification) GetPduSessionManagementDataOk() ([]PduSessionManagementData, bool) {
	if o == nil || IsNil(o.PduSessionManagementData) {
		return nil, false
	}
	return o.PduSessionManagementData, true
}

// HasPduSessionManagementData returns a boolean if a field has been set.
func (o *ExposureDataChangeNotification) HasPduSessionManagementData() bool {
	if o != nil && !IsNil(o.PduSessionManagementData) {
		return true
	}

	return false
}

// SetPduSessionManagementData gets a reference to the given []PduSessionManagementData and assigns it to the PduSessionManagementData field.
func (o *ExposureDataChangeNotification) SetPduSessionManagementData(v []PduSessionManagementData) {
	o.PduSessionManagementData = v
}

// GetDelResources returns the DelResources field value if set, zero value otherwise.
func (o *ExposureDataChangeNotification) GetDelResources() []string {
	if o == nil || IsNil(o.DelResources) {
		var ret []string
		return ret
	}
	return o.DelResources
}

// GetDelResourcesOk returns a tuple with the DelResources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExposureDataChangeNotification) GetDelResourcesOk() ([]string, bool) {
	if o == nil || IsNil(o.DelResources) {
		return nil, false
	}
	return o.DelResources, true
}

// HasDelResources returns a boolean if a field has been set.
func (o *ExposureDataChangeNotification) HasDelResources() bool {
	if o != nil && !IsNil(o.DelResources) {
		return true
	}

	return false
}

// SetDelResources gets a reference to the given []string and assigns it to the DelResources field.
func (o *ExposureDataChangeNotification) SetDelResources(v []string) {
	o.DelResources = v
}

func (o ExposureDataChangeNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExposureDataChangeNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UeId) {
		toSerialize["ueId"] = o.UeId
	}
	if !IsNil(o.AccessAndMobilityData) {
		toSerialize["accessAndMobilityData"] = o.AccessAndMobilityData
	}
	if !IsNil(o.PduSessionManagementData) {
		toSerialize["pduSessionManagementData"] = o.PduSessionManagementData
	}
	if !IsNil(o.DelResources) {
		toSerialize["delResources"] = o.DelResources
	}
	return toSerialize, nil
}

type NullableExposureDataChangeNotification struct {
	value *ExposureDataChangeNotification
	isSet bool
}

func (v NullableExposureDataChangeNotification) Get() *ExposureDataChangeNotification {
	return v.value
}

func (v *NullableExposureDataChangeNotification) Set(val *ExposureDataChangeNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableExposureDataChangeNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableExposureDataChangeNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExposureDataChangeNotification(val *ExposureDataChangeNotification) *NullableExposureDataChangeNotification {
	return &NullableExposureDataChangeNotification{value: val, isSet: true}
}

func (v NullableExposureDataChangeNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExposureDataChangeNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


