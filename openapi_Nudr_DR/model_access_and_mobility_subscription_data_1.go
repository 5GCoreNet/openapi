/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the AccessAndMobilitySubscriptionData1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessAndMobilitySubscriptionData1{}

// AccessAndMobilitySubscriptionData1 struct for AccessAndMobilitySubscriptionData1
type AccessAndMobilitySubscriptionData1 struct {
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	Gpsis []string `json:"gpsis,omitempty"`
	// Identifier of a group of NFs.
	HssGroupId *string `json:"hssGroupId,omitempty"`
	InternalGroupIds []string `json:"internalGroupIds,omitempty"`
	// A map(list of key-value pairs) where GroupId serves as key of SharedDataId
	SharedVnGroupDataIds *map[string]string `json:"sharedVnGroupDataIds,omitempty"`
	SubscribedUeAmbr *AmbrRm `json:"subscribedUeAmbr,omitempty"`
	Nssai NullableNssai1 `json:"nssai,omitempty"`
	RatRestrictions []RatType `json:"ratRestrictions,omitempty"`
	ForbiddenAreas []Area1 `json:"forbiddenAreas,omitempty"`
	ServiceAreaRestriction *ServiceAreaRestriction1 `json:"serviceAreaRestriction,omitempty"`
	CoreNetworkTypeRestrictions []CoreNetworkType `json:"coreNetworkTypeRestrictions,omitempty"`
	AccessTypeRestrictions []AccessType `json:"accessTypeRestrictions,omitempty"`
	// Unsigned integer representing the 'Subscriber Profile ID for RAT/Frequency Priority'  as specified in 3GPP TS 36.413 with the OpenAPI 'nullable: true' property.  
	RfspIndex NullableInt32 `json:"rfspIndex,omitempty"`
	// indicating a time in seconds with OpenAPI defined 'nullable: true' property.
	SubsRegTimer NullableInt32 `json:"subsRegTimer,omitempty"`
	UeUsageType *int32 `json:"ueUsageType,omitempty"`
	MpsPriority *bool `json:"mpsPriority,omitempty"`
	McsPriority *bool `json:"mcsPriority,omitempty"`
	// indicating a time in seconds with OpenAPI defined 'nullable: true' property.
	ActiveTime NullableInt32 `json:"activeTime,omitempty"`
	SorInfo *SorInfo1 `json:"sorInfo,omitempty"`
	SorInfoExpectInd *bool `json:"sorInfoExpectInd,omitempty"`
	SorafRetrieval *bool `json:"sorafRetrieval,omitempty"`
	SorUpdateIndicatorList []SorUpdateIndicator `json:"sorUpdateIndicatorList,omitempty"`
	UpuInfo *UpuInfo1 `json:"upuInfo,omitempty"`
	RoutingIndicator *string `json:"routingIndicator,omitempty"`
	MicoAllowed *bool `json:"micoAllowed,omitempty"`
	SharedAmDataIds []string `json:"sharedAmDataIds,omitempty"`
	OdbPacketServices *OdbPacketServices `json:"odbPacketServices,omitempty"`
	SubscribedDnnList []AccessAndMobilitySubscriptionDataSubscribedDnnListInner `json:"subscribedDnnList,omitempty"`
	// indicating a time in seconds.
	ServiceGapTime *int32 `json:"serviceGapTime,omitempty"`
	MdtUserConsent *MdtUserConsent `json:"mdtUserConsent,omitempty"`
	MdtConfiguration *MdtConfiguration1 `json:"mdtConfiguration,omitempty"`
	TraceData NullableTraceData `json:"traceData,omitempty"`
	CagData *CagData1 `json:"cagData,omitempty"`
	// String representing the STN-SR as defined in clause 18.6 of 3GPP TS 23.003.
	StnSr *string `json:"stnSr,omitempty"`
	// String representing the C-MSISDN as defined in clause 18.7 of 3GPP TS 23.003.
	CMsisdn *string `json:"cMsisdn,omitempty"`
	NbIoTUePriority *int32 `json:"nbIoTUePriority,omitempty"`
	NssaiInclusionAllowed *bool `json:"nssaiInclusionAllowed,omitempty"`
	// string with format 'bytes' as defined in OpenAPI
	RgWirelineCharacteristics *string `json:"rgWirelineCharacteristics,omitempty"`
	EcRestrictionDataWb *EcRestrictionDataWb `json:"ecRestrictionDataWb,omitempty"`
	EcRestrictionDataNb *bool `json:"ecRestrictionDataNb,omitempty"`
	ExpectedUeBehaviourList *ExpectedUeBehaviourData1 `json:"expectedUeBehaviourList,omitempty"`
	PrimaryRatRestrictions []RatType `json:"primaryRatRestrictions,omitempty"`
	SecondaryRatRestrictions []RatType `json:"secondaryRatRestrictions,omitempty"`
	EdrxParametersList []EdrxParameters1 `json:"edrxParametersList,omitempty"`
	PtwParametersList []PtwParameters1 `json:"ptwParametersList,omitempty"`
	IabOperationAllowed *bool `json:"iabOperationAllowed,omitempty"`
	// A map (list of key-value pairs where PlmnId serves as key) of PlmnRestriction
	AdjacentPlmnRestrictions *map[string]PlmnRestriction1 `json:"adjacentPlmnRestrictions,omitempty"`
	WirelineForbiddenAreas []WirelineArea1 `json:"wirelineForbiddenAreas,omitempty"`
	WirelineServiceAreaRestriction *WirelineServiceAreaRestriction1 `json:"wirelineServiceAreaRestriction,omitempty"`
	PcfSelectionAssistanceInfos []PcfSelectionAssistanceInfo1 `json:"pcfSelectionAssistanceInfos,omitempty"`
	AerialUeSubInfo *AerialUeSubscriptionInfo1 `json:"aerialUeSubInfo,omitempty"`
	RoamingRestrictions *RoamingRestrictions `json:"roamingRestrictions,omitempty"`
	RemoteProvInd *bool `json:"remoteProvInd,omitempty"`
}

// NewAccessAndMobilitySubscriptionData1 instantiates a new AccessAndMobilitySubscriptionData1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessAndMobilitySubscriptionData1() *AccessAndMobilitySubscriptionData1 {
	this := AccessAndMobilitySubscriptionData1{}
	var sorafRetrieval bool = false
	this.SorafRetrieval = &sorafRetrieval
	var nssaiInclusionAllowed bool = false
	this.NssaiInclusionAllowed = &nssaiInclusionAllowed
	var ecRestrictionDataNb bool = false
	this.EcRestrictionDataNb = &ecRestrictionDataNb
	var iabOperationAllowed bool = false
	this.IabOperationAllowed = &iabOperationAllowed
	var remoteProvInd bool = false
	this.RemoteProvInd = &remoteProvInd
	return &this
}

// NewAccessAndMobilitySubscriptionData1WithDefaults instantiates a new AccessAndMobilitySubscriptionData1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessAndMobilitySubscriptionData1WithDefaults() *AccessAndMobilitySubscriptionData1 {
	this := AccessAndMobilitySubscriptionData1{}
	var sorafRetrieval bool = false
	this.SorafRetrieval = &sorafRetrieval
	var nssaiInclusionAllowed bool = false
	this.NssaiInclusionAllowed = &nssaiInclusionAllowed
	var ecRestrictionDataNb bool = false
	this.EcRestrictionDataNb = &ecRestrictionDataNb
	var iabOperationAllowed bool = false
	this.IabOperationAllowed = &iabOperationAllowed
	var remoteProvInd bool = false
	this.RemoteProvInd = &remoteProvInd
	return &this
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *AccessAndMobilitySubscriptionData1) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetGpsis returns the Gpsis field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetGpsis() []string {
	if o == nil || IsNil(o.Gpsis) {
		var ret []string
		return ret
	}
	return o.Gpsis
}

// GetGpsisOk returns a tuple with the Gpsis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetGpsisOk() ([]string, bool) {
	if o == nil || IsNil(o.Gpsis) {
		return nil, false
	}
	return o.Gpsis, true
}

// HasGpsis returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasGpsis() bool {
	if o != nil && !IsNil(o.Gpsis) {
		return true
	}

	return false
}

// SetGpsis gets a reference to the given []string and assigns it to the Gpsis field.
func (o *AccessAndMobilitySubscriptionData1) SetGpsis(v []string) {
	o.Gpsis = v
}

// GetHssGroupId returns the HssGroupId field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetHssGroupId() string {
	if o == nil || IsNil(o.HssGroupId) {
		var ret string
		return ret
	}
	return *o.HssGroupId
}

// GetHssGroupIdOk returns a tuple with the HssGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetHssGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.HssGroupId) {
		return nil, false
	}
	return o.HssGroupId, true
}

// HasHssGroupId returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasHssGroupId() bool {
	if o != nil && !IsNil(o.HssGroupId) {
		return true
	}

	return false
}

// SetHssGroupId gets a reference to the given string and assigns it to the HssGroupId field.
func (o *AccessAndMobilitySubscriptionData1) SetHssGroupId(v string) {
	o.HssGroupId = &v
}

// GetInternalGroupIds returns the InternalGroupIds field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetInternalGroupIds() []string {
	if o == nil || IsNil(o.InternalGroupIds) {
		var ret []string
		return ret
	}
	return o.InternalGroupIds
}

// GetInternalGroupIdsOk returns a tuple with the InternalGroupIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetInternalGroupIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.InternalGroupIds) {
		return nil, false
	}
	return o.InternalGroupIds, true
}

// HasInternalGroupIds returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasInternalGroupIds() bool {
	if o != nil && !IsNil(o.InternalGroupIds) {
		return true
	}

	return false
}

// SetInternalGroupIds gets a reference to the given []string and assigns it to the InternalGroupIds field.
func (o *AccessAndMobilitySubscriptionData1) SetInternalGroupIds(v []string) {
	o.InternalGroupIds = v
}

// GetSharedVnGroupDataIds returns the SharedVnGroupDataIds field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSharedVnGroupDataIds() map[string]string {
	if o == nil || IsNil(o.SharedVnGroupDataIds) {
		var ret map[string]string
		return ret
	}
	return *o.SharedVnGroupDataIds
}

// GetSharedVnGroupDataIdsOk returns a tuple with the SharedVnGroupDataIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSharedVnGroupDataIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.SharedVnGroupDataIds) {
		return nil, false
	}
	return o.SharedVnGroupDataIds, true
}

// HasSharedVnGroupDataIds returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSharedVnGroupDataIds() bool {
	if o != nil && !IsNil(o.SharedVnGroupDataIds) {
		return true
	}

	return false
}

// SetSharedVnGroupDataIds gets a reference to the given map[string]string and assigns it to the SharedVnGroupDataIds field.
func (o *AccessAndMobilitySubscriptionData1) SetSharedVnGroupDataIds(v map[string]string) {
	o.SharedVnGroupDataIds = &v
}

// GetSubscribedUeAmbr returns the SubscribedUeAmbr field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSubscribedUeAmbr() AmbrRm {
	if o == nil || IsNil(o.SubscribedUeAmbr) {
		var ret AmbrRm
		return ret
	}
	return *o.SubscribedUeAmbr
}

// GetSubscribedUeAmbrOk returns a tuple with the SubscribedUeAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSubscribedUeAmbrOk() (*AmbrRm, bool) {
	if o == nil || IsNil(o.SubscribedUeAmbr) {
		return nil, false
	}
	return o.SubscribedUeAmbr, true
}

// HasSubscribedUeAmbr returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSubscribedUeAmbr() bool {
	if o != nil && !IsNil(o.SubscribedUeAmbr) {
		return true
	}

	return false
}

// SetSubscribedUeAmbr gets a reference to the given AmbrRm and assigns it to the SubscribedUeAmbr field.
func (o *AccessAndMobilitySubscriptionData1) SetSubscribedUeAmbr(v AmbrRm) {
	o.SubscribedUeAmbr = &v
}

// GetNssai returns the Nssai field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessAndMobilitySubscriptionData1) GetNssai() Nssai1 {
	if o == nil || IsNil(o.Nssai.Get()) {
		var ret Nssai1
		return ret
	}
	return *o.Nssai.Get()
}

// GetNssaiOk returns a tuple with the Nssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessAndMobilitySubscriptionData1) GetNssaiOk() (*Nssai1, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nssai.Get(), o.Nssai.IsSet()
}

// HasNssai returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasNssai() bool {
	if o != nil && o.Nssai.IsSet() {
		return true
	}

	return false
}

// SetNssai gets a reference to the given NullableNssai1 and assigns it to the Nssai field.
func (o *AccessAndMobilitySubscriptionData1) SetNssai(v Nssai1) {
	o.Nssai.Set(&v)
}
// SetNssaiNil sets the value for Nssai to be an explicit nil
func (o *AccessAndMobilitySubscriptionData1) SetNssaiNil() {
	o.Nssai.Set(nil)
}

// UnsetNssai ensures that no value is present for Nssai, not even an explicit nil
func (o *AccessAndMobilitySubscriptionData1) UnsetNssai() {
	o.Nssai.Unset()
}

// GetRatRestrictions returns the RatRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetRatRestrictions() []RatType {
	if o == nil || IsNil(o.RatRestrictions) {
		var ret []RatType
		return ret
	}
	return o.RatRestrictions
}

// GetRatRestrictionsOk returns a tuple with the RatRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetRatRestrictionsOk() ([]RatType, bool) {
	if o == nil || IsNil(o.RatRestrictions) {
		return nil, false
	}
	return o.RatRestrictions, true
}

// HasRatRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRatRestrictions() bool {
	if o != nil && !IsNil(o.RatRestrictions) {
		return true
	}

	return false
}

// SetRatRestrictions gets a reference to the given []RatType and assigns it to the RatRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetRatRestrictions(v []RatType) {
	o.RatRestrictions = v
}

// GetForbiddenAreas returns the ForbiddenAreas field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetForbiddenAreas() []Area1 {
	if o == nil || IsNil(o.ForbiddenAreas) {
		var ret []Area1
		return ret
	}
	return o.ForbiddenAreas
}

// GetForbiddenAreasOk returns a tuple with the ForbiddenAreas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetForbiddenAreasOk() ([]Area1, bool) {
	if o == nil || IsNil(o.ForbiddenAreas) {
		return nil, false
	}
	return o.ForbiddenAreas, true
}

// HasForbiddenAreas returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasForbiddenAreas() bool {
	if o != nil && !IsNil(o.ForbiddenAreas) {
		return true
	}

	return false
}

// SetForbiddenAreas gets a reference to the given []Area1 and assigns it to the ForbiddenAreas field.
func (o *AccessAndMobilitySubscriptionData1) SetForbiddenAreas(v []Area1) {
	o.ForbiddenAreas = v
}

// GetServiceAreaRestriction returns the ServiceAreaRestriction field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetServiceAreaRestriction() ServiceAreaRestriction1 {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		var ret ServiceAreaRestriction1
		return ret
	}
	return *o.ServiceAreaRestriction
}

// GetServiceAreaRestrictionOk returns a tuple with the ServiceAreaRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetServiceAreaRestrictionOk() (*ServiceAreaRestriction1, bool) {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		return nil, false
	}
	return o.ServiceAreaRestriction, true
}

// HasServiceAreaRestriction returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasServiceAreaRestriction() bool {
	if o != nil && !IsNil(o.ServiceAreaRestriction) {
		return true
	}

	return false
}

// SetServiceAreaRestriction gets a reference to the given ServiceAreaRestriction1 and assigns it to the ServiceAreaRestriction field.
func (o *AccessAndMobilitySubscriptionData1) SetServiceAreaRestriction(v ServiceAreaRestriction1) {
	o.ServiceAreaRestriction = &v
}

// GetCoreNetworkTypeRestrictions returns the CoreNetworkTypeRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetCoreNetworkTypeRestrictions() []CoreNetworkType {
	if o == nil || IsNil(o.CoreNetworkTypeRestrictions) {
		var ret []CoreNetworkType
		return ret
	}
	return o.CoreNetworkTypeRestrictions
}

// GetCoreNetworkTypeRestrictionsOk returns a tuple with the CoreNetworkTypeRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetCoreNetworkTypeRestrictionsOk() ([]CoreNetworkType, bool) {
	if o == nil || IsNil(o.CoreNetworkTypeRestrictions) {
		return nil, false
	}
	return o.CoreNetworkTypeRestrictions, true
}

// HasCoreNetworkTypeRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasCoreNetworkTypeRestrictions() bool {
	if o != nil && !IsNil(o.CoreNetworkTypeRestrictions) {
		return true
	}

	return false
}

// SetCoreNetworkTypeRestrictions gets a reference to the given []CoreNetworkType and assigns it to the CoreNetworkTypeRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetCoreNetworkTypeRestrictions(v []CoreNetworkType) {
	o.CoreNetworkTypeRestrictions = v
}

// GetAccessTypeRestrictions returns the AccessTypeRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetAccessTypeRestrictions() []AccessType {
	if o == nil || IsNil(o.AccessTypeRestrictions) {
		var ret []AccessType
		return ret
	}
	return o.AccessTypeRestrictions
}

// GetAccessTypeRestrictionsOk returns a tuple with the AccessTypeRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetAccessTypeRestrictionsOk() ([]AccessType, bool) {
	if o == nil || IsNil(o.AccessTypeRestrictions) {
		return nil, false
	}
	return o.AccessTypeRestrictions, true
}

// HasAccessTypeRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasAccessTypeRestrictions() bool {
	if o != nil && !IsNil(o.AccessTypeRestrictions) {
		return true
	}

	return false
}

// SetAccessTypeRestrictions gets a reference to the given []AccessType and assigns it to the AccessTypeRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetAccessTypeRestrictions(v []AccessType) {
	o.AccessTypeRestrictions = v
}

// GetRfspIndex returns the RfspIndex field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessAndMobilitySubscriptionData1) GetRfspIndex() int32 {
	if o == nil || IsNil(o.RfspIndex.Get()) {
		var ret int32
		return ret
	}
	return *o.RfspIndex.Get()
}

// GetRfspIndexOk returns a tuple with the RfspIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessAndMobilitySubscriptionData1) GetRfspIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RfspIndex.Get(), o.RfspIndex.IsSet()
}

// HasRfspIndex returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRfspIndex() bool {
	if o != nil && o.RfspIndex.IsSet() {
		return true
	}

	return false
}

// SetRfspIndex gets a reference to the given NullableInt32 and assigns it to the RfspIndex field.
func (o *AccessAndMobilitySubscriptionData1) SetRfspIndex(v int32) {
	o.RfspIndex.Set(&v)
}
// SetRfspIndexNil sets the value for RfspIndex to be an explicit nil
func (o *AccessAndMobilitySubscriptionData1) SetRfspIndexNil() {
	o.RfspIndex.Set(nil)
}

// UnsetRfspIndex ensures that no value is present for RfspIndex, not even an explicit nil
func (o *AccessAndMobilitySubscriptionData1) UnsetRfspIndex() {
	o.RfspIndex.Unset()
}

// GetSubsRegTimer returns the SubsRegTimer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessAndMobilitySubscriptionData1) GetSubsRegTimer() int32 {
	if o == nil || IsNil(o.SubsRegTimer.Get()) {
		var ret int32
		return ret
	}
	return *o.SubsRegTimer.Get()
}

// GetSubsRegTimerOk returns a tuple with the SubsRegTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessAndMobilitySubscriptionData1) GetSubsRegTimerOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubsRegTimer.Get(), o.SubsRegTimer.IsSet()
}

// HasSubsRegTimer returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSubsRegTimer() bool {
	if o != nil && o.SubsRegTimer.IsSet() {
		return true
	}

	return false
}

// SetSubsRegTimer gets a reference to the given NullableInt32 and assigns it to the SubsRegTimer field.
func (o *AccessAndMobilitySubscriptionData1) SetSubsRegTimer(v int32) {
	o.SubsRegTimer.Set(&v)
}
// SetSubsRegTimerNil sets the value for SubsRegTimer to be an explicit nil
func (o *AccessAndMobilitySubscriptionData1) SetSubsRegTimerNil() {
	o.SubsRegTimer.Set(nil)
}

// UnsetSubsRegTimer ensures that no value is present for SubsRegTimer, not even an explicit nil
func (o *AccessAndMobilitySubscriptionData1) UnsetSubsRegTimer() {
	o.SubsRegTimer.Unset()
}

// GetUeUsageType returns the UeUsageType field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetUeUsageType() int32 {
	if o == nil || IsNil(o.UeUsageType) {
		var ret int32
		return ret
	}
	return *o.UeUsageType
}

// GetUeUsageTypeOk returns a tuple with the UeUsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetUeUsageTypeOk() (*int32, bool) {
	if o == nil || IsNil(o.UeUsageType) {
		return nil, false
	}
	return o.UeUsageType, true
}

// HasUeUsageType returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasUeUsageType() bool {
	if o != nil && !IsNil(o.UeUsageType) {
		return true
	}

	return false
}

// SetUeUsageType gets a reference to the given int32 and assigns it to the UeUsageType field.
func (o *AccessAndMobilitySubscriptionData1) SetUeUsageType(v int32) {
	o.UeUsageType = &v
}

// GetMpsPriority returns the MpsPriority field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetMpsPriority() bool {
	if o == nil || IsNil(o.MpsPriority) {
		var ret bool
		return ret
	}
	return *o.MpsPriority
}

// GetMpsPriorityOk returns a tuple with the MpsPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetMpsPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.MpsPriority) {
		return nil, false
	}
	return o.MpsPriority, true
}

// HasMpsPriority returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasMpsPriority() bool {
	if o != nil && !IsNil(o.MpsPriority) {
		return true
	}

	return false
}

// SetMpsPriority gets a reference to the given bool and assigns it to the MpsPriority field.
func (o *AccessAndMobilitySubscriptionData1) SetMpsPriority(v bool) {
	o.MpsPriority = &v
}

// GetMcsPriority returns the McsPriority field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetMcsPriority() bool {
	if o == nil || IsNil(o.McsPriority) {
		var ret bool
		return ret
	}
	return *o.McsPriority
}

// GetMcsPriorityOk returns a tuple with the McsPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetMcsPriorityOk() (*bool, bool) {
	if o == nil || IsNil(o.McsPriority) {
		return nil, false
	}
	return o.McsPriority, true
}

// HasMcsPriority returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasMcsPriority() bool {
	if o != nil && !IsNil(o.McsPriority) {
		return true
	}

	return false
}

// SetMcsPriority gets a reference to the given bool and assigns it to the McsPriority field.
func (o *AccessAndMobilitySubscriptionData1) SetMcsPriority(v bool) {
	o.McsPriority = &v
}

// GetActiveTime returns the ActiveTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessAndMobilitySubscriptionData1) GetActiveTime() int32 {
	if o == nil || IsNil(o.ActiveTime.Get()) {
		var ret int32
		return ret
	}
	return *o.ActiveTime.Get()
}

// GetActiveTimeOk returns a tuple with the ActiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessAndMobilitySubscriptionData1) GetActiveTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveTime.Get(), o.ActiveTime.IsSet()
}

// HasActiveTime returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasActiveTime() bool {
	if o != nil && o.ActiveTime.IsSet() {
		return true
	}

	return false
}

// SetActiveTime gets a reference to the given NullableInt32 and assigns it to the ActiveTime field.
func (o *AccessAndMobilitySubscriptionData1) SetActiveTime(v int32) {
	o.ActiveTime.Set(&v)
}
// SetActiveTimeNil sets the value for ActiveTime to be an explicit nil
func (o *AccessAndMobilitySubscriptionData1) SetActiveTimeNil() {
	o.ActiveTime.Set(nil)
}

// UnsetActiveTime ensures that no value is present for ActiveTime, not even an explicit nil
func (o *AccessAndMobilitySubscriptionData1) UnsetActiveTime() {
	o.ActiveTime.Unset()
}

// GetSorInfo returns the SorInfo field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSorInfo() SorInfo1 {
	if o == nil || IsNil(o.SorInfo) {
		var ret SorInfo1
		return ret
	}
	return *o.SorInfo
}

// GetSorInfoOk returns a tuple with the SorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSorInfoOk() (*SorInfo1, bool) {
	if o == nil || IsNil(o.SorInfo) {
		return nil, false
	}
	return o.SorInfo, true
}

// HasSorInfo returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSorInfo() bool {
	if o != nil && !IsNil(o.SorInfo) {
		return true
	}

	return false
}

// SetSorInfo gets a reference to the given SorInfo1 and assigns it to the SorInfo field.
func (o *AccessAndMobilitySubscriptionData1) SetSorInfo(v SorInfo1) {
	o.SorInfo = &v
}

// GetSorInfoExpectInd returns the SorInfoExpectInd field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSorInfoExpectInd() bool {
	if o == nil || IsNil(o.SorInfoExpectInd) {
		var ret bool
		return ret
	}
	return *o.SorInfoExpectInd
}

// GetSorInfoExpectIndOk returns a tuple with the SorInfoExpectInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSorInfoExpectIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SorInfoExpectInd) {
		return nil, false
	}
	return o.SorInfoExpectInd, true
}

// HasSorInfoExpectInd returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSorInfoExpectInd() bool {
	if o != nil && !IsNil(o.SorInfoExpectInd) {
		return true
	}

	return false
}

// SetSorInfoExpectInd gets a reference to the given bool and assigns it to the SorInfoExpectInd field.
func (o *AccessAndMobilitySubscriptionData1) SetSorInfoExpectInd(v bool) {
	o.SorInfoExpectInd = &v
}

// GetSorafRetrieval returns the SorafRetrieval field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSorafRetrieval() bool {
	if o == nil || IsNil(o.SorafRetrieval) {
		var ret bool
		return ret
	}
	return *o.SorafRetrieval
}

// GetSorafRetrievalOk returns a tuple with the SorafRetrieval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSorafRetrievalOk() (*bool, bool) {
	if o == nil || IsNil(o.SorafRetrieval) {
		return nil, false
	}
	return o.SorafRetrieval, true
}

// HasSorafRetrieval returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSorafRetrieval() bool {
	if o != nil && !IsNil(o.SorafRetrieval) {
		return true
	}

	return false
}

// SetSorafRetrieval gets a reference to the given bool and assigns it to the SorafRetrieval field.
func (o *AccessAndMobilitySubscriptionData1) SetSorafRetrieval(v bool) {
	o.SorafRetrieval = &v
}

// GetSorUpdateIndicatorList returns the SorUpdateIndicatorList field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSorUpdateIndicatorList() []SorUpdateIndicator {
	if o == nil || IsNil(o.SorUpdateIndicatorList) {
		var ret []SorUpdateIndicator
		return ret
	}
	return o.SorUpdateIndicatorList
}

// GetSorUpdateIndicatorListOk returns a tuple with the SorUpdateIndicatorList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSorUpdateIndicatorListOk() ([]SorUpdateIndicator, bool) {
	if o == nil || IsNil(o.SorUpdateIndicatorList) {
		return nil, false
	}
	return o.SorUpdateIndicatorList, true
}

// HasSorUpdateIndicatorList returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSorUpdateIndicatorList() bool {
	if o != nil && !IsNil(o.SorUpdateIndicatorList) {
		return true
	}

	return false
}

// SetSorUpdateIndicatorList gets a reference to the given []SorUpdateIndicator and assigns it to the SorUpdateIndicatorList field.
func (o *AccessAndMobilitySubscriptionData1) SetSorUpdateIndicatorList(v []SorUpdateIndicator) {
	o.SorUpdateIndicatorList = v
}

// GetUpuInfo returns the UpuInfo field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetUpuInfo() UpuInfo1 {
	if o == nil || IsNil(o.UpuInfo) {
		var ret UpuInfo1
		return ret
	}
	return *o.UpuInfo
}

// GetUpuInfoOk returns a tuple with the UpuInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetUpuInfoOk() (*UpuInfo1, bool) {
	if o == nil || IsNil(o.UpuInfo) {
		return nil, false
	}
	return o.UpuInfo, true
}

// HasUpuInfo returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasUpuInfo() bool {
	if o != nil && !IsNil(o.UpuInfo) {
		return true
	}

	return false
}

// SetUpuInfo gets a reference to the given UpuInfo1 and assigns it to the UpuInfo field.
func (o *AccessAndMobilitySubscriptionData1) SetUpuInfo(v UpuInfo1) {
	o.UpuInfo = &v
}

// GetRoutingIndicator returns the RoutingIndicator field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetRoutingIndicator() string {
	if o == nil || IsNil(o.RoutingIndicator) {
		var ret string
		return ret
	}
	return *o.RoutingIndicator
}

// GetRoutingIndicatorOk returns a tuple with the RoutingIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetRoutingIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingIndicator) {
		return nil, false
	}
	return o.RoutingIndicator, true
}

// HasRoutingIndicator returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRoutingIndicator() bool {
	if o != nil && !IsNil(o.RoutingIndicator) {
		return true
	}

	return false
}

// SetRoutingIndicator gets a reference to the given string and assigns it to the RoutingIndicator field.
func (o *AccessAndMobilitySubscriptionData1) SetRoutingIndicator(v string) {
	o.RoutingIndicator = &v
}

// GetMicoAllowed returns the MicoAllowed field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetMicoAllowed() bool {
	if o == nil || IsNil(o.MicoAllowed) {
		var ret bool
		return ret
	}
	return *o.MicoAllowed
}

// GetMicoAllowedOk returns a tuple with the MicoAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetMicoAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.MicoAllowed) {
		return nil, false
	}
	return o.MicoAllowed, true
}

// HasMicoAllowed returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasMicoAllowed() bool {
	if o != nil && !IsNil(o.MicoAllowed) {
		return true
	}

	return false
}

// SetMicoAllowed gets a reference to the given bool and assigns it to the MicoAllowed field.
func (o *AccessAndMobilitySubscriptionData1) SetMicoAllowed(v bool) {
	o.MicoAllowed = &v
}

// GetSharedAmDataIds returns the SharedAmDataIds field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSharedAmDataIds() []string {
	if o == nil || IsNil(o.SharedAmDataIds) {
		var ret []string
		return ret
	}
	return o.SharedAmDataIds
}

// GetSharedAmDataIdsOk returns a tuple with the SharedAmDataIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSharedAmDataIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.SharedAmDataIds) {
		return nil, false
	}
	return o.SharedAmDataIds, true
}

// HasSharedAmDataIds returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSharedAmDataIds() bool {
	if o != nil && !IsNil(o.SharedAmDataIds) {
		return true
	}

	return false
}

// SetSharedAmDataIds gets a reference to the given []string and assigns it to the SharedAmDataIds field.
func (o *AccessAndMobilitySubscriptionData1) SetSharedAmDataIds(v []string) {
	o.SharedAmDataIds = v
}

// GetOdbPacketServices returns the OdbPacketServices field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetOdbPacketServices() OdbPacketServices {
	if o == nil || IsNil(o.OdbPacketServices) {
		var ret OdbPacketServices
		return ret
	}
	return *o.OdbPacketServices
}

// GetOdbPacketServicesOk returns a tuple with the OdbPacketServices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetOdbPacketServicesOk() (*OdbPacketServices, bool) {
	if o == nil || IsNil(o.OdbPacketServices) {
		return nil, false
	}
	return o.OdbPacketServices, true
}

// HasOdbPacketServices returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasOdbPacketServices() bool {
	if o != nil && !IsNil(o.OdbPacketServices) {
		return true
	}

	return false
}

// SetOdbPacketServices gets a reference to the given OdbPacketServices and assigns it to the OdbPacketServices field.
func (o *AccessAndMobilitySubscriptionData1) SetOdbPacketServices(v OdbPacketServices) {
	o.OdbPacketServices = &v
}

// GetSubscribedDnnList returns the SubscribedDnnList field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSubscribedDnnList() []AccessAndMobilitySubscriptionDataSubscribedDnnListInner {
	if o == nil || IsNil(o.SubscribedDnnList) {
		var ret []AccessAndMobilitySubscriptionDataSubscribedDnnListInner
		return ret
	}
	return o.SubscribedDnnList
}

// GetSubscribedDnnListOk returns a tuple with the SubscribedDnnList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSubscribedDnnListOk() ([]AccessAndMobilitySubscriptionDataSubscribedDnnListInner, bool) {
	if o == nil || IsNil(o.SubscribedDnnList) {
		return nil, false
	}
	return o.SubscribedDnnList, true
}

// HasSubscribedDnnList returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSubscribedDnnList() bool {
	if o != nil && !IsNil(o.SubscribedDnnList) {
		return true
	}

	return false
}

// SetSubscribedDnnList gets a reference to the given []AccessAndMobilitySubscriptionDataSubscribedDnnListInner and assigns it to the SubscribedDnnList field.
func (o *AccessAndMobilitySubscriptionData1) SetSubscribedDnnList(v []AccessAndMobilitySubscriptionDataSubscribedDnnListInner) {
	o.SubscribedDnnList = v
}

// GetServiceGapTime returns the ServiceGapTime field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetServiceGapTime() int32 {
	if o == nil || IsNil(o.ServiceGapTime) {
		var ret int32
		return ret
	}
	return *o.ServiceGapTime
}

// GetServiceGapTimeOk returns a tuple with the ServiceGapTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetServiceGapTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceGapTime) {
		return nil, false
	}
	return o.ServiceGapTime, true
}

// HasServiceGapTime returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasServiceGapTime() bool {
	if o != nil && !IsNil(o.ServiceGapTime) {
		return true
	}

	return false
}

// SetServiceGapTime gets a reference to the given int32 and assigns it to the ServiceGapTime field.
func (o *AccessAndMobilitySubscriptionData1) SetServiceGapTime(v int32) {
	o.ServiceGapTime = &v
}

// GetMdtUserConsent returns the MdtUserConsent field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetMdtUserConsent() MdtUserConsent {
	if o == nil || IsNil(o.MdtUserConsent) {
		var ret MdtUserConsent
		return ret
	}
	return *o.MdtUserConsent
}

// GetMdtUserConsentOk returns a tuple with the MdtUserConsent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetMdtUserConsentOk() (*MdtUserConsent, bool) {
	if o == nil || IsNil(o.MdtUserConsent) {
		return nil, false
	}
	return o.MdtUserConsent, true
}

// HasMdtUserConsent returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasMdtUserConsent() bool {
	if o != nil && !IsNil(o.MdtUserConsent) {
		return true
	}

	return false
}

// SetMdtUserConsent gets a reference to the given MdtUserConsent and assigns it to the MdtUserConsent field.
func (o *AccessAndMobilitySubscriptionData1) SetMdtUserConsent(v MdtUserConsent) {
	o.MdtUserConsent = &v
}

// GetMdtConfiguration returns the MdtConfiguration field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetMdtConfiguration() MdtConfiguration1 {
	if o == nil || IsNil(o.MdtConfiguration) {
		var ret MdtConfiguration1
		return ret
	}
	return *o.MdtConfiguration
}

// GetMdtConfigurationOk returns a tuple with the MdtConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetMdtConfigurationOk() (*MdtConfiguration1, bool) {
	if o == nil || IsNil(o.MdtConfiguration) {
		return nil, false
	}
	return o.MdtConfiguration, true
}

// HasMdtConfiguration returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasMdtConfiguration() bool {
	if o != nil && !IsNil(o.MdtConfiguration) {
		return true
	}

	return false
}

// SetMdtConfiguration gets a reference to the given MdtConfiguration1 and assigns it to the MdtConfiguration field.
func (o *AccessAndMobilitySubscriptionData1) SetMdtConfiguration(v MdtConfiguration1) {
	o.MdtConfiguration = &v
}

// GetTraceData returns the TraceData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AccessAndMobilitySubscriptionData1) GetTraceData() TraceData {
	if o == nil || IsNil(o.TraceData.Get()) {
		var ret TraceData
		return ret
	}
	return *o.TraceData.Get()
}

// GetTraceDataOk returns a tuple with the TraceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AccessAndMobilitySubscriptionData1) GetTraceDataOk() (*TraceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceData.Get(), o.TraceData.IsSet()
}

// HasTraceData returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasTraceData() bool {
	if o != nil && o.TraceData.IsSet() {
		return true
	}

	return false
}

// SetTraceData gets a reference to the given NullableTraceData and assigns it to the TraceData field.
func (o *AccessAndMobilitySubscriptionData1) SetTraceData(v TraceData) {
	o.TraceData.Set(&v)
}
// SetTraceDataNil sets the value for TraceData to be an explicit nil
func (o *AccessAndMobilitySubscriptionData1) SetTraceDataNil() {
	o.TraceData.Set(nil)
}

// UnsetTraceData ensures that no value is present for TraceData, not even an explicit nil
func (o *AccessAndMobilitySubscriptionData1) UnsetTraceData() {
	o.TraceData.Unset()
}

// GetCagData returns the CagData field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetCagData() CagData1 {
	if o == nil || IsNil(o.CagData) {
		var ret CagData1
		return ret
	}
	return *o.CagData
}

// GetCagDataOk returns a tuple with the CagData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetCagDataOk() (*CagData1, bool) {
	if o == nil || IsNil(o.CagData) {
		return nil, false
	}
	return o.CagData, true
}

// HasCagData returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasCagData() bool {
	if o != nil && !IsNil(o.CagData) {
		return true
	}

	return false
}

// SetCagData gets a reference to the given CagData1 and assigns it to the CagData field.
func (o *AccessAndMobilitySubscriptionData1) SetCagData(v CagData1) {
	o.CagData = &v
}

// GetStnSr returns the StnSr field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetStnSr() string {
	if o == nil || IsNil(o.StnSr) {
		var ret string
		return ret
	}
	return *o.StnSr
}

// GetStnSrOk returns a tuple with the StnSr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetStnSrOk() (*string, bool) {
	if o == nil || IsNil(o.StnSr) {
		return nil, false
	}
	return o.StnSr, true
}

// HasStnSr returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasStnSr() bool {
	if o != nil && !IsNil(o.StnSr) {
		return true
	}

	return false
}

// SetStnSr gets a reference to the given string and assigns it to the StnSr field.
func (o *AccessAndMobilitySubscriptionData1) SetStnSr(v string) {
	o.StnSr = &v
}

// GetCMsisdn returns the CMsisdn field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetCMsisdn() string {
	if o == nil || IsNil(o.CMsisdn) {
		var ret string
		return ret
	}
	return *o.CMsisdn
}

// GetCMsisdnOk returns a tuple with the CMsisdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetCMsisdnOk() (*string, bool) {
	if o == nil || IsNil(o.CMsisdn) {
		return nil, false
	}
	return o.CMsisdn, true
}

// HasCMsisdn returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasCMsisdn() bool {
	if o != nil && !IsNil(o.CMsisdn) {
		return true
	}

	return false
}

// SetCMsisdn gets a reference to the given string and assigns it to the CMsisdn field.
func (o *AccessAndMobilitySubscriptionData1) SetCMsisdn(v string) {
	o.CMsisdn = &v
}

// GetNbIoTUePriority returns the NbIoTUePriority field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetNbIoTUePriority() int32 {
	if o == nil || IsNil(o.NbIoTUePriority) {
		var ret int32
		return ret
	}
	return *o.NbIoTUePriority
}

// GetNbIoTUePriorityOk returns a tuple with the NbIoTUePriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetNbIoTUePriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.NbIoTUePriority) {
		return nil, false
	}
	return o.NbIoTUePriority, true
}

// HasNbIoTUePriority returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasNbIoTUePriority() bool {
	if o != nil && !IsNil(o.NbIoTUePriority) {
		return true
	}

	return false
}

// SetNbIoTUePriority gets a reference to the given int32 and assigns it to the NbIoTUePriority field.
func (o *AccessAndMobilitySubscriptionData1) SetNbIoTUePriority(v int32) {
	o.NbIoTUePriority = &v
}

// GetNssaiInclusionAllowed returns the NssaiInclusionAllowed field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetNssaiInclusionAllowed() bool {
	if o == nil || IsNil(o.NssaiInclusionAllowed) {
		var ret bool
		return ret
	}
	return *o.NssaiInclusionAllowed
}

// GetNssaiInclusionAllowedOk returns a tuple with the NssaiInclusionAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetNssaiInclusionAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.NssaiInclusionAllowed) {
		return nil, false
	}
	return o.NssaiInclusionAllowed, true
}

// HasNssaiInclusionAllowed returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasNssaiInclusionAllowed() bool {
	if o != nil && !IsNil(o.NssaiInclusionAllowed) {
		return true
	}

	return false
}

// SetNssaiInclusionAllowed gets a reference to the given bool and assigns it to the NssaiInclusionAllowed field.
func (o *AccessAndMobilitySubscriptionData1) SetNssaiInclusionAllowed(v bool) {
	o.NssaiInclusionAllowed = &v
}

// GetRgWirelineCharacteristics returns the RgWirelineCharacteristics field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetRgWirelineCharacteristics() string {
	if o == nil || IsNil(o.RgWirelineCharacteristics) {
		var ret string
		return ret
	}
	return *o.RgWirelineCharacteristics
}

// GetRgWirelineCharacteristicsOk returns a tuple with the RgWirelineCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetRgWirelineCharacteristicsOk() (*string, bool) {
	if o == nil || IsNil(o.RgWirelineCharacteristics) {
		return nil, false
	}
	return o.RgWirelineCharacteristics, true
}

// HasRgWirelineCharacteristics returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRgWirelineCharacteristics() bool {
	if o != nil && !IsNil(o.RgWirelineCharacteristics) {
		return true
	}

	return false
}

// SetRgWirelineCharacteristics gets a reference to the given string and assigns it to the RgWirelineCharacteristics field.
func (o *AccessAndMobilitySubscriptionData1) SetRgWirelineCharacteristics(v string) {
	o.RgWirelineCharacteristics = &v
}

// GetEcRestrictionDataWb returns the EcRestrictionDataWb field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetEcRestrictionDataWb() EcRestrictionDataWb {
	if o == nil || IsNil(o.EcRestrictionDataWb) {
		var ret EcRestrictionDataWb
		return ret
	}
	return *o.EcRestrictionDataWb
}

// GetEcRestrictionDataWbOk returns a tuple with the EcRestrictionDataWb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetEcRestrictionDataWbOk() (*EcRestrictionDataWb, bool) {
	if o == nil || IsNil(o.EcRestrictionDataWb) {
		return nil, false
	}
	return o.EcRestrictionDataWb, true
}

// HasEcRestrictionDataWb returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasEcRestrictionDataWb() bool {
	if o != nil && !IsNil(o.EcRestrictionDataWb) {
		return true
	}

	return false
}

// SetEcRestrictionDataWb gets a reference to the given EcRestrictionDataWb and assigns it to the EcRestrictionDataWb field.
func (o *AccessAndMobilitySubscriptionData1) SetEcRestrictionDataWb(v EcRestrictionDataWb) {
	o.EcRestrictionDataWb = &v
}

// GetEcRestrictionDataNb returns the EcRestrictionDataNb field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetEcRestrictionDataNb() bool {
	if o == nil || IsNil(o.EcRestrictionDataNb) {
		var ret bool
		return ret
	}
	return *o.EcRestrictionDataNb
}

// GetEcRestrictionDataNbOk returns a tuple with the EcRestrictionDataNb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetEcRestrictionDataNbOk() (*bool, bool) {
	if o == nil || IsNil(o.EcRestrictionDataNb) {
		return nil, false
	}
	return o.EcRestrictionDataNb, true
}

// HasEcRestrictionDataNb returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasEcRestrictionDataNb() bool {
	if o != nil && !IsNil(o.EcRestrictionDataNb) {
		return true
	}

	return false
}

// SetEcRestrictionDataNb gets a reference to the given bool and assigns it to the EcRestrictionDataNb field.
func (o *AccessAndMobilitySubscriptionData1) SetEcRestrictionDataNb(v bool) {
	o.EcRestrictionDataNb = &v
}

// GetExpectedUeBehaviourList returns the ExpectedUeBehaviourList field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetExpectedUeBehaviourList() ExpectedUeBehaviourData1 {
	if o == nil || IsNil(o.ExpectedUeBehaviourList) {
		var ret ExpectedUeBehaviourData1
		return ret
	}
	return *o.ExpectedUeBehaviourList
}

// GetExpectedUeBehaviourListOk returns a tuple with the ExpectedUeBehaviourList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetExpectedUeBehaviourListOk() (*ExpectedUeBehaviourData1, bool) {
	if o == nil || IsNil(o.ExpectedUeBehaviourList) {
		return nil, false
	}
	return o.ExpectedUeBehaviourList, true
}

// HasExpectedUeBehaviourList returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasExpectedUeBehaviourList() bool {
	if o != nil && !IsNil(o.ExpectedUeBehaviourList) {
		return true
	}

	return false
}

// SetExpectedUeBehaviourList gets a reference to the given ExpectedUeBehaviourData1 and assigns it to the ExpectedUeBehaviourList field.
func (o *AccessAndMobilitySubscriptionData1) SetExpectedUeBehaviourList(v ExpectedUeBehaviourData1) {
	o.ExpectedUeBehaviourList = &v
}

// GetPrimaryRatRestrictions returns the PrimaryRatRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetPrimaryRatRestrictions() []RatType {
	if o == nil || IsNil(o.PrimaryRatRestrictions) {
		var ret []RatType
		return ret
	}
	return o.PrimaryRatRestrictions
}

// GetPrimaryRatRestrictionsOk returns a tuple with the PrimaryRatRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetPrimaryRatRestrictionsOk() ([]RatType, bool) {
	if o == nil || IsNil(o.PrimaryRatRestrictions) {
		return nil, false
	}
	return o.PrimaryRatRestrictions, true
}

// HasPrimaryRatRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasPrimaryRatRestrictions() bool {
	if o != nil && !IsNil(o.PrimaryRatRestrictions) {
		return true
	}

	return false
}

// SetPrimaryRatRestrictions gets a reference to the given []RatType and assigns it to the PrimaryRatRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetPrimaryRatRestrictions(v []RatType) {
	o.PrimaryRatRestrictions = v
}

// GetSecondaryRatRestrictions returns the SecondaryRatRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetSecondaryRatRestrictions() []RatType {
	if o == nil || IsNil(o.SecondaryRatRestrictions) {
		var ret []RatType
		return ret
	}
	return o.SecondaryRatRestrictions
}

// GetSecondaryRatRestrictionsOk returns a tuple with the SecondaryRatRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetSecondaryRatRestrictionsOk() ([]RatType, bool) {
	if o == nil || IsNil(o.SecondaryRatRestrictions) {
		return nil, false
	}
	return o.SecondaryRatRestrictions, true
}

// HasSecondaryRatRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasSecondaryRatRestrictions() bool {
	if o != nil && !IsNil(o.SecondaryRatRestrictions) {
		return true
	}

	return false
}

// SetSecondaryRatRestrictions gets a reference to the given []RatType and assigns it to the SecondaryRatRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetSecondaryRatRestrictions(v []RatType) {
	o.SecondaryRatRestrictions = v
}

// GetEdrxParametersList returns the EdrxParametersList field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetEdrxParametersList() []EdrxParameters1 {
	if o == nil || IsNil(o.EdrxParametersList) {
		var ret []EdrxParameters1
		return ret
	}
	return o.EdrxParametersList
}

// GetEdrxParametersListOk returns a tuple with the EdrxParametersList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetEdrxParametersListOk() ([]EdrxParameters1, bool) {
	if o == nil || IsNil(o.EdrxParametersList) {
		return nil, false
	}
	return o.EdrxParametersList, true
}

// HasEdrxParametersList returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasEdrxParametersList() bool {
	if o != nil && !IsNil(o.EdrxParametersList) {
		return true
	}

	return false
}

// SetEdrxParametersList gets a reference to the given []EdrxParameters1 and assigns it to the EdrxParametersList field.
func (o *AccessAndMobilitySubscriptionData1) SetEdrxParametersList(v []EdrxParameters1) {
	o.EdrxParametersList = v
}

// GetPtwParametersList returns the PtwParametersList field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetPtwParametersList() []PtwParameters1 {
	if o == nil || IsNil(o.PtwParametersList) {
		var ret []PtwParameters1
		return ret
	}
	return o.PtwParametersList
}

// GetPtwParametersListOk returns a tuple with the PtwParametersList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetPtwParametersListOk() ([]PtwParameters1, bool) {
	if o == nil || IsNil(o.PtwParametersList) {
		return nil, false
	}
	return o.PtwParametersList, true
}

// HasPtwParametersList returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasPtwParametersList() bool {
	if o != nil && !IsNil(o.PtwParametersList) {
		return true
	}

	return false
}

// SetPtwParametersList gets a reference to the given []PtwParameters1 and assigns it to the PtwParametersList field.
func (o *AccessAndMobilitySubscriptionData1) SetPtwParametersList(v []PtwParameters1) {
	o.PtwParametersList = v
}

// GetIabOperationAllowed returns the IabOperationAllowed field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetIabOperationAllowed() bool {
	if o == nil || IsNil(o.IabOperationAllowed) {
		var ret bool
		return ret
	}
	return *o.IabOperationAllowed
}

// GetIabOperationAllowedOk returns a tuple with the IabOperationAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetIabOperationAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.IabOperationAllowed) {
		return nil, false
	}
	return o.IabOperationAllowed, true
}

// HasIabOperationAllowed returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasIabOperationAllowed() bool {
	if o != nil && !IsNil(o.IabOperationAllowed) {
		return true
	}

	return false
}

// SetIabOperationAllowed gets a reference to the given bool and assigns it to the IabOperationAllowed field.
func (o *AccessAndMobilitySubscriptionData1) SetIabOperationAllowed(v bool) {
	o.IabOperationAllowed = &v
}

// GetAdjacentPlmnRestrictions returns the AdjacentPlmnRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetAdjacentPlmnRestrictions() map[string]PlmnRestriction1 {
	if o == nil || IsNil(o.AdjacentPlmnRestrictions) {
		var ret map[string]PlmnRestriction1
		return ret
	}
	return *o.AdjacentPlmnRestrictions
}

// GetAdjacentPlmnRestrictionsOk returns a tuple with the AdjacentPlmnRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetAdjacentPlmnRestrictionsOk() (*map[string]PlmnRestriction1, bool) {
	if o == nil || IsNil(o.AdjacentPlmnRestrictions) {
		return nil, false
	}
	return o.AdjacentPlmnRestrictions, true
}

// HasAdjacentPlmnRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasAdjacentPlmnRestrictions() bool {
	if o != nil && !IsNil(o.AdjacentPlmnRestrictions) {
		return true
	}

	return false
}

// SetAdjacentPlmnRestrictions gets a reference to the given map[string]PlmnRestriction1 and assigns it to the AdjacentPlmnRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetAdjacentPlmnRestrictions(v map[string]PlmnRestriction1) {
	o.AdjacentPlmnRestrictions = &v
}

// GetWirelineForbiddenAreas returns the WirelineForbiddenAreas field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetWirelineForbiddenAreas() []WirelineArea1 {
	if o == nil || IsNil(o.WirelineForbiddenAreas) {
		var ret []WirelineArea1
		return ret
	}
	return o.WirelineForbiddenAreas
}

// GetWirelineForbiddenAreasOk returns a tuple with the WirelineForbiddenAreas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetWirelineForbiddenAreasOk() ([]WirelineArea1, bool) {
	if o == nil || IsNil(o.WirelineForbiddenAreas) {
		return nil, false
	}
	return o.WirelineForbiddenAreas, true
}

// HasWirelineForbiddenAreas returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasWirelineForbiddenAreas() bool {
	if o != nil && !IsNil(o.WirelineForbiddenAreas) {
		return true
	}

	return false
}

// SetWirelineForbiddenAreas gets a reference to the given []WirelineArea1 and assigns it to the WirelineForbiddenAreas field.
func (o *AccessAndMobilitySubscriptionData1) SetWirelineForbiddenAreas(v []WirelineArea1) {
	o.WirelineForbiddenAreas = v
}

// GetWirelineServiceAreaRestriction returns the WirelineServiceAreaRestriction field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetWirelineServiceAreaRestriction() WirelineServiceAreaRestriction1 {
	if o == nil || IsNil(o.WirelineServiceAreaRestriction) {
		var ret WirelineServiceAreaRestriction1
		return ret
	}
	return *o.WirelineServiceAreaRestriction
}

// GetWirelineServiceAreaRestrictionOk returns a tuple with the WirelineServiceAreaRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetWirelineServiceAreaRestrictionOk() (*WirelineServiceAreaRestriction1, bool) {
	if o == nil || IsNil(o.WirelineServiceAreaRestriction) {
		return nil, false
	}
	return o.WirelineServiceAreaRestriction, true
}

// HasWirelineServiceAreaRestriction returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasWirelineServiceAreaRestriction() bool {
	if o != nil && !IsNil(o.WirelineServiceAreaRestriction) {
		return true
	}

	return false
}

// SetWirelineServiceAreaRestriction gets a reference to the given WirelineServiceAreaRestriction1 and assigns it to the WirelineServiceAreaRestriction field.
func (o *AccessAndMobilitySubscriptionData1) SetWirelineServiceAreaRestriction(v WirelineServiceAreaRestriction1) {
	o.WirelineServiceAreaRestriction = &v
}

// GetPcfSelectionAssistanceInfos returns the PcfSelectionAssistanceInfos field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetPcfSelectionAssistanceInfos() []PcfSelectionAssistanceInfo1 {
	if o == nil || IsNil(o.PcfSelectionAssistanceInfos) {
		var ret []PcfSelectionAssistanceInfo1
		return ret
	}
	return o.PcfSelectionAssistanceInfos
}

// GetPcfSelectionAssistanceInfosOk returns a tuple with the PcfSelectionAssistanceInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetPcfSelectionAssistanceInfosOk() ([]PcfSelectionAssistanceInfo1, bool) {
	if o == nil || IsNil(o.PcfSelectionAssistanceInfos) {
		return nil, false
	}
	return o.PcfSelectionAssistanceInfos, true
}

// HasPcfSelectionAssistanceInfos returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasPcfSelectionAssistanceInfos() bool {
	if o != nil && !IsNil(o.PcfSelectionAssistanceInfos) {
		return true
	}

	return false
}

// SetPcfSelectionAssistanceInfos gets a reference to the given []PcfSelectionAssistanceInfo1 and assigns it to the PcfSelectionAssistanceInfos field.
func (o *AccessAndMobilitySubscriptionData1) SetPcfSelectionAssistanceInfos(v []PcfSelectionAssistanceInfo1) {
	o.PcfSelectionAssistanceInfos = v
}

// GetAerialUeSubInfo returns the AerialUeSubInfo field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetAerialUeSubInfo() AerialUeSubscriptionInfo1 {
	if o == nil || IsNil(o.AerialUeSubInfo) {
		var ret AerialUeSubscriptionInfo1
		return ret
	}
	return *o.AerialUeSubInfo
}

// GetAerialUeSubInfoOk returns a tuple with the AerialUeSubInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetAerialUeSubInfoOk() (*AerialUeSubscriptionInfo1, bool) {
	if o == nil || IsNil(o.AerialUeSubInfo) {
		return nil, false
	}
	return o.AerialUeSubInfo, true
}

// HasAerialUeSubInfo returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasAerialUeSubInfo() bool {
	if o != nil && !IsNil(o.AerialUeSubInfo) {
		return true
	}

	return false
}

// SetAerialUeSubInfo gets a reference to the given AerialUeSubscriptionInfo1 and assigns it to the AerialUeSubInfo field.
func (o *AccessAndMobilitySubscriptionData1) SetAerialUeSubInfo(v AerialUeSubscriptionInfo1) {
	o.AerialUeSubInfo = &v
}

// GetRoamingRestrictions returns the RoamingRestrictions field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetRoamingRestrictions() RoamingRestrictions {
	if o == nil || IsNil(o.RoamingRestrictions) {
		var ret RoamingRestrictions
		return ret
	}
	return *o.RoamingRestrictions
}

// GetRoamingRestrictionsOk returns a tuple with the RoamingRestrictions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetRoamingRestrictionsOk() (*RoamingRestrictions, bool) {
	if o == nil || IsNil(o.RoamingRestrictions) {
		return nil, false
	}
	return o.RoamingRestrictions, true
}

// HasRoamingRestrictions returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRoamingRestrictions() bool {
	if o != nil && !IsNil(o.RoamingRestrictions) {
		return true
	}

	return false
}

// SetRoamingRestrictions gets a reference to the given RoamingRestrictions and assigns it to the RoamingRestrictions field.
func (o *AccessAndMobilitySubscriptionData1) SetRoamingRestrictions(v RoamingRestrictions) {
	o.RoamingRestrictions = &v
}

// GetRemoteProvInd returns the RemoteProvInd field value if set, zero value otherwise.
func (o *AccessAndMobilitySubscriptionData1) GetRemoteProvInd() bool {
	if o == nil || IsNil(o.RemoteProvInd) {
		var ret bool
		return ret
	}
	return *o.RemoteProvInd
}

// GetRemoteProvIndOk returns a tuple with the RemoteProvInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AccessAndMobilitySubscriptionData1) GetRemoteProvIndOk() (*bool, bool) {
	if o == nil || IsNil(o.RemoteProvInd) {
		return nil, false
	}
	return o.RemoteProvInd, true
}

// HasRemoteProvInd returns a boolean if a field has been set.
func (o *AccessAndMobilitySubscriptionData1) HasRemoteProvInd() bool {
	if o != nil && !IsNil(o.RemoteProvInd) {
		return true
	}

	return false
}

// SetRemoteProvInd gets a reference to the given bool and assigns it to the RemoteProvInd field.
func (o *AccessAndMobilitySubscriptionData1) SetRemoteProvInd(v bool) {
	o.RemoteProvInd = &v
}

func (o AccessAndMobilitySubscriptionData1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessAndMobilitySubscriptionData1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.Gpsis) {
		toSerialize["gpsis"] = o.Gpsis
	}
	if !IsNil(o.HssGroupId) {
		toSerialize["hssGroupId"] = o.HssGroupId
	}
	if !IsNil(o.InternalGroupIds) {
		toSerialize["internalGroupIds"] = o.InternalGroupIds
	}
	if !IsNil(o.SharedVnGroupDataIds) {
		toSerialize["sharedVnGroupDataIds"] = o.SharedVnGroupDataIds
	}
	if !IsNil(o.SubscribedUeAmbr) {
		toSerialize["subscribedUeAmbr"] = o.SubscribedUeAmbr
	}
	if o.Nssai.IsSet() {
		toSerialize["nssai"] = o.Nssai.Get()
	}
	if !IsNil(o.RatRestrictions) {
		toSerialize["ratRestrictions"] = o.RatRestrictions
	}
	if !IsNil(o.ForbiddenAreas) {
		toSerialize["forbiddenAreas"] = o.ForbiddenAreas
	}
	if !IsNil(o.ServiceAreaRestriction) {
		toSerialize["serviceAreaRestriction"] = o.ServiceAreaRestriction
	}
	if !IsNil(o.CoreNetworkTypeRestrictions) {
		toSerialize["coreNetworkTypeRestrictions"] = o.CoreNetworkTypeRestrictions
	}
	if !IsNil(o.AccessTypeRestrictions) {
		toSerialize["accessTypeRestrictions"] = o.AccessTypeRestrictions
	}
	if o.RfspIndex.IsSet() {
		toSerialize["rfspIndex"] = o.RfspIndex.Get()
	}
	if o.SubsRegTimer.IsSet() {
		toSerialize["subsRegTimer"] = o.SubsRegTimer.Get()
	}
	if !IsNil(o.UeUsageType) {
		toSerialize["ueUsageType"] = o.UeUsageType
	}
	if !IsNil(o.MpsPriority) {
		toSerialize["mpsPriority"] = o.MpsPriority
	}
	if !IsNil(o.McsPriority) {
		toSerialize["mcsPriority"] = o.McsPriority
	}
	if o.ActiveTime.IsSet() {
		toSerialize["activeTime"] = o.ActiveTime.Get()
	}
	if !IsNil(o.SorInfo) {
		toSerialize["sorInfo"] = o.SorInfo
	}
	if !IsNil(o.SorInfoExpectInd) {
		toSerialize["sorInfoExpectInd"] = o.SorInfoExpectInd
	}
	if !IsNil(o.SorafRetrieval) {
		toSerialize["sorafRetrieval"] = o.SorafRetrieval
	}
	if !IsNil(o.SorUpdateIndicatorList) {
		toSerialize["sorUpdateIndicatorList"] = o.SorUpdateIndicatorList
	}
	if !IsNil(o.UpuInfo) {
		toSerialize["upuInfo"] = o.UpuInfo
	}
	if !IsNil(o.RoutingIndicator) {
		toSerialize["routingIndicator"] = o.RoutingIndicator
	}
	if !IsNil(o.MicoAllowed) {
		toSerialize["micoAllowed"] = o.MicoAllowed
	}
	if !IsNil(o.SharedAmDataIds) {
		toSerialize["sharedAmDataIds"] = o.SharedAmDataIds
	}
	if !IsNil(o.OdbPacketServices) {
		toSerialize["odbPacketServices"] = o.OdbPacketServices
	}
	if !IsNil(o.SubscribedDnnList) {
		toSerialize["subscribedDnnList"] = o.SubscribedDnnList
	}
	if !IsNil(o.ServiceGapTime) {
		toSerialize["serviceGapTime"] = o.ServiceGapTime
	}
	if !IsNil(o.MdtUserConsent) {
		toSerialize["mdtUserConsent"] = o.MdtUserConsent
	}
	if !IsNil(o.MdtConfiguration) {
		toSerialize["mdtConfiguration"] = o.MdtConfiguration
	}
	if o.TraceData.IsSet() {
		toSerialize["traceData"] = o.TraceData.Get()
	}
	if !IsNil(o.CagData) {
		toSerialize["cagData"] = o.CagData
	}
	if !IsNil(o.StnSr) {
		toSerialize["stnSr"] = o.StnSr
	}
	if !IsNil(o.CMsisdn) {
		toSerialize["cMsisdn"] = o.CMsisdn
	}
	if !IsNil(o.NbIoTUePriority) {
		toSerialize["nbIoTUePriority"] = o.NbIoTUePriority
	}
	if !IsNil(o.NssaiInclusionAllowed) {
		toSerialize["nssaiInclusionAllowed"] = o.NssaiInclusionAllowed
	}
	if !IsNil(o.RgWirelineCharacteristics) {
		toSerialize["rgWirelineCharacteristics"] = o.RgWirelineCharacteristics
	}
	if !IsNil(o.EcRestrictionDataWb) {
		toSerialize["ecRestrictionDataWb"] = o.EcRestrictionDataWb
	}
	if !IsNil(o.EcRestrictionDataNb) {
		toSerialize["ecRestrictionDataNb"] = o.EcRestrictionDataNb
	}
	if !IsNil(o.ExpectedUeBehaviourList) {
		toSerialize["expectedUeBehaviourList"] = o.ExpectedUeBehaviourList
	}
	if !IsNil(o.PrimaryRatRestrictions) {
		toSerialize["primaryRatRestrictions"] = o.PrimaryRatRestrictions
	}
	if !IsNil(o.SecondaryRatRestrictions) {
		toSerialize["secondaryRatRestrictions"] = o.SecondaryRatRestrictions
	}
	if !IsNil(o.EdrxParametersList) {
		toSerialize["edrxParametersList"] = o.EdrxParametersList
	}
	if !IsNil(o.PtwParametersList) {
		toSerialize["ptwParametersList"] = o.PtwParametersList
	}
	if !IsNil(o.IabOperationAllowed) {
		toSerialize["iabOperationAllowed"] = o.IabOperationAllowed
	}
	if !IsNil(o.AdjacentPlmnRestrictions) {
		toSerialize["adjacentPlmnRestrictions"] = o.AdjacentPlmnRestrictions
	}
	if !IsNil(o.WirelineForbiddenAreas) {
		toSerialize["wirelineForbiddenAreas"] = o.WirelineForbiddenAreas
	}
	if !IsNil(o.WirelineServiceAreaRestriction) {
		toSerialize["wirelineServiceAreaRestriction"] = o.WirelineServiceAreaRestriction
	}
	if !IsNil(o.PcfSelectionAssistanceInfos) {
		toSerialize["pcfSelectionAssistanceInfos"] = o.PcfSelectionAssistanceInfos
	}
	if !IsNil(o.AerialUeSubInfo) {
		toSerialize["aerialUeSubInfo"] = o.AerialUeSubInfo
	}
	if !IsNil(o.RoamingRestrictions) {
		toSerialize["roamingRestrictions"] = o.RoamingRestrictions
	}
	if !IsNil(o.RemoteProvInd) {
		toSerialize["remoteProvInd"] = o.RemoteProvInd
	}
	return toSerialize, nil
}

type NullableAccessAndMobilitySubscriptionData1 struct {
	value *AccessAndMobilitySubscriptionData1
	isSet bool
}

func (v NullableAccessAndMobilitySubscriptionData1) Get() *AccessAndMobilitySubscriptionData1 {
	return v.value
}

func (v *NullableAccessAndMobilitySubscriptionData1) Set(val *AccessAndMobilitySubscriptionData1) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessAndMobilitySubscriptionData1) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessAndMobilitySubscriptionData1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessAndMobilitySubscriptionData1(val *AccessAndMobilitySubscriptionData1) *NullableAccessAndMobilitySubscriptionData1 {
	return &NullableAccessAndMobilitySubscriptionData1{value: val, isSet: true}
}

func (v NullableAccessAndMobilitySubscriptionData1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessAndMobilitySubscriptionData1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


