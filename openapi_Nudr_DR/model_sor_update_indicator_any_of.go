/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
	"fmt"
)

// SorUpdateIndicatorAnyOf the model 'SorUpdateIndicatorAnyOf'
type SorUpdateIndicatorAnyOf string

// List of SorUpdateIndicator_anyOf
const (
	INITIAL_REGISTRATION SorUpdateIndicatorAnyOf = "INITIAL_REGISTRATION"
	EMERGENCY_REGISTRATION SorUpdateIndicatorAnyOf = "EMERGENCY_REGISTRATION"
)

// All allowed values of SorUpdateIndicatorAnyOf enum
var AllowedSorUpdateIndicatorAnyOfEnumValues = []SorUpdateIndicatorAnyOf{
	"INITIAL_REGISTRATION",
	"EMERGENCY_REGISTRATION",
}

func (v *SorUpdateIndicatorAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SorUpdateIndicatorAnyOf(value)
	for _, existing := range AllowedSorUpdateIndicatorAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SorUpdateIndicatorAnyOf", value)
}

// NewSorUpdateIndicatorAnyOfFromValue returns a pointer to a valid SorUpdateIndicatorAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSorUpdateIndicatorAnyOfFromValue(v string) (*SorUpdateIndicatorAnyOf, error) {
	ev := SorUpdateIndicatorAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SorUpdateIndicatorAnyOf: valid values are %v", v, AllowedSorUpdateIndicatorAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SorUpdateIndicatorAnyOf) IsValid() bool {
	for _, existing := range AllowedSorUpdateIndicatorAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SorUpdateIndicator_anyOf value
func (v SorUpdateIndicatorAnyOf) Ptr() *SorUpdateIndicatorAnyOf {
	return &v
}

type NullableSorUpdateIndicatorAnyOf struct {
	value *SorUpdateIndicatorAnyOf
	isSet bool
}

func (v NullableSorUpdateIndicatorAnyOf) Get() *SorUpdateIndicatorAnyOf {
	return v.value
}

func (v *NullableSorUpdateIndicatorAnyOf) Set(val *SorUpdateIndicatorAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSorUpdateIndicatorAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSorUpdateIndicatorAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSorUpdateIndicatorAnyOf(val *SorUpdateIndicatorAnyOf) *NullableSorUpdateIndicatorAnyOf {
	return &NullableSorUpdateIndicatorAnyOf{value: val, isSet: true}
}

func (v NullableSorUpdateIndicatorAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSorUpdateIndicatorAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

