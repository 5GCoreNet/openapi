/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the AmInfluData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmInfluData{}

// AmInfluData Represents the AM Influence Data.
type AmInfluData struct {
	// Identifies one or more applications.
	AppIds []string `json:"appIds,omitempty"`
	// Identifies one or more DNN, S-NSSAI combinations.
	DnnSnssaiInfos []DnnSnssaiInformation `json:"dnnSnssaiInfos,omitempty"`
	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.
	InterGroupId *string `json:"interGroupId,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi *string `json:"supi,omitempty"`
	// Indicates whether the data is applicable for any UE.
	AnyUeInd *bool `json:"anyUeInd,omitempty"`
	// indicating a time in seconds.
	PolicyDuration *int32 `json:"policyDuration,omitempty"`
	// List of AM related events for which a subscription is required.
	EvSubs []AmInfluEvent `json:"evSubs,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotifUri *string `json:"notifUri,omitempty"`
	// Notification correlation identifier.
	NotifCorrId *string `json:"notifCorrId,omitempty"`
	// Contains the headers provisioned by the NEF.
	Headers []string `json:"headers,omitempty"`
	// Indicates whether high throughput is desired for the indicated UE traffic.
	ThruReq *bool `json:"thruReq,omitempty"`
	// Indicates the service area coverage requirement.
	CovReq []ServiceAreaCoverageInfo `json:"covReq,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	ResUri   *string  `json:"resUri,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
}

// NewAmInfluData instantiates a new AmInfluData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmInfluData() *AmInfluData {
	this := AmInfluData{}
	return &this
}

// NewAmInfluDataWithDefaults instantiates a new AmInfluData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmInfluDataWithDefaults() *AmInfluData {
	this := AmInfluData{}
	return &this
}

// GetAppIds returns the AppIds field value if set, zero value otherwise.
func (o *AmInfluData) GetAppIds() []string {
	if o == nil || IsNil(o.AppIds) {
		var ret []string
		return ret
	}
	return o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetAppIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AppIds) {
		return nil, false
	}
	return o.AppIds, true
}

// HasAppIds returns a boolean if a field has been set.
func (o *AmInfluData) HasAppIds() bool {
	if o != nil && !IsNil(o.AppIds) {
		return true
	}

	return false
}

// SetAppIds gets a reference to the given []string and assigns it to the AppIds field.
func (o *AmInfluData) SetAppIds(v []string) {
	o.AppIds = v
}

// GetDnnSnssaiInfos returns the DnnSnssaiInfos field value if set, zero value otherwise.
func (o *AmInfluData) GetDnnSnssaiInfos() []DnnSnssaiInformation {
	if o == nil || IsNil(o.DnnSnssaiInfos) {
		var ret []DnnSnssaiInformation
		return ret
	}
	return o.DnnSnssaiInfos
}

// GetDnnSnssaiInfosOk returns a tuple with the DnnSnssaiInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetDnnSnssaiInfosOk() ([]DnnSnssaiInformation, bool) {
	if o == nil || IsNil(o.DnnSnssaiInfos) {
		return nil, false
	}
	return o.DnnSnssaiInfos, true
}

// HasDnnSnssaiInfos returns a boolean if a field has been set.
func (o *AmInfluData) HasDnnSnssaiInfos() bool {
	if o != nil && !IsNil(o.DnnSnssaiInfos) {
		return true
	}

	return false
}

// SetDnnSnssaiInfos gets a reference to the given []DnnSnssaiInformation and assigns it to the DnnSnssaiInfos field.
func (o *AmInfluData) SetDnnSnssaiInfos(v []DnnSnssaiInformation) {
	o.DnnSnssaiInfos = v
}

// GetInterGroupId returns the InterGroupId field value if set, zero value otherwise.
func (o *AmInfluData) GetInterGroupId() string {
	if o == nil || IsNil(o.InterGroupId) {
		var ret string
		return ret
	}
	return *o.InterGroupId
}

// GetInterGroupIdOk returns a tuple with the InterGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetInterGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterGroupId) {
		return nil, false
	}
	return o.InterGroupId, true
}

// HasInterGroupId returns a boolean if a field has been set.
func (o *AmInfluData) HasInterGroupId() bool {
	if o != nil && !IsNil(o.InterGroupId) {
		return true
	}

	return false
}

// SetInterGroupId gets a reference to the given string and assigns it to the InterGroupId field.
func (o *AmInfluData) SetInterGroupId(v string) {
	o.InterGroupId = &v
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *AmInfluData) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *AmInfluData) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *AmInfluData) SetSupi(v string) {
	o.Supi = &v
}

// GetAnyUeInd returns the AnyUeInd field value if set, zero value otherwise.
func (o *AmInfluData) GetAnyUeInd() bool {
	if o == nil || IsNil(o.AnyUeInd) {
		var ret bool
		return ret
	}
	return *o.AnyUeInd
}

// GetAnyUeIndOk returns a tuple with the AnyUeInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetAnyUeIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AnyUeInd) {
		return nil, false
	}
	return o.AnyUeInd, true
}

// HasAnyUeInd returns a boolean if a field has been set.
func (o *AmInfluData) HasAnyUeInd() bool {
	if o != nil && !IsNil(o.AnyUeInd) {
		return true
	}

	return false
}

// SetAnyUeInd gets a reference to the given bool and assigns it to the AnyUeInd field.
func (o *AmInfluData) SetAnyUeInd(v bool) {
	o.AnyUeInd = &v
}

// GetPolicyDuration returns the PolicyDuration field value if set, zero value otherwise.
func (o *AmInfluData) GetPolicyDuration() int32 {
	if o == nil || IsNil(o.PolicyDuration) {
		var ret int32
		return ret
	}
	return *o.PolicyDuration
}

// GetPolicyDurationOk returns a tuple with the PolicyDuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetPolicyDurationOk() (*int32, bool) {
	if o == nil || IsNil(o.PolicyDuration) {
		return nil, false
	}
	return o.PolicyDuration, true
}

// HasPolicyDuration returns a boolean if a field has been set.
func (o *AmInfluData) HasPolicyDuration() bool {
	if o != nil && !IsNil(o.PolicyDuration) {
		return true
	}

	return false
}

// SetPolicyDuration gets a reference to the given int32 and assigns it to the PolicyDuration field.
func (o *AmInfluData) SetPolicyDuration(v int32) {
	o.PolicyDuration = &v
}

// GetEvSubs returns the EvSubs field value if set, zero value otherwise.
func (o *AmInfluData) GetEvSubs() []AmInfluEvent {
	if o == nil || IsNil(o.EvSubs) {
		var ret []AmInfluEvent
		return ret
	}
	return o.EvSubs
}

// GetEvSubsOk returns a tuple with the EvSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetEvSubsOk() ([]AmInfluEvent, bool) {
	if o == nil || IsNil(o.EvSubs) {
		return nil, false
	}
	return o.EvSubs, true
}

// HasEvSubs returns a boolean if a field has been set.
func (o *AmInfluData) HasEvSubs() bool {
	if o != nil && !IsNil(o.EvSubs) {
		return true
	}

	return false
}

// SetEvSubs gets a reference to the given []AmInfluEvent and assigns it to the EvSubs field.
func (o *AmInfluData) SetEvSubs(v []AmInfluEvent) {
	o.EvSubs = v
}

// GetNotifUri returns the NotifUri field value if set, zero value otherwise.
func (o *AmInfluData) GetNotifUri() string {
	if o == nil || IsNil(o.NotifUri) {
		var ret string
		return ret
	}
	return *o.NotifUri
}

// GetNotifUriOk returns a tuple with the NotifUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetNotifUriOk() (*string, bool) {
	if o == nil || IsNil(o.NotifUri) {
		return nil, false
	}
	return o.NotifUri, true
}

// HasNotifUri returns a boolean if a field has been set.
func (o *AmInfluData) HasNotifUri() bool {
	if o != nil && !IsNil(o.NotifUri) {
		return true
	}

	return false
}

// SetNotifUri gets a reference to the given string and assigns it to the NotifUri field.
func (o *AmInfluData) SetNotifUri(v string) {
	o.NotifUri = &v
}

// GetNotifCorrId returns the NotifCorrId field value if set, zero value otherwise.
func (o *AmInfluData) GetNotifCorrId() string {
	if o == nil || IsNil(o.NotifCorrId) {
		var ret string
		return ret
	}
	return *o.NotifCorrId
}

// GetNotifCorrIdOk returns a tuple with the NotifCorrId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetNotifCorrIdOk() (*string, bool) {
	if o == nil || IsNil(o.NotifCorrId) {
		return nil, false
	}
	return o.NotifCorrId, true
}

// HasNotifCorrId returns a boolean if a field has been set.
func (o *AmInfluData) HasNotifCorrId() bool {
	if o != nil && !IsNil(o.NotifCorrId) {
		return true
	}

	return false
}

// SetNotifCorrId gets a reference to the given string and assigns it to the NotifCorrId field.
func (o *AmInfluData) SetNotifCorrId(v string) {
	o.NotifCorrId = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *AmInfluData) GetHeaders() []string {
	if o == nil || IsNil(o.Headers) {
		var ret []string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *AmInfluData) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []string and assigns it to the Headers field.
func (o *AmInfluData) SetHeaders(v []string) {
	o.Headers = v
}

// GetThruReq returns the ThruReq field value if set, zero value otherwise.
func (o *AmInfluData) GetThruReq() bool {
	if o == nil || IsNil(o.ThruReq) {
		var ret bool
		return ret
	}
	return *o.ThruReq
}

// GetThruReqOk returns a tuple with the ThruReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetThruReqOk() (*bool, bool) {
	if o == nil || IsNil(o.ThruReq) {
		return nil, false
	}
	return o.ThruReq, true
}

// HasThruReq returns a boolean if a field has been set.
func (o *AmInfluData) HasThruReq() bool {
	if o != nil && !IsNil(o.ThruReq) {
		return true
	}

	return false
}

// SetThruReq gets a reference to the given bool and assigns it to the ThruReq field.
func (o *AmInfluData) SetThruReq(v bool) {
	o.ThruReq = &v
}

// GetCovReq returns the CovReq field value if set, zero value otherwise.
func (o *AmInfluData) GetCovReq() []ServiceAreaCoverageInfo {
	if o == nil || IsNil(o.CovReq) {
		var ret []ServiceAreaCoverageInfo
		return ret
	}
	return o.CovReq
}

// GetCovReqOk returns a tuple with the CovReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetCovReqOk() ([]ServiceAreaCoverageInfo, bool) {
	if o == nil || IsNil(o.CovReq) {
		return nil, false
	}
	return o.CovReq, true
}

// HasCovReq returns a boolean if a field has been set.
func (o *AmInfluData) HasCovReq() bool {
	if o != nil && !IsNil(o.CovReq) {
		return true
	}

	return false
}

// SetCovReq gets a reference to the given []ServiceAreaCoverageInfo and assigns it to the CovReq field.
func (o *AmInfluData) SetCovReq(v []ServiceAreaCoverageInfo) {
	o.CovReq = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *AmInfluData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *AmInfluData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *AmInfluData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetResUri returns the ResUri field value if set, zero value otherwise.
func (o *AmInfluData) GetResUri() string {
	if o == nil || IsNil(o.ResUri) {
		var ret string
		return ret
	}
	return *o.ResUri
}

// GetResUriOk returns a tuple with the ResUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetResUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResUri) {
		return nil, false
	}
	return o.ResUri, true
}

// HasResUri returns a boolean if a field has been set.
func (o *AmInfluData) HasResUri() bool {
	if o != nil && !IsNil(o.ResUri) {
		return true
	}

	return false
}

// SetResUri gets a reference to the given string and assigns it to the ResUri field.
func (o *AmInfluData) SetResUri(v string) {
	o.ResUri = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *AmInfluData) GetResetIds() []string {
	if o == nil || IsNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluData) GetResetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *AmInfluData) HasResetIds() bool {
	if o != nil && !IsNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *AmInfluData) SetResetIds(v []string) {
	o.ResetIds = v
}

func (o AmInfluData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmInfluData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppIds) {
		toSerialize["appIds"] = o.AppIds
	}
	if !IsNil(o.DnnSnssaiInfos) {
		toSerialize["dnnSnssaiInfos"] = o.DnnSnssaiInfos
	}
	if !IsNil(o.InterGroupId) {
		toSerialize["interGroupId"] = o.InterGroupId
	}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.AnyUeInd) {
		toSerialize["anyUeInd"] = o.AnyUeInd
	}
	if !IsNil(o.PolicyDuration) {
		toSerialize["policyDuration"] = o.PolicyDuration
	}
	if !IsNil(o.EvSubs) {
		toSerialize["evSubs"] = o.EvSubs
	}
	if !IsNil(o.NotifUri) {
		toSerialize["notifUri"] = o.NotifUri
	}
	if !IsNil(o.NotifCorrId) {
		toSerialize["notifCorrId"] = o.NotifCorrId
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.ThruReq) {
		toSerialize["thruReq"] = o.ThruReq
	}
	if !IsNil(o.CovReq) {
		toSerialize["covReq"] = o.CovReq
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.ResUri) {
		toSerialize["resUri"] = o.ResUri
	}
	if !IsNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	return toSerialize, nil
}

type NullableAmInfluData struct {
	value *AmInfluData
	isSet bool
}

func (v NullableAmInfluData) Get() *AmInfluData {
	return v.value
}

func (v *NullableAmInfluData) Set(val *AmInfluData) {
	v.value = val
	v.isSet = true
}

func (v NullableAmInfluData) IsSet() bool {
	return v.isSet
}

func (v *NullableAmInfluData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmInfluData(val *AmInfluData) *NullableAmInfluData {
	return &NullableAmInfluData{value: val, isSet: true}
}

func (v NullableAmInfluData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmInfluData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
