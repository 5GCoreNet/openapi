/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the DnnConfiguration1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnnConfiguration1{}

// DnnConfiguration1 struct for DnnConfiguration1
type DnnConfiguration1 struct {
	PduSessionTypes                PduSessionTypes1         `json:"pduSessionTypes"`
	SscModes                       SscModes1                `json:"sscModes"`
	IwkEpsInd                      *bool                    `json:"iwkEpsInd,omitempty"`
	Var5gQosProfile                *SubscribedDefaultQos1   `json:"5gQosProfile,omitempty"`
	SessionAmbr                    *Ambr1                   `json:"sessionAmbr,omitempty"`
	Var3gppChargingCharacteristics *string                  `json:"3gppChargingCharacteristics,omitempty"`
	StaticIpAddress                []IpAddress1             `json:"staticIpAddress,omitempty"`
	UpSecurity                     *UpSecurity1             `json:"upSecurity,omitempty"`
	PduSessionContinuityInd        *PduSessionContinuityInd `json:"pduSessionContinuityInd,omitempty"`
	// Identity of the NEF
	NiddNefId                *string           `json:"niddNefId,omitempty"`
	NiddInfo                 *NiddInformation1 `json:"niddInfo,omitempty"`
	RedundantSessionAllowed  *bool             `json:"redundantSessionAllowed,omitempty"`
	AcsInfo                  *AcsInfo1         `json:"acsInfo,omitempty"`
	Ipv4FrameRouteList       []FrameRouteInfo1 `json:"ipv4FrameRouteList,omitempty"`
	Ipv6FrameRouteList       []FrameRouteInfo1 `json:"ipv6FrameRouteList,omitempty"`
	AtsssAllowed             *bool             `json:"atsssAllowed,omitempty"`
	SecondaryAuth            *bool             `json:"secondaryAuth,omitempty"`
	UavSecondaryAuth         *bool             `json:"uavSecondaryAuth,omitempty"`
	DnAaaIpAddressAllocation *bool             `json:"dnAaaIpAddressAllocation,omitempty"`
	DnAaaAddress             *IpAddress1       `json:"dnAaaAddress,omitempty"`
	AdditionalDnAaaAddresses []IpAddress1      `json:"additionalDnAaaAddresses,omitempty"`
	// Fully Qualified Domain Name
	DnAaaFqdn                            *string                    `json:"dnAaaFqdn,omitempty"`
	IptvAccCtrlInfo                      *string                    `json:"iptvAccCtrlInfo,omitempty"`
	Ipv4Index                            *IpIndex                   `json:"ipv4Index,omitempty"`
	Ipv6Index                            *IpIndex                   `json:"ipv6Index,omitempty"`
	EcsAddrConfigInfo                    NullableEcsAddrConfigInfo1 `json:"ecsAddrConfigInfo,omitempty"`
	AdditionalEcsAddrConfigInfos         []EcsAddrConfigInfo1       `json:"additionalEcsAddrConfigInfos,omitempty"`
	SharedEcsAddrConfigInfo              *string                    `json:"sharedEcsAddrConfigInfo,omitempty"`
	AdditionalSharedEcsAddrConfigInfoIds []string                   `json:"additionalSharedEcsAddrConfigInfoIds,omitempty"`
	EasDiscoveryAuthorized               *bool                      `json:"easDiscoveryAuthorized,omitempty"`
	OnboardingInd                        *bool                      `json:"onboardingInd,omitempty"`
	AerialUeInd                          *AerialUeIndication        `json:"aerialUeInd,omitempty"`
	SubscribedMaxIpv6PrefixSize          *int32                     `json:"subscribedMaxIpv6PrefixSize,omitempty"`
}

// NewDnnConfiguration1 instantiates a new DnnConfiguration1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnnConfiguration1(pduSessionTypes PduSessionTypes1, sscModes SscModes1) *DnnConfiguration1 {
	this := DnnConfiguration1{}
	this.PduSessionTypes = pduSessionTypes
	this.SscModes = sscModes
	var atsssAllowed bool = false
	this.AtsssAllowed = &atsssAllowed
	var uavSecondaryAuth bool = false
	this.UavSecondaryAuth = &uavSecondaryAuth
	var easDiscoveryAuthorized bool = false
	this.EasDiscoveryAuthorized = &easDiscoveryAuthorized
	var onboardingInd bool = false
	this.OnboardingInd = &onboardingInd
	return &this
}

// NewDnnConfiguration1WithDefaults instantiates a new DnnConfiguration1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnnConfiguration1WithDefaults() *DnnConfiguration1 {
	this := DnnConfiguration1{}
	var atsssAllowed bool = false
	this.AtsssAllowed = &atsssAllowed
	var uavSecondaryAuth bool = false
	this.UavSecondaryAuth = &uavSecondaryAuth
	var easDiscoveryAuthorized bool = false
	this.EasDiscoveryAuthorized = &easDiscoveryAuthorized
	var onboardingInd bool = false
	this.OnboardingInd = &onboardingInd
	return &this
}

// GetPduSessionTypes returns the PduSessionTypes field value
func (o *DnnConfiguration1) GetPduSessionTypes() PduSessionTypes1 {
	if o == nil {
		var ret PduSessionTypes1
		return ret
	}

	return o.PduSessionTypes
}

// GetPduSessionTypesOk returns a tuple with the PduSessionTypes field value
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetPduSessionTypesOk() (*PduSessionTypes1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PduSessionTypes, true
}

// SetPduSessionTypes sets field value
func (o *DnnConfiguration1) SetPduSessionTypes(v PduSessionTypes1) {
	o.PduSessionTypes = v
}

// GetSscModes returns the SscModes field value
func (o *DnnConfiguration1) GetSscModes() SscModes1 {
	if o == nil {
		var ret SscModes1
		return ret
	}

	return o.SscModes
}

// GetSscModesOk returns a tuple with the SscModes field value
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetSscModesOk() (*SscModes1, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SscModes, true
}

// SetSscModes sets field value
func (o *DnnConfiguration1) SetSscModes(v SscModes1) {
	o.SscModes = v
}

// GetIwkEpsInd returns the IwkEpsInd field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIwkEpsInd() bool {
	if o == nil || IsNil(o.IwkEpsInd) {
		var ret bool
		return ret
	}
	return *o.IwkEpsInd
}

// GetIwkEpsIndOk returns a tuple with the IwkEpsInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIwkEpsIndOk() (*bool, bool) {
	if o == nil || IsNil(o.IwkEpsInd) {
		return nil, false
	}
	return o.IwkEpsInd, true
}

// HasIwkEpsInd returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIwkEpsInd() bool {
	if o != nil && !IsNil(o.IwkEpsInd) {
		return true
	}

	return false
}

// SetIwkEpsInd gets a reference to the given bool and assigns it to the IwkEpsInd field.
func (o *DnnConfiguration1) SetIwkEpsInd(v bool) {
	o.IwkEpsInd = &v
}

// GetVar5gQosProfile returns the Var5gQosProfile field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetVar5gQosProfile() SubscribedDefaultQos1 {
	if o == nil || IsNil(o.Var5gQosProfile) {
		var ret SubscribedDefaultQos1
		return ret
	}
	return *o.Var5gQosProfile
}

// GetVar5gQosProfileOk returns a tuple with the Var5gQosProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetVar5gQosProfileOk() (*SubscribedDefaultQos1, bool) {
	if o == nil || IsNil(o.Var5gQosProfile) {
		return nil, false
	}
	return o.Var5gQosProfile, true
}

// HasVar5gQosProfile returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasVar5gQosProfile() bool {
	if o != nil && !IsNil(o.Var5gQosProfile) {
		return true
	}

	return false
}

// SetVar5gQosProfile gets a reference to the given SubscribedDefaultQos1 and assigns it to the Var5gQosProfile field.
func (o *DnnConfiguration1) SetVar5gQosProfile(v SubscribedDefaultQos1) {
	o.Var5gQosProfile = &v
}

// GetSessionAmbr returns the SessionAmbr field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetSessionAmbr() Ambr1 {
	if o == nil || IsNil(o.SessionAmbr) {
		var ret Ambr1
		return ret
	}
	return *o.SessionAmbr
}

// GetSessionAmbrOk returns a tuple with the SessionAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetSessionAmbrOk() (*Ambr1, bool) {
	if o == nil || IsNil(o.SessionAmbr) {
		return nil, false
	}
	return o.SessionAmbr, true
}

// HasSessionAmbr returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasSessionAmbr() bool {
	if o != nil && !IsNil(o.SessionAmbr) {
		return true
	}

	return false
}

// SetSessionAmbr gets a reference to the given Ambr1 and assigns it to the SessionAmbr field.
func (o *DnnConfiguration1) SetSessionAmbr(v Ambr1) {
	o.SessionAmbr = &v
}

// GetVar3gppChargingCharacteristics returns the Var3gppChargingCharacteristics field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetVar3gppChargingCharacteristics() string {
	if o == nil || IsNil(o.Var3gppChargingCharacteristics) {
		var ret string
		return ret
	}
	return *o.Var3gppChargingCharacteristics
}

// GetVar3gppChargingCharacteristicsOk returns a tuple with the Var3gppChargingCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetVar3gppChargingCharacteristicsOk() (*string, bool) {
	if o == nil || IsNil(o.Var3gppChargingCharacteristics) {
		return nil, false
	}
	return o.Var3gppChargingCharacteristics, true
}

// HasVar3gppChargingCharacteristics returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasVar3gppChargingCharacteristics() bool {
	if o != nil && !IsNil(o.Var3gppChargingCharacteristics) {
		return true
	}

	return false
}

// SetVar3gppChargingCharacteristics gets a reference to the given string and assigns it to the Var3gppChargingCharacteristics field.
func (o *DnnConfiguration1) SetVar3gppChargingCharacteristics(v string) {
	o.Var3gppChargingCharacteristics = &v
}

// GetStaticIpAddress returns the StaticIpAddress field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetStaticIpAddress() []IpAddress1 {
	if o == nil || IsNil(o.StaticIpAddress) {
		var ret []IpAddress1
		return ret
	}
	return o.StaticIpAddress
}

// GetStaticIpAddressOk returns a tuple with the StaticIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetStaticIpAddressOk() ([]IpAddress1, bool) {
	if o == nil || IsNil(o.StaticIpAddress) {
		return nil, false
	}
	return o.StaticIpAddress, true
}

// HasStaticIpAddress returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasStaticIpAddress() bool {
	if o != nil && !IsNil(o.StaticIpAddress) {
		return true
	}

	return false
}

// SetStaticIpAddress gets a reference to the given []IpAddress1 and assigns it to the StaticIpAddress field.
func (o *DnnConfiguration1) SetStaticIpAddress(v []IpAddress1) {
	o.StaticIpAddress = v
}

// GetUpSecurity returns the UpSecurity field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetUpSecurity() UpSecurity1 {
	if o == nil || IsNil(o.UpSecurity) {
		var ret UpSecurity1
		return ret
	}
	return *o.UpSecurity
}

// GetUpSecurityOk returns a tuple with the UpSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetUpSecurityOk() (*UpSecurity1, bool) {
	if o == nil || IsNil(o.UpSecurity) {
		return nil, false
	}
	return o.UpSecurity, true
}

// HasUpSecurity returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasUpSecurity() bool {
	if o != nil && !IsNil(o.UpSecurity) {
		return true
	}

	return false
}

// SetUpSecurity gets a reference to the given UpSecurity1 and assigns it to the UpSecurity field.
func (o *DnnConfiguration1) SetUpSecurity(v UpSecurity1) {
	o.UpSecurity = &v
}

// GetPduSessionContinuityInd returns the PduSessionContinuityInd field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetPduSessionContinuityInd() PduSessionContinuityInd {
	if o == nil || IsNil(o.PduSessionContinuityInd) {
		var ret PduSessionContinuityInd
		return ret
	}
	return *o.PduSessionContinuityInd
}

// GetPduSessionContinuityIndOk returns a tuple with the PduSessionContinuityInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetPduSessionContinuityIndOk() (*PduSessionContinuityInd, bool) {
	if o == nil || IsNil(o.PduSessionContinuityInd) {
		return nil, false
	}
	return o.PduSessionContinuityInd, true
}

// HasPduSessionContinuityInd returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasPduSessionContinuityInd() bool {
	if o != nil && !IsNil(o.PduSessionContinuityInd) {
		return true
	}

	return false
}

// SetPduSessionContinuityInd gets a reference to the given PduSessionContinuityInd and assigns it to the PduSessionContinuityInd field.
func (o *DnnConfiguration1) SetPduSessionContinuityInd(v PduSessionContinuityInd) {
	o.PduSessionContinuityInd = &v
}

// GetNiddNefId returns the NiddNefId field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetNiddNefId() string {
	if o == nil || IsNil(o.NiddNefId) {
		var ret string
		return ret
	}
	return *o.NiddNefId
}

// GetNiddNefIdOk returns a tuple with the NiddNefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetNiddNefIdOk() (*string, bool) {
	if o == nil || IsNil(o.NiddNefId) {
		return nil, false
	}
	return o.NiddNefId, true
}

// HasNiddNefId returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasNiddNefId() bool {
	if o != nil && !IsNil(o.NiddNefId) {
		return true
	}

	return false
}

// SetNiddNefId gets a reference to the given string and assigns it to the NiddNefId field.
func (o *DnnConfiguration1) SetNiddNefId(v string) {
	o.NiddNefId = &v
}

// GetNiddInfo returns the NiddInfo field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetNiddInfo() NiddInformation1 {
	if o == nil || IsNil(o.NiddInfo) {
		var ret NiddInformation1
		return ret
	}
	return *o.NiddInfo
}

// GetNiddInfoOk returns a tuple with the NiddInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetNiddInfoOk() (*NiddInformation1, bool) {
	if o == nil || IsNil(o.NiddInfo) {
		return nil, false
	}
	return o.NiddInfo, true
}

// HasNiddInfo returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasNiddInfo() bool {
	if o != nil && !IsNil(o.NiddInfo) {
		return true
	}

	return false
}

// SetNiddInfo gets a reference to the given NiddInformation1 and assigns it to the NiddInfo field.
func (o *DnnConfiguration1) SetNiddInfo(v NiddInformation1) {
	o.NiddInfo = &v
}

// GetRedundantSessionAllowed returns the RedundantSessionAllowed field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetRedundantSessionAllowed() bool {
	if o == nil || IsNil(o.RedundantSessionAllowed) {
		var ret bool
		return ret
	}
	return *o.RedundantSessionAllowed
}

// GetRedundantSessionAllowedOk returns a tuple with the RedundantSessionAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetRedundantSessionAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.RedundantSessionAllowed) {
		return nil, false
	}
	return o.RedundantSessionAllowed, true
}

// HasRedundantSessionAllowed returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasRedundantSessionAllowed() bool {
	if o != nil && !IsNil(o.RedundantSessionAllowed) {
		return true
	}

	return false
}

// SetRedundantSessionAllowed gets a reference to the given bool and assigns it to the RedundantSessionAllowed field.
func (o *DnnConfiguration1) SetRedundantSessionAllowed(v bool) {
	o.RedundantSessionAllowed = &v
}

// GetAcsInfo returns the AcsInfo field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAcsInfo() AcsInfo1 {
	if o == nil || IsNil(o.AcsInfo) {
		var ret AcsInfo1
		return ret
	}
	return *o.AcsInfo
}

// GetAcsInfoOk returns a tuple with the AcsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAcsInfoOk() (*AcsInfo1, bool) {
	if o == nil || IsNil(o.AcsInfo) {
		return nil, false
	}
	return o.AcsInfo, true
}

// HasAcsInfo returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAcsInfo() bool {
	if o != nil && !IsNil(o.AcsInfo) {
		return true
	}

	return false
}

// SetAcsInfo gets a reference to the given AcsInfo1 and assigns it to the AcsInfo field.
func (o *DnnConfiguration1) SetAcsInfo(v AcsInfo1) {
	o.AcsInfo = &v
}

// GetIpv4FrameRouteList returns the Ipv4FrameRouteList field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIpv4FrameRouteList() []FrameRouteInfo1 {
	if o == nil || IsNil(o.Ipv4FrameRouteList) {
		var ret []FrameRouteInfo1
		return ret
	}
	return o.Ipv4FrameRouteList
}

// GetIpv4FrameRouteListOk returns a tuple with the Ipv4FrameRouteList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIpv4FrameRouteListOk() ([]FrameRouteInfo1, bool) {
	if o == nil || IsNil(o.Ipv4FrameRouteList) {
		return nil, false
	}
	return o.Ipv4FrameRouteList, true
}

// HasIpv4FrameRouteList returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIpv4FrameRouteList() bool {
	if o != nil && !IsNil(o.Ipv4FrameRouteList) {
		return true
	}

	return false
}

// SetIpv4FrameRouteList gets a reference to the given []FrameRouteInfo1 and assigns it to the Ipv4FrameRouteList field.
func (o *DnnConfiguration1) SetIpv4FrameRouteList(v []FrameRouteInfo1) {
	o.Ipv4FrameRouteList = v
}

// GetIpv6FrameRouteList returns the Ipv6FrameRouteList field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIpv6FrameRouteList() []FrameRouteInfo1 {
	if o == nil || IsNil(o.Ipv6FrameRouteList) {
		var ret []FrameRouteInfo1
		return ret
	}
	return o.Ipv6FrameRouteList
}

// GetIpv6FrameRouteListOk returns a tuple with the Ipv6FrameRouteList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIpv6FrameRouteListOk() ([]FrameRouteInfo1, bool) {
	if o == nil || IsNil(o.Ipv6FrameRouteList) {
		return nil, false
	}
	return o.Ipv6FrameRouteList, true
}

// HasIpv6FrameRouteList returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIpv6FrameRouteList() bool {
	if o != nil && !IsNil(o.Ipv6FrameRouteList) {
		return true
	}

	return false
}

// SetIpv6FrameRouteList gets a reference to the given []FrameRouteInfo1 and assigns it to the Ipv6FrameRouteList field.
func (o *DnnConfiguration1) SetIpv6FrameRouteList(v []FrameRouteInfo1) {
	o.Ipv6FrameRouteList = v
}

// GetAtsssAllowed returns the AtsssAllowed field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAtsssAllowed() bool {
	if o == nil || IsNil(o.AtsssAllowed) {
		var ret bool
		return ret
	}
	return *o.AtsssAllowed
}

// GetAtsssAllowedOk returns a tuple with the AtsssAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAtsssAllowedOk() (*bool, bool) {
	if o == nil || IsNil(o.AtsssAllowed) {
		return nil, false
	}
	return o.AtsssAllowed, true
}

// HasAtsssAllowed returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAtsssAllowed() bool {
	if o != nil && !IsNil(o.AtsssAllowed) {
		return true
	}

	return false
}

// SetAtsssAllowed gets a reference to the given bool and assigns it to the AtsssAllowed field.
func (o *DnnConfiguration1) SetAtsssAllowed(v bool) {
	o.AtsssAllowed = &v
}

// GetSecondaryAuth returns the SecondaryAuth field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetSecondaryAuth() bool {
	if o == nil || IsNil(o.SecondaryAuth) {
		var ret bool
		return ret
	}
	return *o.SecondaryAuth
}

// GetSecondaryAuthOk returns a tuple with the SecondaryAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetSecondaryAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.SecondaryAuth) {
		return nil, false
	}
	return o.SecondaryAuth, true
}

// HasSecondaryAuth returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasSecondaryAuth() bool {
	if o != nil && !IsNil(o.SecondaryAuth) {
		return true
	}

	return false
}

// SetSecondaryAuth gets a reference to the given bool and assigns it to the SecondaryAuth field.
func (o *DnnConfiguration1) SetSecondaryAuth(v bool) {
	o.SecondaryAuth = &v
}

// GetUavSecondaryAuth returns the UavSecondaryAuth field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetUavSecondaryAuth() bool {
	if o == nil || IsNil(o.UavSecondaryAuth) {
		var ret bool
		return ret
	}
	return *o.UavSecondaryAuth
}

// GetUavSecondaryAuthOk returns a tuple with the UavSecondaryAuth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetUavSecondaryAuthOk() (*bool, bool) {
	if o == nil || IsNil(o.UavSecondaryAuth) {
		return nil, false
	}
	return o.UavSecondaryAuth, true
}

// HasUavSecondaryAuth returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasUavSecondaryAuth() bool {
	if o != nil && !IsNil(o.UavSecondaryAuth) {
		return true
	}

	return false
}

// SetUavSecondaryAuth gets a reference to the given bool and assigns it to the UavSecondaryAuth field.
func (o *DnnConfiguration1) SetUavSecondaryAuth(v bool) {
	o.UavSecondaryAuth = &v
}

// GetDnAaaIpAddressAllocation returns the DnAaaIpAddressAllocation field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetDnAaaIpAddressAllocation() bool {
	if o == nil || IsNil(o.DnAaaIpAddressAllocation) {
		var ret bool
		return ret
	}
	return *o.DnAaaIpAddressAllocation
}

// GetDnAaaIpAddressAllocationOk returns a tuple with the DnAaaIpAddressAllocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetDnAaaIpAddressAllocationOk() (*bool, bool) {
	if o == nil || IsNil(o.DnAaaIpAddressAllocation) {
		return nil, false
	}
	return o.DnAaaIpAddressAllocation, true
}

// HasDnAaaIpAddressAllocation returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasDnAaaIpAddressAllocation() bool {
	if o != nil && !IsNil(o.DnAaaIpAddressAllocation) {
		return true
	}

	return false
}

// SetDnAaaIpAddressAllocation gets a reference to the given bool and assigns it to the DnAaaIpAddressAllocation field.
func (o *DnnConfiguration1) SetDnAaaIpAddressAllocation(v bool) {
	o.DnAaaIpAddressAllocation = &v
}

// GetDnAaaAddress returns the DnAaaAddress field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetDnAaaAddress() IpAddress1 {
	if o == nil || IsNil(o.DnAaaAddress) {
		var ret IpAddress1
		return ret
	}
	return *o.DnAaaAddress
}

// GetDnAaaAddressOk returns a tuple with the DnAaaAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetDnAaaAddressOk() (*IpAddress1, bool) {
	if o == nil || IsNil(o.DnAaaAddress) {
		return nil, false
	}
	return o.DnAaaAddress, true
}

// HasDnAaaAddress returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasDnAaaAddress() bool {
	if o != nil && !IsNil(o.DnAaaAddress) {
		return true
	}

	return false
}

// SetDnAaaAddress gets a reference to the given IpAddress1 and assigns it to the DnAaaAddress field.
func (o *DnnConfiguration1) SetDnAaaAddress(v IpAddress1) {
	o.DnAaaAddress = &v
}

// GetAdditionalDnAaaAddresses returns the AdditionalDnAaaAddresses field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAdditionalDnAaaAddresses() []IpAddress1 {
	if o == nil || IsNil(o.AdditionalDnAaaAddresses) {
		var ret []IpAddress1
		return ret
	}
	return o.AdditionalDnAaaAddresses
}

// GetAdditionalDnAaaAddressesOk returns a tuple with the AdditionalDnAaaAddresses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAdditionalDnAaaAddressesOk() ([]IpAddress1, bool) {
	if o == nil || IsNil(o.AdditionalDnAaaAddresses) {
		return nil, false
	}
	return o.AdditionalDnAaaAddresses, true
}

// HasAdditionalDnAaaAddresses returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAdditionalDnAaaAddresses() bool {
	if o != nil && !IsNil(o.AdditionalDnAaaAddresses) {
		return true
	}

	return false
}

// SetAdditionalDnAaaAddresses gets a reference to the given []IpAddress1 and assigns it to the AdditionalDnAaaAddresses field.
func (o *DnnConfiguration1) SetAdditionalDnAaaAddresses(v []IpAddress1) {
	o.AdditionalDnAaaAddresses = v
}

// GetDnAaaFqdn returns the DnAaaFqdn field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetDnAaaFqdn() string {
	if o == nil || IsNil(o.DnAaaFqdn) {
		var ret string
		return ret
	}
	return *o.DnAaaFqdn
}

// GetDnAaaFqdnOk returns a tuple with the DnAaaFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetDnAaaFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.DnAaaFqdn) {
		return nil, false
	}
	return o.DnAaaFqdn, true
}

// HasDnAaaFqdn returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasDnAaaFqdn() bool {
	if o != nil && !IsNil(o.DnAaaFqdn) {
		return true
	}

	return false
}

// SetDnAaaFqdn gets a reference to the given string and assigns it to the DnAaaFqdn field.
func (o *DnnConfiguration1) SetDnAaaFqdn(v string) {
	o.DnAaaFqdn = &v
}

// GetIptvAccCtrlInfo returns the IptvAccCtrlInfo field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIptvAccCtrlInfo() string {
	if o == nil || IsNil(o.IptvAccCtrlInfo) {
		var ret string
		return ret
	}
	return *o.IptvAccCtrlInfo
}

// GetIptvAccCtrlInfoOk returns a tuple with the IptvAccCtrlInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIptvAccCtrlInfoOk() (*string, bool) {
	if o == nil || IsNil(o.IptvAccCtrlInfo) {
		return nil, false
	}
	return o.IptvAccCtrlInfo, true
}

// HasIptvAccCtrlInfo returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIptvAccCtrlInfo() bool {
	if o != nil && !IsNil(o.IptvAccCtrlInfo) {
		return true
	}

	return false
}

// SetIptvAccCtrlInfo gets a reference to the given string and assigns it to the IptvAccCtrlInfo field.
func (o *DnnConfiguration1) SetIptvAccCtrlInfo(v string) {
	o.IptvAccCtrlInfo = &v
}

// GetIpv4Index returns the Ipv4Index field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIpv4Index() IpIndex {
	if o == nil || IsNil(o.Ipv4Index) {
		var ret IpIndex
		return ret
	}
	return *o.Ipv4Index
}

// GetIpv4IndexOk returns a tuple with the Ipv4Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIpv4IndexOk() (*IpIndex, bool) {
	if o == nil || IsNil(o.Ipv4Index) {
		return nil, false
	}
	return o.Ipv4Index, true
}

// HasIpv4Index returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIpv4Index() bool {
	if o != nil && !IsNil(o.Ipv4Index) {
		return true
	}

	return false
}

// SetIpv4Index gets a reference to the given IpIndex and assigns it to the Ipv4Index field.
func (o *DnnConfiguration1) SetIpv4Index(v IpIndex) {
	o.Ipv4Index = &v
}

// GetIpv6Index returns the Ipv6Index field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetIpv6Index() IpIndex {
	if o == nil || IsNil(o.Ipv6Index) {
		var ret IpIndex
		return ret
	}
	return *o.Ipv6Index
}

// GetIpv6IndexOk returns a tuple with the Ipv6Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetIpv6IndexOk() (*IpIndex, bool) {
	if o == nil || IsNil(o.Ipv6Index) {
		return nil, false
	}
	return o.Ipv6Index, true
}

// HasIpv6Index returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasIpv6Index() bool {
	if o != nil && !IsNil(o.Ipv6Index) {
		return true
	}

	return false
}

// SetIpv6Index gets a reference to the given IpIndex and assigns it to the Ipv6Index field.
func (o *DnnConfiguration1) SetIpv6Index(v IpIndex) {
	o.Ipv6Index = &v
}

// GetEcsAddrConfigInfo returns the EcsAddrConfigInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DnnConfiguration1) GetEcsAddrConfigInfo() EcsAddrConfigInfo1 {
	if o == nil || IsNil(o.EcsAddrConfigInfo.Get()) {
		var ret EcsAddrConfigInfo1
		return ret
	}
	return *o.EcsAddrConfigInfo.Get()
}

// GetEcsAddrConfigInfoOk returns a tuple with the EcsAddrConfigInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DnnConfiguration1) GetEcsAddrConfigInfoOk() (*EcsAddrConfigInfo1, bool) {
	if o == nil {
		return nil, false
	}
	return o.EcsAddrConfigInfo.Get(), o.EcsAddrConfigInfo.IsSet()
}

// HasEcsAddrConfigInfo returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasEcsAddrConfigInfo() bool {
	if o != nil && o.EcsAddrConfigInfo.IsSet() {
		return true
	}

	return false
}

// SetEcsAddrConfigInfo gets a reference to the given NullableEcsAddrConfigInfo1 and assigns it to the EcsAddrConfigInfo field.
func (o *DnnConfiguration1) SetEcsAddrConfigInfo(v EcsAddrConfigInfo1) {
	o.EcsAddrConfigInfo.Set(&v)
}

// SetEcsAddrConfigInfoNil sets the value for EcsAddrConfigInfo to be an explicit nil
func (o *DnnConfiguration1) SetEcsAddrConfigInfoNil() {
	o.EcsAddrConfigInfo.Set(nil)
}

// UnsetEcsAddrConfigInfo ensures that no value is present for EcsAddrConfigInfo, not even an explicit nil
func (o *DnnConfiguration1) UnsetEcsAddrConfigInfo() {
	o.EcsAddrConfigInfo.Unset()
}

// GetAdditionalEcsAddrConfigInfos returns the AdditionalEcsAddrConfigInfos field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAdditionalEcsAddrConfigInfos() []EcsAddrConfigInfo1 {
	if o == nil || IsNil(o.AdditionalEcsAddrConfigInfos) {
		var ret []EcsAddrConfigInfo1
		return ret
	}
	return o.AdditionalEcsAddrConfigInfos
}

// GetAdditionalEcsAddrConfigInfosOk returns a tuple with the AdditionalEcsAddrConfigInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAdditionalEcsAddrConfigInfosOk() ([]EcsAddrConfigInfo1, bool) {
	if o == nil || IsNil(o.AdditionalEcsAddrConfigInfos) {
		return nil, false
	}
	return o.AdditionalEcsAddrConfigInfos, true
}

// HasAdditionalEcsAddrConfigInfos returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAdditionalEcsAddrConfigInfos() bool {
	if o != nil && !IsNil(o.AdditionalEcsAddrConfigInfos) {
		return true
	}

	return false
}

// SetAdditionalEcsAddrConfigInfos gets a reference to the given []EcsAddrConfigInfo1 and assigns it to the AdditionalEcsAddrConfigInfos field.
func (o *DnnConfiguration1) SetAdditionalEcsAddrConfigInfos(v []EcsAddrConfigInfo1) {
	o.AdditionalEcsAddrConfigInfos = v
}

// GetSharedEcsAddrConfigInfo returns the SharedEcsAddrConfigInfo field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetSharedEcsAddrConfigInfo() string {
	if o == nil || IsNil(o.SharedEcsAddrConfigInfo) {
		var ret string
		return ret
	}
	return *o.SharedEcsAddrConfigInfo
}

// GetSharedEcsAddrConfigInfoOk returns a tuple with the SharedEcsAddrConfigInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetSharedEcsAddrConfigInfoOk() (*string, bool) {
	if o == nil || IsNil(o.SharedEcsAddrConfigInfo) {
		return nil, false
	}
	return o.SharedEcsAddrConfigInfo, true
}

// HasSharedEcsAddrConfigInfo returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasSharedEcsAddrConfigInfo() bool {
	if o != nil && !IsNil(o.SharedEcsAddrConfigInfo) {
		return true
	}

	return false
}

// SetSharedEcsAddrConfigInfo gets a reference to the given string and assigns it to the SharedEcsAddrConfigInfo field.
func (o *DnnConfiguration1) SetSharedEcsAddrConfigInfo(v string) {
	o.SharedEcsAddrConfigInfo = &v
}

// GetAdditionalSharedEcsAddrConfigInfoIds returns the AdditionalSharedEcsAddrConfigInfoIds field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAdditionalSharedEcsAddrConfigInfoIds() []string {
	if o == nil || IsNil(o.AdditionalSharedEcsAddrConfigInfoIds) {
		var ret []string
		return ret
	}
	return o.AdditionalSharedEcsAddrConfigInfoIds
}

// GetAdditionalSharedEcsAddrConfigInfoIdsOk returns a tuple with the AdditionalSharedEcsAddrConfigInfoIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAdditionalSharedEcsAddrConfigInfoIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalSharedEcsAddrConfigInfoIds) {
		return nil, false
	}
	return o.AdditionalSharedEcsAddrConfigInfoIds, true
}

// HasAdditionalSharedEcsAddrConfigInfoIds returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAdditionalSharedEcsAddrConfigInfoIds() bool {
	if o != nil && !IsNil(o.AdditionalSharedEcsAddrConfigInfoIds) {
		return true
	}

	return false
}

// SetAdditionalSharedEcsAddrConfigInfoIds gets a reference to the given []string and assigns it to the AdditionalSharedEcsAddrConfigInfoIds field.
func (o *DnnConfiguration1) SetAdditionalSharedEcsAddrConfigInfoIds(v []string) {
	o.AdditionalSharedEcsAddrConfigInfoIds = v
}

// GetEasDiscoveryAuthorized returns the EasDiscoveryAuthorized field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetEasDiscoveryAuthorized() bool {
	if o == nil || IsNil(o.EasDiscoveryAuthorized) {
		var ret bool
		return ret
	}
	return *o.EasDiscoveryAuthorized
}

// GetEasDiscoveryAuthorizedOk returns a tuple with the EasDiscoveryAuthorized field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetEasDiscoveryAuthorizedOk() (*bool, bool) {
	if o == nil || IsNil(o.EasDiscoveryAuthorized) {
		return nil, false
	}
	return o.EasDiscoveryAuthorized, true
}

// HasEasDiscoveryAuthorized returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasEasDiscoveryAuthorized() bool {
	if o != nil && !IsNil(o.EasDiscoveryAuthorized) {
		return true
	}

	return false
}

// SetEasDiscoveryAuthorized gets a reference to the given bool and assigns it to the EasDiscoveryAuthorized field.
func (o *DnnConfiguration1) SetEasDiscoveryAuthorized(v bool) {
	o.EasDiscoveryAuthorized = &v
}

// GetOnboardingInd returns the OnboardingInd field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetOnboardingInd() bool {
	if o == nil || IsNil(o.OnboardingInd) {
		var ret bool
		return ret
	}
	return *o.OnboardingInd
}

// GetOnboardingIndOk returns a tuple with the OnboardingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetOnboardingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.OnboardingInd) {
		return nil, false
	}
	return o.OnboardingInd, true
}

// HasOnboardingInd returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasOnboardingInd() bool {
	if o != nil && !IsNil(o.OnboardingInd) {
		return true
	}

	return false
}

// SetOnboardingInd gets a reference to the given bool and assigns it to the OnboardingInd field.
func (o *DnnConfiguration1) SetOnboardingInd(v bool) {
	o.OnboardingInd = &v
}

// GetAerialUeInd returns the AerialUeInd field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetAerialUeInd() AerialUeIndication {
	if o == nil || IsNil(o.AerialUeInd) {
		var ret AerialUeIndication
		return ret
	}
	return *o.AerialUeInd
}

// GetAerialUeIndOk returns a tuple with the AerialUeInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetAerialUeIndOk() (*AerialUeIndication, bool) {
	if o == nil || IsNil(o.AerialUeInd) {
		return nil, false
	}
	return o.AerialUeInd, true
}

// HasAerialUeInd returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasAerialUeInd() bool {
	if o != nil && !IsNil(o.AerialUeInd) {
		return true
	}

	return false
}

// SetAerialUeInd gets a reference to the given AerialUeIndication and assigns it to the AerialUeInd field.
func (o *DnnConfiguration1) SetAerialUeInd(v AerialUeIndication) {
	o.AerialUeInd = &v
}

// GetSubscribedMaxIpv6PrefixSize returns the SubscribedMaxIpv6PrefixSize field value if set, zero value otherwise.
func (o *DnnConfiguration1) GetSubscribedMaxIpv6PrefixSize() int32 {
	if o == nil || IsNil(o.SubscribedMaxIpv6PrefixSize) {
		var ret int32
		return ret
	}
	return *o.SubscribedMaxIpv6PrefixSize
}

// GetSubscribedMaxIpv6PrefixSizeOk returns a tuple with the SubscribedMaxIpv6PrefixSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnnConfiguration1) GetSubscribedMaxIpv6PrefixSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.SubscribedMaxIpv6PrefixSize) {
		return nil, false
	}
	return o.SubscribedMaxIpv6PrefixSize, true
}

// HasSubscribedMaxIpv6PrefixSize returns a boolean if a field has been set.
func (o *DnnConfiguration1) HasSubscribedMaxIpv6PrefixSize() bool {
	if o != nil && !IsNil(o.SubscribedMaxIpv6PrefixSize) {
		return true
	}

	return false
}

// SetSubscribedMaxIpv6PrefixSize gets a reference to the given int32 and assigns it to the SubscribedMaxIpv6PrefixSize field.
func (o *DnnConfiguration1) SetSubscribedMaxIpv6PrefixSize(v int32) {
	o.SubscribedMaxIpv6PrefixSize = &v
}

func (o DnnConfiguration1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnnConfiguration1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pduSessionTypes"] = o.PduSessionTypes
	toSerialize["sscModes"] = o.SscModes
	if !IsNil(o.IwkEpsInd) {
		toSerialize["iwkEpsInd"] = o.IwkEpsInd
	}
	if !IsNil(o.Var5gQosProfile) {
		toSerialize["5gQosProfile"] = o.Var5gQosProfile
	}
	if !IsNil(o.SessionAmbr) {
		toSerialize["sessionAmbr"] = o.SessionAmbr
	}
	if !IsNil(o.Var3gppChargingCharacteristics) {
		toSerialize["3gppChargingCharacteristics"] = o.Var3gppChargingCharacteristics
	}
	if !IsNil(o.StaticIpAddress) {
		toSerialize["staticIpAddress"] = o.StaticIpAddress
	}
	if !IsNil(o.UpSecurity) {
		toSerialize["upSecurity"] = o.UpSecurity
	}
	if !IsNil(o.PduSessionContinuityInd) {
		toSerialize["pduSessionContinuityInd"] = o.PduSessionContinuityInd
	}
	if !IsNil(o.NiddNefId) {
		toSerialize["niddNefId"] = o.NiddNefId
	}
	if !IsNil(o.NiddInfo) {
		toSerialize["niddInfo"] = o.NiddInfo
	}
	if !IsNil(o.RedundantSessionAllowed) {
		toSerialize["redundantSessionAllowed"] = o.RedundantSessionAllowed
	}
	if !IsNil(o.AcsInfo) {
		toSerialize["acsInfo"] = o.AcsInfo
	}
	if !IsNil(o.Ipv4FrameRouteList) {
		toSerialize["ipv4FrameRouteList"] = o.Ipv4FrameRouteList
	}
	if !IsNil(o.Ipv6FrameRouteList) {
		toSerialize["ipv6FrameRouteList"] = o.Ipv6FrameRouteList
	}
	if !IsNil(o.AtsssAllowed) {
		toSerialize["atsssAllowed"] = o.AtsssAllowed
	}
	if !IsNil(o.SecondaryAuth) {
		toSerialize["secondaryAuth"] = o.SecondaryAuth
	}
	if !IsNil(o.UavSecondaryAuth) {
		toSerialize["uavSecondaryAuth"] = o.UavSecondaryAuth
	}
	if !IsNil(o.DnAaaIpAddressAllocation) {
		toSerialize["dnAaaIpAddressAllocation"] = o.DnAaaIpAddressAllocation
	}
	if !IsNil(o.DnAaaAddress) {
		toSerialize["dnAaaAddress"] = o.DnAaaAddress
	}
	if !IsNil(o.AdditionalDnAaaAddresses) {
		toSerialize["additionalDnAaaAddresses"] = o.AdditionalDnAaaAddresses
	}
	if !IsNil(o.DnAaaFqdn) {
		toSerialize["dnAaaFqdn"] = o.DnAaaFqdn
	}
	if !IsNil(o.IptvAccCtrlInfo) {
		toSerialize["iptvAccCtrlInfo"] = o.IptvAccCtrlInfo
	}
	if !IsNil(o.Ipv4Index) {
		toSerialize["ipv4Index"] = o.Ipv4Index
	}
	if !IsNil(o.Ipv6Index) {
		toSerialize["ipv6Index"] = o.Ipv6Index
	}
	if o.EcsAddrConfigInfo.IsSet() {
		toSerialize["ecsAddrConfigInfo"] = o.EcsAddrConfigInfo.Get()
	}
	if !IsNil(o.AdditionalEcsAddrConfigInfos) {
		toSerialize["additionalEcsAddrConfigInfos"] = o.AdditionalEcsAddrConfigInfos
	}
	if !IsNil(o.SharedEcsAddrConfigInfo) {
		toSerialize["sharedEcsAddrConfigInfo"] = o.SharedEcsAddrConfigInfo
	}
	if !IsNil(o.AdditionalSharedEcsAddrConfigInfoIds) {
		toSerialize["additionalSharedEcsAddrConfigInfoIds"] = o.AdditionalSharedEcsAddrConfigInfoIds
	}
	if !IsNil(o.EasDiscoveryAuthorized) {
		toSerialize["easDiscoveryAuthorized"] = o.EasDiscoveryAuthorized
	}
	if !IsNil(o.OnboardingInd) {
		toSerialize["onboardingInd"] = o.OnboardingInd
	}
	if !IsNil(o.AerialUeInd) {
		toSerialize["aerialUeInd"] = o.AerialUeInd
	}
	if !IsNil(o.SubscribedMaxIpv6PrefixSize) {
		toSerialize["subscribedMaxIpv6PrefixSize"] = o.SubscribedMaxIpv6PrefixSize
	}
	return toSerialize, nil
}

type NullableDnnConfiguration1 struct {
	value *DnnConfiguration1
	isSet bool
}

func (v NullableDnnConfiguration1) Get() *DnnConfiguration1 {
	return v.value
}

func (v *NullableDnnConfiguration1) Set(val *DnnConfiguration1) {
	v.value = val
	v.isSet = true
}

func (v NullableDnnConfiguration1) IsSet() bool {
	return v.isSet
}

func (v *NullableDnnConfiguration1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnnConfiguration1(val *DnnConfiguration1) *NullableDnnConfiguration1 {
	return &NullableDnnConfiguration1{value: val, isSet: true}
}

func (v NullableDnnConfiguration1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnnConfiguration1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
