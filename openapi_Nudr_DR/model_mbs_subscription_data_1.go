/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the MbsSubscriptionData1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MbsSubscriptionData1{}

// MbsSubscriptionData1 Contains the 5MBS Subscription Data.
type MbsSubscriptionData1 struct {
	MbsAllowed *bool `json:"mbsAllowed,omitempty"`
	MbsSessionIdList []MbsSessionId1 `json:"mbsSessionIdList,omitempty"`
}

// NewMbsSubscriptionData1 instantiates a new MbsSubscriptionData1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbsSubscriptionData1() *MbsSubscriptionData1 {
	this := MbsSubscriptionData1{}
	var mbsAllowed bool = false
	this.MbsAllowed = &mbsAllowed
	return &this
}

// NewMbsSubscriptionData1WithDefaults instantiates a new MbsSubscriptionData1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbsSubscriptionData1WithDefaults() *MbsSubscriptionData1 {
	this := MbsSubscriptionData1{}
	var mbsAllowed bool = false
	this.MbsAllowed = &mbsAllowed
	return &this
}

// GetMbsAllowed returns the MbsAllowed field value if set, zero value otherwise.
func (o *MbsSubscriptionData1) GetMbsAllowed() bool {
	if o == nil || isNil(o.MbsAllowed) {
		var ret bool
		return ret
	}
	return *o.MbsAllowed
}

// GetMbsAllowedOk returns a tuple with the MbsAllowed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsSubscriptionData1) GetMbsAllowedOk() (*bool, bool) {
	if o == nil || isNil(o.MbsAllowed) {
		return nil, false
	}
	return o.MbsAllowed, true
}

// HasMbsAllowed returns a boolean if a field has been set.
func (o *MbsSubscriptionData1) HasMbsAllowed() bool {
	if o != nil && !isNil(o.MbsAllowed) {
		return true
	}

	return false
}

// SetMbsAllowed gets a reference to the given bool and assigns it to the MbsAllowed field.
func (o *MbsSubscriptionData1) SetMbsAllowed(v bool) {
	o.MbsAllowed = &v
}

// GetMbsSessionIdList returns the MbsSessionIdList field value if set, zero value otherwise.
func (o *MbsSubscriptionData1) GetMbsSessionIdList() []MbsSessionId1 {
	if o == nil || isNil(o.MbsSessionIdList) {
		var ret []MbsSessionId1
		return ret
	}
	return o.MbsSessionIdList
}

// GetMbsSessionIdListOk returns a tuple with the MbsSessionIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsSubscriptionData1) GetMbsSessionIdListOk() ([]MbsSessionId1, bool) {
	if o == nil || isNil(o.MbsSessionIdList) {
		return nil, false
	}
	return o.MbsSessionIdList, true
}

// HasMbsSessionIdList returns a boolean if a field has been set.
func (o *MbsSubscriptionData1) HasMbsSessionIdList() bool {
	if o != nil && !isNil(o.MbsSessionIdList) {
		return true
	}

	return false
}

// SetMbsSessionIdList gets a reference to the given []MbsSessionId1 and assigns it to the MbsSessionIdList field.
func (o *MbsSubscriptionData1) SetMbsSessionIdList(v []MbsSessionId1) {
	o.MbsSessionIdList = v
}

func (o MbsSubscriptionData1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MbsSubscriptionData1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.MbsAllowed) {
		toSerialize["mbsAllowed"] = o.MbsAllowed
	}
	if !isNil(o.MbsSessionIdList) {
		toSerialize["mbsSessionIdList"] = o.MbsSessionIdList
	}
	return toSerialize, nil
}

type NullableMbsSubscriptionData1 struct {
	value *MbsSubscriptionData1
	isSet bool
}

func (v NullableMbsSubscriptionData1) Get() *MbsSubscriptionData1 {
	return v.value
}

func (v *NullableMbsSubscriptionData1) Set(val *MbsSubscriptionData1) {
	v.value = val
	v.isSet = true
}

func (v NullableMbsSubscriptionData1) IsSet() bool {
	return v.isSet
}

func (v *NullableMbsSubscriptionData1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbsSubscriptionData1(val *MbsSubscriptionData1) *NullableMbsSubscriptionData1 {
	return &NullableMbsSubscriptionData1{value: val, isSet: true}
}

func (v NullableMbsSubscriptionData1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbsSubscriptionData1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


