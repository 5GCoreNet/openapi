/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
	"fmt"
)

// ProseDirectAllowedAnyOf the model 'ProseDirectAllowedAnyOf'
type ProseDirectAllowedAnyOf string

// List of ProseDirectAllowed_anyOf
const (
	ANNOUNCE ProseDirectAllowedAnyOf = "ANNOUNCE"
	MONITOR ProseDirectAllowedAnyOf = "MONITOR"
	RESTRICTD_ANNOUNCE ProseDirectAllowedAnyOf = "RESTRICTD_ANNOUNCE"
	RESTRICTD_MONITOR ProseDirectAllowedAnyOf = "RESTRICTD_MONITOR"
	DISCOVERER ProseDirectAllowedAnyOf = "DISCOVERER"
	DISCOVEREE ProseDirectAllowedAnyOf = "DISCOVEREE"
	BROADCAST ProseDirectAllowedAnyOf = "BROADCAST"
	GROUPCAST ProseDirectAllowedAnyOf = "GROUPCAST"
	UNICAST ProseDirectAllowedAnyOf = "UNICAST"
	LAYER2_RELAY ProseDirectAllowedAnyOf = "LAYER2_RELAY"
	LAYER3_RELAY ProseDirectAllowedAnyOf = "LAYER3_RELAY"
)

// All allowed values of ProseDirectAllowedAnyOf enum
var AllowedProseDirectAllowedAnyOfEnumValues = []ProseDirectAllowedAnyOf{
	"ANNOUNCE",
	"MONITOR",
	"RESTRICTD_ANNOUNCE",
	"RESTRICTD_MONITOR",
	"DISCOVERER",
	"DISCOVEREE",
	"BROADCAST",
	"GROUPCAST",
	"UNICAST",
	"LAYER2_RELAY",
	"LAYER3_RELAY",
}

func (v *ProseDirectAllowedAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ProseDirectAllowedAnyOf(value)
	for _, existing := range AllowedProseDirectAllowedAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ProseDirectAllowedAnyOf", value)
}

// NewProseDirectAllowedAnyOfFromValue returns a pointer to a valid ProseDirectAllowedAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewProseDirectAllowedAnyOfFromValue(v string) (*ProseDirectAllowedAnyOf, error) {
	ev := ProseDirectAllowedAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ProseDirectAllowedAnyOf: valid values are %v", v, AllowedProseDirectAllowedAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ProseDirectAllowedAnyOf) IsValid() bool {
	for _, existing := range AllowedProseDirectAllowedAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ProseDirectAllowed_anyOf value
func (v ProseDirectAllowedAnyOf) Ptr() *ProseDirectAllowedAnyOf {
	return &v
}

type NullableProseDirectAllowedAnyOf struct {
	value *ProseDirectAllowedAnyOf
	isSet bool
}

func (v NullableProseDirectAllowedAnyOf) Get() *ProseDirectAllowedAnyOf {
	return v.value
}

func (v *NullableProseDirectAllowedAnyOf) Set(val *ProseDirectAllowedAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableProseDirectAllowedAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableProseDirectAllowedAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProseDirectAllowedAnyOf(val *ProseDirectAllowedAnyOf) *NullableProseDirectAllowedAnyOf {
	return &NullableProseDirectAllowedAnyOf{value: val, isSet: true}
}

func (v NullableProseDirectAllowedAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProseDirectAllowedAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

