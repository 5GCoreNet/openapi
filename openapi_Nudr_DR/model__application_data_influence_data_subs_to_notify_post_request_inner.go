/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
	"fmt"
)

// ApplicationDataInfluenceDataSubsToNotifyPostRequestInner - struct for ApplicationDataInfluenceDataSubsToNotifyPostRequestInner
type ApplicationDataInfluenceDataSubsToNotifyPostRequestInner struct {
	TrafficInfluData      *TrafficInfluData
	TrafficInfluDataNotif *TrafficInfluDataNotif
}

// TrafficInfluDataAsApplicationDataInfluenceDataSubsToNotifyPostRequestInner is a convenience function that returns TrafficInfluData wrapped in ApplicationDataInfluenceDataSubsToNotifyPostRequestInner
func TrafficInfluDataAsApplicationDataInfluenceDataSubsToNotifyPostRequestInner(v *TrafficInfluData) ApplicationDataInfluenceDataSubsToNotifyPostRequestInner {
	return ApplicationDataInfluenceDataSubsToNotifyPostRequestInner{
		TrafficInfluData: v,
	}
}

// TrafficInfluDataNotifAsApplicationDataInfluenceDataSubsToNotifyPostRequestInner is a convenience function that returns TrafficInfluDataNotif wrapped in ApplicationDataInfluenceDataSubsToNotifyPostRequestInner
func TrafficInfluDataNotifAsApplicationDataInfluenceDataSubsToNotifyPostRequestInner(v *TrafficInfluDataNotif) ApplicationDataInfluenceDataSubsToNotifyPostRequestInner {
	return ApplicationDataInfluenceDataSubsToNotifyPostRequestInner{
		TrafficInfluDataNotif: v,
	}
}

// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TrafficInfluData
	err = newStrictDecoder(data).Decode(&dst.TrafficInfluData)
	if err == nil {
		jsonTrafficInfluData, _ := json.Marshal(dst.TrafficInfluData)
		if string(jsonTrafficInfluData) == "{}" { // empty struct
			dst.TrafficInfluData = nil
		} else {
			match++
		}
	} else {
		dst.TrafficInfluData = nil
	}

	// try to unmarshal data into TrafficInfluDataNotif
	err = newStrictDecoder(data).Decode(&dst.TrafficInfluDataNotif)
	if err == nil {
		jsonTrafficInfluDataNotif, _ := json.Marshal(dst.TrafficInfluDataNotif)
		if string(jsonTrafficInfluDataNotif) == "{}" { // empty struct
			dst.TrafficInfluDataNotif = nil
		} else {
			match++
		}
	} else {
		dst.TrafficInfluDataNotif = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TrafficInfluData = nil
		dst.TrafficInfluDataNotif = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationDataInfluenceDataSubsToNotifyPostRequestInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationDataInfluenceDataSubsToNotifyPostRequestInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationDataInfluenceDataSubsToNotifyPostRequestInner) MarshalJSON() ([]byte, error) {
	if src.TrafficInfluData != nil {
		return json.Marshal(&src.TrafficInfluData)
	}

	if src.TrafficInfluDataNotif != nil {
		return json.Marshal(&src.TrafficInfluDataNotif)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner) GetActualInstance() interface{} {
	if obj == nil {
		return nil
	}
	if obj.TrafficInfluData != nil {
		return obj.TrafficInfluData
	}

	if obj.TrafficInfluDataNotif != nil {
		return obj.TrafficInfluDataNotif
	}

	// all schemas are nil
	return nil
}

type NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner struct {
	value *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner
	isSet bool
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) Get() *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner {
	return v.value
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) Set(val *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner(val *ApplicationDataInfluenceDataSubsToNotifyPostRequestInner) *NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner {
	return &NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner{value: val, isSet: true}
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyPostRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
