/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
)

// checks if the UmtTime1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UmtTime1{}

// UmtTime1 struct for UmtTime1
type UmtTime1 struct {
	// String with format partial-time or full-time as defined in clause 5.6 of IETF RFC 3339. Examples, 20:15:00, 20:15:00-08:00 (for 8 hours behind UTC).
	TimeOfDay string `json:"timeOfDay"`
	// integer between and including 1 and 7 denoting a weekday. 1 shall indicate Monday, and the subsequent weekdays  shall be indicated with the next higher numbers. 7 shall indicate Sunday.
	DayOfWeek int32 `json:"dayOfWeek"`
}

// NewUmtTime1 instantiates a new UmtTime1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUmtTime1(timeOfDay string, dayOfWeek int32) *UmtTime1 {
	this := UmtTime1{}
	this.TimeOfDay = timeOfDay
	this.DayOfWeek = dayOfWeek
	return &this
}

// NewUmtTime1WithDefaults instantiates a new UmtTime1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUmtTime1WithDefaults() *UmtTime1 {
	this := UmtTime1{}
	return &this
}

// GetTimeOfDay returns the TimeOfDay field value
func (o *UmtTime1) GetTimeOfDay() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TimeOfDay
}

// GetTimeOfDayOk returns a tuple with the TimeOfDay field value
// and a boolean to check if the value has been set.
func (o *UmtTime1) GetTimeOfDayOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeOfDay, true
}

// SetTimeOfDay sets field value
func (o *UmtTime1) SetTimeOfDay(v string) {
	o.TimeOfDay = v
}

// GetDayOfWeek returns the DayOfWeek field value
func (o *UmtTime1) GetDayOfWeek() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DayOfWeek
}

// GetDayOfWeekOk returns a tuple with the DayOfWeek field value
// and a boolean to check if the value has been set.
func (o *UmtTime1) GetDayOfWeekOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DayOfWeek, true
}

// SetDayOfWeek sets field value
func (o *UmtTime1) SetDayOfWeek(v int32) {
	o.DayOfWeek = v
}

func (o UmtTime1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UmtTime1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["timeOfDay"] = o.TimeOfDay
	toSerialize["dayOfWeek"] = o.DayOfWeek
	return toSerialize, nil
}

type NullableUmtTime1 struct {
	value *UmtTime1
	isSet bool
}

func (v NullableUmtTime1) Get() *UmtTime1 {
	return v.value
}

func (v *NullableUmtTime1) Set(val *UmtTime1) {
	v.value = val
	v.isSet = true
}

func (v NullableUmtTime1) IsSet() bool {
	return v.isSet
}

func (v *NullableUmtTime1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUmtTime1(val *UmtTime1) *NullableUmtTime1 {
	return &NullableUmtTime1{value: val, isSet: true}
}

func (v NullableUmtTime1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUmtTime1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
