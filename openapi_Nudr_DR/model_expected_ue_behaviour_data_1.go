/*
Nudr_DataRepository API OpenAPI file

Unified Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudr_DR

import (
	"encoding/json"
	"time"
)

// checks if the ExpectedUeBehaviourData1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExpectedUeBehaviourData1{}

// ExpectedUeBehaviourData1 struct for ExpectedUeBehaviourData1
type ExpectedUeBehaviourData1 struct {
	StationaryIndication *StationaryIndication `json:"stationaryIndication,omitempty"`
	// indicating a time in seconds.
	CommunicationDurationTime *int32 `json:"communicationDurationTime,omitempty"`
	// indicating a time in seconds.
	PeriodicTime *int32 `json:"periodicTime,omitempty"`
	ScheduledCommunicationTime *ScheduledCommunicationTime1 `json:"scheduledCommunicationTime,omitempty"`
	ScheduledCommunicationType *ScheduledCommunicationType `json:"scheduledCommunicationType,omitempty"`
	// Identifies the UE's expected geographical movement. The attribute is only applicable in 5G.
	ExpectedUmts []LocationArea1 `json:"expectedUmts,omitempty"`
	TrafficProfile *TrafficProfile `json:"trafficProfile,omitempty"`
	BatteryIndication *BatteryIndication `json:"batteryIndication,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime *time.Time `json:"validityTime,omitempty"`
}

// NewExpectedUeBehaviourData1 instantiates a new ExpectedUeBehaviourData1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExpectedUeBehaviourData1() *ExpectedUeBehaviourData1 {
	this := ExpectedUeBehaviourData1{}
	return &this
}

// NewExpectedUeBehaviourData1WithDefaults instantiates a new ExpectedUeBehaviourData1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExpectedUeBehaviourData1WithDefaults() *ExpectedUeBehaviourData1 {
	this := ExpectedUeBehaviourData1{}
	return &this
}

// GetStationaryIndication returns the StationaryIndication field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetStationaryIndication() StationaryIndication {
	if o == nil || IsNil(o.StationaryIndication) {
		var ret StationaryIndication
		return ret
	}
	return *o.StationaryIndication
}

// GetStationaryIndicationOk returns a tuple with the StationaryIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetStationaryIndicationOk() (*StationaryIndication, bool) {
	if o == nil || IsNil(o.StationaryIndication) {
		return nil, false
	}
	return o.StationaryIndication, true
}

// HasStationaryIndication returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasStationaryIndication() bool {
	if o != nil && !IsNil(o.StationaryIndication) {
		return true
	}

	return false
}

// SetStationaryIndication gets a reference to the given StationaryIndication and assigns it to the StationaryIndication field.
func (o *ExpectedUeBehaviourData1) SetStationaryIndication(v StationaryIndication) {
	o.StationaryIndication = &v
}

// GetCommunicationDurationTime returns the CommunicationDurationTime field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetCommunicationDurationTime() int32 {
	if o == nil || IsNil(o.CommunicationDurationTime) {
		var ret int32
		return ret
	}
	return *o.CommunicationDurationTime
}

// GetCommunicationDurationTimeOk returns a tuple with the CommunicationDurationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetCommunicationDurationTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.CommunicationDurationTime) {
		return nil, false
	}
	return o.CommunicationDurationTime, true
}

// HasCommunicationDurationTime returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasCommunicationDurationTime() bool {
	if o != nil && !IsNil(o.CommunicationDurationTime) {
		return true
	}

	return false
}

// SetCommunicationDurationTime gets a reference to the given int32 and assigns it to the CommunicationDurationTime field.
func (o *ExpectedUeBehaviourData1) SetCommunicationDurationTime(v int32) {
	o.CommunicationDurationTime = &v
}

// GetPeriodicTime returns the PeriodicTime field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetPeriodicTime() int32 {
	if o == nil || IsNil(o.PeriodicTime) {
		var ret int32
		return ret
	}
	return *o.PeriodicTime
}

// GetPeriodicTimeOk returns a tuple with the PeriodicTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetPeriodicTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.PeriodicTime) {
		return nil, false
	}
	return o.PeriodicTime, true
}

// HasPeriodicTime returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasPeriodicTime() bool {
	if o != nil && !IsNil(o.PeriodicTime) {
		return true
	}

	return false
}

// SetPeriodicTime gets a reference to the given int32 and assigns it to the PeriodicTime field.
func (o *ExpectedUeBehaviourData1) SetPeriodicTime(v int32) {
	o.PeriodicTime = &v
}

// GetScheduledCommunicationTime returns the ScheduledCommunicationTime field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetScheduledCommunicationTime() ScheduledCommunicationTime1 {
	if o == nil || IsNil(o.ScheduledCommunicationTime) {
		var ret ScheduledCommunicationTime1
		return ret
	}
	return *o.ScheduledCommunicationTime
}

// GetScheduledCommunicationTimeOk returns a tuple with the ScheduledCommunicationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetScheduledCommunicationTimeOk() (*ScheduledCommunicationTime1, bool) {
	if o == nil || IsNil(o.ScheduledCommunicationTime) {
		return nil, false
	}
	return o.ScheduledCommunicationTime, true
}

// HasScheduledCommunicationTime returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasScheduledCommunicationTime() bool {
	if o != nil && !IsNil(o.ScheduledCommunicationTime) {
		return true
	}

	return false
}

// SetScheduledCommunicationTime gets a reference to the given ScheduledCommunicationTime1 and assigns it to the ScheduledCommunicationTime field.
func (o *ExpectedUeBehaviourData1) SetScheduledCommunicationTime(v ScheduledCommunicationTime1) {
	o.ScheduledCommunicationTime = &v
}

// GetScheduledCommunicationType returns the ScheduledCommunicationType field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetScheduledCommunicationType() ScheduledCommunicationType {
	if o == nil || IsNil(o.ScheduledCommunicationType) {
		var ret ScheduledCommunicationType
		return ret
	}
	return *o.ScheduledCommunicationType
}

// GetScheduledCommunicationTypeOk returns a tuple with the ScheduledCommunicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetScheduledCommunicationTypeOk() (*ScheduledCommunicationType, bool) {
	if o == nil || IsNil(o.ScheduledCommunicationType) {
		return nil, false
	}
	return o.ScheduledCommunicationType, true
}

// HasScheduledCommunicationType returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasScheduledCommunicationType() bool {
	if o != nil && !IsNil(o.ScheduledCommunicationType) {
		return true
	}

	return false
}

// SetScheduledCommunicationType gets a reference to the given ScheduledCommunicationType and assigns it to the ScheduledCommunicationType field.
func (o *ExpectedUeBehaviourData1) SetScheduledCommunicationType(v ScheduledCommunicationType) {
	o.ScheduledCommunicationType = &v
}

// GetExpectedUmts returns the ExpectedUmts field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetExpectedUmts() []LocationArea1 {
	if o == nil || IsNil(o.ExpectedUmts) {
		var ret []LocationArea1
		return ret
	}
	return o.ExpectedUmts
}

// GetExpectedUmtsOk returns a tuple with the ExpectedUmts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetExpectedUmtsOk() ([]LocationArea1, bool) {
	if o == nil || IsNil(o.ExpectedUmts) {
		return nil, false
	}
	return o.ExpectedUmts, true
}

// HasExpectedUmts returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasExpectedUmts() bool {
	if o != nil && !IsNil(o.ExpectedUmts) {
		return true
	}

	return false
}

// SetExpectedUmts gets a reference to the given []LocationArea1 and assigns it to the ExpectedUmts field.
func (o *ExpectedUeBehaviourData1) SetExpectedUmts(v []LocationArea1) {
	o.ExpectedUmts = v
}

// GetTrafficProfile returns the TrafficProfile field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetTrafficProfile() TrafficProfile {
	if o == nil || IsNil(o.TrafficProfile) {
		var ret TrafficProfile
		return ret
	}
	return *o.TrafficProfile
}

// GetTrafficProfileOk returns a tuple with the TrafficProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetTrafficProfileOk() (*TrafficProfile, bool) {
	if o == nil || IsNil(o.TrafficProfile) {
		return nil, false
	}
	return o.TrafficProfile, true
}

// HasTrafficProfile returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasTrafficProfile() bool {
	if o != nil && !IsNil(o.TrafficProfile) {
		return true
	}

	return false
}

// SetTrafficProfile gets a reference to the given TrafficProfile and assigns it to the TrafficProfile field.
func (o *ExpectedUeBehaviourData1) SetTrafficProfile(v TrafficProfile) {
	o.TrafficProfile = &v
}

// GetBatteryIndication returns the BatteryIndication field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetBatteryIndication() BatteryIndication {
	if o == nil || IsNil(o.BatteryIndication) {
		var ret BatteryIndication
		return ret
	}
	return *o.BatteryIndication
}

// GetBatteryIndicationOk returns a tuple with the BatteryIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetBatteryIndicationOk() (*BatteryIndication, bool) {
	if o == nil || IsNil(o.BatteryIndication) {
		return nil, false
	}
	return o.BatteryIndication, true
}

// HasBatteryIndication returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasBatteryIndication() bool {
	if o != nil && !IsNil(o.BatteryIndication) {
		return true
	}

	return false
}

// SetBatteryIndication gets a reference to the given BatteryIndication and assigns it to the BatteryIndication field.
func (o *ExpectedUeBehaviourData1) SetBatteryIndication(v BatteryIndication) {
	o.BatteryIndication = &v
}

// GetValidityTime returns the ValidityTime field value if set, zero value otherwise.
func (o *ExpectedUeBehaviourData1) GetValidityTime() time.Time {
	if o == nil || IsNil(o.ValidityTime) {
		var ret time.Time
		return ret
	}
	return *o.ValidityTime
}

// GetValidityTimeOk returns a tuple with the ValidityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExpectedUeBehaviourData1) GetValidityTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ValidityTime) {
		return nil, false
	}
	return o.ValidityTime, true
}

// HasValidityTime returns a boolean if a field has been set.
func (o *ExpectedUeBehaviourData1) HasValidityTime() bool {
	if o != nil && !IsNil(o.ValidityTime) {
		return true
	}

	return false
}

// SetValidityTime gets a reference to the given time.Time and assigns it to the ValidityTime field.
func (o *ExpectedUeBehaviourData1) SetValidityTime(v time.Time) {
	o.ValidityTime = &v
}

func (o ExpectedUeBehaviourData1) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExpectedUeBehaviourData1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StationaryIndication) {
		toSerialize["stationaryIndication"] = o.StationaryIndication
	}
	if !IsNil(o.CommunicationDurationTime) {
		toSerialize["communicationDurationTime"] = o.CommunicationDurationTime
	}
	if !IsNil(o.PeriodicTime) {
		toSerialize["periodicTime"] = o.PeriodicTime
	}
	if !IsNil(o.ScheduledCommunicationTime) {
		toSerialize["scheduledCommunicationTime"] = o.ScheduledCommunicationTime
	}
	if !IsNil(o.ScheduledCommunicationType) {
		toSerialize["scheduledCommunicationType"] = o.ScheduledCommunicationType
	}
	if !IsNil(o.ExpectedUmts) {
		toSerialize["expectedUmts"] = o.ExpectedUmts
	}
	if !IsNil(o.TrafficProfile) {
		toSerialize["trafficProfile"] = o.TrafficProfile
	}
	if !IsNil(o.BatteryIndication) {
		toSerialize["batteryIndication"] = o.BatteryIndication
	}
	if !IsNil(o.ValidityTime) {
		toSerialize["validityTime"] = o.ValidityTime
	}
	return toSerialize, nil
}

type NullableExpectedUeBehaviourData1 struct {
	value *ExpectedUeBehaviourData1
	isSet bool
}

func (v NullableExpectedUeBehaviourData1) Get() *ExpectedUeBehaviourData1 {
	return v.value
}

func (v *NullableExpectedUeBehaviourData1) Set(val *ExpectedUeBehaviourData1) {
	v.value = val
	v.isSet = true
}

func (v NullableExpectedUeBehaviourData1) IsSet() bool {
	return v.isSet
}

func (v *NullableExpectedUeBehaviourData1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExpectedUeBehaviourData1(val *ExpectedUeBehaviourData1) *NullableExpectedUeBehaviourData1 {
	return &NullableExpectedUeBehaviourData1{value: val, isSet: true}
}

func (v NullableExpectedUeBehaviourData1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExpectedUeBehaviourData1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


