/*
JOSE Protected Message Forwarding API

N32-f Message Forwarding Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_JOSEProtectedMessageForwarding

import (
	"encoding/json"
)

// checks if the IndexToEncryptedValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IndexToEncryptedValue{}

// IndexToEncryptedValue Index to the encrypted value
type IndexToEncryptedValue struct {
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	EncBlockIndex int32 `json:"encBlockIndex"`
}

// NewIndexToEncryptedValue instantiates a new IndexToEncryptedValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIndexToEncryptedValue(encBlockIndex int32) *IndexToEncryptedValue {
	this := IndexToEncryptedValue{}
	this.EncBlockIndex = encBlockIndex
	return &this
}

// NewIndexToEncryptedValueWithDefaults instantiates a new IndexToEncryptedValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIndexToEncryptedValueWithDefaults() *IndexToEncryptedValue {
	this := IndexToEncryptedValue{}
	return &this
}

// GetEncBlockIndex returns the EncBlockIndex field value
func (o *IndexToEncryptedValue) GetEncBlockIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EncBlockIndex
}

// GetEncBlockIndexOk returns a tuple with the EncBlockIndex field value
// and a boolean to check if the value has been set.
func (o *IndexToEncryptedValue) GetEncBlockIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EncBlockIndex, true
}

// SetEncBlockIndex sets field value
func (o *IndexToEncryptedValue) SetEncBlockIndex(v int32) {
	o.EncBlockIndex = v
}

func (o IndexToEncryptedValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IndexToEncryptedValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["encBlockIndex"] = o.EncBlockIndex
	return toSerialize, nil
}

type NullableIndexToEncryptedValue struct {
	value *IndexToEncryptedValue
	isSet bool
}

func (v NullableIndexToEncryptedValue) Get() *IndexToEncryptedValue {
	return v.value
}

func (v *NullableIndexToEncryptedValue) Set(val *IndexToEncryptedValue) {
	v.value = val
	v.isSet = true
}

func (v NullableIndexToEncryptedValue) IsSet() bool {
	return v.isSet
}

func (v *NullableIndexToEncryptedValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIndexToEncryptedValue(val *IndexToEncryptedValue) *NullableIndexToEncryptedValue {
	return &NullableIndexToEncryptedValue{value: val, isSet: true}
}

func (v NullableIndexToEncryptedValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIndexToEncryptedValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


