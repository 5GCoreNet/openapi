/*
3gpp-network-parameter-configuration

API for network parameter configuration.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NpConfiguration

import (
	"encoding/json"
	"time"
)

// checks if the NpConfigurationPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpConfigurationPatch{}

// NpConfigurationPatch Represents parameters used to request the modification of a network parameters configuration resource.
type NpConfigurationPatch struct {
	// Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.
	MaximumLatency NullableInt32 `json:"maximumLatency,omitempty"`
	// Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.
	MaximumResponseTime NullableInt32 `json:"maximumResponseTime,omitempty"`
	// This parameter may be included to identify the number of packets that the serving gateway shall buffer in case that the UE is not reachable.
	SuggestedNumberOfDlPackets NullableInt32 `json:"suggestedNumberOfDlPackets,omitempty"`
	// Unsigned integer identifying a period of time in units of seconds with \"nullable=true\" property.
	GroupReportGuardTime NullableInt32 `json:"groupReportGuardTime,omitempty"`
	// string with format \"date-time\" as defined in OpenAPI with \"nullable=true\" property.
	ValidityTime NullableTime `json:"validityTime,omitempty"`
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NotificationDestination *string `json:"notificationDestination,omitempty"`
}

// NewNpConfigurationPatch instantiates a new NpConfigurationPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpConfigurationPatch() *NpConfigurationPatch {
	this := NpConfigurationPatch{}
	return &this
}

// NewNpConfigurationPatchWithDefaults instantiates a new NpConfigurationPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpConfigurationPatchWithDefaults() *NpConfigurationPatch {
	this := NpConfigurationPatch{}
	return &this
}

// GetMaximumLatency returns the MaximumLatency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NpConfigurationPatch) GetMaximumLatency() int32 {
	if o == nil || isNil(o.MaximumLatency.Get()) {
		var ret int32
		return ret
	}
	return *o.MaximumLatency.Get()
}

// GetMaximumLatencyOk returns a tuple with the MaximumLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NpConfigurationPatch) GetMaximumLatencyOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumLatency.Get(), o.MaximumLatency.IsSet()
}

// HasMaximumLatency returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasMaximumLatency() bool {
	if o != nil && o.MaximumLatency.IsSet() {
		return true
	}

	return false
}

// SetMaximumLatency gets a reference to the given NullableInt32 and assigns it to the MaximumLatency field.
func (o *NpConfigurationPatch) SetMaximumLatency(v int32) {
	o.MaximumLatency.Set(&v)
}
// SetMaximumLatencyNil sets the value for MaximumLatency to be an explicit nil
func (o *NpConfigurationPatch) SetMaximumLatencyNil() {
	o.MaximumLatency.Set(nil)
}

// UnsetMaximumLatency ensures that no value is present for MaximumLatency, not even an explicit nil
func (o *NpConfigurationPatch) UnsetMaximumLatency() {
	o.MaximumLatency.Unset()
}

// GetMaximumResponseTime returns the MaximumResponseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NpConfigurationPatch) GetMaximumResponseTime() int32 {
	if o == nil || isNil(o.MaximumResponseTime.Get()) {
		var ret int32
		return ret
	}
	return *o.MaximumResponseTime.Get()
}

// GetMaximumResponseTimeOk returns a tuple with the MaximumResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NpConfigurationPatch) GetMaximumResponseTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaximumResponseTime.Get(), o.MaximumResponseTime.IsSet()
}

// HasMaximumResponseTime returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasMaximumResponseTime() bool {
	if o != nil && o.MaximumResponseTime.IsSet() {
		return true
	}

	return false
}

// SetMaximumResponseTime gets a reference to the given NullableInt32 and assigns it to the MaximumResponseTime field.
func (o *NpConfigurationPatch) SetMaximumResponseTime(v int32) {
	o.MaximumResponseTime.Set(&v)
}
// SetMaximumResponseTimeNil sets the value for MaximumResponseTime to be an explicit nil
func (o *NpConfigurationPatch) SetMaximumResponseTimeNil() {
	o.MaximumResponseTime.Set(nil)
}

// UnsetMaximumResponseTime ensures that no value is present for MaximumResponseTime, not even an explicit nil
func (o *NpConfigurationPatch) UnsetMaximumResponseTime() {
	o.MaximumResponseTime.Unset()
}

// GetSuggestedNumberOfDlPackets returns the SuggestedNumberOfDlPackets field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NpConfigurationPatch) GetSuggestedNumberOfDlPackets() int32 {
	if o == nil || isNil(o.SuggestedNumberOfDlPackets.Get()) {
		var ret int32
		return ret
	}
	return *o.SuggestedNumberOfDlPackets.Get()
}

// GetSuggestedNumberOfDlPacketsOk returns a tuple with the SuggestedNumberOfDlPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NpConfigurationPatch) GetSuggestedNumberOfDlPacketsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SuggestedNumberOfDlPackets.Get(), o.SuggestedNumberOfDlPackets.IsSet()
}

// HasSuggestedNumberOfDlPackets returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasSuggestedNumberOfDlPackets() bool {
	if o != nil && o.SuggestedNumberOfDlPackets.IsSet() {
		return true
	}

	return false
}

// SetSuggestedNumberOfDlPackets gets a reference to the given NullableInt32 and assigns it to the SuggestedNumberOfDlPackets field.
func (o *NpConfigurationPatch) SetSuggestedNumberOfDlPackets(v int32) {
	o.SuggestedNumberOfDlPackets.Set(&v)
}
// SetSuggestedNumberOfDlPacketsNil sets the value for SuggestedNumberOfDlPackets to be an explicit nil
func (o *NpConfigurationPatch) SetSuggestedNumberOfDlPacketsNil() {
	o.SuggestedNumberOfDlPackets.Set(nil)
}

// UnsetSuggestedNumberOfDlPackets ensures that no value is present for SuggestedNumberOfDlPackets, not even an explicit nil
func (o *NpConfigurationPatch) UnsetSuggestedNumberOfDlPackets() {
	o.SuggestedNumberOfDlPackets.Unset()
}

// GetGroupReportGuardTime returns the GroupReportGuardTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NpConfigurationPatch) GetGroupReportGuardTime() int32 {
	if o == nil || isNil(o.GroupReportGuardTime.Get()) {
		var ret int32
		return ret
	}
	return *o.GroupReportGuardTime.Get()
}

// GetGroupReportGuardTimeOk returns a tuple with the GroupReportGuardTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NpConfigurationPatch) GetGroupReportGuardTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.GroupReportGuardTime.Get(), o.GroupReportGuardTime.IsSet()
}

// HasGroupReportGuardTime returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasGroupReportGuardTime() bool {
	if o != nil && o.GroupReportGuardTime.IsSet() {
		return true
	}

	return false
}

// SetGroupReportGuardTime gets a reference to the given NullableInt32 and assigns it to the GroupReportGuardTime field.
func (o *NpConfigurationPatch) SetGroupReportGuardTime(v int32) {
	o.GroupReportGuardTime.Set(&v)
}
// SetGroupReportGuardTimeNil sets the value for GroupReportGuardTime to be an explicit nil
func (o *NpConfigurationPatch) SetGroupReportGuardTimeNil() {
	o.GroupReportGuardTime.Set(nil)
}

// UnsetGroupReportGuardTime ensures that no value is present for GroupReportGuardTime, not even an explicit nil
func (o *NpConfigurationPatch) UnsetGroupReportGuardTime() {
	o.GroupReportGuardTime.Unset()
}

// GetValidityTime returns the ValidityTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *NpConfigurationPatch) GetValidityTime() time.Time {
	if o == nil || isNil(o.ValidityTime.Get()) {
		var ret time.Time
		return ret
	}
	return *o.ValidityTime.Get()
}

// GetValidityTimeOk returns a tuple with the ValidityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *NpConfigurationPatch) GetValidityTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.ValidityTime.Get(), o.ValidityTime.IsSet()
}

// HasValidityTime returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasValidityTime() bool {
	if o != nil && o.ValidityTime.IsSet() {
		return true
	}

	return false
}

// SetValidityTime gets a reference to the given NullableTime and assigns it to the ValidityTime field.
func (o *NpConfigurationPatch) SetValidityTime(v time.Time) {
	o.ValidityTime.Set(&v)
}
// SetValidityTimeNil sets the value for ValidityTime to be an explicit nil
func (o *NpConfigurationPatch) SetValidityTimeNil() {
	o.ValidityTime.Set(nil)
}

// UnsetValidityTime ensures that no value is present for ValidityTime, not even an explicit nil
func (o *NpConfigurationPatch) UnsetValidityTime() {
	o.ValidityTime.Unset()
}

// GetNotificationDestination returns the NotificationDestination field value if set, zero value otherwise.
func (o *NpConfigurationPatch) GetNotificationDestination() string {
	if o == nil || isNil(o.NotificationDestination) {
		var ret string
		return ret
	}
	return *o.NotificationDestination
}

// GetNotificationDestinationOk returns a tuple with the NotificationDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpConfigurationPatch) GetNotificationDestinationOk() (*string, bool) {
	if o == nil || isNil(o.NotificationDestination) {
		return nil, false
	}
	return o.NotificationDestination, true
}

// HasNotificationDestination returns a boolean if a field has been set.
func (o *NpConfigurationPatch) HasNotificationDestination() bool {
	if o != nil && !isNil(o.NotificationDestination) {
		return true
	}

	return false
}

// SetNotificationDestination gets a reference to the given string and assigns it to the NotificationDestination field.
func (o *NpConfigurationPatch) SetNotificationDestination(v string) {
	o.NotificationDestination = &v
}

func (o NpConfigurationPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpConfigurationPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.MaximumLatency.IsSet() {
		toSerialize["maximumLatency"] = o.MaximumLatency.Get()
	}
	if o.MaximumResponseTime.IsSet() {
		toSerialize["maximumResponseTime"] = o.MaximumResponseTime.Get()
	}
	if o.SuggestedNumberOfDlPackets.IsSet() {
		toSerialize["suggestedNumberOfDlPackets"] = o.SuggestedNumberOfDlPackets.Get()
	}
	if o.GroupReportGuardTime.IsSet() {
		toSerialize["groupReportGuardTime"] = o.GroupReportGuardTime.Get()
	}
	if o.ValidityTime.IsSet() {
		toSerialize["validityTime"] = o.ValidityTime.Get()
	}
	if !isNil(o.NotificationDestination) {
		toSerialize["notificationDestination"] = o.NotificationDestination
	}
	return toSerialize, nil
}

type NullableNpConfigurationPatch struct {
	value *NpConfigurationPatch
	isSet bool
}

func (v NullableNpConfigurationPatch) Get() *NpConfigurationPatch {
	return v.value
}

func (v *NullableNpConfigurationPatch) Set(val *NpConfigurationPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableNpConfigurationPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableNpConfigurationPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpConfigurationPatch(val *NpConfigurationPatch) *NullableNpConfigurationPatch {
	return &NullableNpConfigurationPatch{value: val, isSet: true}
}

func (v NullableNpConfigurationPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpConfigurationPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


