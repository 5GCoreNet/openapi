/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// MediaComponentResourcesStatusAnyOf the model 'MediaComponentResourcesStatusAnyOf'
type MediaComponentResourcesStatusAnyOf string

// List of MediaComponentResourcesStatus_anyOf
const (
	ACTIVE MediaComponentResourcesStatusAnyOf = "ACTIVE"
	INACTIVE MediaComponentResourcesStatusAnyOf = "INACTIVE"
)

// All allowed values of MediaComponentResourcesStatusAnyOf enum
var AllowedMediaComponentResourcesStatusAnyOfEnumValues = []MediaComponentResourcesStatusAnyOf{
	"ACTIVE",
	"INACTIVE",
}

func (v *MediaComponentResourcesStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MediaComponentResourcesStatusAnyOf(value)
	for _, existing := range AllowedMediaComponentResourcesStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MediaComponentResourcesStatusAnyOf", value)
}

// NewMediaComponentResourcesStatusAnyOfFromValue returns a pointer to a valid MediaComponentResourcesStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMediaComponentResourcesStatusAnyOfFromValue(v string) (*MediaComponentResourcesStatusAnyOf, error) {
	ev := MediaComponentResourcesStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MediaComponentResourcesStatusAnyOf: valid values are %v", v, AllowedMediaComponentResourcesStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MediaComponentResourcesStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedMediaComponentResourcesStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MediaComponentResourcesStatus_anyOf value
func (v MediaComponentResourcesStatusAnyOf) Ptr() *MediaComponentResourcesStatusAnyOf {
	return &v
}

type NullableMediaComponentResourcesStatusAnyOf struct {
	value *MediaComponentResourcesStatusAnyOf
	isSet bool
}

func (v NullableMediaComponentResourcesStatusAnyOf) Get() *MediaComponentResourcesStatusAnyOf {
	return v.value
}

func (v *NullableMediaComponentResourcesStatusAnyOf) Set(val *MediaComponentResourcesStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaComponentResourcesStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaComponentResourcesStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaComponentResourcesStatusAnyOf(val *MediaComponentResourcesStatusAnyOf) *NullableMediaComponentResourcesStatusAnyOf {
	return &NullableMediaComponentResourcesStatusAnyOf{value: val, isSet: true}
}

func (v NullableMediaComponentResourcesStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaComponentResourcesStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

