/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// AfNotifMethodAnyOf the model 'AfNotifMethodAnyOf'
type AfNotifMethodAnyOf string

// List of AfNotifMethod_anyOf
const (
	EVENT_DETECTION AfNotifMethodAnyOf = "EVENT_DETECTION"
	ONE_TIME AfNotifMethodAnyOf = "ONE_TIME"
	PERIODIC AfNotifMethodAnyOf = "PERIODIC"
	PDU_SESSION_RELEASE AfNotifMethodAnyOf = "PDU_SESSION_RELEASE"
)

// All allowed values of AfNotifMethodAnyOf enum
var AllowedAfNotifMethodAnyOfEnumValues = []AfNotifMethodAnyOf{
	"EVENT_DETECTION",
	"ONE_TIME",
	"PERIODIC",
	"PDU_SESSION_RELEASE",
}

func (v *AfNotifMethodAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AfNotifMethodAnyOf(value)
	for _, existing := range AllowedAfNotifMethodAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AfNotifMethodAnyOf", value)
}

// NewAfNotifMethodAnyOfFromValue returns a pointer to a valid AfNotifMethodAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAfNotifMethodAnyOfFromValue(v string) (*AfNotifMethodAnyOf, error) {
	ev := AfNotifMethodAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AfNotifMethodAnyOf: valid values are %v", v, AllowedAfNotifMethodAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AfNotifMethodAnyOf) IsValid() bool {
	for _, existing := range AllowedAfNotifMethodAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AfNotifMethod_anyOf value
func (v AfNotifMethodAnyOf) Ptr() *AfNotifMethodAnyOf {
	return &v
}

type NullableAfNotifMethodAnyOf struct {
	value *AfNotifMethodAnyOf
	isSet bool
}

func (v NullableAfNotifMethodAnyOf) Get() *AfNotifMethodAnyOf {
	return v.value
}

func (v *NullableAfNotifMethodAnyOf) Set(val *AfNotifMethodAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAfNotifMethodAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAfNotifMethodAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAfNotifMethodAnyOf(val *AfNotifMethodAnyOf) *NullableAfNotifMethodAnyOf {
	return &NullableAfNotifMethodAnyOf{value: val, isSet: true}
}

func (v NullableAfNotifMethodAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAfNotifMethodAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

