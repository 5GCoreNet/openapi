/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
)

// checks if the QosMonitoringInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosMonitoringInformation{}

// QosMonitoringInformation Indicates the QoS Monitoring information to report, i.e. UL and/or DL and or round trip delay. 
type QosMonitoringInformation struct {
	RepThreshDl *int32 `json:"repThreshDl,omitempty"`
	RepThreshUl *int32 `json:"repThreshUl,omitempty"`
	RepThreshRp *int32 `json:"repThreshRp,omitempty"`
}

// NewQosMonitoringInformation instantiates a new QosMonitoringInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosMonitoringInformation() *QosMonitoringInformation {
	this := QosMonitoringInformation{}
	return &this
}

// NewQosMonitoringInformationWithDefaults instantiates a new QosMonitoringInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosMonitoringInformationWithDefaults() *QosMonitoringInformation {
	this := QosMonitoringInformation{}
	return &this
}

// GetRepThreshDl returns the RepThreshDl field value if set, zero value otherwise.
func (o *QosMonitoringInformation) GetRepThreshDl() int32 {
	if o == nil || isNil(o.RepThreshDl) {
		var ret int32
		return ret
	}
	return *o.RepThreshDl
}

// GetRepThreshDlOk returns a tuple with the RepThreshDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosMonitoringInformation) GetRepThreshDlOk() (*int32, bool) {
	if o == nil || isNil(o.RepThreshDl) {
		return nil, false
	}
	return o.RepThreshDl, true
}

// HasRepThreshDl returns a boolean if a field has been set.
func (o *QosMonitoringInformation) HasRepThreshDl() bool {
	if o != nil && !isNil(o.RepThreshDl) {
		return true
	}

	return false
}

// SetRepThreshDl gets a reference to the given int32 and assigns it to the RepThreshDl field.
func (o *QosMonitoringInformation) SetRepThreshDl(v int32) {
	o.RepThreshDl = &v
}

// GetRepThreshUl returns the RepThreshUl field value if set, zero value otherwise.
func (o *QosMonitoringInformation) GetRepThreshUl() int32 {
	if o == nil || isNil(o.RepThreshUl) {
		var ret int32
		return ret
	}
	return *o.RepThreshUl
}

// GetRepThreshUlOk returns a tuple with the RepThreshUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosMonitoringInformation) GetRepThreshUlOk() (*int32, bool) {
	if o == nil || isNil(o.RepThreshUl) {
		return nil, false
	}
	return o.RepThreshUl, true
}

// HasRepThreshUl returns a boolean if a field has been set.
func (o *QosMonitoringInformation) HasRepThreshUl() bool {
	if o != nil && !isNil(o.RepThreshUl) {
		return true
	}

	return false
}

// SetRepThreshUl gets a reference to the given int32 and assigns it to the RepThreshUl field.
func (o *QosMonitoringInformation) SetRepThreshUl(v int32) {
	o.RepThreshUl = &v
}

// GetRepThreshRp returns the RepThreshRp field value if set, zero value otherwise.
func (o *QosMonitoringInformation) GetRepThreshRp() int32 {
	if o == nil || isNil(o.RepThreshRp) {
		var ret int32
		return ret
	}
	return *o.RepThreshRp
}

// GetRepThreshRpOk returns a tuple with the RepThreshRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosMonitoringInformation) GetRepThreshRpOk() (*int32, bool) {
	if o == nil || isNil(o.RepThreshRp) {
		return nil, false
	}
	return o.RepThreshRp, true
}

// HasRepThreshRp returns a boolean if a field has been set.
func (o *QosMonitoringInformation) HasRepThreshRp() bool {
	if o != nil && !isNil(o.RepThreshRp) {
		return true
	}

	return false
}

// SetRepThreshRp gets a reference to the given int32 and assigns it to the RepThreshRp field.
func (o *QosMonitoringInformation) SetRepThreshRp(v int32) {
	o.RepThreshRp = &v
}

func (o QosMonitoringInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosMonitoringInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.RepThreshDl) {
		toSerialize["repThreshDl"] = o.RepThreshDl
	}
	if !isNil(o.RepThreshUl) {
		toSerialize["repThreshUl"] = o.RepThreshUl
	}
	if !isNil(o.RepThreshRp) {
		toSerialize["repThreshRp"] = o.RepThreshRp
	}
	return toSerialize, nil
}

type NullableQosMonitoringInformation struct {
	value *QosMonitoringInformation
	isSet bool
}

func (v NullableQosMonitoringInformation) Get() *QosMonitoringInformation {
	return v.value
}

func (v *NullableQosMonitoringInformation) Set(val *QosMonitoringInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableQosMonitoringInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableQosMonitoringInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosMonitoringInformation(val *QosMonitoringInformation) *NullableQosMonitoringInformation {
	return &NullableQosMonitoringInformation{value: val, isSet: true}
}

func (v NullableQosMonitoringInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosMonitoringInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


