/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// QosNotifTypeAnyOf the model 'QosNotifTypeAnyOf'
type QosNotifTypeAnyOf string

// List of QosNotifType_anyOf
const (
	GUARANTEED QosNotifTypeAnyOf = "GUARANTEED"
	NOT_GUARANTEED QosNotifTypeAnyOf = "NOT_GUARANTEED"
)

// All allowed values of QosNotifTypeAnyOf enum
var AllowedQosNotifTypeAnyOfEnumValues = []QosNotifTypeAnyOf{
	"GUARANTEED",
	"NOT_GUARANTEED",
}

func (v *QosNotifTypeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QosNotifTypeAnyOf(value)
	for _, existing := range AllowedQosNotifTypeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QosNotifTypeAnyOf", value)
}

// NewQosNotifTypeAnyOfFromValue returns a pointer to a valid QosNotifTypeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQosNotifTypeAnyOfFromValue(v string) (*QosNotifTypeAnyOf, error) {
	ev := QosNotifTypeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for QosNotifTypeAnyOf: valid values are %v", v, AllowedQosNotifTypeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v QosNotifTypeAnyOf) IsValid() bool {
	for _, existing := range AllowedQosNotifTypeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to QosNotifType_anyOf value
func (v QosNotifTypeAnyOf) Ptr() *QosNotifTypeAnyOf {
	return &v
}

type NullableQosNotifTypeAnyOf struct {
	value *QosNotifTypeAnyOf
	isSet bool
}

func (v NullableQosNotifTypeAnyOf) Get() *QosNotifTypeAnyOf {
	return v.value
}

func (v *NullableQosNotifTypeAnyOf) Set(val *QosNotifTypeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableQosNotifTypeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableQosNotifTypeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosNotifTypeAnyOf(val *QosNotifTypeAnyOf) *NullableQosNotifTypeAnyOf {
	return &NullableQosNotifTypeAnyOf{value: val, isSet: true}
}

func (v NullableQosNotifTypeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosNotifTypeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

