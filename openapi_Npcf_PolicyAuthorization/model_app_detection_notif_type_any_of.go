/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// AppDetectionNotifTypeAnyOf the model 'AppDetectionNotifTypeAnyOf'
type AppDetectionNotifTypeAnyOf string

// List of AppDetectionNotifType_anyOf
const (
	START AppDetectionNotifTypeAnyOf = "APP_START"
	STOP AppDetectionNotifTypeAnyOf = "APP_STOP"
)

// All allowed values of AppDetectionNotifTypeAnyOf enum
var AllowedAppDetectionNotifTypeAnyOfEnumValues = []AppDetectionNotifTypeAnyOf{
	"APP_START",
	"APP_STOP",
}

func (v *AppDetectionNotifTypeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AppDetectionNotifTypeAnyOf(value)
	for _, existing := range AllowedAppDetectionNotifTypeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AppDetectionNotifTypeAnyOf", value)
}

// NewAppDetectionNotifTypeAnyOfFromValue returns a pointer to a valid AppDetectionNotifTypeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAppDetectionNotifTypeAnyOfFromValue(v string) (*AppDetectionNotifTypeAnyOf, error) {
	ev := AppDetectionNotifTypeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AppDetectionNotifTypeAnyOf: valid values are %v", v, AllowedAppDetectionNotifTypeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AppDetectionNotifTypeAnyOf) IsValid() bool {
	for _, existing := range AllowedAppDetectionNotifTypeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AppDetectionNotifType_anyOf value
func (v AppDetectionNotifTypeAnyOf) Ptr() *AppDetectionNotifTypeAnyOf {
	return &v
}

type NullableAppDetectionNotifTypeAnyOf struct {
	value *AppDetectionNotifTypeAnyOf
	isSet bool
}

func (v NullableAppDetectionNotifTypeAnyOf) Get() *AppDetectionNotifTypeAnyOf {
	return v.value
}

func (v *NullableAppDetectionNotifTypeAnyOf) Set(val *AppDetectionNotifTypeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDetectionNotifTypeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDetectionNotifTypeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDetectionNotifTypeAnyOf(val *AppDetectionNotifTypeAnyOf) *NullableAppDetectionNotifTypeAnyOf {
	return &NullableAppDetectionNotifTypeAnyOf{value: val, isSet: true}
}

func (v NullableAppDetectionNotifTypeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDetectionNotifTypeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

