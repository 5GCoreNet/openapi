/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
)

// checks if the PduSessionTsnBridge type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PduSessionTsnBridge{}

// PduSessionTsnBridge Contains the new TSC user plane node information and may contain the DS-TT port and/or NW-TT port management information. 
type PduSessionTsnBridge struct {
	TsnBridgeInfo TsnBridgeInfo `json:"tsnBridgeInfo"`
	TsnBridgeManCont *BridgeManagementContainer `json:"tsnBridgeManCont,omitempty"`
	TsnPortManContDstt *PortManagementContainer `json:"tsnPortManContDstt,omitempty"`
	TsnPortManContNwtts []PortManagementContainer `json:"tsnPortManContNwtts,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
	UeIpv4Addr *string `json:"ueIpv4Addr,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn *string `json:"dnn,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	// IPv4 address domain identifier.
	IpDomain *string `json:"ipDomain,omitempty"`
	UeIpv6AddrPrefix *Ipv6Prefix `json:"ueIpv6AddrPrefix,omitempty"`
}

// NewPduSessionTsnBridge instantiates a new PduSessionTsnBridge object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPduSessionTsnBridge(tsnBridgeInfo TsnBridgeInfo) *PduSessionTsnBridge {
	this := PduSessionTsnBridge{}
	this.TsnBridgeInfo = tsnBridgeInfo
	return &this
}

// NewPduSessionTsnBridgeWithDefaults instantiates a new PduSessionTsnBridge object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPduSessionTsnBridgeWithDefaults() *PduSessionTsnBridge {
	this := PduSessionTsnBridge{}
	return &this
}

// GetTsnBridgeInfo returns the TsnBridgeInfo field value
func (o *PduSessionTsnBridge) GetTsnBridgeInfo() TsnBridgeInfo {
	if o == nil {
		var ret TsnBridgeInfo
		return ret
	}

	return o.TsnBridgeInfo
}

// GetTsnBridgeInfoOk returns a tuple with the TsnBridgeInfo field value
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetTsnBridgeInfoOk() (*TsnBridgeInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TsnBridgeInfo, true
}

// SetTsnBridgeInfo sets field value
func (o *PduSessionTsnBridge) SetTsnBridgeInfo(v TsnBridgeInfo) {
	o.TsnBridgeInfo = v
}

// GetTsnBridgeManCont returns the TsnBridgeManCont field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetTsnBridgeManCont() BridgeManagementContainer {
	if o == nil || isNil(o.TsnBridgeManCont) {
		var ret BridgeManagementContainer
		return ret
	}
	return *o.TsnBridgeManCont
}

// GetTsnBridgeManContOk returns a tuple with the TsnBridgeManCont field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetTsnBridgeManContOk() (*BridgeManagementContainer, bool) {
	if o == nil || isNil(o.TsnBridgeManCont) {
		return nil, false
	}
	return o.TsnBridgeManCont, true
}

// HasTsnBridgeManCont returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasTsnBridgeManCont() bool {
	if o != nil && !isNil(o.TsnBridgeManCont) {
		return true
	}

	return false
}

// SetTsnBridgeManCont gets a reference to the given BridgeManagementContainer and assigns it to the TsnBridgeManCont field.
func (o *PduSessionTsnBridge) SetTsnBridgeManCont(v BridgeManagementContainer) {
	o.TsnBridgeManCont = &v
}

// GetTsnPortManContDstt returns the TsnPortManContDstt field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetTsnPortManContDstt() PortManagementContainer {
	if o == nil || isNil(o.TsnPortManContDstt) {
		var ret PortManagementContainer
		return ret
	}
	return *o.TsnPortManContDstt
}

// GetTsnPortManContDsttOk returns a tuple with the TsnPortManContDstt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetTsnPortManContDsttOk() (*PortManagementContainer, bool) {
	if o == nil || isNil(o.TsnPortManContDstt) {
		return nil, false
	}
	return o.TsnPortManContDstt, true
}

// HasTsnPortManContDstt returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasTsnPortManContDstt() bool {
	if o != nil && !isNil(o.TsnPortManContDstt) {
		return true
	}

	return false
}

// SetTsnPortManContDstt gets a reference to the given PortManagementContainer and assigns it to the TsnPortManContDstt field.
func (o *PduSessionTsnBridge) SetTsnPortManContDstt(v PortManagementContainer) {
	o.TsnPortManContDstt = &v
}

// GetTsnPortManContNwtts returns the TsnPortManContNwtts field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetTsnPortManContNwtts() []PortManagementContainer {
	if o == nil || isNil(o.TsnPortManContNwtts) {
		var ret []PortManagementContainer
		return ret
	}
	return o.TsnPortManContNwtts
}

// GetTsnPortManContNwttsOk returns a tuple with the TsnPortManContNwtts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetTsnPortManContNwttsOk() ([]PortManagementContainer, bool) {
	if o == nil || isNil(o.TsnPortManContNwtts) {
		return nil, false
	}
	return o.TsnPortManContNwtts, true
}

// HasTsnPortManContNwtts returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasTsnPortManContNwtts() bool {
	if o != nil && !isNil(o.TsnPortManContNwtts) {
		return true
	}

	return false
}

// SetTsnPortManContNwtts gets a reference to the given []PortManagementContainer and assigns it to the TsnPortManContNwtts field.
func (o *PduSessionTsnBridge) SetTsnPortManContNwtts(v []PortManagementContainer) {
	o.TsnPortManContNwtts = v
}

// GetUeIpv4Addr returns the UeIpv4Addr field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetUeIpv4Addr() string {
	if o == nil || isNil(o.UeIpv4Addr) {
		var ret string
		return ret
	}
	return *o.UeIpv4Addr
}

// GetUeIpv4AddrOk returns a tuple with the UeIpv4Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetUeIpv4AddrOk() (*string, bool) {
	if o == nil || isNil(o.UeIpv4Addr) {
		return nil, false
	}
	return o.UeIpv4Addr, true
}

// HasUeIpv4Addr returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasUeIpv4Addr() bool {
	if o != nil && !isNil(o.UeIpv4Addr) {
		return true
	}

	return false
}

// SetUeIpv4Addr gets a reference to the given string and assigns it to the UeIpv4Addr field.
func (o *PduSessionTsnBridge) SetUeIpv4Addr(v string) {
	o.UeIpv4Addr = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetDnn() string {
	if o == nil || isNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetDnnOk() (*string, bool) {
	if o == nil || isNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasDnn() bool {
	if o != nil && !isNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *PduSessionTsnBridge) SetDnn(v string) {
	o.Dnn = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetSnssai() Snssai {
	if o == nil || isNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || isNil(o.Snssai) {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasSnssai() bool {
	if o != nil && !isNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *PduSessionTsnBridge) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetIpDomain returns the IpDomain field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetIpDomain() string {
	if o == nil || isNil(o.IpDomain) {
		var ret string
		return ret
	}
	return *o.IpDomain
}

// GetIpDomainOk returns a tuple with the IpDomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetIpDomainOk() (*string, bool) {
	if o == nil || isNil(o.IpDomain) {
		return nil, false
	}
	return o.IpDomain, true
}

// HasIpDomain returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasIpDomain() bool {
	if o != nil && !isNil(o.IpDomain) {
		return true
	}

	return false
}

// SetIpDomain gets a reference to the given string and assigns it to the IpDomain field.
func (o *PduSessionTsnBridge) SetIpDomain(v string) {
	o.IpDomain = &v
}

// GetUeIpv6AddrPrefix returns the UeIpv6AddrPrefix field value if set, zero value otherwise.
func (o *PduSessionTsnBridge) GetUeIpv6AddrPrefix() Ipv6Prefix {
	if o == nil || isNil(o.UeIpv6AddrPrefix) {
		var ret Ipv6Prefix
		return ret
	}
	return *o.UeIpv6AddrPrefix
}

// GetUeIpv6AddrPrefixOk returns a tuple with the UeIpv6AddrPrefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionTsnBridge) GetUeIpv6AddrPrefixOk() (*Ipv6Prefix, bool) {
	if o == nil || isNil(o.UeIpv6AddrPrefix) {
		return nil, false
	}
	return o.UeIpv6AddrPrefix, true
}

// HasUeIpv6AddrPrefix returns a boolean if a field has been set.
func (o *PduSessionTsnBridge) HasUeIpv6AddrPrefix() bool {
	if o != nil && !isNil(o.UeIpv6AddrPrefix) {
		return true
	}

	return false
}

// SetUeIpv6AddrPrefix gets a reference to the given Ipv6Prefix and assigns it to the UeIpv6AddrPrefix field.
func (o *PduSessionTsnBridge) SetUeIpv6AddrPrefix(v Ipv6Prefix) {
	o.UeIpv6AddrPrefix = &v
}

func (o PduSessionTsnBridge) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PduSessionTsnBridge) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tsnBridgeInfo"] = o.TsnBridgeInfo
	if !isNil(o.TsnBridgeManCont) {
		toSerialize["tsnBridgeManCont"] = o.TsnBridgeManCont
	}
	if !isNil(o.TsnPortManContDstt) {
		toSerialize["tsnPortManContDstt"] = o.TsnPortManContDstt
	}
	if !isNil(o.TsnPortManContNwtts) {
		toSerialize["tsnPortManContNwtts"] = o.TsnPortManContNwtts
	}
	if !isNil(o.UeIpv4Addr) {
		toSerialize["ueIpv4Addr"] = o.UeIpv4Addr
	}
	if !isNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !isNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	if !isNil(o.IpDomain) {
		toSerialize["ipDomain"] = o.IpDomain
	}
	if !isNil(o.UeIpv6AddrPrefix) {
		toSerialize["ueIpv6AddrPrefix"] = o.UeIpv6AddrPrefix
	}
	return toSerialize, nil
}

type NullablePduSessionTsnBridge struct {
	value *PduSessionTsnBridge
	isSet bool
}

func (v NullablePduSessionTsnBridge) Get() *PduSessionTsnBridge {
	return v.value
}

func (v *NullablePduSessionTsnBridge) Set(val *PduSessionTsnBridge) {
	v.value = val
	v.isSet = true
}

func (v NullablePduSessionTsnBridge) IsSet() bool {
	return v.isSet
}

func (v *NullablePduSessionTsnBridge) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePduSessionTsnBridge(val *PduSessionTsnBridge) *NullablePduSessionTsnBridge {
	return &NullablePduSessionTsnBridge{value: val, isSet: true}
}

func (v NullablePduSessionTsnBridge) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePduSessionTsnBridge) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


