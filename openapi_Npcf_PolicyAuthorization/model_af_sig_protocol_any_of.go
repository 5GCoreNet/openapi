/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// AfSigProtocolAnyOf the model 'AfSigProtocolAnyOf'
type AfSigProtocolAnyOf string

// List of AfSigProtocol_anyOf
const (
	NO_INFORMATION AfSigProtocolAnyOf = "NO_INFORMATION"
	SIP AfSigProtocolAnyOf = "SIP"
)

// All allowed values of AfSigProtocolAnyOf enum
var AllowedAfSigProtocolAnyOfEnumValues = []AfSigProtocolAnyOf{
	"NO_INFORMATION",
	"SIP",
}

func (v *AfSigProtocolAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AfSigProtocolAnyOf(value)
	for _, existing := range AllowedAfSigProtocolAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AfSigProtocolAnyOf", value)
}

// NewAfSigProtocolAnyOfFromValue returns a pointer to a valid AfSigProtocolAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAfSigProtocolAnyOfFromValue(v string) (*AfSigProtocolAnyOf, error) {
	ev := AfSigProtocolAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AfSigProtocolAnyOf: valid values are %v", v, AllowedAfSigProtocolAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AfSigProtocolAnyOf) IsValid() bool {
	for _, existing := range AllowedAfSigProtocolAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AfSigProtocol_anyOf value
func (v AfSigProtocolAnyOf) Ptr() *AfSigProtocolAnyOf {
	return &v
}

type NullableAfSigProtocolAnyOf struct {
	value *AfSigProtocolAnyOf
	isSet bool
}

func (v NullableAfSigProtocolAnyOf) Get() *AfSigProtocolAnyOf {
	return v.value
}

func (v *NullableAfSigProtocolAnyOf) Set(val *AfSigProtocolAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAfSigProtocolAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAfSigProtocolAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAfSigProtocolAnyOf(val *AfSigProtocolAnyOf) *NullableAfSigProtocolAnyOf {
	return &NullableAfSigProtocolAnyOf{value: val, isSet: true}
}

func (v NullableAfSigProtocolAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAfSigProtocolAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

