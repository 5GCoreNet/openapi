/*
Npcf_PolicyAuthorization Service API

PCF Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_PolicyAuthorization

import (
	"encoding/json"
)

// checks if the MediaSubComponent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MediaSubComponent{}

// MediaSubComponent Identifies a media subcomponent.
type MediaSubComponent struct {
	AfSigProtocol *AfSigProtocol `json:"afSigProtocol,omitempty"`
	EthfDescs []EthFlowDescription `json:"ethfDescs,omitempty"`
	FNum int32 `json:"fNum"`
	FDescs []string `json:"fDescs,omitempty"`
	FStatus *FlowStatus `json:"fStatus,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MarBwDl *string `json:"marBwDl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MarBwUl *string `json:"marBwUl,omitempty"`
	// 2-octet string, where each octet is encoded in hexadecimal representation. The first octet contains the IPv4 Type-of-Service or the IPv6 Traffic-Class field and the second octet contains the ToS/Traffic Class mask field. 
	TosTrCl *string `json:"tosTrCl,omitempty"`
	FlowUsage *FlowUsage `json:"flowUsage,omitempty"`
}

// NewMediaSubComponent instantiates a new MediaSubComponent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMediaSubComponent(fNum int32) *MediaSubComponent {
	this := MediaSubComponent{}
	this.FNum = fNum
	return &this
}

// NewMediaSubComponentWithDefaults instantiates a new MediaSubComponent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMediaSubComponentWithDefaults() *MediaSubComponent {
	this := MediaSubComponent{}
	return &this
}

// GetAfSigProtocol returns the AfSigProtocol field value if set, zero value otherwise.
func (o *MediaSubComponent) GetAfSigProtocol() AfSigProtocol {
	if o == nil || isNil(o.AfSigProtocol) {
		var ret AfSigProtocol
		return ret
	}
	return *o.AfSigProtocol
}

// GetAfSigProtocolOk returns a tuple with the AfSigProtocol field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetAfSigProtocolOk() (*AfSigProtocol, bool) {
	if o == nil || isNil(o.AfSigProtocol) {
		return nil, false
	}
	return o.AfSigProtocol, true
}

// HasAfSigProtocol returns a boolean if a field has been set.
func (o *MediaSubComponent) HasAfSigProtocol() bool {
	if o != nil && !isNil(o.AfSigProtocol) {
		return true
	}

	return false
}

// SetAfSigProtocol gets a reference to the given AfSigProtocol and assigns it to the AfSigProtocol field.
func (o *MediaSubComponent) SetAfSigProtocol(v AfSigProtocol) {
	o.AfSigProtocol = &v
}

// GetEthfDescs returns the EthfDescs field value if set, zero value otherwise.
func (o *MediaSubComponent) GetEthfDescs() []EthFlowDescription {
	if o == nil || isNil(o.EthfDescs) {
		var ret []EthFlowDescription
		return ret
	}
	return o.EthfDescs
}

// GetEthfDescsOk returns a tuple with the EthfDescs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetEthfDescsOk() ([]EthFlowDescription, bool) {
	if o == nil || isNil(o.EthfDescs) {
		return nil, false
	}
	return o.EthfDescs, true
}

// HasEthfDescs returns a boolean if a field has been set.
func (o *MediaSubComponent) HasEthfDescs() bool {
	if o != nil && !isNil(o.EthfDescs) {
		return true
	}

	return false
}

// SetEthfDescs gets a reference to the given []EthFlowDescription and assigns it to the EthfDescs field.
func (o *MediaSubComponent) SetEthfDescs(v []EthFlowDescription) {
	o.EthfDescs = v
}

// GetFNum returns the FNum field value
func (o *MediaSubComponent) GetFNum() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FNum
}

// GetFNumOk returns a tuple with the FNum field value
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetFNumOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FNum, true
}

// SetFNum sets field value
func (o *MediaSubComponent) SetFNum(v int32) {
	o.FNum = v
}

// GetFDescs returns the FDescs field value if set, zero value otherwise.
func (o *MediaSubComponent) GetFDescs() []string {
	if o == nil || isNil(o.FDescs) {
		var ret []string
		return ret
	}
	return o.FDescs
}

// GetFDescsOk returns a tuple with the FDescs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetFDescsOk() ([]string, bool) {
	if o == nil || isNil(o.FDescs) {
		return nil, false
	}
	return o.FDescs, true
}

// HasFDescs returns a boolean if a field has been set.
func (o *MediaSubComponent) HasFDescs() bool {
	if o != nil && !isNil(o.FDescs) {
		return true
	}

	return false
}

// SetFDescs gets a reference to the given []string and assigns it to the FDescs field.
func (o *MediaSubComponent) SetFDescs(v []string) {
	o.FDescs = v
}

// GetFStatus returns the FStatus field value if set, zero value otherwise.
func (o *MediaSubComponent) GetFStatus() FlowStatus {
	if o == nil || isNil(o.FStatus) {
		var ret FlowStatus
		return ret
	}
	return *o.FStatus
}

// GetFStatusOk returns a tuple with the FStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetFStatusOk() (*FlowStatus, bool) {
	if o == nil || isNil(o.FStatus) {
		return nil, false
	}
	return o.FStatus, true
}

// HasFStatus returns a boolean if a field has been set.
func (o *MediaSubComponent) HasFStatus() bool {
	if o != nil && !isNil(o.FStatus) {
		return true
	}

	return false
}

// SetFStatus gets a reference to the given FlowStatus and assigns it to the FStatus field.
func (o *MediaSubComponent) SetFStatus(v FlowStatus) {
	o.FStatus = &v
}

// GetMarBwDl returns the MarBwDl field value if set, zero value otherwise.
func (o *MediaSubComponent) GetMarBwDl() string {
	if o == nil || isNil(o.MarBwDl) {
		var ret string
		return ret
	}
	return *o.MarBwDl
}

// GetMarBwDlOk returns a tuple with the MarBwDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetMarBwDlOk() (*string, bool) {
	if o == nil || isNil(o.MarBwDl) {
		return nil, false
	}
	return o.MarBwDl, true
}

// HasMarBwDl returns a boolean if a field has been set.
func (o *MediaSubComponent) HasMarBwDl() bool {
	if o != nil && !isNil(o.MarBwDl) {
		return true
	}

	return false
}

// SetMarBwDl gets a reference to the given string and assigns it to the MarBwDl field.
func (o *MediaSubComponent) SetMarBwDl(v string) {
	o.MarBwDl = &v
}

// GetMarBwUl returns the MarBwUl field value if set, zero value otherwise.
func (o *MediaSubComponent) GetMarBwUl() string {
	if o == nil || isNil(o.MarBwUl) {
		var ret string
		return ret
	}
	return *o.MarBwUl
}

// GetMarBwUlOk returns a tuple with the MarBwUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetMarBwUlOk() (*string, bool) {
	if o == nil || isNil(o.MarBwUl) {
		return nil, false
	}
	return o.MarBwUl, true
}

// HasMarBwUl returns a boolean if a field has been set.
func (o *MediaSubComponent) HasMarBwUl() bool {
	if o != nil && !isNil(o.MarBwUl) {
		return true
	}

	return false
}

// SetMarBwUl gets a reference to the given string and assigns it to the MarBwUl field.
func (o *MediaSubComponent) SetMarBwUl(v string) {
	o.MarBwUl = &v
}

// GetTosTrCl returns the TosTrCl field value if set, zero value otherwise.
func (o *MediaSubComponent) GetTosTrCl() string {
	if o == nil || isNil(o.TosTrCl) {
		var ret string
		return ret
	}
	return *o.TosTrCl
}

// GetTosTrClOk returns a tuple with the TosTrCl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetTosTrClOk() (*string, bool) {
	if o == nil || isNil(o.TosTrCl) {
		return nil, false
	}
	return o.TosTrCl, true
}

// HasTosTrCl returns a boolean if a field has been set.
func (o *MediaSubComponent) HasTosTrCl() bool {
	if o != nil && !isNil(o.TosTrCl) {
		return true
	}

	return false
}

// SetTosTrCl gets a reference to the given string and assigns it to the TosTrCl field.
func (o *MediaSubComponent) SetTosTrCl(v string) {
	o.TosTrCl = &v
}

// GetFlowUsage returns the FlowUsage field value if set, zero value otherwise.
func (o *MediaSubComponent) GetFlowUsage() FlowUsage {
	if o == nil || isNil(o.FlowUsage) {
		var ret FlowUsage
		return ret
	}
	return *o.FlowUsage
}

// GetFlowUsageOk returns a tuple with the FlowUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MediaSubComponent) GetFlowUsageOk() (*FlowUsage, bool) {
	if o == nil || isNil(o.FlowUsage) {
		return nil, false
	}
	return o.FlowUsage, true
}

// HasFlowUsage returns a boolean if a field has been set.
func (o *MediaSubComponent) HasFlowUsage() bool {
	if o != nil && !isNil(o.FlowUsage) {
		return true
	}

	return false
}

// SetFlowUsage gets a reference to the given FlowUsage and assigns it to the FlowUsage field.
func (o *MediaSubComponent) SetFlowUsage(v FlowUsage) {
	o.FlowUsage = &v
}

func (o MediaSubComponent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MediaSubComponent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AfSigProtocol) {
		toSerialize["afSigProtocol"] = o.AfSigProtocol
	}
	if !isNil(o.EthfDescs) {
		toSerialize["ethfDescs"] = o.EthfDescs
	}
	toSerialize["fNum"] = o.FNum
	if !isNil(o.FDescs) {
		toSerialize["fDescs"] = o.FDescs
	}
	if !isNil(o.FStatus) {
		toSerialize["fStatus"] = o.FStatus
	}
	if !isNil(o.MarBwDl) {
		toSerialize["marBwDl"] = o.MarBwDl
	}
	if !isNil(o.MarBwUl) {
		toSerialize["marBwUl"] = o.MarBwUl
	}
	if !isNil(o.TosTrCl) {
		toSerialize["tosTrCl"] = o.TosTrCl
	}
	if !isNil(o.FlowUsage) {
		toSerialize["flowUsage"] = o.FlowUsage
	}
	return toSerialize, nil
}

type NullableMediaSubComponent struct {
	value *MediaSubComponent
	isSet bool
}

func (v NullableMediaSubComponent) Get() *MediaSubComponent {
	return v.value
}

func (v *NullableMediaSubComponent) Set(val *MediaSubComponent) {
	v.value = val
	v.isSet = true
}

func (v NullableMediaSubComponent) IsSet() bool {
	return v.isSet
}

func (v *NullableMediaSubComponent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMediaSubComponent(val *MediaSubComponent) *NullableMediaSubComponent {
	return &NullableMediaSubComponent{value: val, isSet: true}
}

func (v NullableMediaSubComponent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMediaSubComponent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


