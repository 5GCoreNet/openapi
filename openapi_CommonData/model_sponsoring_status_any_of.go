/*
5GMS Common Data Types

5GMS Common Data Types Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CommonData

import (
	"encoding/json"
	"fmt"
)

// SponsoringStatusAnyOf the model 'SponsoringStatusAnyOf'
type SponsoringStatusAnyOf string

// List of SponsoringStatus_anyOf
const (
	DISABLED SponsoringStatusAnyOf = "SPONSOR_DISABLED"
	ENABLED SponsoringStatusAnyOf = "SPONSOR_ENABLED"
)

// All allowed values of SponsoringStatusAnyOf enum
var AllowedSponsoringStatusAnyOfEnumValues = []SponsoringStatusAnyOf{
	"SPONSOR_DISABLED",
	"SPONSOR_ENABLED",
}

func (v *SponsoringStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SponsoringStatusAnyOf(value)
	for _, existing := range AllowedSponsoringStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SponsoringStatusAnyOf", value)
}

// NewSponsoringStatusAnyOfFromValue returns a pointer to a valid SponsoringStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSponsoringStatusAnyOfFromValue(v string) (*SponsoringStatusAnyOf, error) {
	ev := SponsoringStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SponsoringStatusAnyOf: valid values are %v", v, AllowedSponsoringStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SponsoringStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedSponsoringStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SponsoringStatus_anyOf value
func (v SponsoringStatusAnyOf) Ptr() *SponsoringStatusAnyOf {
	return &v
}

type NullableSponsoringStatusAnyOf struct {
	value *SponsoringStatusAnyOf
	isSet bool
}

func (v NullableSponsoringStatusAnyOf) Get() *SponsoringStatusAnyOf {
	return v.value
}

func (v *NullableSponsoringStatusAnyOf) Set(val *SponsoringStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSponsoringStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSponsoringStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSponsoringStatusAnyOf(val *SponsoringStatusAnyOf) *NullableSponsoringStatusAnyOf {
	return &NullableSponsoringStatusAnyOf{value: val, isSet: true}
}

func (v NullableSponsoringStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSponsoringStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

