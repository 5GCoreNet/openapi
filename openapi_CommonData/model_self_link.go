/*
Common Data Types

Common Data Types for Service Based Interfaces.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.5.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CommonData

import (
	"encoding/json"
)

// checks if the SelfLink type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SelfLink{}

// SelfLink It contains the URI of the linked resource.
type SelfLink struct {
	Self Link `json:"self"`
}

// NewSelfLink instantiates a new SelfLink object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSelfLink(self Link) *SelfLink {
	this := SelfLink{}
	this.Self = self
	return &this
}

// NewSelfLinkWithDefaults instantiates a new SelfLink object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSelfLinkWithDefaults() *SelfLink {
	this := SelfLink{}
	return &this
}

// GetSelf returns the Self field value
func (o *SelfLink) GetSelf() Link {
	if o == nil {
		var ret Link
		return ret
	}

	return o.Self
}

// GetSelfOk returns a tuple with the Self field value
// and a boolean to check if the value has been set.
func (o *SelfLink) GetSelfOk() (*Link, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Self, true
}

// SetSelf sets field value
func (o *SelfLink) SetSelf(v Link) {
	o.Self = v
}

func (o SelfLink) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SelfLink) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["self"] = o.Self
	return toSerialize, nil
}

type NullableSelfLink struct {
	value *SelfLink
	isSet bool
}

func (v NullableSelfLink) Get() *SelfLink {
	return v.value
}

func (v *NullableSelfLink) Set(val *SelfLink) {
	v.value = val
	v.isSet = true
}

func (v NullableSelfLink) IsSet() bool {
	return v.isSet
}

func (v *NullableSelfLink) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSelfLink(val *SelfLink) *NullableSelfLink {
	return &NullableSelfLink{value: val, isSet: true}
}

func (v NullableSelfLink) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSelfLink) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
