/*
Namf_Location

AMF Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Location

import (
	"encoding/json"
	"fmt"
)

// LocationPrivacyVerResultAnyOf the model 'LocationPrivacyVerResultAnyOf'
type LocationPrivacyVerResultAnyOf string

// List of LocationPrivacyVerResult_anyOf
const (
	LOCATION_ALLOWED LocationPrivacyVerResultAnyOf = "LOCATION_ALLOWED"
	LOCATION_NOT_ALLOWED LocationPrivacyVerResultAnyOf = "LOCATION_NOT_ALLOWED"
	RESPONSE_TIME_OUT LocationPrivacyVerResultAnyOf = "RESPONSE_TIME_OUT"
)

// All allowed values of LocationPrivacyVerResultAnyOf enum
var AllowedLocationPrivacyVerResultAnyOfEnumValues = []LocationPrivacyVerResultAnyOf{
	"LOCATION_ALLOWED",
	"LOCATION_NOT_ALLOWED",
	"RESPONSE_TIME_OUT",
}

func (v *LocationPrivacyVerResultAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := LocationPrivacyVerResultAnyOf(value)
	for _, existing := range AllowedLocationPrivacyVerResultAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid LocationPrivacyVerResultAnyOf", value)
}

// NewLocationPrivacyVerResultAnyOfFromValue returns a pointer to a valid LocationPrivacyVerResultAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewLocationPrivacyVerResultAnyOfFromValue(v string) (*LocationPrivacyVerResultAnyOf, error) {
	ev := LocationPrivacyVerResultAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for LocationPrivacyVerResultAnyOf: valid values are %v", v, AllowedLocationPrivacyVerResultAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v LocationPrivacyVerResultAnyOf) IsValid() bool {
	for _, existing := range AllowedLocationPrivacyVerResultAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to LocationPrivacyVerResult_anyOf value
func (v LocationPrivacyVerResultAnyOf) Ptr() *LocationPrivacyVerResultAnyOf {
	return &v
}

type NullableLocationPrivacyVerResultAnyOf struct {
	value *LocationPrivacyVerResultAnyOf
	isSet bool
}

func (v NullableLocationPrivacyVerResultAnyOf) Get() *LocationPrivacyVerResultAnyOf {
	return v.value
}

func (v *NullableLocationPrivacyVerResultAnyOf) Set(val *LocationPrivacyVerResultAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationPrivacyVerResultAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationPrivacyVerResultAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationPrivacyVerResultAnyOf(val *LocationPrivacyVerResultAnyOf) *NullableLocationPrivacyVerResultAnyOf {
	return &NullableLocationPrivacyVerResultAnyOf{value: val, isSet: true}
}

func (v NullableLocationPrivacyVerResultAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationPrivacyVerResultAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

