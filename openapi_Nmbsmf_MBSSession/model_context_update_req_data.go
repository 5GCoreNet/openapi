/*
Nmbsmf-MBSSession

MB-SMF MBSSession Service. Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbsmf_MBSSession

import (
	"encoding/json"
)

// checks if the ContextUpdateReqData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContextUpdateReqData{}

// ContextUpdateReqData Data within ContextUpdate Request
type ContextUpdateReqData struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	NfcInstanceId string `json:"nfcInstanceId"`
	MbsSessionId MbsSessionId `json:"mbsSessionId"`
	// Integer where the allowed values correspond to the value range of an unsigned 16-bit integer.
	AreaSessionId *int32 `json:"areaSessionId,omitempty"`
	RequestedAction *ContextUpdateAction `json:"requestedAction,omitempty"`
	// string with format 'bytes' as defined in OpenAPI
	DlTunnelInfo *string `json:"dlTunnelInfo,omitempty"`
	N2MbsSmInfo *N2MbsSmInfo `json:"n2MbsSmInfo,omitempty"`
	RanNodeId *GlobalRanNodeId `json:"ranNodeId,omitempty"`
	LeaveInd *bool `json:"leaveInd,omitempty"`
}

// NewContextUpdateReqData instantiates a new ContextUpdateReqData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContextUpdateReqData(nfcInstanceId string, mbsSessionId MbsSessionId) *ContextUpdateReqData {
	this := ContextUpdateReqData{}
	this.NfcInstanceId = nfcInstanceId
	this.MbsSessionId = mbsSessionId
	return &this
}

// NewContextUpdateReqDataWithDefaults instantiates a new ContextUpdateReqData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContextUpdateReqDataWithDefaults() *ContextUpdateReqData {
	this := ContextUpdateReqData{}
	return &this
}

// GetNfcInstanceId returns the NfcInstanceId field value
func (o *ContextUpdateReqData) GetNfcInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NfcInstanceId
}

// GetNfcInstanceIdOk returns a tuple with the NfcInstanceId field value
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetNfcInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfcInstanceId, true
}

// SetNfcInstanceId sets field value
func (o *ContextUpdateReqData) SetNfcInstanceId(v string) {
	o.NfcInstanceId = v
}

// GetMbsSessionId returns the MbsSessionId field value
func (o *ContextUpdateReqData) GetMbsSessionId() MbsSessionId {
	if o == nil {
		var ret MbsSessionId
		return ret
	}

	return o.MbsSessionId
}

// GetMbsSessionIdOk returns a tuple with the MbsSessionId field value
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetMbsSessionIdOk() (*MbsSessionId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MbsSessionId, true
}

// SetMbsSessionId sets field value
func (o *ContextUpdateReqData) SetMbsSessionId(v MbsSessionId) {
	o.MbsSessionId = v
}

// GetAreaSessionId returns the AreaSessionId field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetAreaSessionId() int32 {
	if o == nil || isNil(o.AreaSessionId) {
		var ret int32
		return ret
	}
	return *o.AreaSessionId
}

// GetAreaSessionIdOk returns a tuple with the AreaSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetAreaSessionIdOk() (*int32, bool) {
	if o == nil || isNil(o.AreaSessionId) {
		return nil, false
	}
	return o.AreaSessionId, true
}

// HasAreaSessionId returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasAreaSessionId() bool {
	if o != nil && !isNil(o.AreaSessionId) {
		return true
	}

	return false
}

// SetAreaSessionId gets a reference to the given int32 and assigns it to the AreaSessionId field.
func (o *ContextUpdateReqData) SetAreaSessionId(v int32) {
	o.AreaSessionId = &v
}

// GetRequestedAction returns the RequestedAction field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetRequestedAction() ContextUpdateAction {
	if o == nil || isNil(o.RequestedAction) {
		var ret ContextUpdateAction
		return ret
	}
	return *o.RequestedAction
}

// GetRequestedActionOk returns a tuple with the RequestedAction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetRequestedActionOk() (*ContextUpdateAction, bool) {
	if o == nil || isNil(o.RequestedAction) {
		return nil, false
	}
	return o.RequestedAction, true
}

// HasRequestedAction returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasRequestedAction() bool {
	if o != nil && !isNil(o.RequestedAction) {
		return true
	}

	return false
}

// SetRequestedAction gets a reference to the given ContextUpdateAction and assigns it to the RequestedAction field.
func (o *ContextUpdateReqData) SetRequestedAction(v ContextUpdateAction) {
	o.RequestedAction = &v
}

// GetDlTunnelInfo returns the DlTunnelInfo field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetDlTunnelInfo() string {
	if o == nil || isNil(o.DlTunnelInfo) {
		var ret string
		return ret
	}
	return *o.DlTunnelInfo
}

// GetDlTunnelInfoOk returns a tuple with the DlTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetDlTunnelInfoOk() (*string, bool) {
	if o == nil || isNil(o.DlTunnelInfo) {
		return nil, false
	}
	return o.DlTunnelInfo, true
}

// HasDlTunnelInfo returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasDlTunnelInfo() bool {
	if o != nil && !isNil(o.DlTunnelInfo) {
		return true
	}

	return false
}

// SetDlTunnelInfo gets a reference to the given string and assigns it to the DlTunnelInfo field.
func (o *ContextUpdateReqData) SetDlTunnelInfo(v string) {
	o.DlTunnelInfo = &v
}

// GetN2MbsSmInfo returns the N2MbsSmInfo field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetN2MbsSmInfo() N2MbsSmInfo {
	if o == nil || isNil(o.N2MbsSmInfo) {
		var ret N2MbsSmInfo
		return ret
	}
	return *o.N2MbsSmInfo
}

// GetN2MbsSmInfoOk returns a tuple with the N2MbsSmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetN2MbsSmInfoOk() (*N2MbsSmInfo, bool) {
	if o == nil || isNil(o.N2MbsSmInfo) {
		return nil, false
	}
	return o.N2MbsSmInfo, true
}

// HasN2MbsSmInfo returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasN2MbsSmInfo() bool {
	if o != nil && !isNil(o.N2MbsSmInfo) {
		return true
	}

	return false
}

// SetN2MbsSmInfo gets a reference to the given N2MbsSmInfo and assigns it to the N2MbsSmInfo field.
func (o *ContextUpdateReqData) SetN2MbsSmInfo(v N2MbsSmInfo) {
	o.N2MbsSmInfo = &v
}

// GetRanNodeId returns the RanNodeId field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetRanNodeId() GlobalRanNodeId {
	if o == nil || isNil(o.RanNodeId) {
		var ret GlobalRanNodeId
		return ret
	}
	return *o.RanNodeId
}

// GetRanNodeIdOk returns a tuple with the RanNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetRanNodeIdOk() (*GlobalRanNodeId, bool) {
	if o == nil || isNil(o.RanNodeId) {
		return nil, false
	}
	return o.RanNodeId, true
}

// HasRanNodeId returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasRanNodeId() bool {
	if o != nil && !isNil(o.RanNodeId) {
		return true
	}

	return false
}

// SetRanNodeId gets a reference to the given GlobalRanNodeId and assigns it to the RanNodeId field.
func (o *ContextUpdateReqData) SetRanNodeId(v GlobalRanNodeId) {
	o.RanNodeId = &v
}

// GetLeaveInd returns the LeaveInd field value if set, zero value otherwise.
func (o *ContextUpdateReqData) GetLeaveInd() bool {
	if o == nil || isNil(o.LeaveInd) {
		var ret bool
		return ret
	}
	return *o.LeaveInd
}

// GetLeaveIndOk returns a tuple with the LeaveInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContextUpdateReqData) GetLeaveIndOk() (*bool, bool) {
	if o == nil || isNil(o.LeaveInd) {
		return nil, false
	}
	return o.LeaveInd, true
}

// HasLeaveInd returns a boolean if a field has been set.
func (o *ContextUpdateReqData) HasLeaveInd() bool {
	if o != nil && !isNil(o.LeaveInd) {
		return true
	}

	return false
}

// SetLeaveInd gets a reference to the given bool and assigns it to the LeaveInd field.
func (o *ContextUpdateReqData) SetLeaveInd(v bool) {
	o.LeaveInd = &v
}

func (o ContextUpdateReqData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContextUpdateReqData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nfcInstanceId"] = o.NfcInstanceId
	toSerialize["mbsSessionId"] = o.MbsSessionId
	if !isNil(o.AreaSessionId) {
		toSerialize["areaSessionId"] = o.AreaSessionId
	}
	if !isNil(o.RequestedAction) {
		toSerialize["requestedAction"] = o.RequestedAction
	}
	if !isNil(o.DlTunnelInfo) {
		toSerialize["dlTunnelInfo"] = o.DlTunnelInfo
	}
	if !isNil(o.N2MbsSmInfo) {
		toSerialize["n2MbsSmInfo"] = o.N2MbsSmInfo
	}
	if !isNil(o.RanNodeId) {
		toSerialize["ranNodeId"] = o.RanNodeId
	}
	if !isNil(o.LeaveInd) {
		toSerialize["leaveInd"] = o.LeaveInd
	}
	return toSerialize, nil
}

type NullableContextUpdateReqData struct {
	value *ContextUpdateReqData
	isSet bool
}

func (v NullableContextUpdateReqData) Get() *ContextUpdateReqData {
	return v.value
}

func (v *NullableContextUpdateReqData) Set(val *ContextUpdateReqData) {
	v.value = val
	v.isSet = true
}

func (v NullableContextUpdateReqData) IsSet() bool {
	return v.isSet
}

func (v *NullableContextUpdateReqData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContextUpdateReqData(val *ContextUpdateReqData) *NullableContextUpdateReqData {
	return &NullableContextUpdateReqData{value: val, isSet: true}
}

func (v NullableContextUpdateReqData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContextUpdateReqData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


