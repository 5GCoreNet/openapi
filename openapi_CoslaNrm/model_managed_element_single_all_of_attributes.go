/*
coslaNrm

OAS 3.0.1 specification of the Cosla NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CoslaNrm

import (
	"encoding/json"
)

// checks if the ManagedElementSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManagedElementSingleAllOfAttributes{}

// ManagedElementSingleAllOfAttributes struct for ManagedElementSingleAllOfAttributes
type ManagedElementSingleAllOfAttributes struct {
	ManagedElementAttr
}

// NewManagedElementSingleAllOfAttributes instantiates a new ManagedElementSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManagedElementSingleAllOfAttributes() *ManagedElementSingleAllOfAttributes {
	this := ManagedElementSingleAllOfAttributes{}
	return &this
}

// NewManagedElementSingleAllOfAttributesWithDefaults instantiates a new ManagedElementSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManagedElementSingleAllOfAttributesWithDefaults() *ManagedElementSingleAllOfAttributes {
	this := ManagedElementSingleAllOfAttributes{}
	return &this
}

func (o ManagedElementSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManagedElementSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedManagedElementAttr, errManagedElementAttr := json.Marshal(o.ManagedElementAttr)
	if errManagedElementAttr != nil {
		return map[string]interface{}{}, errManagedElementAttr
	}
	errManagedElementAttr = json.Unmarshal([]byte(serializedManagedElementAttr), &toSerialize)
	if errManagedElementAttr != nil {
		return map[string]interface{}{}, errManagedElementAttr
	}
	return toSerialize, nil
}

type NullableManagedElementSingleAllOfAttributes struct {
	value *ManagedElementSingleAllOfAttributes
	isSet bool
}

func (v NullableManagedElementSingleAllOfAttributes) Get() *ManagedElementSingleAllOfAttributes {
	return v.value
}

func (v *NullableManagedElementSingleAllOfAttributes) Set(val *ManagedElementSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableManagedElementSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableManagedElementSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManagedElementSingleAllOfAttributes(val *ManagedElementSingleAllOfAttributes) *NullableManagedElementSingleAllOfAttributes {
	return &NullableManagedElementSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableManagedElementSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManagedElementSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
