/*
coslaNrm

OAS 3.0.1 specification of the Cosla NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.3.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CoslaNrm

import (
	"encoding/json"
)

// checks if the AssuranceGoalSingleAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssuranceGoalSingleAllOf{}

// AssuranceGoalSingleAllOf struct for AssuranceGoalSingleAllOf
type AssuranceGoalSingleAllOf struct {
	Attributes *AssuranceGoalSingleAllOfAttributes `json:"attributes,omitempty"`
}

// NewAssuranceGoalSingleAllOf instantiates a new AssuranceGoalSingleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssuranceGoalSingleAllOf() *AssuranceGoalSingleAllOf {
	this := AssuranceGoalSingleAllOf{}
	return &this
}

// NewAssuranceGoalSingleAllOfWithDefaults instantiates a new AssuranceGoalSingleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssuranceGoalSingleAllOfWithDefaults() *AssuranceGoalSingleAllOf {
	this := AssuranceGoalSingleAllOf{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *AssuranceGoalSingleAllOf) GetAttributes() AssuranceGoalSingleAllOfAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret AssuranceGoalSingleAllOfAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AssuranceGoalSingleAllOf) GetAttributesOk() (*AssuranceGoalSingleAllOfAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *AssuranceGoalSingleAllOf) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given AssuranceGoalSingleAllOfAttributes and assigns it to the Attributes field.
func (o *AssuranceGoalSingleAllOf) SetAttributes(v AssuranceGoalSingleAllOfAttributes) {
	o.Attributes = &v
}

func (o AssuranceGoalSingleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssuranceGoalSingleAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableAssuranceGoalSingleAllOf struct {
	value *AssuranceGoalSingleAllOf
	isSet bool
}

func (v NullableAssuranceGoalSingleAllOf) Get() *AssuranceGoalSingleAllOf {
	return v.value
}

func (v *NullableAssuranceGoalSingleAllOf) Set(val *AssuranceGoalSingleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAssuranceGoalSingleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAssuranceGoalSingleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssuranceGoalSingleAllOf(val *AssuranceGoalSingleAllOf) *NullableAssuranceGoalSingleAllOf {
	return &NullableAssuranceGoalSingleAllOf{value: val, isSet: true}
}

func (v NullableAssuranceGoalSingleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssuranceGoalSingleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
