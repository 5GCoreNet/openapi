/*
3gpp-device-triggering

API for device trigger.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_DeviceTriggering

import (
	"encoding/json"
	"fmt"
)

// DeliveryResultAnyOf the model 'DeliveryResultAnyOf'
type DeliveryResultAnyOf string

// List of DeliveryResult_anyOf
const (
	SUCCESS DeliveryResultAnyOf = "SUCCESS"
	UNKNOWN DeliveryResultAnyOf = "UNKNOWN"
	FAILURE DeliveryResultAnyOf = "FAILURE"
	TRIGGERED DeliveryResultAnyOf = "TRIGGERED"
	EXPIRED DeliveryResultAnyOf = "EXPIRED"
	UNCONFIRMED DeliveryResultAnyOf = "UNCONFIRMED"
	REPLACED DeliveryResultAnyOf = "REPLACED"
	TERMINATE DeliveryResultAnyOf = "TERMINATE"
)

// All allowed values of DeliveryResultAnyOf enum
var AllowedDeliveryResultAnyOfEnumValues = []DeliveryResultAnyOf{
	"SUCCESS",
	"UNKNOWN",
	"FAILURE",
	"TRIGGERED",
	"EXPIRED",
	"UNCONFIRMED",
	"REPLACED",
	"TERMINATE",
}

func (v *DeliveryResultAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeliveryResultAnyOf(value)
	for _, existing := range AllowedDeliveryResultAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeliveryResultAnyOf", value)
}

// NewDeliveryResultAnyOfFromValue returns a pointer to a valid DeliveryResultAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryResultAnyOfFromValue(v string) (*DeliveryResultAnyOf, error) {
	ev := DeliveryResultAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryResultAnyOf: valid values are %v", v, AllowedDeliveryResultAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryResultAnyOf) IsValid() bool {
	for _, existing := range AllowedDeliveryResultAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeliveryResult_anyOf value
func (v DeliveryResultAnyOf) Ptr() *DeliveryResultAnyOf {
	return &v
}

type NullableDeliveryResultAnyOf struct {
	value *DeliveryResultAnyOf
	isSet bool
}

func (v NullableDeliveryResultAnyOf) Get() *DeliveryResultAnyOf {
	return v.value
}

func (v *NullableDeliveryResultAnyOf) Set(val *DeliveryResultAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryResultAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryResultAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryResultAnyOf(val *DeliveryResultAnyOf) *NullableDeliveryResultAnyOf {
	return &NullableDeliveryResultAnyOf{value: val, isSet: true}
}

func (v NullableDeliveryResultAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryResultAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

