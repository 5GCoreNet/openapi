/*
Unified Data Repository Service API file for subscription data

Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Subscription_Data

import (
	"encoding/json"
)

// checks if the MessageWaitingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageWaitingData{}

// MessageWaitingData Message Waiting Data list.
type MessageWaitingData struct {
	MwdList []SmscData `json:"mwdList,omitempty"`
}

// NewMessageWaitingData instantiates a new MessageWaitingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageWaitingData() *MessageWaitingData {
	this := MessageWaitingData{}
	return &this
}

// NewMessageWaitingDataWithDefaults instantiates a new MessageWaitingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageWaitingDataWithDefaults() *MessageWaitingData {
	this := MessageWaitingData{}
	return &this
}

// GetMwdList returns the MwdList field value if set, zero value otherwise.
func (o *MessageWaitingData) GetMwdList() []SmscData {
	if o == nil || IsNil(o.MwdList) {
		var ret []SmscData
		return ret
	}
	return o.MwdList
}

// GetMwdListOk returns a tuple with the MwdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageWaitingData) GetMwdListOk() ([]SmscData, bool) {
	if o == nil || IsNil(o.MwdList) {
		return nil, false
	}
	return o.MwdList, true
}

// HasMwdList returns a boolean if a field has been set.
func (o *MessageWaitingData) HasMwdList() bool {
	if o != nil && !IsNil(o.MwdList) {
		return true
	}

	return false
}

// SetMwdList gets a reference to the given []SmscData and assigns it to the MwdList field.
func (o *MessageWaitingData) SetMwdList(v []SmscData) {
	o.MwdList = v
}

func (o MessageWaitingData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageWaitingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MwdList) {
		toSerialize["mwdList"] = o.MwdList
	}
	return toSerialize, nil
}

type NullableMessageWaitingData struct {
	value *MessageWaitingData
	isSet bool
}

func (v NullableMessageWaitingData) Get() *MessageWaitingData {
	return v.value
}

func (v *NullableMessageWaitingData) Set(val *MessageWaitingData) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageWaitingData) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageWaitingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageWaitingData(val *MessageWaitingData) *NullableMessageWaitingData {
	return &NullableMessageWaitingData{value: val, isSet: true}
}

func (v NullableMessageWaitingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageWaitingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


