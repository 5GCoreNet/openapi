/*
Unified Data Repository Service API file for subscription data

Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Subscription_Data

import (
	"encoding/json"
)

// checks if the Pp5gVnGroupProfileData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Pp5gVnGroupProfileData{}

// Pp5gVnGroupProfileData struct for Pp5gVnGroupProfileData
type Pp5gVnGroupProfileData struct {
	// A map (list of key-value pairs where external VN group identifier serves as key) of AllowedMtcProviderInfo lists. In addition to defined external VN group identifier, the key value \"ALL\" may be used to identify a map entry which contains a list of AllowedMtcProviderInfo that are allowed operating all the external group identifiers.
	AllowedMtcProviders *map[string][]AllowedMtcProviderInfo `json:"allowedMtcProviders,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewPp5gVnGroupProfileData instantiates a new Pp5gVnGroupProfileData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPp5gVnGroupProfileData() *Pp5gVnGroupProfileData {
	this := Pp5gVnGroupProfileData{}
	return &this
}

// NewPp5gVnGroupProfileDataWithDefaults instantiates a new Pp5gVnGroupProfileData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPp5gVnGroupProfileDataWithDefaults() *Pp5gVnGroupProfileData {
	this := Pp5gVnGroupProfileData{}
	return &this
}

// GetAllowedMtcProviders returns the AllowedMtcProviders field value if set, zero value otherwise.
func (o *Pp5gVnGroupProfileData) GetAllowedMtcProviders() map[string][]AllowedMtcProviderInfo {
	if o == nil || IsNil(o.AllowedMtcProviders) {
		var ret map[string][]AllowedMtcProviderInfo
		return ret
	}
	return *o.AllowedMtcProviders
}

// GetAllowedMtcProvidersOk returns a tuple with the AllowedMtcProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pp5gVnGroupProfileData) GetAllowedMtcProvidersOk() (*map[string][]AllowedMtcProviderInfo, bool) {
	if o == nil || IsNil(o.AllowedMtcProviders) {
		return nil, false
	}
	return o.AllowedMtcProviders, true
}

// HasAllowedMtcProviders returns a boolean if a field has been set.
func (o *Pp5gVnGroupProfileData) HasAllowedMtcProviders() bool {
	if o != nil && !IsNil(o.AllowedMtcProviders) {
		return true
	}

	return false
}

// SetAllowedMtcProviders gets a reference to the given map[string][]AllowedMtcProviderInfo and assigns it to the AllowedMtcProviders field.
func (o *Pp5gVnGroupProfileData) SetAllowedMtcProviders(v map[string][]AllowedMtcProviderInfo) {
	o.AllowedMtcProviders = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *Pp5gVnGroupProfileData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Pp5gVnGroupProfileData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *Pp5gVnGroupProfileData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *Pp5gVnGroupProfileData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o Pp5gVnGroupProfileData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Pp5gVnGroupProfileData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowedMtcProviders) {
		toSerialize["allowedMtcProviders"] = o.AllowedMtcProviders
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullablePp5gVnGroupProfileData struct {
	value *Pp5gVnGroupProfileData
	isSet bool
}

func (v NullablePp5gVnGroupProfileData) Get() *Pp5gVnGroupProfileData {
	return v.value
}

func (v *NullablePp5gVnGroupProfileData) Set(val *Pp5gVnGroupProfileData) {
	v.value = val
	v.isSet = true
}

func (v NullablePp5gVnGroupProfileData) IsSet() bool {
	return v.isSet
}

func (v *NullablePp5gVnGroupProfileData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePp5gVnGroupProfileData(val *Pp5gVnGroupProfileData) *NullablePp5gVnGroupProfileData {
	return &NullablePp5gVnGroupProfileData{value: val, isSet: true}
}

func (v NullablePp5gVnGroupProfileData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePp5gVnGroupProfileData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
