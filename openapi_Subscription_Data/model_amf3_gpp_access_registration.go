/*
Unified Data Repository Service API file for subscription data

Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Subscription_Data

import (
	"encoding/json"
	"time"
)

// checks if the Amf3GppAccessRegistration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Amf3GppAccessRegistration{}

// Amf3GppAccessRegistration struct for Amf3GppAccessRegistration
type Amf3GppAccessRegistration struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AmfInstanceId string `json:"amfInstanceId"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	PurgeFlag *bool `json:"purgeFlag,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.  
	Pei *string `json:"pei,omitempty"`
	ImsVoPs *ImsVoPs `json:"imsVoPs,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	DeregCallbackUri string `json:"deregCallbackUri"`
	AmfServiceNameDereg *ServiceName `json:"amfServiceNameDereg,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	PcscfRestorationCallbackUri *string `json:"pcscfRestorationCallbackUri,omitempty"`
	AmfServiceNamePcscfRest *ServiceName `json:"amfServiceNamePcscfRest,omitempty"`
	InitialRegistrationInd *bool `json:"initialRegistrationInd,omitempty"`
	EmergencyRegistrationInd *bool `json:"emergencyRegistrationInd,omitempty"`
	Guami Guami `json:"guami"`
	BackupAmfInfo []BackupAmfInfo `json:"backupAmfInfo,omitempty"`
	DrFlag *bool `json:"drFlag,omitempty"`
	RatType RatType `json:"ratType"`
	UrrpIndicator *bool `json:"urrpIndicator,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	AmfEeSubscriptionId *string `json:"amfEeSubscriptionId,omitempty"`
	EpsInterworkingInfo *EpsInterworkingInfo `json:"epsInterworkingInfo,omitempty"`
	UeSrvccCapability *bool `json:"ueSrvccCapability,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RegistrationTime *time.Time `json:"registrationTime,omitempty"`
	VgmlcAddress *VgmlcAddress `json:"vgmlcAddress,omitempty"`
	ContextInfo *ContextInfo `json:"contextInfo,omitempty"`
	NoEeSubscriptionInd *bool `json:"noEeSubscriptionInd,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty"`
	UeReachableInd *UeReachableInd `json:"ueReachableInd,omitempty"`
	ReRegistrationRequired *bool `json:"reRegistrationRequired,omitempty"`
	AdminDeregSubWithdrawn *bool `json:"adminDeregSubWithdrawn,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	DataRestorationCallbackUri *string `json:"dataRestorationCallbackUri,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
	DisasterRoamingInd *bool `json:"disasterRoamingInd,omitempty"`
	UeMINTCapability *bool `json:"ueMINTCapability,omitempty"`
	SorSnpnSiSupported *bool `json:"sorSnpnSiSupported,omitempty"`
	UdrRestartInd *bool `json:"udrRestartInd,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	LastSynchronizationTime *time.Time `json:"lastSynchronizationTime,omitempty"`
}

// NewAmf3GppAccessRegistration instantiates a new Amf3GppAccessRegistration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmf3GppAccessRegistration(amfInstanceId string, deregCallbackUri string, guami Guami, ratType RatType) *Amf3GppAccessRegistration {
	this := Amf3GppAccessRegistration{}
	this.AmfInstanceId = amfInstanceId
	this.DeregCallbackUri = deregCallbackUri
	this.Guami = guami
	this.RatType = ratType
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	var sorSnpnSiSupported bool = false
	this.SorSnpnSiSupported = &sorSnpnSiSupported
	var udrRestartInd bool = false
	this.UdrRestartInd = &udrRestartInd
	return &this
}

// NewAmf3GppAccessRegistrationWithDefaults instantiates a new Amf3GppAccessRegistration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmf3GppAccessRegistrationWithDefaults() *Amf3GppAccessRegistration {
	this := Amf3GppAccessRegistration{}
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	var sorSnpnSiSupported bool = false
	this.SorSnpnSiSupported = &sorSnpnSiSupported
	var udrRestartInd bool = false
	this.UdrRestartInd = &udrRestartInd
	return &this
}

// GetAmfInstanceId returns the AmfInstanceId field value
func (o *Amf3GppAccessRegistration) GetAmfInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmfInstanceId
}

// GetAmfInstanceIdOk returns a tuple with the AmfInstanceId field value
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetAmfInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmfInstanceId, true
}

// SetAmfInstanceId sets field value
func (o *Amf3GppAccessRegistration) SetAmfInstanceId(v string) {
	o.AmfInstanceId = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetSupportedFeatures() string {
	if o == nil || isNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasSupportedFeatures() bool {
	if o != nil && !isNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *Amf3GppAccessRegistration) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetPurgeFlag returns the PurgeFlag field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetPurgeFlag() bool {
	if o == nil || isNil(o.PurgeFlag) {
		var ret bool
		return ret
	}
	return *o.PurgeFlag
}

// GetPurgeFlagOk returns a tuple with the PurgeFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetPurgeFlagOk() (*bool, bool) {
	if o == nil || isNil(o.PurgeFlag) {
		return nil, false
	}
	return o.PurgeFlag, true
}

// HasPurgeFlag returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasPurgeFlag() bool {
	if o != nil && !isNil(o.PurgeFlag) {
		return true
	}

	return false
}

// SetPurgeFlag gets a reference to the given bool and assigns it to the PurgeFlag field.
func (o *Amf3GppAccessRegistration) SetPurgeFlag(v bool) {
	o.PurgeFlag = &v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetPei() string {
	if o == nil || isNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetPeiOk() (*string, bool) {
	if o == nil || isNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasPei() bool {
	if o != nil && !isNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *Amf3GppAccessRegistration) SetPei(v string) {
	o.Pei = &v
}

// GetImsVoPs returns the ImsVoPs field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetImsVoPs() ImsVoPs {
	if o == nil || isNil(o.ImsVoPs) {
		var ret ImsVoPs
		return ret
	}
	return *o.ImsVoPs
}

// GetImsVoPsOk returns a tuple with the ImsVoPs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetImsVoPsOk() (*ImsVoPs, bool) {
	if o == nil || isNil(o.ImsVoPs) {
		return nil, false
	}
	return o.ImsVoPs, true
}

// HasImsVoPs returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasImsVoPs() bool {
	if o != nil && !isNil(o.ImsVoPs) {
		return true
	}

	return false
}

// SetImsVoPs gets a reference to the given ImsVoPs and assigns it to the ImsVoPs field.
func (o *Amf3GppAccessRegistration) SetImsVoPs(v ImsVoPs) {
	o.ImsVoPs = &v
}

// GetDeregCallbackUri returns the DeregCallbackUri field value
func (o *Amf3GppAccessRegistration) GetDeregCallbackUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeregCallbackUri
}

// GetDeregCallbackUriOk returns a tuple with the DeregCallbackUri field value
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetDeregCallbackUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeregCallbackUri, true
}

// SetDeregCallbackUri sets field value
func (o *Amf3GppAccessRegistration) SetDeregCallbackUri(v string) {
	o.DeregCallbackUri = v
}

// GetAmfServiceNameDereg returns the AmfServiceNameDereg field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetAmfServiceNameDereg() ServiceName {
	if o == nil || isNil(o.AmfServiceNameDereg) {
		var ret ServiceName
		return ret
	}
	return *o.AmfServiceNameDereg
}

// GetAmfServiceNameDeregOk returns a tuple with the AmfServiceNameDereg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetAmfServiceNameDeregOk() (*ServiceName, bool) {
	if o == nil || isNil(o.AmfServiceNameDereg) {
		return nil, false
	}
	return o.AmfServiceNameDereg, true
}

// HasAmfServiceNameDereg returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasAmfServiceNameDereg() bool {
	if o != nil && !isNil(o.AmfServiceNameDereg) {
		return true
	}

	return false
}

// SetAmfServiceNameDereg gets a reference to the given ServiceName and assigns it to the AmfServiceNameDereg field.
func (o *Amf3GppAccessRegistration) SetAmfServiceNameDereg(v ServiceName) {
	o.AmfServiceNameDereg = &v
}

// GetPcscfRestorationCallbackUri returns the PcscfRestorationCallbackUri field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetPcscfRestorationCallbackUri() string {
	if o == nil || isNil(o.PcscfRestorationCallbackUri) {
		var ret string
		return ret
	}
	return *o.PcscfRestorationCallbackUri
}

// GetPcscfRestorationCallbackUriOk returns a tuple with the PcscfRestorationCallbackUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetPcscfRestorationCallbackUriOk() (*string, bool) {
	if o == nil || isNil(o.PcscfRestorationCallbackUri) {
		return nil, false
	}
	return o.PcscfRestorationCallbackUri, true
}

// HasPcscfRestorationCallbackUri returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasPcscfRestorationCallbackUri() bool {
	if o != nil && !isNil(o.PcscfRestorationCallbackUri) {
		return true
	}

	return false
}

// SetPcscfRestorationCallbackUri gets a reference to the given string and assigns it to the PcscfRestorationCallbackUri field.
func (o *Amf3GppAccessRegistration) SetPcscfRestorationCallbackUri(v string) {
	o.PcscfRestorationCallbackUri = &v
}

// GetAmfServiceNamePcscfRest returns the AmfServiceNamePcscfRest field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetAmfServiceNamePcscfRest() ServiceName {
	if o == nil || isNil(o.AmfServiceNamePcscfRest) {
		var ret ServiceName
		return ret
	}
	return *o.AmfServiceNamePcscfRest
}

// GetAmfServiceNamePcscfRestOk returns a tuple with the AmfServiceNamePcscfRest field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetAmfServiceNamePcscfRestOk() (*ServiceName, bool) {
	if o == nil || isNil(o.AmfServiceNamePcscfRest) {
		return nil, false
	}
	return o.AmfServiceNamePcscfRest, true
}

// HasAmfServiceNamePcscfRest returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasAmfServiceNamePcscfRest() bool {
	if o != nil && !isNil(o.AmfServiceNamePcscfRest) {
		return true
	}

	return false
}

// SetAmfServiceNamePcscfRest gets a reference to the given ServiceName and assigns it to the AmfServiceNamePcscfRest field.
func (o *Amf3GppAccessRegistration) SetAmfServiceNamePcscfRest(v ServiceName) {
	o.AmfServiceNamePcscfRest = &v
}

// GetInitialRegistrationInd returns the InitialRegistrationInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetInitialRegistrationInd() bool {
	if o == nil || isNil(o.InitialRegistrationInd) {
		var ret bool
		return ret
	}
	return *o.InitialRegistrationInd
}

// GetInitialRegistrationIndOk returns a tuple with the InitialRegistrationInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetInitialRegistrationIndOk() (*bool, bool) {
	if o == nil || isNil(o.InitialRegistrationInd) {
		return nil, false
	}
	return o.InitialRegistrationInd, true
}

// HasInitialRegistrationInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasInitialRegistrationInd() bool {
	if o != nil && !isNil(o.InitialRegistrationInd) {
		return true
	}

	return false
}

// SetInitialRegistrationInd gets a reference to the given bool and assigns it to the InitialRegistrationInd field.
func (o *Amf3GppAccessRegistration) SetInitialRegistrationInd(v bool) {
	o.InitialRegistrationInd = &v
}

// GetEmergencyRegistrationInd returns the EmergencyRegistrationInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetEmergencyRegistrationInd() bool {
	if o == nil || isNil(o.EmergencyRegistrationInd) {
		var ret bool
		return ret
	}
	return *o.EmergencyRegistrationInd
}

// GetEmergencyRegistrationIndOk returns a tuple with the EmergencyRegistrationInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetEmergencyRegistrationIndOk() (*bool, bool) {
	if o == nil || isNil(o.EmergencyRegistrationInd) {
		return nil, false
	}
	return o.EmergencyRegistrationInd, true
}

// HasEmergencyRegistrationInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasEmergencyRegistrationInd() bool {
	if o != nil && !isNil(o.EmergencyRegistrationInd) {
		return true
	}

	return false
}

// SetEmergencyRegistrationInd gets a reference to the given bool and assigns it to the EmergencyRegistrationInd field.
func (o *Amf3GppAccessRegistration) SetEmergencyRegistrationInd(v bool) {
	o.EmergencyRegistrationInd = &v
}

// GetGuami returns the Guami field value
func (o *Amf3GppAccessRegistration) GetGuami() Guami {
	if o == nil {
		var ret Guami
		return ret
	}

	return o.Guami
}

// GetGuamiOk returns a tuple with the Guami field value
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetGuamiOk() (*Guami, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Guami, true
}

// SetGuami sets field value
func (o *Amf3GppAccessRegistration) SetGuami(v Guami) {
	o.Guami = v
}

// GetBackupAmfInfo returns the BackupAmfInfo field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetBackupAmfInfo() []BackupAmfInfo {
	if o == nil || isNil(o.BackupAmfInfo) {
		var ret []BackupAmfInfo
		return ret
	}
	return o.BackupAmfInfo
}

// GetBackupAmfInfoOk returns a tuple with the BackupAmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetBackupAmfInfoOk() ([]BackupAmfInfo, bool) {
	if o == nil || isNil(o.BackupAmfInfo) {
		return nil, false
	}
	return o.BackupAmfInfo, true
}

// HasBackupAmfInfo returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasBackupAmfInfo() bool {
	if o != nil && !isNil(o.BackupAmfInfo) {
		return true
	}

	return false
}

// SetBackupAmfInfo gets a reference to the given []BackupAmfInfo and assigns it to the BackupAmfInfo field.
func (o *Amf3GppAccessRegistration) SetBackupAmfInfo(v []BackupAmfInfo) {
	o.BackupAmfInfo = v
}

// GetDrFlag returns the DrFlag field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetDrFlag() bool {
	if o == nil || isNil(o.DrFlag) {
		var ret bool
		return ret
	}
	return *o.DrFlag
}

// GetDrFlagOk returns a tuple with the DrFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetDrFlagOk() (*bool, bool) {
	if o == nil || isNil(o.DrFlag) {
		return nil, false
	}
	return o.DrFlag, true
}

// HasDrFlag returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasDrFlag() bool {
	if o != nil && !isNil(o.DrFlag) {
		return true
	}

	return false
}

// SetDrFlag gets a reference to the given bool and assigns it to the DrFlag field.
func (o *Amf3GppAccessRegistration) SetDrFlag(v bool) {
	o.DrFlag = &v
}

// GetRatType returns the RatType field value
func (o *Amf3GppAccessRegistration) GetRatType() RatType {
	if o == nil {
		var ret RatType
		return ret
	}

	return o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetRatTypeOk() (*RatType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RatType, true
}

// SetRatType sets field value
func (o *Amf3GppAccessRegistration) SetRatType(v RatType) {
	o.RatType = v
}

// GetUrrpIndicator returns the UrrpIndicator field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetUrrpIndicator() bool {
	if o == nil || isNil(o.UrrpIndicator) {
		var ret bool
		return ret
	}
	return *o.UrrpIndicator
}

// GetUrrpIndicatorOk returns a tuple with the UrrpIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetUrrpIndicatorOk() (*bool, bool) {
	if o == nil || isNil(o.UrrpIndicator) {
		return nil, false
	}
	return o.UrrpIndicator, true
}

// HasUrrpIndicator returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasUrrpIndicator() bool {
	if o != nil && !isNil(o.UrrpIndicator) {
		return true
	}

	return false
}

// SetUrrpIndicator gets a reference to the given bool and assigns it to the UrrpIndicator field.
func (o *Amf3GppAccessRegistration) SetUrrpIndicator(v bool) {
	o.UrrpIndicator = &v
}

// GetAmfEeSubscriptionId returns the AmfEeSubscriptionId field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetAmfEeSubscriptionId() string {
	if o == nil || isNil(o.AmfEeSubscriptionId) {
		var ret string
		return ret
	}
	return *o.AmfEeSubscriptionId
}

// GetAmfEeSubscriptionIdOk returns a tuple with the AmfEeSubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetAmfEeSubscriptionIdOk() (*string, bool) {
	if o == nil || isNil(o.AmfEeSubscriptionId) {
		return nil, false
	}
	return o.AmfEeSubscriptionId, true
}

// HasAmfEeSubscriptionId returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasAmfEeSubscriptionId() bool {
	if o != nil && !isNil(o.AmfEeSubscriptionId) {
		return true
	}

	return false
}

// SetAmfEeSubscriptionId gets a reference to the given string and assigns it to the AmfEeSubscriptionId field.
func (o *Amf3GppAccessRegistration) SetAmfEeSubscriptionId(v string) {
	o.AmfEeSubscriptionId = &v
}

// GetEpsInterworkingInfo returns the EpsInterworkingInfo field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetEpsInterworkingInfo() EpsInterworkingInfo {
	if o == nil || isNil(o.EpsInterworkingInfo) {
		var ret EpsInterworkingInfo
		return ret
	}
	return *o.EpsInterworkingInfo
}

// GetEpsInterworkingInfoOk returns a tuple with the EpsInterworkingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetEpsInterworkingInfoOk() (*EpsInterworkingInfo, bool) {
	if o == nil || isNil(o.EpsInterworkingInfo) {
		return nil, false
	}
	return o.EpsInterworkingInfo, true
}

// HasEpsInterworkingInfo returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasEpsInterworkingInfo() bool {
	if o != nil && !isNil(o.EpsInterworkingInfo) {
		return true
	}

	return false
}

// SetEpsInterworkingInfo gets a reference to the given EpsInterworkingInfo and assigns it to the EpsInterworkingInfo field.
func (o *Amf3GppAccessRegistration) SetEpsInterworkingInfo(v EpsInterworkingInfo) {
	o.EpsInterworkingInfo = &v
}

// GetUeSrvccCapability returns the UeSrvccCapability field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetUeSrvccCapability() bool {
	if o == nil || isNil(o.UeSrvccCapability) {
		var ret bool
		return ret
	}
	return *o.UeSrvccCapability
}

// GetUeSrvccCapabilityOk returns a tuple with the UeSrvccCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetUeSrvccCapabilityOk() (*bool, bool) {
	if o == nil || isNil(o.UeSrvccCapability) {
		return nil, false
	}
	return o.UeSrvccCapability, true
}

// HasUeSrvccCapability returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasUeSrvccCapability() bool {
	if o != nil && !isNil(o.UeSrvccCapability) {
		return true
	}

	return false
}

// SetUeSrvccCapability gets a reference to the given bool and assigns it to the UeSrvccCapability field.
func (o *Amf3GppAccessRegistration) SetUeSrvccCapability(v bool) {
	o.UeSrvccCapability = &v
}

// GetRegistrationTime returns the RegistrationTime field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetRegistrationTime() time.Time {
	if o == nil || isNil(o.RegistrationTime) {
		var ret time.Time
		return ret
	}
	return *o.RegistrationTime
}

// GetRegistrationTimeOk returns a tuple with the RegistrationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetRegistrationTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.RegistrationTime) {
		return nil, false
	}
	return o.RegistrationTime, true
}

// HasRegistrationTime returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasRegistrationTime() bool {
	if o != nil && !isNil(o.RegistrationTime) {
		return true
	}

	return false
}

// SetRegistrationTime gets a reference to the given time.Time and assigns it to the RegistrationTime field.
func (o *Amf3GppAccessRegistration) SetRegistrationTime(v time.Time) {
	o.RegistrationTime = &v
}

// GetVgmlcAddress returns the VgmlcAddress field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetVgmlcAddress() VgmlcAddress {
	if o == nil || isNil(o.VgmlcAddress) {
		var ret VgmlcAddress
		return ret
	}
	return *o.VgmlcAddress
}

// GetVgmlcAddressOk returns a tuple with the VgmlcAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetVgmlcAddressOk() (*VgmlcAddress, bool) {
	if o == nil || isNil(o.VgmlcAddress) {
		return nil, false
	}
	return o.VgmlcAddress, true
}

// HasVgmlcAddress returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasVgmlcAddress() bool {
	if o != nil && !isNil(o.VgmlcAddress) {
		return true
	}

	return false
}

// SetVgmlcAddress gets a reference to the given VgmlcAddress and assigns it to the VgmlcAddress field.
func (o *Amf3GppAccessRegistration) SetVgmlcAddress(v VgmlcAddress) {
	o.VgmlcAddress = &v
}

// GetContextInfo returns the ContextInfo field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetContextInfo() ContextInfo {
	if o == nil || isNil(o.ContextInfo) {
		var ret ContextInfo
		return ret
	}
	return *o.ContextInfo
}

// GetContextInfoOk returns a tuple with the ContextInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetContextInfoOk() (*ContextInfo, bool) {
	if o == nil || isNil(o.ContextInfo) {
		return nil, false
	}
	return o.ContextInfo, true
}

// HasContextInfo returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasContextInfo() bool {
	if o != nil && !isNil(o.ContextInfo) {
		return true
	}

	return false
}

// SetContextInfo gets a reference to the given ContextInfo and assigns it to the ContextInfo field.
func (o *Amf3GppAccessRegistration) SetContextInfo(v ContextInfo) {
	o.ContextInfo = &v
}

// GetNoEeSubscriptionInd returns the NoEeSubscriptionInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetNoEeSubscriptionInd() bool {
	if o == nil || isNil(o.NoEeSubscriptionInd) {
		var ret bool
		return ret
	}
	return *o.NoEeSubscriptionInd
}

// GetNoEeSubscriptionIndOk returns a tuple with the NoEeSubscriptionInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetNoEeSubscriptionIndOk() (*bool, bool) {
	if o == nil || isNil(o.NoEeSubscriptionInd) {
		return nil, false
	}
	return o.NoEeSubscriptionInd, true
}

// HasNoEeSubscriptionInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasNoEeSubscriptionInd() bool {
	if o != nil && !isNil(o.NoEeSubscriptionInd) {
		return true
	}

	return false
}

// SetNoEeSubscriptionInd gets a reference to the given bool and assigns it to the NoEeSubscriptionInd field.
func (o *Amf3GppAccessRegistration) SetNoEeSubscriptionInd(v bool) {
	o.NoEeSubscriptionInd = &v
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetSupi() string {
	if o == nil || isNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetSupiOk() (*string, bool) {
	if o == nil || isNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasSupi() bool {
	if o != nil && !isNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *Amf3GppAccessRegistration) SetSupi(v string) {
	o.Supi = &v
}

// GetUeReachableInd returns the UeReachableInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetUeReachableInd() UeReachableInd {
	if o == nil || isNil(o.UeReachableInd) {
		var ret UeReachableInd
		return ret
	}
	return *o.UeReachableInd
}

// GetUeReachableIndOk returns a tuple with the UeReachableInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetUeReachableIndOk() (*UeReachableInd, bool) {
	if o == nil || isNil(o.UeReachableInd) {
		return nil, false
	}
	return o.UeReachableInd, true
}

// HasUeReachableInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasUeReachableInd() bool {
	if o != nil && !isNil(o.UeReachableInd) {
		return true
	}

	return false
}

// SetUeReachableInd gets a reference to the given UeReachableInd and assigns it to the UeReachableInd field.
func (o *Amf3GppAccessRegistration) SetUeReachableInd(v UeReachableInd) {
	o.UeReachableInd = &v
}

// GetReRegistrationRequired returns the ReRegistrationRequired field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetReRegistrationRequired() bool {
	if o == nil || isNil(o.ReRegistrationRequired) {
		var ret bool
		return ret
	}
	return *o.ReRegistrationRequired
}

// GetReRegistrationRequiredOk returns a tuple with the ReRegistrationRequired field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetReRegistrationRequiredOk() (*bool, bool) {
	if o == nil || isNil(o.ReRegistrationRequired) {
		return nil, false
	}
	return o.ReRegistrationRequired, true
}

// HasReRegistrationRequired returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasReRegistrationRequired() bool {
	if o != nil && !isNil(o.ReRegistrationRequired) {
		return true
	}

	return false
}

// SetReRegistrationRequired gets a reference to the given bool and assigns it to the ReRegistrationRequired field.
func (o *Amf3GppAccessRegistration) SetReRegistrationRequired(v bool) {
	o.ReRegistrationRequired = &v
}

// GetAdminDeregSubWithdrawn returns the AdminDeregSubWithdrawn field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetAdminDeregSubWithdrawn() bool {
	if o == nil || isNil(o.AdminDeregSubWithdrawn) {
		var ret bool
		return ret
	}
	return *o.AdminDeregSubWithdrawn
}

// GetAdminDeregSubWithdrawnOk returns a tuple with the AdminDeregSubWithdrawn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetAdminDeregSubWithdrawnOk() (*bool, bool) {
	if o == nil || isNil(o.AdminDeregSubWithdrawn) {
		return nil, false
	}
	return o.AdminDeregSubWithdrawn, true
}

// HasAdminDeregSubWithdrawn returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasAdminDeregSubWithdrawn() bool {
	if o != nil && !isNil(o.AdminDeregSubWithdrawn) {
		return true
	}

	return false
}

// SetAdminDeregSubWithdrawn gets a reference to the given bool and assigns it to the AdminDeregSubWithdrawn field.
func (o *Amf3GppAccessRegistration) SetAdminDeregSubWithdrawn(v bool) {
	o.AdminDeregSubWithdrawn = &v
}

// GetDataRestorationCallbackUri returns the DataRestorationCallbackUri field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetDataRestorationCallbackUri() string {
	if o == nil || isNil(o.DataRestorationCallbackUri) {
		var ret string
		return ret
	}
	return *o.DataRestorationCallbackUri
}

// GetDataRestorationCallbackUriOk returns a tuple with the DataRestorationCallbackUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetDataRestorationCallbackUriOk() (*string, bool) {
	if o == nil || isNil(o.DataRestorationCallbackUri) {
		return nil, false
	}
	return o.DataRestorationCallbackUri, true
}

// HasDataRestorationCallbackUri returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasDataRestorationCallbackUri() bool {
	if o != nil && !isNil(o.DataRestorationCallbackUri) {
		return true
	}

	return false
}

// SetDataRestorationCallbackUri gets a reference to the given string and assigns it to the DataRestorationCallbackUri field.
func (o *Amf3GppAccessRegistration) SetDataRestorationCallbackUri(v string) {
	o.DataRestorationCallbackUri = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetResetIds() []string {
	if o == nil || isNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetResetIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasResetIds() bool {
	if o != nil && !isNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *Amf3GppAccessRegistration) SetResetIds(v []string) {
	o.ResetIds = v
}

// GetDisasterRoamingInd returns the DisasterRoamingInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetDisasterRoamingInd() bool {
	if o == nil || isNil(o.DisasterRoamingInd) {
		var ret bool
		return ret
	}
	return *o.DisasterRoamingInd
}

// GetDisasterRoamingIndOk returns a tuple with the DisasterRoamingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetDisasterRoamingIndOk() (*bool, bool) {
	if o == nil || isNil(o.DisasterRoamingInd) {
		return nil, false
	}
	return o.DisasterRoamingInd, true
}

// HasDisasterRoamingInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasDisasterRoamingInd() bool {
	if o != nil && !isNil(o.DisasterRoamingInd) {
		return true
	}

	return false
}

// SetDisasterRoamingInd gets a reference to the given bool and assigns it to the DisasterRoamingInd field.
func (o *Amf3GppAccessRegistration) SetDisasterRoamingInd(v bool) {
	o.DisasterRoamingInd = &v
}

// GetUeMINTCapability returns the UeMINTCapability field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetUeMINTCapability() bool {
	if o == nil || isNil(o.UeMINTCapability) {
		var ret bool
		return ret
	}
	return *o.UeMINTCapability
}

// GetUeMINTCapabilityOk returns a tuple with the UeMINTCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetUeMINTCapabilityOk() (*bool, bool) {
	if o == nil || isNil(o.UeMINTCapability) {
		return nil, false
	}
	return o.UeMINTCapability, true
}

// HasUeMINTCapability returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasUeMINTCapability() bool {
	if o != nil && !isNil(o.UeMINTCapability) {
		return true
	}

	return false
}

// SetUeMINTCapability gets a reference to the given bool and assigns it to the UeMINTCapability field.
func (o *Amf3GppAccessRegistration) SetUeMINTCapability(v bool) {
	o.UeMINTCapability = &v
}

// GetSorSnpnSiSupported returns the SorSnpnSiSupported field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetSorSnpnSiSupported() bool {
	if o == nil || isNil(o.SorSnpnSiSupported) {
		var ret bool
		return ret
	}
	return *o.SorSnpnSiSupported
}

// GetSorSnpnSiSupportedOk returns a tuple with the SorSnpnSiSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetSorSnpnSiSupportedOk() (*bool, bool) {
	if o == nil || isNil(o.SorSnpnSiSupported) {
		return nil, false
	}
	return o.SorSnpnSiSupported, true
}

// HasSorSnpnSiSupported returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasSorSnpnSiSupported() bool {
	if o != nil && !isNil(o.SorSnpnSiSupported) {
		return true
	}

	return false
}

// SetSorSnpnSiSupported gets a reference to the given bool and assigns it to the SorSnpnSiSupported field.
func (o *Amf3GppAccessRegistration) SetSorSnpnSiSupported(v bool) {
	o.SorSnpnSiSupported = &v
}

// GetUdrRestartInd returns the UdrRestartInd field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetUdrRestartInd() bool {
	if o == nil || isNil(o.UdrRestartInd) {
		var ret bool
		return ret
	}
	return *o.UdrRestartInd
}

// GetUdrRestartIndOk returns a tuple with the UdrRestartInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetUdrRestartIndOk() (*bool, bool) {
	if o == nil || isNil(o.UdrRestartInd) {
		return nil, false
	}
	return o.UdrRestartInd, true
}

// HasUdrRestartInd returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasUdrRestartInd() bool {
	if o != nil && !isNil(o.UdrRestartInd) {
		return true
	}

	return false
}

// SetUdrRestartInd gets a reference to the given bool and assigns it to the UdrRestartInd field.
func (o *Amf3GppAccessRegistration) SetUdrRestartInd(v bool) {
	o.UdrRestartInd = &v
}

// GetLastSynchronizationTime returns the LastSynchronizationTime field value if set, zero value otherwise.
func (o *Amf3GppAccessRegistration) GetLastSynchronizationTime() time.Time {
	if o == nil || isNil(o.LastSynchronizationTime) {
		var ret time.Time
		return ret
	}
	return *o.LastSynchronizationTime
}

// GetLastSynchronizationTimeOk returns a tuple with the LastSynchronizationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Amf3GppAccessRegistration) GetLastSynchronizationTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastSynchronizationTime) {
		return nil, false
	}
	return o.LastSynchronizationTime, true
}

// HasLastSynchronizationTime returns a boolean if a field has been set.
func (o *Amf3GppAccessRegistration) HasLastSynchronizationTime() bool {
	if o != nil && !isNil(o.LastSynchronizationTime) {
		return true
	}

	return false
}

// SetLastSynchronizationTime gets a reference to the given time.Time and assigns it to the LastSynchronizationTime field.
func (o *Amf3GppAccessRegistration) SetLastSynchronizationTime(v time.Time) {
	o.LastSynchronizationTime = &v
}

func (o Amf3GppAccessRegistration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Amf3GppAccessRegistration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amfInstanceId"] = o.AmfInstanceId
	if !isNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !isNil(o.PurgeFlag) {
		toSerialize["purgeFlag"] = o.PurgeFlag
	}
	if !isNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !isNil(o.ImsVoPs) {
		toSerialize["imsVoPs"] = o.ImsVoPs
	}
	toSerialize["deregCallbackUri"] = o.DeregCallbackUri
	if !isNil(o.AmfServiceNameDereg) {
		toSerialize["amfServiceNameDereg"] = o.AmfServiceNameDereg
	}
	if !isNil(o.PcscfRestorationCallbackUri) {
		toSerialize["pcscfRestorationCallbackUri"] = o.PcscfRestorationCallbackUri
	}
	if !isNil(o.AmfServiceNamePcscfRest) {
		toSerialize["amfServiceNamePcscfRest"] = o.AmfServiceNamePcscfRest
	}
	if !isNil(o.InitialRegistrationInd) {
		toSerialize["initialRegistrationInd"] = o.InitialRegistrationInd
	}
	if !isNil(o.EmergencyRegistrationInd) {
		toSerialize["emergencyRegistrationInd"] = o.EmergencyRegistrationInd
	}
	toSerialize["guami"] = o.Guami
	if !isNil(o.BackupAmfInfo) {
		toSerialize["backupAmfInfo"] = o.BackupAmfInfo
	}
	if !isNil(o.DrFlag) {
		toSerialize["drFlag"] = o.DrFlag
	}
	toSerialize["ratType"] = o.RatType
	if !isNil(o.UrrpIndicator) {
		toSerialize["urrpIndicator"] = o.UrrpIndicator
	}
	if !isNil(o.AmfEeSubscriptionId) {
		toSerialize["amfEeSubscriptionId"] = o.AmfEeSubscriptionId
	}
	if !isNil(o.EpsInterworkingInfo) {
		toSerialize["epsInterworkingInfo"] = o.EpsInterworkingInfo
	}
	if !isNil(o.UeSrvccCapability) {
		toSerialize["ueSrvccCapability"] = o.UeSrvccCapability
	}
	if !isNil(o.RegistrationTime) {
		toSerialize["registrationTime"] = o.RegistrationTime
	}
	if !isNil(o.VgmlcAddress) {
		toSerialize["vgmlcAddress"] = o.VgmlcAddress
	}
	if !isNil(o.ContextInfo) {
		toSerialize["contextInfo"] = o.ContextInfo
	}
	if !isNil(o.NoEeSubscriptionInd) {
		toSerialize["noEeSubscriptionInd"] = o.NoEeSubscriptionInd
	}
	if !isNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !isNil(o.UeReachableInd) {
		toSerialize["ueReachableInd"] = o.UeReachableInd
	}
	if !isNil(o.ReRegistrationRequired) {
		toSerialize["reRegistrationRequired"] = o.ReRegistrationRequired
	}
	if !isNil(o.AdminDeregSubWithdrawn) {
		toSerialize["adminDeregSubWithdrawn"] = o.AdminDeregSubWithdrawn
	}
	if !isNil(o.DataRestorationCallbackUri) {
		toSerialize["dataRestorationCallbackUri"] = o.DataRestorationCallbackUri
	}
	if !isNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	if !isNil(o.DisasterRoamingInd) {
		toSerialize["disasterRoamingInd"] = o.DisasterRoamingInd
	}
	if !isNil(o.UeMINTCapability) {
		toSerialize["ueMINTCapability"] = o.UeMINTCapability
	}
	if !isNil(o.SorSnpnSiSupported) {
		toSerialize["sorSnpnSiSupported"] = o.SorSnpnSiSupported
	}
	if !isNil(o.UdrRestartInd) {
		toSerialize["udrRestartInd"] = o.UdrRestartInd
	}
	if !isNil(o.LastSynchronizationTime) {
		toSerialize["lastSynchronizationTime"] = o.LastSynchronizationTime
	}
	return toSerialize, nil
}

type NullableAmf3GppAccessRegistration struct {
	value *Amf3GppAccessRegistration
	isSet bool
}

func (v NullableAmf3GppAccessRegistration) Get() *Amf3GppAccessRegistration {
	return v.value
}

func (v *NullableAmf3GppAccessRegistration) Set(val *Amf3GppAccessRegistration) {
	v.value = val
	v.isSet = true
}

func (v NullableAmf3GppAccessRegistration) IsSet() bool {
	return v.isSet
}

func (v *NullableAmf3GppAccessRegistration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmf3GppAccessRegistration(val *Amf3GppAccessRegistration) *NullableAmf3GppAccessRegistration {
	return &NullableAmf3GppAccessRegistration{value: val, isSet: true}
}

func (v NullableAmf3GppAccessRegistration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmf3GppAccessRegistration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


