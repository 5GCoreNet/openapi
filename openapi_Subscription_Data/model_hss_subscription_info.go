/*
Unified Data Repository Service API file for subscription data

Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Subscription_Data

import (
	"encoding/json"
)

// checks if the HssSubscriptionInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HssSubscriptionInfo{}

// HssSubscriptionInfo Information related to active subscriptions at the HSS(s)
type HssSubscriptionInfo struct {
	HssSubscriptionList []HssSubscriptionItem `json:"hssSubscriptionList"`
}

// NewHssSubscriptionInfo instantiates a new HssSubscriptionInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHssSubscriptionInfo(hssSubscriptionList []HssSubscriptionItem) *HssSubscriptionInfo {
	this := HssSubscriptionInfo{}
	this.HssSubscriptionList = hssSubscriptionList
	return &this
}

// NewHssSubscriptionInfoWithDefaults instantiates a new HssSubscriptionInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHssSubscriptionInfoWithDefaults() *HssSubscriptionInfo {
	this := HssSubscriptionInfo{}
	return &this
}

// GetHssSubscriptionList returns the HssSubscriptionList field value
func (o *HssSubscriptionInfo) GetHssSubscriptionList() []HssSubscriptionItem {
	if o == nil {
		var ret []HssSubscriptionItem
		return ret
	}

	return o.HssSubscriptionList
}

// GetHssSubscriptionListOk returns a tuple with the HssSubscriptionList field value
// and a boolean to check if the value has been set.
func (o *HssSubscriptionInfo) GetHssSubscriptionListOk() ([]HssSubscriptionItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.HssSubscriptionList, true
}

// SetHssSubscriptionList sets field value
func (o *HssSubscriptionInfo) SetHssSubscriptionList(v []HssSubscriptionItem) {
	o.HssSubscriptionList = v
}

func (o HssSubscriptionInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HssSubscriptionInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hssSubscriptionList"] = o.HssSubscriptionList
	return toSerialize, nil
}

type NullableHssSubscriptionInfo struct {
	value *HssSubscriptionInfo
	isSet bool
}

func (v NullableHssSubscriptionInfo) Get() *HssSubscriptionInfo {
	return v.value
}

func (v *NullableHssSubscriptionInfo) Set(val *HssSubscriptionInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableHssSubscriptionInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableHssSubscriptionInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHssSubscriptionInfo(val *HssSubscriptionInfo) *NullableHssSubscriptionInfo {
	return &NullableHssSubscriptionInfo{value: val, isSet: true}
}

func (v NullableHssSubscriptionInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHssSubscriptionInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


