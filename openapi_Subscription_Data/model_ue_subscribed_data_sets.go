/*
Unified Data Repository Service API file for subscription data

Unified Data Repository Service (subscription data).   The API version is defined in 3GPP TS 29.504.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Subscription_Data

import (
	"encoding/json"
)

// checks if the UeSubscribedDataSets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeSubscribedDataSets{}

// UeSubscribedDataSets Contains the subscribed data sets of a UE.
type UeSubscribedDataSets struct {
	AmData *AccessAndMobilitySubscriptionData `json:"amData,omitempty"`
	SmfSelData *SmfSelectionSubscriptionData `json:"smfSelData,omitempty"`
	SmsSubsData *SmsSubscriptionData `json:"smsSubsData,omitempty"`
	SmData *SmSubsData `json:"smData,omitempty"`
	TraceData NullableTraceData `json:"traceData,omitempty"`
	SmsMngData *SmsManagementSubscriptionData `json:"smsMngData,omitempty"`
	LcsPrivacyData *LcsPrivacyData `json:"lcsPrivacyData,omitempty"`
	LcsMoData *LcsMoData `json:"lcsMoData,omitempty"`
	LcsBcaData *LcsBroadcastAssistanceTypesData `json:"lcsBcaData,omitempty"`
	V2xData *V2xSubscriptionData `json:"v2xData,omitempty"`
	ProseData *ProseSubscriptionData `json:"proseData,omitempty"`
	OdbData *OdbData `json:"odbData,omitempty"`
	EeProfileData *EeProfileData `json:"eeProfileData,omitempty"`
	PpProfileData *PpProfileData `json:"ppProfileData,omitempty"`
	NiddAuthData *AuthorizationData `json:"niddAuthData,omitempty"`
	UcData *UcSubscriptionData `json:"ucData,omitempty"`
	MbsSubscriptionData *MbsSubscriptionData `json:"mbsSubscriptionData,omitempty"`
}

// NewUeSubscribedDataSets instantiates a new UeSubscribedDataSets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeSubscribedDataSets() *UeSubscribedDataSets {
	this := UeSubscribedDataSets{}
	return &this
}

// NewUeSubscribedDataSetsWithDefaults instantiates a new UeSubscribedDataSets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeSubscribedDataSetsWithDefaults() *UeSubscribedDataSets {
	this := UeSubscribedDataSets{}
	return &this
}

// GetAmData returns the AmData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetAmData() AccessAndMobilitySubscriptionData {
	if o == nil || IsNil(o.AmData) {
		var ret AccessAndMobilitySubscriptionData
		return ret
	}
	return *o.AmData
}

// GetAmDataOk returns a tuple with the AmData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetAmDataOk() (*AccessAndMobilitySubscriptionData, bool) {
	if o == nil || IsNil(o.AmData) {
		return nil, false
	}
	return o.AmData, true
}

// HasAmData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasAmData() bool {
	if o != nil && !IsNil(o.AmData) {
		return true
	}

	return false
}

// SetAmData gets a reference to the given AccessAndMobilitySubscriptionData and assigns it to the AmData field.
func (o *UeSubscribedDataSets) SetAmData(v AccessAndMobilitySubscriptionData) {
	o.AmData = &v
}

// GetSmfSelData returns the SmfSelData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetSmfSelData() SmfSelectionSubscriptionData {
	if o == nil || IsNil(o.SmfSelData) {
		var ret SmfSelectionSubscriptionData
		return ret
	}
	return *o.SmfSelData
}

// GetSmfSelDataOk returns a tuple with the SmfSelData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetSmfSelDataOk() (*SmfSelectionSubscriptionData, bool) {
	if o == nil || IsNil(o.SmfSelData) {
		return nil, false
	}
	return o.SmfSelData, true
}

// HasSmfSelData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasSmfSelData() bool {
	if o != nil && !IsNil(o.SmfSelData) {
		return true
	}

	return false
}

// SetSmfSelData gets a reference to the given SmfSelectionSubscriptionData and assigns it to the SmfSelData field.
func (o *UeSubscribedDataSets) SetSmfSelData(v SmfSelectionSubscriptionData) {
	o.SmfSelData = &v
}

// GetSmsSubsData returns the SmsSubsData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetSmsSubsData() SmsSubscriptionData {
	if o == nil || IsNil(o.SmsSubsData) {
		var ret SmsSubscriptionData
		return ret
	}
	return *o.SmsSubsData
}

// GetSmsSubsDataOk returns a tuple with the SmsSubsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetSmsSubsDataOk() (*SmsSubscriptionData, bool) {
	if o == nil || IsNil(o.SmsSubsData) {
		return nil, false
	}
	return o.SmsSubsData, true
}

// HasSmsSubsData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasSmsSubsData() bool {
	if o != nil && !IsNil(o.SmsSubsData) {
		return true
	}

	return false
}

// SetSmsSubsData gets a reference to the given SmsSubscriptionData and assigns it to the SmsSubsData field.
func (o *UeSubscribedDataSets) SetSmsSubsData(v SmsSubscriptionData) {
	o.SmsSubsData = &v
}

// GetSmData returns the SmData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetSmData() SmSubsData {
	if o == nil || IsNil(o.SmData) {
		var ret SmSubsData
		return ret
	}
	return *o.SmData
}

// GetSmDataOk returns a tuple with the SmData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetSmDataOk() (*SmSubsData, bool) {
	if o == nil || IsNil(o.SmData) {
		return nil, false
	}
	return o.SmData, true
}

// HasSmData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasSmData() bool {
	if o != nil && !IsNil(o.SmData) {
		return true
	}

	return false
}

// SetSmData gets a reference to the given SmSubsData and assigns it to the SmData field.
func (o *UeSubscribedDataSets) SetSmData(v SmSubsData) {
	o.SmData = &v
}

// GetTraceData returns the TraceData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UeSubscribedDataSets) GetTraceData() TraceData {
	if o == nil || IsNil(o.TraceData.Get()) {
		var ret TraceData
		return ret
	}
	return *o.TraceData.Get()
}

// GetTraceDataOk returns a tuple with the TraceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UeSubscribedDataSets) GetTraceDataOk() (*TraceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceData.Get(), o.TraceData.IsSet()
}

// HasTraceData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasTraceData() bool {
	if o != nil && o.TraceData.IsSet() {
		return true
	}

	return false
}

// SetTraceData gets a reference to the given NullableTraceData and assigns it to the TraceData field.
func (o *UeSubscribedDataSets) SetTraceData(v TraceData) {
	o.TraceData.Set(&v)
}
// SetTraceDataNil sets the value for TraceData to be an explicit nil
func (o *UeSubscribedDataSets) SetTraceDataNil() {
	o.TraceData.Set(nil)
}

// UnsetTraceData ensures that no value is present for TraceData, not even an explicit nil
func (o *UeSubscribedDataSets) UnsetTraceData() {
	o.TraceData.Unset()
}

// GetSmsMngData returns the SmsMngData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetSmsMngData() SmsManagementSubscriptionData {
	if o == nil || IsNil(o.SmsMngData) {
		var ret SmsManagementSubscriptionData
		return ret
	}
	return *o.SmsMngData
}

// GetSmsMngDataOk returns a tuple with the SmsMngData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetSmsMngDataOk() (*SmsManagementSubscriptionData, bool) {
	if o == nil || IsNil(o.SmsMngData) {
		return nil, false
	}
	return o.SmsMngData, true
}

// HasSmsMngData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasSmsMngData() bool {
	if o != nil && !IsNil(o.SmsMngData) {
		return true
	}

	return false
}

// SetSmsMngData gets a reference to the given SmsManagementSubscriptionData and assigns it to the SmsMngData field.
func (o *UeSubscribedDataSets) SetSmsMngData(v SmsManagementSubscriptionData) {
	o.SmsMngData = &v
}

// GetLcsPrivacyData returns the LcsPrivacyData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetLcsPrivacyData() LcsPrivacyData {
	if o == nil || IsNil(o.LcsPrivacyData) {
		var ret LcsPrivacyData
		return ret
	}
	return *o.LcsPrivacyData
}

// GetLcsPrivacyDataOk returns a tuple with the LcsPrivacyData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetLcsPrivacyDataOk() (*LcsPrivacyData, bool) {
	if o == nil || IsNil(o.LcsPrivacyData) {
		return nil, false
	}
	return o.LcsPrivacyData, true
}

// HasLcsPrivacyData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasLcsPrivacyData() bool {
	if o != nil && !IsNil(o.LcsPrivacyData) {
		return true
	}

	return false
}

// SetLcsPrivacyData gets a reference to the given LcsPrivacyData and assigns it to the LcsPrivacyData field.
func (o *UeSubscribedDataSets) SetLcsPrivacyData(v LcsPrivacyData) {
	o.LcsPrivacyData = &v
}

// GetLcsMoData returns the LcsMoData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetLcsMoData() LcsMoData {
	if o == nil || IsNil(o.LcsMoData) {
		var ret LcsMoData
		return ret
	}
	return *o.LcsMoData
}

// GetLcsMoDataOk returns a tuple with the LcsMoData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetLcsMoDataOk() (*LcsMoData, bool) {
	if o == nil || IsNil(o.LcsMoData) {
		return nil, false
	}
	return o.LcsMoData, true
}

// HasLcsMoData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasLcsMoData() bool {
	if o != nil && !IsNil(o.LcsMoData) {
		return true
	}

	return false
}

// SetLcsMoData gets a reference to the given LcsMoData and assigns it to the LcsMoData field.
func (o *UeSubscribedDataSets) SetLcsMoData(v LcsMoData) {
	o.LcsMoData = &v
}

// GetLcsBcaData returns the LcsBcaData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetLcsBcaData() LcsBroadcastAssistanceTypesData {
	if o == nil || IsNil(o.LcsBcaData) {
		var ret LcsBroadcastAssistanceTypesData
		return ret
	}
	return *o.LcsBcaData
}

// GetLcsBcaDataOk returns a tuple with the LcsBcaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetLcsBcaDataOk() (*LcsBroadcastAssistanceTypesData, bool) {
	if o == nil || IsNil(o.LcsBcaData) {
		return nil, false
	}
	return o.LcsBcaData, true
}

// HasLcsBcaData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasLcsBcaData() bool {
	if o != nil && !IsNil(o.LcsBcaData) {
		return true
	}

	return false
}

// SetLcsBcaData gets a reference to the given LcsBroadcastAssistanceTypesData and assigns it to the LcsBcaData field.
func (o *UeSubscribedDataSets) SetLcsBcaData(v LcsBroadcastAssistanceTypesData) {
	o.LcsBcaData = &v
}

// GetV2xData returns the V2xData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetV2xData() V2xSubscriptionData {
	if o == nil || IsNil(o.V2xData) {
		var ret V2xSubscriptionData
		return ret
	}
	return *o.V2xData
}

// GetV2xDataOk returns a tuple with the V2xData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetV2xDataOk() (*V2xSubscriptionData, bool) {
	if o == nil || IsNil(o.V2xData) {
		return nil, false
	}
	return o.V2xData, true
}

// HasV2xData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasV2xData() bool {
	if o != nil && !IsNil(o.V2xData) {
		return true
	}

	return false
}

// SetV2xData gets a reference to the given V2xSubscriptionData and assigns it to the V2xData field.
func (o *UeSubscribedDataSets) SetV2xData(v V2xSubscriptionData) {
	o.V2xData = &v
}

// GetProseData returns the ProseData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetProseData() ProseSubscriptionData {
	if o == nil || IsNil(o.ProseData) {
		var ret ProseSubscriptionData
		return ret
	}
	return *o.ProseData
}

// GetProseDataOk returns a tuple with the ProseData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetProseDataOk() (*ProseSubscriptionData, bool) {
	if o == nil || IsNil(o.ProseData) {
		return nil, false
	}
	return o.ProseData, true
}

// HasProseData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasProseData() bool {
	if o != nil && !IsNil(o.ProseData) {
		return true
	}

	return false
}

// SetProseData gets a reference to the given ProseSubscriptionData and assigns it to the ProseData field.
func (o *UeSubscribedDataSets) SetProseData(v ProseSubscriptionData) {
	o.ProseData = &v
}

// GetOdbData returns the OdbData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetOdbData() OdbData {
	if o == nil || IsNil(o.OdbData) {
		var ret OdbData
		return ret
	}
	return *o.OdbData
}

// GetOdbDataOk returns a tuple with the OdbData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetOdbDataOk() (*OdbData, bool) {
	if o == nil || IsNil(o.OdbData) {
		return nil, false
	}
	return o.OdbData, true
}

// HasOdbData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasOdbData() bool {
	if o != nil && !IsNil(o.OdbData) {
		return true
	}

	return false
}

// SetOdbData gets a reference to the given OdbData and assigns it to the OdbData field.
func (o *UeSubscribedDataSets) SetOdbData(v OdbData) {
	o.OdbData = &v
}

// GetEeProfileData returns the EeProfileData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetEeProfileData() EeProfileData {
	if o == nil || IsNil(o.EeProfileData) {
		var ret EeProfileData
		return ret
	}
	return *o.EeProfileData
}

// GetEeProfileDataOk returns a tuple with the EeProfileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetEeProfileDataOk() (*EeProfileData, bool) {
	if o == nil || IsNil(o.EeProfileData) {
		return nil, false
	}
	return o.EeProfileData, true
}

// HasEeProfileData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasEeProfileData() bool {
	if o != nil && !IsNil(o.EeProfileData) {
		return true
	}

	return false
}

// SetEeProfileData gets a reference to the given EeProfileData and assigns it to the EeProfileData field.
func (o *UeSubscribedDataSets) SetEeProfileData(v EeProfileData) {
	o.EeProfileData = &v
}

// GetPpProfileData returns the PpProfileData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetPpProfileData() PpProfileData {
	if o == nil || IsNil(o.PpProfileData) {
		var ret PpProfileData
		return ret
	}
	return *o.PpProfileData
}

// GetPpProfileDataOk returns a tuple with the PpProfileData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetPpProfileDataOk() (*PpProfileData, bool) {
	if o == nil || IsNil(o.PpProfileData) {
		return nil, false
	}
	return o.PpProfileData, true
}

// HasPpProfileData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasPpProfileData() bool {
	if o != nil && !IsNil(o.PpProfileData) {
		return true
	}

	return false
}

// SetPpProfileData gets a reference to the given PpProfileData and assigns it to the PpProfileData field.
func (o *UeSubscribedDataSets) SetPpProfileData(v PpProfileData) {
	o.PpProfileData = &v
}

// GetNiddAuthData returns the NiddAuthData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetNiddAuthData() AuthorizationData {
	if o == nil || IsNil(o.NiddAuthData) {
		var ret AuthorizationData
		return ret
	}
	return *o.NiddAuthData
}

// GetNiddAuthDataOk returns a tuple with the NiddAuthData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetNiddAuthDataOk() (*AuthorizationData, bool) {
	if o == nil || IsNil(o.NiddAuthData) {
		return nil, false
	}
	return o.NiddAuthData, true
}

// HasNiddAuthData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasNiddAuthData() bool {
	if o != nil && !IsNil(o.NiddAuthData) {
		return true
	}

	return false
}

// SetNiddAuthData gets a reference to the given AuthorizationData and assigns it to the NiddAuthData field.
func (o *UeSubscribedDataSets) SetNiddAuthData(v AuthorizationData) {
	o.NiddAuthData = &v
}

// GetUcData returns the UcData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetUcData() UcSubscriptionData {
	if o == nil || IsNil(o.UcData) {
		var ret UcSubscriptionData
		return ret
	}
	return *o.UcData
}

// GetUcDataOk returns a tuple with the UcData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetUcDataOk() (*UcSubscriptionData, bool) {
	if o == nil || IsNil(o.UcData) {
		return nil, false
	}
	return o.UcData, true
}

// HasUcData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasUcData() bool {
	if o != nil && !IsNil(o.UcData) {
		return true
	}

	return false
}

// SetUcData gets a reference to the given UcSubscriptionData and assigns it to the UcData field.
func (o *UeSubscribedDataSets) SetUcData(v UcSubscriptionData) {
	o.UcData = &v
}

// GetMbsSubscriptionData returns the MbsSubscriptionData field value if set, zero value otherwise.
func (o *UeSubscribedDataSets) GetMbsSubscriptionData() MbsSubscriptionData {
	if o == nil || IsNil(o.MbsSubscriptionData) {
		var ret MbsSubscriptionData
		return ret
	}
	return *o.MbsSubscriptionData
}

// GetMbsSubscriptionDataOk returns a tuple with the MbsSubscriptionData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeSubscribedDataSets) GetMbsSubscriptionDataOk() (*MbsSubscriptionData, bool) {
	if o == nil || IsNil(o.MbsSubscriptionData) {
		return nil, false
	}
	return o.MbsSubscriptionData, true
}

// HasMbsSubscriptionData returns a boolean if a field has been set.
func (o *UeSubscribedDataSets) HasMbsSubscriptionData() bool {
	if o != nil && !IsNil(o.MbsSubscriptionData) {
		return true
	}

	return false
}

// SetMbsSubscriptionData gets a reference to the given MbsSubscriptionData and assigns it to the MbsSubscriptionData field.
func (o *UeSubscribedDataSets) SetMbsSubscriptionData(v MbsSubscriptionData) {
	o.MbsSubscriptionData = &v
}

func (o UeSubscribedDataSets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeSubscribedDataSets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AmData) {
		toSerialize["amData"] = o.AmData
	}
	if !IsNil(o.SmfSelData) {
		toSerialize["smfSelData"] = o.SmfSelData
	}
	if !IsNil(o.SmsSubsData) {
		toSerialize["smsSubsData"] = o.SmsSubsData
	}
	if !IsNil(o.SmData) {
		toSerialize["smData"] = o.SmData
	}
	if o.TraceData.IsSet() {
		toSerialize["traceData"] = o.TraceData.Get()
	}
	if !IsNil(o.SmsMngData) {
		toSerialize["smsMngData"] = o.SmsMngData
	}
	if !IsNil(o.LcsPrivacyData) {
		toSerialize["lcsPrivacyData"] = o.LcsPrivacyData
	}
	if !IsNil(o.LcsMoData) {
		toSerialize["lcsMoData"] = o.LcsMoData
	}
	if !IsNil(o.LcsBcaData) {
		toSerialize["lcsBcaData"] = o.LcsBcaData
	}
	if !IsNil(o.V2xData) {
		toSerialize["v2xData"] = o.V2xData
	}
	if !IsNil(o.ProseData) {
		toSerialize["proseData"] = o.ProseData
	}
	if !IsNil(o.OdbData) {
		toSerialize["odbData"] = o.OdbData
	}
	if !IsNil(o.EeProfileData) {
		toSerialize["eeProfileData"] = o.EeProfileData
	}
	if !IsNil(o.PpProfileData) {
		toSerialize["ppProfileData"] = o.PpProfileData
	}
	if !IsNil(o.NiddAuthData) {
		toSerialize["niddAuthData"] = o.NiddAuthData
	}
	if !IsNil(o.UcData) {
		toSerialize["ucData"] = o.UcData
	}
	if !IsNil(o.MbsSubscriptionData) {
		toSerialize["mbsSubscriptionData"] = o.MbsSubscriptionData
	}
	return toSerialize, nil
}

type NullableUeSubscribedDataSets struct {
	value *UeSubscribedDataSets
	isSet bool
}

func (v NullableUeSubscribedDataSets) Get() *UeSubscribedDataSets {
	return v.value
}

func (v *NullableUeSubscribedDataSets) Set(val *UeSubscribedDataSets) {
	v.value = val
	v.isSet = true
}

func (v NullableUeSubscribedDataSets) IsSet() bool {
	return v.isSet
}

func (v *NullableUeSubscribedDataSets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeSubscribedDataSets(val *UeSubscribedDataSets) *NullableUeSubscribedDataSets {
	return &NullableUeSubscribedDataSets{value: val, isSet: true}
}

func (v NullableUeSubscribedDataSets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeSubscribedDataSets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


