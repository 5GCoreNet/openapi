/*
Nhss_EE

HSS Event Exposure.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_EE

import (
	"encoding/json"
)

// checks if the MonitoringConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitoringConfiguration{}

// MonitoringConfiguration Contains data for each Monitoring Configuration (such as event type, etc.) and the configuration data needed depending on each event type
type MonitoringConfiguration struct {
	EventType EventType `json:"eventType"`
	ImmediateFlag *bool `json:"immediateFlag,omitempty"`
	LocationReportingConfiguration *LocationReportingConfiguration `json:"locationReportingConfiguration,omitempty"`
	LossConnectivityConfiguration *LossConnectivityConfiguration `json:"lossConnectivityConfiguration,omitempty"`
	ReachabilityForDataConfiguration *ReachabilityForDataConfiguration `json:"reachabilityForDataConfiguration,omitempty"`
	PduSessionStatusCfg *PduSessionStatusCfg `json:"pduSessionStatusCfg,omitempty"`
	IdleStatusInd *bool `json:"idleStatusInd,omitempty"`
}

// NewMonitoringConfiguration instantiates a new MonitoringConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitoringConfiguration(eventType EventType) *MonitoringConfiguration {
	this := MonitoringConfiguration{}
	this.EventType = eventType
	var idleStatusInd bool = false
	this.IdleStatusInd = &idleStatusInd
	return &this
}

// NewMonitoringConfigurationWithDefaults instantiates a new MonitoringConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitoringConfigurationWithDefaults() *MonitoringConfiguration {
	this := MonitoringConfiguration{}
	var idleStatusInd bool = false
	this.IdleStatusInd = &idleStatusInd
	return &this
}

// GetEventType returns the EventType field value
func (o *MonitoringConfiguration) GetEventType() EventType {
	if o == nil {
		var ret EventType
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetEventTypeOk() (*EventType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *MonitoringConfiguration) SetEventType(v EventType) {
	o.EventType = v
}

// GetImmediateFlag returns the ImmediateFlag field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetImmediateFlag() bool {
	if o == nil || IsNil(o.ImmediateFlag) {
		var ret bool
		return ret
	}
	return *o.ImmediateFlag
}

// GetImmediateFlagOk returns a tuple with the ImmediateFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetImmediateFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.ImmediateFlag) {
		return nil, false
	}
	return o.ImmediateFlag, true
}

// HasImmediateFlag returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasImmediateFlag() bool {
	if o != nil && !IsNil(o.ImmediateFlag) {
		return true
	}

	return false
}

// SetImmediateFlag gets a reference to the given bool and assigns it to the ImmediateFlag field.
func (o *MonitoringConfiguration) SetImmediateFlag(v bool) {
	o.ImmediateFlag = &v
}

// GetLocationReportingConfiguration returns the LocationReportingConfiguration field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetLocationReportingConfiguration() LocationReportingConfiguration {
	if o == nil || IsNil(o.LocationReportingConfiguration) {
		var ret LocationReportingConfiguration
		return ret
	}
	return *o.LocationReportingConfiguration
}

// GetLocationReportingConfigurationOk returns a tuple with the LocationReportingConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetLocationReportingConfigurationOk() (*LocationReportingConfiguration, bool) {
	if o == nil || IsNil(o.LocationReportingConfiguration) {
		return nil, false
	}
	return o.LocationReportingConfiguration, true
}

// HasLocationReportingConfiguration returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasLocationReportingConfiguration() bool {
	if o != nil && !IsNil(o.LocationReportingConfiguration) {
		return true
	}

	return false
}

// SetLocationReportingConfiguration gets a reference to the given LocationReportingConfiguration and assigns it to the LocationReportingConfiguration field.
func (o *MonitoringConfiguration) SetLocationReportingConfiguration(v LocationReportingConfiguration) {
	o.LocationReportingConfiguration = &v
}

// GetLossConnectivityConfiguration returns the LossConnectivityConfiguration field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetLossConnectivityConfiguration() LossConnectivityConfiguration {
	if o == nil || IsNil(o.LossConnectivityConfiguration) {
		var ret LossConnectivityConfiguration
		return ret
	}
	return *o.LossConnectivityConfiguration
}

// GetLossConnectivityConfigurationOk returns a tuple with the LossConnectivityConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetLossConnectivityConfigurationOk() (*LossConnectivityConfiguration, bool) {
	if o == nil || IsNil(o.LossConnectivityConfiguration) {
		return nil, false
	}
	return o.LossConnectivityConfiguration, true
}

// HasLossConnectivityConfiguration returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasLossConnectivityConfiguration() bool {
	if o != nil && !IsNil(o.LossConnectivityConfiguration) {
		return true
	}

	return false
}

// SetLossConnectivityConfiguration gets a reference to the given LossConnectivityConfiguration and assigns it to the LossConnectivityConfiguration field.
func (o *MonitoringConfiguration) SetLossConnectivityConfiguration(v LossConnectivityConfiguration) {
	o.LossConnectivityConfiguration = &v
}

// GetReachabilityForDataConfiguration returns the ReachabilityForDataConfiguration field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetReachabilityForDataConfiguration() ReachabilityForDataConfiguration {
	if o == nil || IsNil(o.ReachabilityForDataConfiguration) {
		var ret ReachabilityForDataConfiguration
		return ret
	}
	return *o.ReachabilityForDataConfiguration
}

// GetReachabilityForDataConfigurationOk returns a tuple with the ReachabilityForDataConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetReachabilityForDataConfigurationOk() (*ReachabilityForDataConfiguration, bool) {
	if o == nil || IsNil(o.ReachabilityForDataConfiguration) {
		return nil, false
	}
	return o.ReachabilityForDataConfiguration, true
}

// HasReachabilityForDataConfiguration returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasReachabilityForDataConfiguration() bool {
	if o != nil && !IsNil(o.ReachabilityForDataConfiguration) {
		return true
	}

	return false
}

// SetReachabilityForDataConfiguration gets a reference to the given ReachabilityForDataConfiguration and assigns it to the ReachabilityForDataConfiguration field.
func (o *MonitoringConfiguration) SetReachabilityForDataConfiguration(v ReachabilityForDataConfiguration) {
	o.ReachabilityForDataConfiguration = &v
}

// GetPduSessionStatusCfg returns the PduSessionStatusCfg field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetPduSessionStatusCfg() PduSessionStatusCfg {
	if o == nil || IsNil(o.PduSessionStatusCfg) {
		var ret PduSessionStatusCfg
		return ret
	}
	return *o.PduSessionStatusCfg
}

// GetPduSessionStatusCfgOk returns a tuple with the PduSessionStatusCfg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetPduSessionStatusCfgOk() (*PduSessionStatusCfg, bool) {
	if o == nil || IsNil(o.PduSessionStatusCfg) {
		return nil, false
	}
	return o.PduSessionStatusCfg, true
}

// HasPduSessionStatusCfg returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasPduSessionStatusCfg() bool {
	if o != nil && !IsNil(o.PduSessionStatusCfg) {
		return true
	}

	return false
}

// SetPduSessionStatusCfg gets a reference to the given PduSessionStatusCfg and assigns it to the PduSessionStatusCfg field.
func (o *MonitoringConfiguration) SetPduSessionStatusCfg(v PduSessionStatusCfg) {
	o.PduSessionStatusCfg = &v
}

// GetIdleStatusInd returns the IdleStatusInd field value if set, zero value otherwise.
func (o *MonitoringConfiguration) GetIdleStatusInd() bool {
	if o == nil || IsNil(o.IdleStatusInd) {
		var ret bool
		return ret
	}
	return *o.IdleStatusInd
}

// GetIdleStatusIndOk returns a tuple with the IdleStatusInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitoringConfiguration) GetIdleStatusIndOk() (*bool, bool) {
	if o == nil || IsNil(o.IdleStatusInd) {
		return nil, false
	}
	return o.IdleStatusInd, true
}

// HasIdleStatusInd returns a boolean if a field has been set.
func (o *MonitoringConfiguration) HasIdleStatusInd() bool {
	if o != nil && !IsNil(o.IdleStatusInd) {
		return true
	}

	return false
}

// SetIdleStatusInd gets a reference to the given bool and assigns it to the IdleStatusInd field.
func (o *MonitoringConfiguration) SetIdleStatusInd(v bool) {
	o.IdleStatusInd = &v
}

func (o MonitoringConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitoringConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventType"] = o.EventType
	if !IsNil(o.ImmediateFlag) {
		toSerialize["immediateFlag"] = o.ImmediateFlag
	}
	if !IsNil(o.LocationReportingConfiguration) {
		toSerialize["locationReportingConfiguration"] = o.LocationReportingConfiguration
	}
	if !IsNil(o.LossConnectivityConfiguration) {
		toSerialize["lossConnectivityConfiguration"] = o.LossConnectivityConfiguration
	}
	if !IsNil(o.ReachabilityForDataConfiguration) {
		toSerialize["reachabilityForDataConfiguration"] = o.ReachabilityForDataConfiguration
	}
	if !IsNil(o.PduSessionStatusCfg) {
		toSerialize["pduSessionStatusCfg"] = o.PduSessionStatusCfg
	}
	if !IsNil(o.IdleStatusInd) {
		toSerialize["idleStatusInd"] = o.IdleStatusInd
	}
	return toSerialize, nil
}

type NullableMonitoringConfiguration struct {
	value *MonitoringConfiguration
	isSet bool
}

func (v NullableMonitoringConfiguration) Get() *MonitoringConfiguration {
	return v.value
}

func (v *NullableMonitoringConfiguration) Set(val *MonitoringConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitoringConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitoringConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitoringConfiguration(val *MonitoringConfiguration) *NullableMonitoringConfiguration {
	return &NullableMonitoringConfiguration{value: val, isSet: true}
}

func (v NullableMonitoringConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitoringConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


