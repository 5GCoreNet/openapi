/*
AMInfluence

AMInfluence API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AMInfluence

import (
	"encoding/json"
)

// checks if the AmInfluEventNotif type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmInfluEventNotif{}

// AmInfluEventNotif Represents an AM influence event notification.
type AmInfluEventNotif struct {
	AfTransId string `json:"afTransId"`
	Event AmInfluEvent `json:"event"`
	// Identifies geographic areas of the user where the request is applicable.
	GeoAreas []GeographicalArea `json:"geoAreas,omitempty"`
}

// NewAmInfluEventNotif instantiates a new AmInfluEventNotif object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmInfluEventNotif(afTransId string, event AmInfluEvent) *AmInfluEventNotif {
	this := AmInfluEventNotif{}
	this.AfTransId = afTransId
	this.Event = event
	return &this
}

// NewAmInfluEventNotifWithDefaults instantiates a new AmInfluEventNotif object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmInfluEventNotifWithDefaults() *AmInfluEventNotif {
	this := AmInfluEventNotif{}
	return &this
}

// GetAfTransId returns the AfTransId field value
func (o *AmInfluEventNotif) GetAfTransId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AfTransId
}

// GetAfTransIdOk returns a tuple with the AfTransId field value
// and a boolean to check if the value has been set.
func (o *AmInfluEventNotif) GetAfTransIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AfTransId, true
}

// SetAfTransId sets field value
func (o *AmInfluEventNotif) SetAfTransId(v string) {
	o.AfTransId = v
}

// GetEvent returns the Event field value
func (o *AmInfluEventNotif) GetEvent() AmInfluEvent {
	if o == nil {
		var ret AmInfluEvent
		return ret
	}

	return o.Event
}

// GetEventOk returns a tuple with the Event field value
// and a boolean to check if the value has been set.
func (o *AmInfluEventNotif) GetEventOk() (*AmInfluEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Event, true
}

// SetEvent sets field value
func (o *AmInfluEventNotif) SetEvent(v AmInfluEvent) {
	o.Event = v
}

// GetGeoAreas returns the GeoAreas field value if set, zero value otherwise.
func (o *AmInfluEventNotif) GetGeoAreas() []GeographicalArea {
	if o == nil || IsNil(o.GeoAreas) {
		var ret []GeographicalArea
		return ret
	}
	return o.GeoAreas
}

// GetGeoAreasOk returns a tuple with the GeoAreas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmInfluEventNotif) GetGeoAreasOk() ([]GeographicalArea, bool) {
	if o == nil || IsNil(o.GeoAreas) {
		return nil, false
	}
	return o.GeoAreas, true
}

// HasGeoAreas returns a boolean if a field has been set.
func (o *AmInfluEventNotif) HasGeoAreas() bool {
	if o != nil && !IsNil(o.GeoAreas) {
		return true
	}

	return false
}

// SetGeoAreas gets a reference to the given []GeographicalArea and assigns it to the GeoAreas field.
func (o *AmInfluEventNotif) SetGeoAreas(v []GeographicalArea) {
	o.GeoAreas = v
}

func (o AmInfluEventNotif) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmInfluEventNotif) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["afTransId"] = o.AfTransId
	toSerialize["event"] = o.Event
	if !IsNil(o.GeoAreas) {
		toSerialize["geoAreas"] = o.GeoAreas
	}
	return toSerialize, nil
}

type NullableAmInfluEventNotif struct {
	value *AmInfluEventNotif
	isSet bool
}

func (v NullableAmInfluEventNotif) Get() *AmInfluEventNotif {
	return v.value
}

func (v *NullableAmInfluEventNotif) Set(val *AmInfluEventNotif) {
	v.value = val
	v.isSet = true
}

func (v NullableAmInfluEventNotif) IsSet() bool {
	return v.isSet
}

func (v *NullableAmInfluEventNotif) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmInfluEventNotif(val *AmInfluEventNotif) *NullableAmInfluEventNotif {
	return &NullableAmInfluEventNotif{value: val, isSet: true}
}

func (v NullableAmInfluEventNotif) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmInfluEventNotif) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


