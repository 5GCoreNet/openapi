/*
Npcf_UEPolicyControl

UE Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_UEPolicyControl

import (
	"encoding/json"
)

// checks if the UePolicyTransferFailureNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UePolicyTransferFailureNotification{}

// UePolicyTransferFailureNotification Represents information on the failure of a UE policy transfer to the UE because the UE is not reachable. 
type UePolicyTransferFailureNotification struct {
	Cause N1N2MessageTransferCause `json:"cause"`
	Ptis []int32 `json:"ptis"`
}

// NewUePolicyTransferFailureNotification instantiates a new UePolicyTransferFailureNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUePolicyTransferFailureNotification(cause N1N2MessageTransferCause, ptis []int32) *UePolicyTransferFailureNotification {
	this := UePolicyTransferFailureNotification{}
	this.Cause = cause
	this.Ptis = ptis
	return &this
}

// NewUePolicyTransferFailureNotificationWithDefaults instantiates a new UePolicyTransferFailureNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUePolicyTransferFailureNotificationWithDefaults() *UePolicyTransferFailureNotification {
	this := UePolicyTransferFailureNotification{}
	return &this
}

// GetCause returns the Cause field value
func (o *UePolicyTransferFailureNotification) GetCause() N1N2MessageTransferCause {
	if o == nil {
		var ret N1N2MessageTransferCause
		return ret
	}

	return o.Cause
}

// GetCauseOk returns a tuple with the Cause field value
// and a boolean to check if the value has been set.
func (o *UePolicyTransferFailureNotification) GetCauseOk() (*N1N2MessageTransferCause, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cause, true
}

// SetCause sets field value
func (o *UePolicyTransferFailureNotification) SetCause(v N1N2MessageTransferCause) {
	o.Cause = v
}

// GetPtis returns the Ptis field value
func (o *UePolicyTransferFailureNotification) GetPtis() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.Ptis
}

// GetPtisOk returns a tuple with the Ptis field value
// and a boolean to check if the value has been set.
func (o *UePolicyTransferFailureNotification) GetPtisOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Ptis, true
}

// SetPtis sets field value
func (o *UePolicyTransferFailureNotification) SetPtis(v []int32) {
	o.Ptis = v
}

func (o UePolicyTransferFailureNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UePolicyTransferFailureNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cause"] = o.Cause
	toSerialize["ptis"] = o.Ptis
	return toSerialize, nil
}

type NullableUePolicyTransferFailureNotification struct {
	value *UePolicyTransferFailureNotification
	isSet bool
}

func (v NullableUePolicyTransferFailureNotification) Get() *UePolicyTransferFailureNotification {
	return v.value
}

func (v *NullableUePolicyTransferFailureNotification) Set(val *UePolicyTransferFailureNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableUePolicyTransferFailureNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableUePolicyTransferFailureNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUePolicyTransferFailureNotification(val *UePolicyTransferFailureNotification) *NullableUePolicyTransferFailureNotification {
	return &NullableUePolicyTransferFailureNotification{value: val, isSet: true}
}

func (v NullableUePolicyTransferFailureNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUePolicyTransferFailureNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


