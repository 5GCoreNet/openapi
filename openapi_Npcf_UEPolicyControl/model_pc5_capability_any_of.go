/*
Npcf_UEPolicyControl

UE Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_UEPolicyControl

import (
	"encoding/json"
	"fmt"
)

// Pc5CapabilityAnyOf the model 'Pc5CapabilityAnyOf'
type Pc5CapabilityAnyOf string

// List of Pc5Capability_anyOf
const (
	LTE_PC5 Pc5CapabilityAnyOf = "LTE_PC5"
	NR_PC5 Pc5CapabilityAnyOf = "NR_PC5"
	LTE_NR_PC5 Pc5CapabilityAnyOf = "LTE_NR_PC5"
)

// All allowed values of Pc5CapabilityAnyOf enum
var AllowedPc5CapabilityAnyOfEnumValues = []Pc5CapabilityAnyOf{
	"LTE_PC5",
	"NR_PC5",
	"LTE_NR_PC5",
}

func (v *Pc5CapabilityAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := Pc5CapabilityAnyOf(value)
	for _, existing := range AllowedPc5CapabilityAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid Pc5CapabilityAnyOf", value)
}

// NewPc5CapabilityAnyOfFromValue returns a pointer to a valid Pc5CapabilityAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPc5CapabilityAnyOfFromValue(v string) (*Pc5CapabilityAnyOf, error) {
	ev := Pc5CapabilityAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for Pc5CapabilityAnyOf: valid values are %v", v, AllowedPc5CapabilityAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v Pc5CapabilityAnyOf) IsValid() bool {
	for _, existing := range AllowedPc5CapabilityAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to Pc5Capability_anyOf value
func (v Pc5CapabilityAnyOf) Ptr() *Pc5CapabilityAnyOf {
	return &v
}

type NullablePc5CapabilityAnyOf struct {
	value *Pc5CapabilityAnyOf
	isSet bool
}

func (v NullablePc5CapabilityAnyOf) Get() *Pc5CapabilityAnyOf {
	return v.value
}

func (v *NullablePc5CapabilityAnyOf) Set(val *Pc5CapabilityAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePc5CapabilityAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePc5CapabilityAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePc5CapabilityAnyOf(val *Pc5CapabilityAnyOf) *NullablePc5CapabilityAnyOf {
	return &NullablePc5CapabilityAnyOf{value: val, isSet: true}
}

func (v NullablePc5CapabilityAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePc5CapabilityAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

