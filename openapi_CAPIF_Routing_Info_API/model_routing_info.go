/*
CAPIF_Routing_Info_API

API for Routing information.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CAPIF_Routing_Info_API

import (
	"encoding/json"
)

// checks if the RoutingInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingInfo{}

// RoutingInfo Represents an API routing information.
type RoutingInfo struct {
	RoutingRules []RoutingRule `json:"routingRules"`
}

// NewRoutingInfo instantiates a new RoutingInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingInfo(routingRules []RoutingRule) *RoutingInfo {
	this := RoutingInfo{}
	this.RoutingRules = routingRules
	return &this
}

// NewRoutingInfoWithDefaults instantiates a new RoutingInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingInfoWithDefaults() *RoutingInfo {
	this := RoutingInfo{}
	return &this
}

// GetRoutingRules returns the RoutingRules field value
func (o *RoutingInfo) GetRoutingRules() []RoutingRule {
	if o == nil {
		var ret []RoutingRule
		return ret
	}

	return o.RoutingRules
}

// GetRoutingRulesOk returns a tuple with the RoutingRules field value
// and a boolean to check if the value has been set.
func (o *RoutingInfo) GetRoutingRulesOk() ([]RoutingRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.RoutingRules, true
}

// SetRoutingRules sets field value
func (o *RoutingInfo) SetRoutingRules(v []RoutingRule) {
	o.RoutingRules = v
}

func (o RoutingInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["routingRules"] = o.RoutingRules
	return toSerialize, nil
}

type NullableRoutingInfo struct {
	value *RoutingInfo
	isSet bool
}

func (v NullableRoutingInfo) Get() *RoutingInfo {
	return v.value
}

func (v *NullableRoutingInfo) Set(val *RoutingInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingInfo(val *RoutingInfo) *NullableRoutingInfo {
	return &NullableRoutingInfo{value: val, isSet: true}
}

func (v NullableRoutingInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


