/*
3gpp-as-session-with-qos

API for setting us an AS session with required QoS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AsSessionWithQoS

import (
	"encoding/json"
)

// checks if the TscQosRequirementRm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TscQosRequirementRm{}

// TscQosRequirementRm Represents the same as the TscQosRequirement data type but with the nullable:true property.
type TscQosRequirementRm struct {
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqGbrDl NullableString `json:"reqGbrDl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqGbrUl NullableString `json:"reqGbrUl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqMbrDl NullableString `json:"reqMbrDl,omitempty"`
	// This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property. 
	ReqMbrUl NullableString `json:"reqMbrUl,omitempty"`
	// This data type is defined in the same way as the 'ExtMaxDataBurstVol' data type, but with the OpenAPI 'nullable: true' property. 
	MaxTscBurstSize NullableInt32 `json:"maxTscBurstSize,omitempty"`
	// This data type is defined in the same way as the 'PacketDelBudget' data type, but with the OpenAPI 'nullable: true' property. 
	Req5Gsdelay NullableInt32 `json:"req5Gsdelay,omitempty"`
	// This data type is defined in the same way as the TscPriorityLevel data type, but with the OpenAPI nullable property set to true. 
	Priority NullableInt32 `json:"priority,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property. 
	TscaiTimeDom NullableInt32 `json:"tscaiTimeDom,omitempty"`
	TscaiInputDl NullableTscaiInputContainer `json:"tscaiInputDl,omitempty"`
	TscaiInputUl NullableTscaiInputContainer `json:"tscaiInputUl,omitempty"`
}

// NewTscQosRequirementRm instantiates a new TscQosRequirementRm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTscQosRequirementRm() *TscQosRequirementRm {
	this := TscQosRequirementRm{}
	return &this
}

// NewTscQosRequirementRmWithDefaults instantiates a new TscQosRequirementRm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTscQosRequirementRmWithDefaults() *TscQosRequirementRm {
	this := TscQosRequirementRm{}
	return &this
}

// GetReqGbrDl returns the ReqGbrDl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetReqGbrDl() string {
	if o == nil || IsNil(o.ReqGbrDl.Get()) {
		var ret string
		return ret
	}
	return *o.ReqGbrDl.Get()
}

// GetReqGbrDlOk returns a tuple with the ReqGbrDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetReqGbrDlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqGbrDl.Get(), o.ReqGbrDl.IsSet()
}

// HasReqGbrDl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasReqGbrDl() bool {
	if o != nil && o.ReqGbrDl.IsSet() {
		return true
	}

	return false
}

// SetReqGbrDl gets a reference to the given NullableString and assigns it to the ReqGbrDl field.
func (o *TscQosRequirementRm) SetReqGbrDl(v string) {
	o.ReqGbrDl.Set(&v)
}
// SetReqGbrDlNil sets the value for ReqGbrDl to be an explicit nil
func (o *TscQosRequirementRm) SetReqGbrDlNil() {
	o.ReqGbrDl.Set(nil)
}

// UnsetReqGbrDl ensures that no value is present for ReqGbrDl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetReqGbrDl() {
	o.ReqGbrDl.Unset()
}

// GetReqGbrUl returns the ReqGbrUl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetReqGbrUl() string {
	if o == nil || IsNil(o.ReqGbrUl.Get()) {
		var ret string
		return ret
	}
	return *o.ReqGbrUl.Get()
}

// GetReqGbrUlOk returns a tuple with the ReqGbrUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetReqGbrUlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqGbrUl.Get(), o.ReqGbrUl.IsSet()
}

// HasReqGbrUl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasReqGbrUl() bool {
	if o != nil && o.ReqGbrUl.IsSet() {
		return true
	}

	return false
}

// SetReqGbrUl gets a reference to the given NullableString and assigns it to the ReqGbrUl field.
func (o *TscQosRequirementRm) SetReqGbrUl(v string) {
	o.ReqGbrUl.Set(&v)
}
// SetReqGbrUlNil sets the value for ReqGbrUl to be an explicit nil
func (o *TscQosRequirementRm) SetReqGbrUlNil() {
	o.ReqGbrUl.Set(nil)
}

// UnsetReqGbrUl ensures that no value is present for ReqGbrUl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetReqGbrUl() {
	o.ReqGbrUl.Unset()
}

// GetReqMbrDl returns the ReqMbrDl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetReqMbrDl() string {
	if o == nil || IsNil(o.ReqMbrDl.Get()) {
		var ret string
		return ret
	}
	return *o.ReqMbrDl.Get()
}

// GetReqMbrDlOk returns a tuple with the ReqMbrDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetReqMbrDlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqMbrDl.Get(), o.ReqMbrDl.IsSet()
}

// HasReqMbrDl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasReqMbrDl() bool {
	if o != nil && o.ReqMbrDl.IsSet() {
		return true
	}

	return false
}

// SetReqMbrDl gets a reference to the given NullableString and assigns it to the ReqMbrDl field.
func (o *TscQosRequirementRm) SetReqMbrDl(v string) {
	o.ReqMbrDl.Set(&v)
}
// SetReqMbrDlNil sets the value for ReqMbrDl to be an explicit nil
func (o *TscQosRequirementRm) SetReqMbrDlNil() {
	o.ReqMbrDl.Set(nil)
}

// UnsetReqMbrDl ensures that no value is present for ReqMbrDl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetReqMbrDl() {
	o.ReqMbrDl.Unset()
}

// GetReqMbrUl returns the ReqMbrUl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetReqMbrUl() string {
	if o == nil || IsNil(o.ReqMbrUl.Get()) {
		var ret string
		return ret
	}
	return *o.ReqMbrUl.Get()
}

// GetReqMbrUlOk returns a tuple with the ReqMbrUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetReqMbrUlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqMbrUl.Get(), o.ReqMbrUl.IsSet()
}

// HasReqMbrUl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasReqMbrUl() bool {
	if o != nil && o.ReqMbrUl.IsSet() {
		return true
	}

	return false
}

// SetReqMbrUl gets a reference to the given NullableString and assigns it to the ReqMbrUl field.
func (o *TscQosRequirementRm) SetReqMbrUl(v string) {
	o.ReqMbrUl.Set(&v)
}
// SetReqMbrUlNil sets the value for ReqMbrUl to be an explicit nil
func (o *TscQosRequirementRm) SetReqMbrUlNil() {
	o.ReqMbrUl.Set(nil)
}

// UnsetReqMbrUl ensures that no value is present for ReqMbrUl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetReqMbrUl() {
	o.ReqMbrUl.Unset()
}

// GetMaxTscBurstSize returns the MaxTscBurstSize field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetMaxTscBurstSize() int32 {
	if o == nil || IsNil(o.MaxTscBurstSize.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTscBurstSize.Get()
}

// GetMaxTscBurstSizeOk returns a tuple with the MaxTscBurstSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetMaxTscBurstSizeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTscBurstSize.Get(), o.MaxTscBurstSize.IsSet()
}

// HasMaxTscBurstSize returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasMaxTscBurstSize() bool {
	if o != nil && o.MaxTscBurstSize.IsSet() {
		return true
	}

	return false
}

// SetMaxTscBurstSize gets a reference to the given NullableInt32 and assigns it to the MaxTscBurstSize field.
func (o *TscQosRequirementRm) SetMaxTscBurstSize(v int32) {
	o.MaxTscBurstSize.Set(&v)
}
// SetMaxTscBurstSizeNil sets the value for MaxTscBurstSize to be an explicit nil
func (o *TscQosRequirementRm) SetMaxTscBurstSizeNil() {
	o.MaxTscBurstSize.Set(nil)
}

// UnsetMaxTscBurstSize ensures that no value is present for MaxTscBurstSize, not even an explicit nil
func (o *TscQosRequirementRm) UnsetMaxTscBurstSize() {
	o.MaxTscBurstSize.Unset()
}

// GetReq5Gsdelay returns the Req5Gsdelay field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetReq5Gsdelay() int32 {
	if o == nil || IsNil(o.Req5Gsdelay.Get()) {
		var ret int32
		return ret
	}
	return *o.Req5Gsdelay.Get()
}

// GetReq5GsdelayOk returns a tuple with the Req5Gsdelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetReq5GsdelayOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Req5Gsdelay.Get(), o.Req5Gsdelay.IsSet()
}

// HasReq5Gsdelay returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasReq5Gsdelay() bool {
	if o != nil && o.Req5Gsdelay.IsSet() {
		return true
	}

	return false
}

// SetReq5Gsdelay gets a reference to the given NullableInt32 and assigns it to the Req5Gsdelay field.
func (o *TscQosRequirementRm) SetReq5Gsdelay(v int32) {
	o.Req5Gsdelay.Set(&v)
}
// SetReq5GsdelayNil sets the value for Req5Gsdelay to be an explicit nil
func (o *TscQosRequirementRm) SetReq5GsdelayNil() {
	o.Req5Gsdelay.Set(nil)
}

// UnsetReq5Gsdelay ensures that no value is present for Req5Gsdelay, not even an explicit nil
func (o *TscQosRequirementRm) UnsetReq5Gsdelay() {
	o.Req5Gsdelay.Unset()
}

// GetPriority returns the Priority field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetPriority() int32 {
	if o == nil || IsNil(o.Priority.Get()) {
		var ret int32
		return ret
	}
	return *o.Priority.Get()
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetPriorityOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Priority.Get(), o.Priority.IsSet()
}

// HasPriority returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasPriority() bool {
	if o != nil && o.Priority.IsSet() {
		return true
	}

	return false
}

// SetPriority gets a reference to the given NullableInt32 and assigns it to the Priority field.
func (o *TscQosRequirementRm) SetPriority(v int32) {
	o.Priority.Set(&v)
}
// SetPriorityNil sets the value for Priority to be an explicit nil
func (o *TscQosRequirementRm) SetPriorityNil() {
	o.Priority.Set(nil)
}

// UnsetPriority ensures that no value is present for Priority, not even an explicit nil
func (o *TscQosRequirementRm) UnsetPriority() {
	o.Priority.Unset()
}

// GetTscaiTimeDom returns the TscaiTimeDom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetTscaiTimeDom() int32 {
	if o == nil || IsNil(o.TscaiTimeDom.Get()) {
		var ret int32
		return ret
	}
	return *o.TscaiTimeDom.Get()
}

// GetTscaiTimeDomOk returns a tuple with the TscaiTimeDom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetTscaiTimeDomOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.TscaiTimeDom.Get(), o.TscaiTimeDom.IsSet()
}

// HasTscaiTimeDom returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasTscaiTimeDom() bool {
	if o != nil && o.TscaiTimeDom.IsSet() {
		return true
	}

	return false
}

// SetTscaiTimeDom gets a reference to the given NullableInt32 and assigns it to the TscaiTimeDom field.
func (o *TscQosRequirementRm) SetTscaiTimeDom(v int32) {
	o.TscaiTimeDom.Set(&v)
}
// SetTscaiTimeDomNil sets the value for TscaiTimeDom to be an explicit nil
func (o *TscQosRequirementRm) SetTscaiTimeDomNil() {
	o.TscaiTimeDom.Set(nil)
}

// UnsetTscaiTimeDom ensures that no value is present for TscaiTimeDom, not even an explicit nil
func (o *TscQosRequirementRm) UnsetTscaiTimeDom() {
	o.TscaiTimeDom.Unset()
}

// GetTscaiInputDl returns the TscaiInputDl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetTscaiInputDl() TscaiInputContainer {
	if o == nil || IsNil(o.TscaiInputDl.Get()) {
		var ret TscaiInputContainer
		return ret
	}
	return *o.TscaiInputDl.Get()
}

// GetTscaiInputDlOk returns a tuple with the TscaiInputDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetTscaiInputDlOk() (*TscaiInputContainer, bool) {
	if o == nil {
		return nil, false
	}
	return o.TscaiInputDl.Get(), o.TscaiInputDl.IsSet()
}

// HasTscaiInputDl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasTscaiInputDl() bool {
	if o != nil && o.TscaiInputDl.IsSet() {
		return true
	}

	return false
}

// SetTscaiInputDl gets a reference to the given NullableTscaiInputContainer and assigns it to the TscaiInputDl field.
func (o *TscQosRequirementRm) SetTscaiInputDl(v TscaiInputContainer) {
	o.TscaiInputDl.Set(&v)
}
// SetTscaiInputDlNil sets the value for TscaiInputDl to be an explicit nil
func (o *TscQosRequirementRm) SetTscaiInputDlNil() {
	o.TscaiInputDl.Set(nil)
}

// UnsetTscaiInputDl ensures that no value is present for TscaiInputDl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetTscaiInputDl() {
	o.TscaiInputDl.Unset()
}

// GetTscaiInputUl returns the TscaiInputUl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscQosRequirementRm) GetTscaiInputUl() TscaiInputContainer {
	if o == nil || IsNil(o.TscaiInputUl.Get()) {
		var ret TscaiInputContainer
		return ret
	}
	return *o.TscaiInputUl.Get()
}

// GetTscaiInputUlOk returns a tuple with the TscaiInputUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscQosRequirementRm) GetTscaiInputUlOk() (*TscaiInputContainer, bool) {
	if o == nil {
		return nil, false
	}
	return o.TscaiInputUl.Get(), o.TscaiInputUl.IsSet()
}

// HasTscaiInputUl returns a boolean if a field has been set.
func (o *TscQosRequirementRm) HasTscaiInputUl() bool {
	if o != nil && o.TscaiInputUl.IsSet() {
		return true
	}

	return false
}

// SetTscaiInputUl gets a reference to the given NullableTscaiInputContainer and assigns it to the TscaiInputUl field.
func (o *TscQosRequirementRm) SetTscaiInputUl(v TscaiInputContainer) {
	o.TscaiInputUl.Set(&v)
}
// SetTscaiInputUlNil sets the value for TscaiInputUl to be an explicit nil
func (o *TscQosRequirementRm) SetTscaiInputUlNil() {
	o.TscaiInputUl.Set(nil)
}

// UnsetTscaiInputUl ensures that no value is present for TscaiInputUl, not even an explicit nil
func (o *TscQosRequirementRm) UnsetTscaiInputUl() {
	o.TscaiInputUl.Unset()
}

func (o TscQosRequirementRm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TscQosRequirementRm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ReqGbrDl.IsSet() {
		toSerialize["reqGbrDl"] = o.ReqGbrDl.Get()
	}
	if o.ReqGbrUl.IsSet() {
		toSerialize["reqGbrUl"] = o.ReqGbrUl.Get()
	}
	if o.ReqMbrDl.IsSet() {
		toSerialize["reqMbrDl"] = o.ReqMbrDl.Get()
	}
	if o.ReqMbrUl.IsSet() {
		toSerialize["reqMbrUl"] = o.ReqMbrUl.Get()
	}
	if o.MaxTscBurstSize.IsSet() {
		toSerialize["maxTscBurstSize"] = o.MaxTscBurstSize.Get()
	}
	if o.Req5Gsdelay.IsSet() {
		toSerialize["req5Gsdelay"] = o.Req5Gsdelay.Get()
	}
	if o.Priority.IsSet() {
		toSerialize["priority"] = o.Priority.Get()
	}
	if o.TscaiTimeDom.IsSet() {
		toSerialize["tscaiTimeDom"] = o.TscaiTimeDom.Get()
	}
	if o.TscaiInputDl.IsSet() {
		toSerialize["tscaiInputDl"] = o.TscaiInputDl.Get()
	}
	if o.TscaiInputUl.IsSet() {
		toSerialize["tscaiInputUl"] = o.TscaiInputUl.Get()
	}
	return toSerialize, nil
}

type NullableTscQosRequirementRm struct {
	value *TscQosRequirementRm
	isSet bool
}

func (v NullableTscQosRequirementRm) Get() *TscQosRequirementRm {
	return v.value
}

func (v *NullableTscQosRequirementRm) Set(val *TscQosRequirementRm) {
	v.value = val
	v.isSet = true
}

func (v NullableTscQosRequirementRm) IsSet() bool {
	return v.isSet
}

func (v *NullableTscQosRequirementRm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTscQosRequirementRm(val *TscQosRequirementRm) *NullableTscQosRequirementRm {
	return &NullableTscQosRequirementRm{value: val, isSet: true}
}

func (v NullableTscQosRequirementRm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTscQosRequirementRm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


