/*
SS_Events

API for SEAL Events management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_Events

import (
	"encoding/json"
)

// checks if the SEALEventDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SEALEventDetail{}

// SEALEventDetail Represents the SEAL event details.
type SEALEventDetail struct {
	EventId SEALEvent `json:"eventId"`
	LmInfos []LMInformation `json:"lmInfos,omitempty"`
	// The VAL groups documents with modified membership and configuration information. 
	ValGroupDocuments []VALGroupDocument `json:"valGroupDocuments,omitempty"`
	// Updated profile information associated with VAL Users or VAL UEs.
	ProfileDocs []ProfileDoc `json:"profileDocs,omitempty"`
	// The message filter information for various member VAL User or UEs of the VAL group. 
	MsgFltrs []MessageFilter `json:"msgFltrs,omitempty"`
	// The events reports with details of the events related to the VAL UE(s).
	MonRep []MonitorEventsReport `json:"monRep,omitempty"`
	// The location deviation information for the interested VAL User ID or UE IDs in a given location. 
	LocAdhr []LocationDevMonReport `json:"locAdhr,omitempty"`
	TempGroupInfo *TempGroupInfo `json:"tempGroupInfo,omitempty"`
	// The location area monitoring of the given area of interest.
	LocAreaMonRep []LocationAreaMonReport `json:"locAreaMonRep,omitempty"`
}

// NewSEALEventDetail instantiates a new SEALEventDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSEALEventDetail(eventId SEALEvent) *SEALEventDetail {
	this := SEALEventDetail{}
	this.EventId = eventId
	return &this
}

// NewSEALEventDetailWithDefaults instantiates a new SEALEventDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSEALEventDetailWithDefaults() *SEALEventDetail {
	this := SEALEventDetail{}
	return &this
}

// GetEventId returns the EventId field value
func (o *SEALEventDetail) GetEventId() SEALEvent {
	if o == nil {
		var ret SEALEvent
		return ret
	}

	return o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetEventIdOk() (*SEALEvent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventId, true
}

// SetEventId sets field value
func (o *SEALEventDetail) SetEventId(v SEALEvent) {
	o.EventId = v
}

// GetLmInfos returns the LmInfos field value if set, zero value otherwise.
func (o *SEALEventDetail) GetLmInfos() []LMInformation {
	if o == nil || isNil(o.LmInfos) {
		var ret []LMInformation
		return ret
	}
	return o.LmInfos
}

// GetLmInfosOk returns a tuple with the LmInfos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetLmInfosOk() ([]LMInformation, bool) {
	if o == nil || isNil(o.LmInfos) {
		return nil, false
	}
	return o.LmInfos, true
}

// HasLmInfos returns a boolean if a field has been set.
func (o *SEALEventDetail) HasLmInfos() bool {
	if o != nil && !isNil(o.LmInfos) {
		return true
	}

	return false
}

// SetLmInfos gets a reference to the given []LMInformation and assigns it to the LmInfos field.
func (o *SEALEventDetail) SetLmInfos(v []LMInformation) {
	o.LmInfos = v
}

// GetValGroupDocuments returns the ValGroupDocuments field value if set, zero value otherwise.
func (o *SEALEventDetail) GetValGroupDocuments() []VALGroupDocument {
	if o == nil || isNil(o.ValGroupDocuments) {
		var ret []VALGroupDocument
		return ret
	}
	return o.ValGroupDocuments
}

// GetValGroupDocumentsOk returns a tuple with the ValGroupDocuments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetValGroupDocumentsOk() ([]VALGroupDocument, bool) {
	if o == nil || isNil(o.ValGroupDocuments) {
		return nil, false
	}
	return o.ValGroupDocuments, true
}

// HasValGroupDocuments returns a boolean if a field has been set.
func (o *SEALEventDetail) HasValGroupDocuments() bool {
	if o != nil && !isNil(o.ValGroupDocuments) {
		return true
	}

	return false
}

// SetValGroupDocuments gets a reference to the given []VALGroupDocument and assigns it to the ValGroupDocuments field.
func (o *SEALEventDetail) SetValGroupDocuments(v []VALGroupDocument) {
	o.ValGroupDocuments = v
}

// GetProfileDocs returns the ProfileDocs field value if set, zero value otherwise.
func (o *SEALEventDetail) GetProfileDocs() []ProfileDoc {
	if o == nil || isNil(o.ProfileDocs) {
		var ret []ProfileDoc
		return ret
	}
	return o.ProfileDocs
}

// GetProfileDocsOk returns a tuple with the ProfileDocs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetProfileDocsOk() ([]ProfileDoc, bool) {
	if o == nil || isNil(o.ProfileDocs) {
		return nil, false
	}
	return o.ProfileDocs, true
}

// HasProfileDocs returns a boolean if a field has been set.
func (o *SEALEventDetail) HasProfileDocs() bool {
	if o != nil && !isNil(o.ProfileDocs) {
		return true
	}

	return false
}

// SetProfileDocs gets a reference to the given []ProfileDoc and assigns it to the ProfileDocs field.
func (o *SEALEventDetail) SetProfileDocs(v []ProfileDoc) {
	o.ProfileDocs = v
}

// GetMsgFltrs returns the MsgFltrs field value if set, zero value otherwise.
func (o *SEALEventDetail) GetMsgFltrs() []MessageFilter {
	if o == nil || isNil(o.MsgFltrs) {
		var ret []MessageFilter
		return ret
	}
	return o.MsgFltrs
}

// GetMsgFltrsOk returns a tuple with the MsgFltrs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetMsgFltrsOk() ([]MessageFilter, bool) {
	if o == nil || isNil(o.MsgFltrs) {
		return nil, false
	}
	return o.MsgFltrs, true
}

// HasMsgFltrs returns a boolean if a field has been set.
func (o *SEALEventDetail) HasMsgFltrs() bool {
	if o != nil && !isNil(o.MsgFltrs) {
		return true
	}

	return false
}

// SetMsgFltrs gets a reference to the given []MessageFilter and assigns it to the MsgFltrs field.
func (o *SEALEventDetail) SetMsgFltrs(v []MessageFilter) {
	o.MsgFltrs = v
}

// GetMonRep returns the MonRep field value if set, zero value otherwise.
func (o *SEALEventDetail) GetMonRep() []MonitorEventsReport {
	if o == nil || isNil(o.MonRep) {
		var ret []MonitorEventsReport
		return ret
	}
	return o.MonRep
}

// GetMonRepOk returns a tuple with the MonRep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetMonRepOk() ([]MonitorEventsReport, bool) {
	if o == nil || isNil(o.MonRep) {
		return nil, false
	}
	return o.MonRep, true
}

// HasMonRep returns a boolean if a field has been set.
func (o *SEALEventDetail) HasMonRep() bool {
	if o != nil && !isNil(o.MonRep) {
		return true
	}

	return false
}

// SetMonRep gets a reference to the given []MonitorEventsReport and assigns it to the MonRep field.
func (o *SEALEventDetail) SetMonRep(v []MonitorEventsReport) {
	o.MonRep = v
}

// GetLocAdhr returns the LocAdhr field value if set, zero value otherwise.
func (o *SEALEventDetail) GetLocAdhr() []LocationDevMonReport {
	if o == nil || isNil(o.LocAdhr) {
		var ret []LocationDevMonReport
		return ret
	}
	return o.LocAdhr
}

// GetLocAdhrOk returns a tuple with the LocAdhr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetLocAdhrOk() ([]LocationDevMonReport, bool) {
	if o == nil || isNil(o.LocAdhr) {
		return nil, false
	}
	return o.LocAdhr, true
}

// HasLocAdhr returns a boolean if a field has been set.
func (o *SEALEventDetail) HasLocAdhr() bool {
	if o != nil && !isNil(o.LocAdhr) {
		return true
	}

	return false
}

// SetLocAdhr gets a reference to the given []LocationDevMonReport and assigns it to the LocAdhr field.
func (o *SEALEventDetail) SetLocAdhr(v []LocationDevMonReport) {
	o.LocAdhr = v
}

// GetTempGroupInfo returns the TempGroupInfo field value if set, zero value otherwise.
func (o *SEALEventDetail) GetTempGroupInfo() TempGroupInfo {
	if o == nil || isNil(o.TempGroupInfo) {
		var ret TempGroupInfo
		return ret
	}
	return *o.TempGroupInfo
}

// GetTempGroupInfoOk returns a tuple with the TempGroupInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetTempGroupInfoOk() (*TempGroupInfo, bool) {
	if o == nil || isNil(o.TempGroupInfo) {
		return nil, false
	}
	return o.TempGroupInfo, true
}

// HasTempGroupInfo returns a boolean if a field has been set.
func (o *SEALEventDetail) HasTempGroupInfo() bool {
	if o != nil && !isNil(o.TempGroupInfo) {
		return true
	}

	return false
}

// SetTempGroupInfo gets a reference to the given TempGroupInfo and assigns it to the TempGroupInfo field.
func (o *SEALEventDetail) SetTempGroupInfo(v TempGroupInfo) {
	o.TempGroupInfo = &v
}

// GetLocAreaMonRep returns the LocAreaMonRep field value if set, zero value otherwise.
func (o *SEALEventDetail) GetLocAreaMonRep() []LocationAreaMonReport {
	if o == nil || isNil(o.LocAreaMonRep) {
		var ret []LocationAreaMonReport
		return ret
	}
	return o.LocAreaMonRep
}

// GetLocAreaMonRepOk returns a tuple with the LocAreaMonRep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SEALEventDetail) GetLocAreaMonRepOk() ([]LocationAreaMonReport, bool) {
	if o == nil || isNil(o.LocAreaMonRep) {
		return nil, false
	}
	return o.LocAreaMonRep, true
}

// HasLocAreaMonRep returns a boolean if a field has been set.
func (o *SEALEventDetail) HasLocAreaMonRep() bool {
	if o != nil && !isNil(o.LocAreaMonRep) {
		return true
	}

	return false
}

// SetLocAreaMonRep gets a reference to the given []LocationAreaMonReport and assigns it to the LocAreaMonRep field.
func (o *SEALEventDetail) SetLocAreaMonRep(v []LocationAreaMonReport) {
	o.LocAreaMonRep = v
}

func (o SEALEventDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SEALEventDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventId"] = o.EventId
	if !isNil(o.LmInfos) {
		toSerialize["lmInfos"] = o.LmInfos
	}
	if !isNil(o.ValGroupDocuments) {
		toSerialize["valGroupDocuments"] = o.ValGroupDocuments
	}
	if !isNil(o.ProfileDocs) {
		toSerialize["profileDocs"] = o.ProfileDocs
	}
	if !isNil(o.MsgFltrs) {
		toSerialize["msgFltrs"] = o.MsgFltrs
	}
	if !isNil(o.MonRep) {
		toSerialize["monRep"] = o.MonRep
	}
	if !isNil(o.LocAdhr) {
		toSerialize["locAdhr"] = o.LocAdhr
	}
	if !isNil(o.TempGroupInfo) {
		toSerialize["tempGroupInfo"] = o.TempGroupInfo
	}
	if !isNil(o.LocAreaMonRep) {
		toSerialize["locAreaMonRep"] = o.LocAreaMonRep
	}
	return toSerialize, nil
}

type NullableSEALEventDetail struct {
	value *SEALEventDetail
	isSet bool
}

func (v NullableSEALEventDetail) Get() *SEALEventDetail {
	return v.value
}

func (v *NullableSEALEventDetail) Set(val *SEALEventDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableSEALEventDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableSEALEventDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSEALEventDetail(val *SEALEventDetail) *NullableSEALEventDetail {
	return &NullableSEALEventDetail{value: val, isSet: true}
}

func (v NullableSEALEventDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSEALEventDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


