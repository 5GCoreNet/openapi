/*
SS_Events

API for SEAL Events management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_Events

import (
	"encoding/json"
)

// checks if the IdentityFilter type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdentityFilter{}

// IdentityFilter Represents a filter of VAL User / UE identities belonging to a VAL service.
type IdentityFilter struct {
	// Identity of the VAL service
	ValSvcId *string `json:"valSvcId,omitempty"`
	// VAL User IDs or VAL UE IDs that the event subscriber wants to know in the interested event. 
	ValTgtUes []ValTargetUe `json:"valTgtUes,omitempty"`
	// Set to true by Subscriber to request the supplementary location information.
	SuppLoc *bool `json:"suppLoc,omitempty"`
}

// NewIdentityFilter instantiates a new IdentityFilter object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdentityFilter() *IdentityFilter {
	this := IdentityFilter{}
	return &this
}

// NewIdentityFilterWithDefaults instantiates a new IdentityFilter object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdentityFilterWithDefaults() *IdentityFilter {
	this := IdentityFilter{}
	return &this
}

// GetValSvcId returns the ValSvcId field value if set, zero value otherwise.
func (o *IdentityFilter) GetValSvcId() string {
	if o == nil || IsNil(o.ValSvcId) {
		var ret string
		return ret
	}
	return *o.ValSvcId
}

// GetValSvcIdOk returns a tuple with the ValSvcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityFilter) GetValSvcIdOk() (*string, bool) {
	if o == nil || IsNil(o.ValSvcId) {
		return nil, false
	}
	return o.ValSvcId, true
}

// HasValSvcId returns a boolean if a field has been set.
func (o *IdentityFilter) HasValSvcId() bool {
	if o != nil && !IsNil(o.ValSvcId) {
		return true
	}

	return false
}

// SetValSvcId gets a reference to the given string and assigns it to the ValSvcId field.
func (o *IdentityFilter) SetValSvcId(v string) {
	o.ValSvcId = &v
}

// GetValTgtUes returns the ValTgtUes field value if set, zero value otherwise.
func (o *IdentityFilter) GetValTgtUes() []ValTargetUe {
	if o == nil || IsNil(o.ValTgtUes) {
		var ret []ValTargetUe
		return ret
	}
	return o.ValTgtUes
}

// GetValTgtUesOk returns a tuple with the ValTgtUes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityFilter) GetValTgtUesOk() ([]ValTargetUe, bool) {
	if o == nil || IsNil(o.ValTgtUes) {
		return nil, false
	}
	return o.ValTgtUes, true
}

// HasValTgtUes returns a boolean if a field has been set.
func (o *IdentityFilter) HasValTgtUes() bool {
	if o != nil && !IsNil(o.ValTgtUes) {
		return true
	}

	return false
}

// SetValTgtUes gets a reference to the given []ValTargetUe and assigns it to the ValTgtUes field.
func (o *IdentityFilter) SetValTgtUes(v []ValTargetUe) {
	o.ValTgtUes = v
}

// GetSuppLoc returns the SuppLoc field value if set, zero value otherwise.
func (o *IdentityFilter) GetSuppLoc() bool {
	if o == nil || IsNil(o.SuppLoc) {
		var ret bool
		return ret
	}
	return *o.SuppLoc
}

// GetSuppLocOk returns a tuple with the SuppLoc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdentityFilter) GetSuppLocOk() (*bool, bool) {
	if o == nil || IsNil(o.SuppLoc) {
		return nil, false
	}
	return o.SuppLoc, true
}

// HasSuppLoc returns a boolean if a field has been set.
func (o *IdentityFilter) HasSuppLoc() bool {
	if o != nil && !IsNil(o.SuppLoc) {
		return true
	}

	return false
}

// SetSuppLoc gets a reference to the given bool and assigns it to the SuppLoc field.
func (o *IdentityFilter) SetSuppLoc(v bool) {
	o.SuppLoc = &v
}

func (o IdentityFilter) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdentityFilter) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ValSvcId) {
		toSerialize["valSvcId"] = o.ValSvcId
	}
	if !IsNil(o.ValTgtUes) {
		toSerialize["valTgtUes"] = o.ValTgtUes
	}
	if !IsNil(o.SuppLoc) {
		toSerialize["suppLoc"] = o.SuppLoc
	}
	return toSerialize, nil
}

type NullableIdentityFilter struct {
	value *IdentityFilter
	isSet bool
}

func (v NullableIdentityFilter) Get() *IdentityFilter {
	return v.value
}

func (v *NullableIdentityFilter) Set(val *IdentityFilter) {
	v.value = val
	v.isSet = true
}

func (v NullableIdentityFilter) IsSet() bool {
	return v.isSet
}

func (v *NullableIdentityFilter) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdentityFilter(val *IdentityFilter) *NullableIdentityFilter {
	return &NullableIdentityFilter{value: val, isSet: true}
}

func (v NullableIdentityFilter) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdentityFilter) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


