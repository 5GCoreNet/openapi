/*
SS_Events

API for SEAL Events management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_Events

import (
	"encoding/json"
)

// checks if the MonitorEventsReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorEventsReport{}

// MonitorEventsReport List of monitoring and/or analytics events related to VAL UE.
type MonitorEventsReport struct {
	TgtUe ValTargetUe `json:"tgtUe"`
	// List of monitoring and analytics events related to VAL UE.
	Evnts []MonitorEvents `json:"evnts"`
}

// NewMonitorEventsReport instantiates a new MonitorEventsReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorEventsReport(tgtUe ValTargetUe, evnts []MonitorEvents) *MonitorEventsReport {
	this := MonitorEventsReport{}
	this.TgtUe = tgtUe
	this.Evnts = evnts
	return &this
}

// NewMonitorEventsReportWithDefaults instantiates a new MonitorEventsReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorEventsReportWithDefaults() *MonitorEventsReport {
	this := MonitorEventsReport{}
	return &this
}

// GetTgtUe returns the TgtUe field value
func (o *MonitorEventsReport) GetTgtUe() ValTargetUe {
	if o == nil {
		var ret ValTargetUe
		return ret
	}

	return o.TgtUe
}

// GetTgtUeOk returns a tuple with the TgtUe field value
// and a boolean to check if the value has been set.
func (o *MonitorEventsReport) GetTgtUeOk() (*ValTargetUe, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TgtUe, true
}

// SetTgtUe sets field value
func (o *MonitorEventsReport) SetTgtUe(v ValTargetUe) {
	o.TgtUe = v
}

// GetEvnts returns the Evnts field value
func (o *MonitorEventsReport) GetEvnts() []MonitorEvents {
	if o == nil {
		var ret []MonitorEvents
		return ret
	}

	return o.Evnts
}

// GetEvntsOk returns a tuple with the Evnts field value
// and a boolean to check if the value has been set.
func (o *MonitorEventsReport) GetEvntsOk() ([]MonitorEvents, bool) {
	if o == nil {
		return nil, false
	}
	return o.Evnts, true
}

// SetEvnts sets field value
func (o *MonitorEventsReport) SetEvnts(v []MonitorEvents) {
	o.Evnts = v
}

func (o MonitorEventsReport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorEventsReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["tgtUe"] = o.TgtUe
	toSerialize["evnts"] = o.Evnts
	return toSerialize, nil
}

type NullableMonitorEventsReport struct {
	value *MonitorEventsReport
	isSet bool
}

func (v NullableMonitorEventsReport) Get() *MonitorEventsReport {
	return v.value
}

func (v *NullableMonitorEventsReport) Set(val *MonitorEventsReport) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorEventsReport) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorEventsReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorEventsReport(val *MonitorEventsReport) *NullableMonitorEventsReport {
	return &NullableMonitorEventsReport{value: val, isSet: true}
}

func (v NullableMonitorEventsReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorEventsReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
