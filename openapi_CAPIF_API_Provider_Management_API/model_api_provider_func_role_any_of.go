/*
CAPIF_API_Provider_Management_API

API for API provider domain functions management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CAPIF_API_Provider_Management_API

import (
	"encoding/json"
	"fmt"
)

// ApiProviderFuncRoleAnyOf the model 'ApiProviderFuncRoleAnyOf'
type ApiProviderFuncRoleAnyOf string

// List of ApiProviderFuncRole_anyOf
const (
	AEF ApiProviderFuncRoleAnyOf = "AEF"
	APF ApiProviderFuncRoleAnyOf = "APF"
	AMF ApiProviderFuncRoleAnyOf = "AMF"
)

// All allowed values of ApiProviderFuncRoleAnyOf enum
var AllowedApiProviderFuncRoleAnyOfEnumValues = []ApiProviderFuncRoleAnyOf{
	"AEF",
	"APF",
	"AMF",
}

func (v *ApiProviderFuncRoleAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiProviderFuncRoleAnyOf(value)
	for _, existing := range AllowedApiProviderFuncRoleAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiProviderFuncRoleAnyOf", value)
}

// NewApiProviderFuncRoleAnyOfFromValue returns a pointer to a valid ApiProviderFuncRoleAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiProviderFuncRoleAnyOfFromValue(v string) (*ApiProviderFuncRoleAnyOf, error) {
	ev := ApiProviderFuncRoleAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiProviderFuncRoleAnyOf: valid values are %v", v, AllowedApiProviderFuncRoleAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiProviderFuncRoleAnyOf) IsValid() bool {
	for _, existing := range AllowedApiProviderFuncRoleAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiProviderFuncRole_anyOf value
func (v ApiProviderFuncRoleAnyOf) Ptr() *ApiProviderFuncRoleAnyOf {
	return &v
}

type NullableApiProviderFuncRoleAnyOf struct {
	value *ApiProviderFuncRoleAnyOf
	isSet bool
}

func (v NullableApiProviderFuncRoleAnyOf) Get() *ApiProviderFuncRoleAnyOf {
	return v.value
}

func (v *NullableApiProviderFuncRoleAnyOf) Set(val *ApiProviderFuncRoleAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableApiProviderFuncRoleAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableApiProviderFuncRoleAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiProviderFuncRoleAnyOf(val *ApiProviderFuncRoleAnyOf) *NullableApiProviderFuncRoleAnyOf {
	return &NullableApiProviderFuncRoleAnyOf{value: val, isSet: true}
}

func (v NullableApiProviderFuncRoleAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiProviderFuncRoleAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

