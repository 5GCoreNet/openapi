/*
3gpp-monitoring-event

API for Monitoring Event.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MonitoringEvent

import (
	"encoding/json"
	"fmt"
)

// PdnConnectionStatusAnyOf the model 'PdnConnectionStatusAnyOf'
type PdnConnectionStatusAnyOf string

// List of PdnConnectionStatus_anyOf
const (
	CREATED PdnConnectionStatusAnyOf = "CREATED"
	RELEASED PdnConnectionStatusAnyOf = "RELEASED"
)

// All allowed values of PdnConnectionStatusAnyOf enum
var AllowedPdnConnectionStatusAnyOfEnumValues = []PdnConnectionStatusAnyOf{
	"CREATED",
	"RELEASED",
}

func (v *PdnConnectionStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PdnConnectionStatusAnyOf(value)
	for _, existing := range AllowedPdnConnectionStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PdnConnectionStatusAnyOf", value)
}

// NewPdnConnectionStatusAnyOfFromValue returns a pointer to a valid PdnConnectionStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPdnConnectionStatusAnyOfFromValue(v string) (*PdnConnectionStatusAnyOf, error) {
	ev := PdnConnectionStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PdnConnectionStatusAnyOf: valid values are %v", v, AllowedPdnConnectionStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PdnConnectionStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedPdnConnectionStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PdnConnectionStatus_anyOf value
func (v PdnConnectionStatusAnyOf) Ptr() *PdnConnectionStatusAnyOf {
	return &v
}

type NullablePdnConnectionStatusAnyOf struct {
	value *PdnConnectionStatusAnyOf
	isSet bool
}

func (v NullablePdnConnectionStatusAnyOf) Get() *PdnConnectionStatusAnyOf {
	return v.value
}

func (v *NullablePdnConnectionStatusAnyOf) Set(val *PdnConnectionStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePdnConnectionStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePdnConnectionStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePdnConnectionStatusAnyOf(val *PdnConnectionStatusAnyOf) *NullablePdnConnectionStatusAnyOf {
	return &NullablePdnConnectionStatusAnyOf{value: val, isSet: true}
}

func (v NullablePdnConnectionStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePdnConnectionStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

