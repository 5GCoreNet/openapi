/*
3gpp-monitoring-event

API for Monitoring Event.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MonitoringEvent

import (
	"encoding/json"
	"time"
)

// checks if the IdleStatusInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IdleStatusInfo{}

// IdleStatusInfo Represents the information relevant to when the UE transitions into idle mode.
type IdleStatusInfo struct {
	// Unsigned integer identifying a period of time in units of seconds.
	ActiveTime      *int32   `json:"activeTime,omitempty"`
	EdrxCycleLength *float32 `json:"edrxCycleLength,omitempty"`
	// Identifies the number of packets shall be buffered in the serving gateway. It shall be present if the idle status indication is requested by the SCS/AS with \"idleStatusIndication\" in the \"monitoringEventSubscription\" sets to \"true\".
	SuggestedNumberOfDlPackets *int32 `json:"suggestedNumberOfDlPackets,omitempty"`
	// string with format \"date-time\" as defined in OpenAPI.
	IdleStatusTimestamp *time.Time `json:"idleStatusTimestamp,omitempty"`
	// Unsigned integer identifying a period of time in units of seconds.
	PeriodicAUTimer *int32 `json:"periodicAUTimer,omitempty"`
}

// NewIdleStatusInfo instantiates a new IdleStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIdleStatusInfo() *IdleStatusInfo {
	this := IdleStatusInfo{}
	return &this
}

// NewIdleStatusInfoWithDefaults instantiates a new IdleStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIdleStatusInfoWithDefaults() *IdleStatusInfo {
	this := IdleStatusInfo{}
	return &this
}

// GetActiveTime returns the ActiveTime field value if set, zero value otherwise.
func (o *IdleStatusInfo) GetActiveTime() int32 {
	if o == nil || IsNil(o.ActiveTime) {
		var ret int32
		return ret
	}
	return *o.ActiveTime
}

// GetActiveTimeOk returns a tuple with the ActiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleStatusInfo) GetActiveTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ActiveTime) {
		return nil, false
	}
	return o.ActiveTime, true
}

// HasActiveTime returns a boolean if a field has been set.
func (o *IdleStatusInfo) HasActiveTime() bool {
	if o != nil && !IsNil(o.ActiveTime) {
		return true
	}

	return false
}

// SetActiveTime gets a reference to the given int32 and assigns it to the ActiveTime field.
func (o *IdleStatusInfo) SetActiveTime(v int32) {
	o.ActiveTime = &v
}

// GetEdrxCycleLength returns the EdrxCycleLength field value if set, zero value otherwise.
func (o *IdleStatusInfo) GetEdrxCycleLength() float32 {
	if o == nil || IsNil(o.EdrxCycleLength) {
		var ret float32
		return ret
	}
	return *o.EdrxCycleLength
}

// GetEdrxCycleLengthOk returns a tuple with the EdrxCycleLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleStatusInfo) GetEdrxCycleLengthOk() (*float32, bool) {
	if o == nil || IsNil(o.EdrxCycleLength) {
		return nil, false
	}
	return o.EdrxCycleLength, true
}

// HasEdrxCycleLength returns a boolean if a field has been set.
func (o *IdleStatusInfo) HasEdrxCycleLength() bool {
	if o != nil && !IsNil(o.EdrxCycleLength) {
		return true
	}

	return false
}

// SetEdrxCycleLength gets a reference to the given float32 and assigns it to the EdrxCycleLength field.
func (o *IdleStatusInfo) SetEdrxCycleLength(v float32) {
	o.EdrxCycleLength = &v
}

// GetSuggestedNumberOfDlPackets returns the SuggestedNumberOfDlPackets field value if set, zero value otherwise.
func (o *IdleStatusInfo) GetSuggestedNumberOfDlPackets() int32 {
	if o == nil || IsNil(o.SuggestedNumberOfDlPackets) {
		var ret int32
		return ret
	}
	return *o.SuggestedNumberOfDlPackets
}

// GetSuggestedNumberOfDlPacketsOk returns a tuple with the SuggestedNumberOfDlPackets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleStatusInfo) GetSuggestedNumberOfDlPacketsOk() (*int32, bool) {
	if o == nil || IsNil(o.SuggestedNumberOfDlPackets) {
		return nil, false
	}
	return o.SuggestedNumberOfDlPackets, true
}

// HasSuggestedNumberOfDlPackets returns a boolean if a field has been set.
func (o *IdleStatusInfo) HasSuggestedNumberOfDlPackets() bool {
	if o != nil && !IsNil(o.SuggestedNumberOfDlPackets) {
		return true
	}

	return false
}

// SetSuggestedNumberOfDlPackets gets a reference to the given int32 and assigns it to the SuggestedNumberOfDlPackets field.
func (o *IdleStatusInfo) SetSuggestedNumberOfDlPackets(v int32) {
	o.SuggestedNumberOfDlPackets = &v
}

// GetIdleStatusTimestamp returns the IdleStatusTimestamp field value if set, zero value otherwise.
func (o *IdleStatusInfo) GetIdleStatusTimestamp() time.Time {
	if o == nil || IsNil(o.IdleStatusTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.IdleStatusTimestamp
}

// GetIdleStatusTimestampOk returns a tuple with the IdleStatusTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleStatusInfo) GetIdleStatusTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.IdleStatusTimestamp) {
		return nil, false
	}
	return o.IdleStatusTimestamp, true
}

// HasIdleStatusTimestamp returns a boolean if a field has been set.
func (o *IdleStatusInfo) HasIdleStatusTimestamp() bool {
	if o != nil && !IsNil(o.IdleStatusTimestamp) {
		return true
	}

	return false
}

// SetIdleStatusTimestamp gets a reference to the given time.Time and assigns it to the IdleStatusTimestamp field.
func (o *IdleStatusInfo) SetIdleStatusTimestamp(v time.Time) {
	o.IdleStatusTimestamp = &v
}

// GetPeriodicAUTimer returns the PeriodicAUTimer field value if set, zero value otherwise.
func (o *IdleStatusInfo) GetPeriodicAUTimer() int32 {
	if o == nil || IsNil(o.PeriodicAUTimer) {
		var ret int32
		return ret
	}
	return *o.PeriodicAUTimer
}

// GetPeriodicAUTimerOk returns a tuple with the PeriodicAUTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IdleStatusInfo) GetPeriodicAUTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.PeriodicAUTimer) {
		return nil, false
	}
	return o.PeriodicAUTimer, true
}

// HasPeriodicAUTimer returns a boolean if a field has been set.
func (o *IdleStatusInfo) HasPeriodicAUTimer() bool {
	if o != nil && !IsNil(o.PeriodicAUTimer) {
		return true
	}

	return false
}

// SetPeriodicAUTimer gets a reference to the given int32 and assigns it to the PeriodicAUTimer field.
func (o *IdleStatusInfo) SetPeriodicAUTimer(v int32) {
	o.PeriodicAUTimer = &v
}

func (o IdleStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IdleStatusInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ActiveTime) {
		toSerialize["activeTime"] = o.ActiveTime
	}
	if !IsNil(o.EdrxCycleLength) {
		toSerialize["edrxCycleLength"] = o.EdrxCycleLength
	}
	if !IsNil(o.SuggestedNumberOfDlPackets) {
		toSerialize["suggestedNumberOfDlPackets"] = o.SuggestedNumberOfDlPackets
	}
	if !IsNil(o.IdleStatusTimestamp) {
		toSerialize["idleStatusTimestamp"] = o.IdleStatusTimestamp
	}
	if !IsNil(o.PeriodicAUTimer) {
		toSerialize["periodicAUTimer"] = o.PeriodicAUTimer
	}
	return toSerialize, nil
}

type NullableIdleStatusInfo struct {
	value *IdleStatusInfo
	isSet bool
}

func (v NullableIdleStatusInfo) Get() *IdleStatusInfo {
	return v.value
}

func (v *NullableIdleStatusInfo) Set(val *IdleStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIdleStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIdleStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIdleStatusInfo(val *IdleStatusInfo) *NullableIdleStatusInfo {
	return &NullableIdleStatusInfo{value: val, isSet: true}
}

func (v NullableIdleStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIdleStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
