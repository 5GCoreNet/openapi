/*
3gpp-pfd-management

API for PFD management.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_PfdManagement

import (
	"encoding/json"
)

// checks if the UserPlaneLocationArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserPlaneLocationArea{}

// UserPlaneLocationArea Represents location area(s) of the user plane functions which are unable to enforce the provisioned PFD(s) successfully.
type UserPlaneLocationArea struct {
	LocationArea   *LocationArea   `json:"locationArea,omitempty"`
	LocationArea5G *LocationArea5G `json:"locationArea5G,omitempty"`
	// Identifies a list of DNAI which the user plane functions support.
	Dnais []string `json:"dnais,omitempty"`
}

// NewUserPlaneLocationArea instantiates a new UserPlaneLocationArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserPlaneLocationArea() *UserPlaneLocationArea {
	this := UserPlaneLocationArea{}
	return &this
}

// NewUserPlaneLocationAreaWithDefaults instantiates a new UserPlaneLocationArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserPlaneLocationAreaWithDefaults() *UserPlaneLocationArea {
	this := UserPlaneLocationArea{}
	return &this
}

// GetLocationArea returns the LocationArea field value if set, zero value otherwise.
func (o *UserPlaneLocationArea) GetLocationArea() LocationArea {
	if o == nil || IsNil(o.LocationArea) {
		var ret LocationArea
		return ret
	}
	return *o.LocationArea
}

// GetLocationAreaOk returns a tuple with the LocationArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPlaneLocationArea) GetLocationAreaOk() (*LocationArea, bool) {
	if o == nil || IsNil(o.LocationArea) {
		return nil, false
	}
	return o.LocationArea, true
}

// HasLocationArea returns a boolean if a field has been set.
func (o *UserPlaneLocationArea) HasLocationArea() bool {
	if o != nil && !IsNil(o.LocationArea) {
		return true
	}

	return false
}

// SetLocationArea gets a reference to the given LocationArea and assigns it to the LocationArea field.
func (o *UserPlaneLocationArea) SetLocationArea(v LocationArea) {
	o.LocationArea = &v
}

// GetLocationArea5G returns the LocationArea5G field value if set, zero value otherwise.
func (o *UserPlaneLocationArea) GetLocationArea5G() LocationArea5G {
	if o == nil || IsNil(o.LocationArea5G) {
		var ret LocationArea5G
		return ret
	}
	return *o.LocationArea5G
}

// GetLocationArea5GOk returns a tuple with the LocationArea5G field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPlaneLocationArea) GetLocationArea5GOk() (*LocationArea5G, bool) {
	if o == nil || IsNil(o.LocationArea5G) {
		return nil, false
	}
	return o.LocationArea5G, true
}

// HasLocationArea5G returns a boolean if a field has been set.
func (o *UserPlaneLocationArea) HasLocationArea5G() bool {
	if o != nil && !IsNil(o.LocationArea5G) {
		return true
	}

	return false
}

// SetLocationArea5G gets a reference to the given LocationArea5G and assigns it to the LocationArea5G field.
func (o *UserPlaneLocationArea) SetLocationArea5G(v LocationArea5G) {
	o.LocationArea5G = &v
}

// GetDnais returns the Dnais field value if set, zero value otherwise.
func (o *UserPlaneLocationArea) GetDnais() []string {
	if o == nil || IsNil(o.Dnais) {
		var ret []string
		return ret
	}
	return o.Dnais
}

// GetDnaisOk returns a tuple with the Dnais field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserPlaneLocationArea) GetDnaisOk() ([]string, bool) {
	if o == nil || IsNil(o.Dnais) {
		return nil, false
	}
	return o.Dnais, true
}

// HasDnais returns a boolean if a field has been set.
func (o *UserPlaneLocationArea) HasDnais() bool {
	if o != nil && !IsNil(o.Dnais) {
		return true
	}

	return false
}

// SetDnais gets a reference to the given []string and assigns it to the Dnais field.
func (o *UserPlaneLocationArea) SetDnais(v []string) {
	o.Dnais = v
}

func (o UserPlaneLocationArea) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserPlaneLocationArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocationArea) {
		toSerialize["locationArea"] = o.LocationArea
	}
	if !IsNil(o.LocationArea5G) {
		toSerialize["locationArea5G"] = o.LocationArea5G
	}
	if !IsNil(o.Dnais) {
		toSerialize["dnais"] = o.Dnais
	}
	return toSerialize, nil
}

type NullableUserPlaneLocationArea struct {
	value *UserPlaneLocationArea
	isSet bool
}

func (v NullableUserPlaneLocationArea) Get() *UserPlaneLocationArea {
	return v.value
}

func (v *NullableUserPlaneLocationArea) Set(val *UserPlaneLocationArea) {
	v.value = val
	v.isSet = true
}

func (v NullableUserPlaneLocationArea) IsSet() bool {
	return v.isSet
}

func (v *NullableUserPlaneLocationArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserPlaneLocationArea(val *UserPlaneLocationArea) *NullableUserPlaneLocationArea {
	return &NullableUserPlaneLocationArea{value: val, isSet: true}
}

func (v NullableUserPlaneLocationArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserPlaneLocationArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
