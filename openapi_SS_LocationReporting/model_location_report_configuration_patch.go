/*
SS_LocationReporting

API for SEAL Location Reporting Configuration.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_LocationReporting

import (
	"encoding/json"
	"time"
)

// checks if the LocationReportConfigurationPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationReportConfigurationPatch{}

// LocationReportConfigurationPatch Represents the location reporting configuration information patch.
type LocationReportConfigurationPatch struct {
	ValTgtUe *ValTargetUe `json:"valTgtUe,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	MonDur *time.Time `json:"monDur,omitempty"`
	// indicating a time in seconds.
	RepPeriod *int32 `json:"repPeriod,omitempty"`
	Accuracy *Accuracy `json:"accuracy,omitempty"`
}

// NewLocationReportConfigurationPatch instantiates a new LocationReportConfigurationPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationReportConfigurationPatch() *LocationReportConfigurationPatch {
	this := LocationReportConfigurationPatch{}
	return &this
}

// NewLocationReportConfigurationPatchWithDefaults instantiates a new LocationReportConfigurationPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationReportConfigurationPatchWithDefaults() *LocationReportConfigurationPatch {
	this := LocationReportConfigurationPatch{}
	return &this
}

// GetValTgtUe returns the ValTgtUe field value if set, zero value otherwise.
func (o *LocationReportConfigurationPatch) GetValTgtUe() ValTargetUe {
	if o == nil || isNil(o.ValTgtUe) {
		var ret ValTargetUe
		return ret
	}
	return *o.ValTgtUe
}

// GetValTgtUeOk returns a tuple with the ValTgtUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfigurationPatch) GetValTgtUeOk() (*ValTargetUe, bool) {
	if o == nil || isNil(o.ValTgtUe) {
		return nil, false
	}
	return o.ValTgtUe, true
}

// HasValTgtUe returns a boolean if a field has been set.
func (o *LocationReportConfigurationPatch) HasValTgtUe() bool {
	if o != nil && !isNil(o.ValTgtUe) {
		return true
	}

	return false
}

// SetValTgtUe gets a reference to the given ValTargetUe and assigns it to the ValTgtUe field.
func (o *LocationReportConfigurationPatch) SetValTgtUe(v ValTargetUe) {
	o.ValTgtUe = &v
}

// GetMonDur returns the MonDur field value if set, zero value otherwise.
func (o *LocationReportConfigurationPatch) GetMonDur() time.Time {
	if o == nil || isNil(o.MonDur) {
		var ret time.Time
		return ret
	}
	return *o.MonDur
}

// GetMonDurOk returns a tuple with the MonDur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfigurationPatch) GetMonDurOk() (*time.Time, bool) {
	if o == nil || isNil(o.MonDur) {
		return nil, false
	}
	return o.MonDur, true
}

// HasMonDur returns a boolean if a field has been set.
func (o *LocationReportConfigurationPatch) HasMonDur() bool {
	if o != nil && !isNil(o.MonDur) {
		return true
	}

	return false
}

// SetMonDur gets a reference to the given time.Time and assigns it to the MonDur field.
func (o *LocationReportConfigurationPatch) SetMonDur(v time.Time) {
	o.MonDur = &v
}

// GetRepPeriod returns the RepPeriod field value if set, zero value otherwise.
func (o *LocationReportConfigurationPatch) GetRepPeriod() int32 {
	if o == nil || isNil(o.RepPeriod) {
		var ret int32
		return ret
	}
	return *o.RepPeriod
}

// GetRepPeriodOk returns a tuple with the RepPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfigurationPatch) GetRepPeriodOk() (*int32, bool) {
	if o == nil || isNil(o.RepPeriod) {
		return nil, false
	}
	return o.RepPeriod, true
}

// HasRepPeriod returns a boolean if a field has been set.
func (o *LocationReportConfigurationPatch) HasRepPeriod() bool {
	if o != nil && !isNil(o.RepPeriod) {
		return true
	}

	return false
}

// SetRepPeriod gets a reference to the given int32 and assigns it to the RepPeriod field.
func (o *LocationReportConfigurationPatch) SetRepPeriod(v int32) {
	o.RepPeriod = &v
}

// GetAccuracy returns the Accuracy field value if set, zero value otherwise.
func (o *LocationReportConfigurationPatch) GetAccuracy() Accuracy {
	if o == nil || isNil(o.Accuracy) {
		var ret Accuracy
		return ret
	}
	return *o.Accuracy
}

// GetAccuracyOk returns a tuple with the Accuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfigurationPatch) GetAccuracyOk() (*Accuracy, bool) {
	if o == nil || isNil(o.Accuracy) {
		return nil, false
	}
	return o.Accuracy, true
}

// HasAccuracy returns a boolean if a field has been set.
func (o *LocationReportConfigurationPatch) HasAccuracy() bool {
	if o != nil && !isNil(o.Accuracy) {
		return true
	}

	return false
}

// SetAccuracy gets a reference to the given Accuracy and assigns it to the Accuracy field.
func (o *LocationReportConfigurationPatch) SetAccuracy(v Accuracy) {
	o.Accuracy = &v
}

func (o LocationReportConfigurationPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationReportConfigurationPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ValTgtUe) {
		toSerialize["valTgtUe"] = o.ValTgtUe
	}
	if !isNil(o.MonDur) {
		toSerialize["monDur"] = o.MonDur
	}
	if !isNil(o.RepPeriod) {
		toSerialize["repPeriod"] = o.RepPeriod
	}
	if !isNil(o.Accuracy) {
		toSerialize["accuracy"] = o.Accuracy
	}
	return toSerialize, nil
}

type NullableLocationReportConfigurationPatch struct {
	value *LocationReportConfigurationPatch
	isSet bool
}

func (v NullableLocationReportConfigurationPatch) Get() *LocationReportConfigurationPatch {
	return v.value
}

func (v *NullableLocationReportConfigurationPatch) Set(val *LocationReportConfigurationPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationReportConfigurationPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationReportConfigurationPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationReportConfigurationPatch(val *LocationReportConfigurationPatch) *NullableLocationReportConfigurationPatch {
	return &NullableLocationReportConfigurationPatch{value: val, isSet: true}
}

func (v NullableLocationReportConfigurationPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationReportConfigurationPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


