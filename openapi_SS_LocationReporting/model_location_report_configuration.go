/*
SS_LocationReporting

API for SEAL Location Reporting Configuration.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_LocationReporting

import (
	"encoding/json"
	"time"
)

// checks if the LocationReportConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationReportConfiguration{}

// LocationReportConfiguration Represents the location reporting configuration information.
type LocationReportConfiguration struct {
	ValServerId string `json:"valServerId"`
	ValTgtUe ValTargetUe `json:"valTgtUe"`
	ImmRep *bool `json:"immRep,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	MonDur *time.Time `json:"monDur,omitempty"`
	// indicating a time in seconds.
	RepPeriod *int32 `json:"repPeriod,omitempty"`
	Accuracy *Accuracy `json:"accuracy,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat *string `json:"suppFeat,omitempty"`
}

// NewLocationReportConfiguration instantiates a new LocationReportConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationReportConfiguration(valServerId string, valTgtUe ValTargetUe) *LocationReportConfiguration {
	this := LocationReportConfiguration{}
	this.ValServerId = valServerId
	this.ValTgtUe = valTgtUe
	return &this
}

// NewLocationReportConfigurationWithDefaults instantiates a new LocationReportConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationReportConfigurationWithDefaults() *LocationReportConfiguration {
	this := LocationReportConfiguration{}
	return &this
}

// GetValServerId returns the ValServerId field value
func (o *LocationReportConfiguration) GetValServerId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ValServerId
}

// GetValServerIdOk returns a tuple with the ValServerId field value
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetValServerIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValServerId, true
}

// SetValServerId sets field value
func (o *LocationReportConfiguration) SetValServerId(v string) {
	o.ValServerId = v
}

// GetValTgtUe returns the ValTgtUe field value
func (o *LocationReportConfiguration) GetValTgtUe() ValTargetUe {
	if o == nil {
		var ret ValTargetUe
		return ret
	}

	return o.ValTgtUe
}

// GetValTgtUeOk returns a tuple with the ValTgtUe field value
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetValTgtUeOk() (*ValTargetUe, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValTgtUe, true
}

// SetValTgtUe sets field value
func (o *LocationReportConfiguration) SetValTgtUe(v ValTargetUe) {
	o.ValTgtUe = v
}

// GetImmRep returns the ImmRep field value if set, zero value otherwise.
func (o *LocationReportConfiguration) GetImmRep() bool {
	if o == nil || IsNil(o.ImmRep) {
		var ret bool
		return ret
	}
	return *o.ImmRep
}

// GetImmRepOk returns a tuple with the ImmRep field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetImmRepOk() (*bool, bool) {
	if o == nil || IsNil(o.ImmRep) {
		return nil, false
	}
	return o.ImmRep, true
}

// HasImmRep returns a boolean if a field has been set.
func (o *LocationReportConfiguration) HasImmRep() bool {
	if o != nil && !IsNil(o.ImmRep) {
		return true
	}

	return false
}

// SetImmRep gets a reference to the given bool and assigns it to the ImmRep field.
func (o *LocationReportConfiguration) SetImmRep(v bool) {
	o.ImmRep = &v
}

// GetMonDur returns the MonDur field value if set, zero value otherwise.
func (o *LocationReportConfiguration) GetMonDur() time.Time {
	if o == nil || IsNil(o.MonDur) {
		var ret time.Time
		return ret
	}
	return *o.MonDur
}

// GetMonDurOk returns a tuple with the MonDur field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetMonDurOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MonDur) {
		return nil, false
	}
	return o.MonDur, true
}

// HasMonDur returns a boolean if a field has been set.
func (o *LocationReportConfiguration) HasMonDur() bool {
	if o != nil && !IsNil(o.MonDur) {
		return true
	}

	return false
}

// SetMonDur gets a reference to the given time.Time and assigns it to the MonDur field.
func (o *LocationReportConfiguration) SetMonDur(v time.Time) {
	o.MonDur = &v
}

// GetRepPeriod returns the RepPeriod field value if set, zero value otherwise.
func (o *LocationReportConfiguration) GetRepPeriod() int32 {
	if o == nil || IsNil(o.RepPeriod) {
		var ret int32
		return ret
	}
	return *o.RepPeriod
}

// GetRepPeriodOk returns a tuple with the RepPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetRepPeriodOk() (*int32, bool) {
	if o == nil || IsNil(o.RepPeriod) {
		return nil, false
	}
	return o.RepPeriod, true
}

// HasRepPeriod returns a boolean if a field has been set.
func (o *LocationReportConfiguration) HasRepPeriod() bool {
	if o != nil && !IsNil(o.RepPeriod) {
		return true
	}

	return false
}

// SetRepPeriod gets a reference to the given int32 and assigns it to the RepPeriod field.
func (o *LocationReportConfiguration) SetRepPeriod(v int32) {
	o.RepPeriod = &v
}

// GetAccuracy returns the Accuracy field value if set, zero value otherwise.
func (o *LocationReportConfiguration) GetAccuracy() Accuracy {
	if o == nil || IsNil(o.Accuracy) {
		var ret Accuracy
		return ret
	}
	return *o.Accuracy
}

// GetAccuracyOk returns a tuple with the Accuracy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetAccuracyOk() (*Accuracy, bool) {
	if o == nil || IsNil(o.Accuracy) {
		return nil, false
	}
	return o.Accuracy, true
}

// HasAccuracy returns a boolean if a field has been set.
func (o *LocationReportConfiguration) HasAccuracy() bool {
	if o != nil && !IsNil(o.Accuracy) {
		return true
	}

	return false
}

// SetAccuracy gets a reference to the given Accuracy and assigns it to the Accuracy field.
func (o *LocationReportConfiguration) SetAccuracy(v Accuracy) {
	o.Accuracy = &v
}

// GetSuppFeat returns the SuppFeat field value if set, zero value otherwise.
func (o *LocationReportConfiguration) GetSuppFeat() string {
	if o == nil || IsNil(o.SuppFeat) {
		var ret string
		return ret
	}
	return *o.SuppFeat
}

// GetSuppFeatOk returns a tuple with the SuppFeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportConfiguration) GetSuppFeatOk() (*string, bool) {
	if o == nil || IsNil(o.SuppFeat) {
		return nil, false
	}
	return o.SuppFeat, true
}

// HasSuppFeat returns a boolean if a field has been set.
func (o *LocationReportConfiguration) HasSuppFeat() bool {
	if o != nil && !IsNil(o.SuppFeat) {
		return true
	}

	return false
}

// SetSuppFeat gets a reference to the given string and assigns it to the SuppFeat field.
func (o *LocationReportConfiguration) SetSuppFeat(v string) {
	o.SuppFeat = &v
}

func (o LocationReportConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationReportConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["valServerId"] = o.ValServerId
	toSerialize["valTgtUe"] = o.ValTgtUe
	if !IsNil(o.ImmRep) {
		toSerialize["immRep"] = o.ImmRep
	}
	if !IsNil(o.MonDur) {
		toSerialize["monDur"] = o.MonDur
	}
	if !IsNil(o.RepPeriod) {
		toSerialize["repPeriod"] = o.RepPeriod
	}
	if !IsNil(o.Accuracy) {
		toSerialize["accuracy"] = o.Accuracy
	}
	if !IsNil(o.SuppFeat) {
		toSerialize["suppFeat"] = o.SuppFeat
	}
	return toSerialize, nil
}

type NullableLocationReportConfiguration struct {
	value *LocationReportConfiguration
	isSet bool
}

func (v NullableLocationReportConfiguration) Get() *LocationReportConfiguration {
	return v.value
}

func (v *NullableLocationReportConfiguration) Set(val *LocationReportConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationReportConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationReportConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationReportConfiguration(val *LocationReportConfiguration) *NullableLocationReportConfiguration {
	return &NullableLocationReportConfiguration{value: val, isSet: true}
}

func (v NullableLocationReportConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationReportConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


