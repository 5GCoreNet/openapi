/*
3gpp-mbs-us

API for MBS User Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MBSUserService

import (
	"encoding/json"
	"fmt"
)

// ServiceAnnouncementModeAnyOf the model 'ServiceAnnouncementModeAnyOf'
type ServiceAnnouncementModeAnyOf string

// List of ServiceAnnouncementMode_anyOf
const (
	VIA_MBS_5 ServiceAnnouncementModeAnyOf = "VIA_MBS_5"
	VIA_MBS_DISTRIBUTION_SESSION ServiceAnnouncementModeAnyOf = "VIA_MBS_DISTRIBUTION_SESSION"
	PASSED_BACK ServiceAnnouncementModeAnyOf = "PASSED_BACK"
)

// All allowed values of ServiceAnnouncementModeAnyOf enum
var AllowedServiceAnnouncementModeAnyOfEnumValues = []ServiceAnnouncementModeAnyOf{
	"VIA_MBS_5",
	"VIA_MBS_DISTRIBUTION_SESSION",
	"PASSED_BACK",
}

func (v *ServiceAnnouncementModeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ServiceAnnouncementModeAnyOf(value)
	for _, existing := range AllowedServiceAnnouncementModeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ServiceAnnouncementModeAnyOf", value)
}

// NewServiceAnnouncementModeAnyOfFromValue returns a pointer to a valid ServiceAnnouncementModeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewServiceAnnouncementModeAnyOfFromValue(v string) (*ServiceAnnouncementModeAnyOf, error) {
	ev := ServiceAnnouncementModeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ServiceAnnouncementModeAnyOf: valid values are %v", v, AllowedServiceAnnouncementModeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ServiceAnnouncementModeAnyOf) IsValid() bool {
	for _, existing := range AllowedServiceAnnouncementModeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ServiceAnnouncementMode_anyOf value
func (v ServiceAnnouncementModeAnyOf) Ptr() *ServiceAnnouncementModeAnyOf {
	return &v
}

type NullableServiceAnnouncementModeAnyOf struct {
	value *ServiceAnnouncementModeAnyOf
	isSet bool
}

func (v NullableServiceAnnouncementModeAnyOf) Get() *ServiceAnnouncementModeAnyOf {
	return v.value
}

func (v *NullableServiceAnnouncementModeAnyOf) Set(val *ServiceAnnouncementModeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAnnouncementModeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAnnouncementModeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAnnouncementModeAnyOf(val *ServiceAnnouncementModeAnyOf) *NullableServiceAnnouncementModeAnyOf {
	return &NullableServiceAnnouncementModeAnyOf{value: val, isSet: true}
}

func (v NullableServiceAnnouncementModeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAnnouncementModeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

