/*
M1_ProvisioningSessions

5GMS AF M1 Provisioning Sessions API Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_M1_ProvisioningSessions

import (
	"encoding/json"
)

// checks if the ProvisioningSession type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProvisioningSession{}

// ProvisioningSession A representation of a Provisioning Session.
type ProvisioningSession struct {
	// String chosen by the 5GMS AF to serve as an identifier in a resource URI.
	ProvisioningSessionId string `json:"provisioningSessionId"`
	ProvisioningSessionType ProvisioningSessionType `json:"provisioningSessionType"`
	// Contains an identity of an application service provider.
	AspId *string `json:"aspId,omitempty"`
	// String providing an application identifier.
	ExternalApplicationId string `json:"externalApplicationId"`
	ServerCertificateIds []string `json:"serverCertificateIds,omitempty"`
	ContentPreparationTemplateIds []string `json:"contentPreparationTemplateIds,omitempty"`
	MetricsReportingConfigurationIds []string `json:"metricsReportingConfigurationIds,omitempty"`
	PolicyTemplateIds []string `json:"policyTemplateIds,omitempty"`
	EdgeResourcesConfigurationIds []string `json:"edgeResourcesConfigurationIds,omitempty"`
	EventDataProcessingConfigurationIds []string `json:"eventDataProcessingConfigurationIds,omitempty"`
}

// NewProvisioningSession instantiates a new ProvisioningSession object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProvisioningSession(provisioningSessionId string, provisioningSessionType ProvisioningSessionType, externalApplicationId string) *ProvisioningSession {
	this := ProvisioningSession{}
	this.ProvisioningSessionId = provisioningSessionId
	this.ProvisioningSessionType = provisioningSessionType
	this.ExternalApplicationId = externalApplicationId
	return &this
}

// NewProvisioningSessionWithDefaults instantiates a new ProvisioningSession object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProvisioningSessionWithDefaults() *ProvisioningSession {
	this := ProvisioningSession{}
	return &this
}

// GetProvisioningSessionId returns the ProvisioningSessionId field value
func (o *ProvisioningSession) GetProvisioningSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProvisioningSessionId
}

// GetProvisioningSessionIdOk returns a tuple with the ProvisioningSessionId field value
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetProvisioningSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningSessionId, true
}

// SetProvisioningSessionId sets field value
func (o *ProvisioningSession) SetProvisioningSessionId(v string) {
	o.ProvisioningSessionId = v
}

// GetProvisioningSessionType returns the ProvisioningSessionType field value
func (o *ProvisioningSession) GetProvisioningSessionType() ProvisioningSessionType {
	if o == nil {
		var ret ProvisioningSessionType
		return ret
	}

	return o.ProvisioningSessionType
}

// GetProvisioningSessionTypeOk returns a tuple with the ProvisioningSessionType field value
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetProvisioningSessionTypeOk() (*ProvisioningSessionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProvisioningSessionType, true
}

// SetProvisioningSessionType sets field value
func (o *ProvisioningSession) SetProvisioningSessionType(v ProvisioningSessionType) {
	o.ProvisioningSessionType = v
}

// GetAspId returns the AspId field value if set, zero value otherwise.
func (o *ProvisioningSession) GetAspId() string {
	if o == nil || isNil(o.AspId) {
		var ret string
		return ret
	}
	return *o.AspId
}

// GetAspIdOk returns a tuple with the AspId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetAspIdOk() (*string, bool) {
	if o == nil || isNil(o.AspId) {
		return nil, false
	}
	return o.AspId, true
}

// HasAspId returns a boolean if a field has been set.
func (o *ProvisioningSession) HasAspId() bool {
	if o != nil && !isNil(o.AspId) {
		return true
	}

	return false
}

// SetAspId gets a reference to the given string and assigns it to the AspId field.
func (o *ProvisioningSession) SetAspId(v string) {
	o.AspId = &v
}

// GetExternalApplicationId returns the ExternalApplicationId field value
func (o *ProvisioningSession) GetExternalApplicationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalApplicationId
}

// GetExternalApplicationIdOk returns a tuple with the ExternalApplicationId field value
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetExternalApplicationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalApplicationId, true
}

// SetExternalApplicationId sets field value
func (o *ProvisioningSession) SetExternalApplicationId(v string) {
	o.ExternalApplicationId = v
}

// GetServerCertificateIds returns the ServerCertificateIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetServerCertificateIds() []string {
	if o == nil || isNil(o.ServerCertificateIds) {
		var ret []string
		return ret
	}
	return o.ServerCertificateIds
}

// GetServerCertificateIdsOk returns a tuple with the ServerCertificateIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetServerCertificateIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ServerCertificateIds) {
		return nil, false
	}
	return o.ServerCertificateIds, true
}

// HasServerCertificateIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasServerCertificateIds() bool {
	if o != nil && !isNil(o.ServerCertificateIds) {
		return true
	}

	return false
}

// SetServerCertificateIds gets a reference to the given []string and assigns it to the ServerCertificateIds field.
func (o *ProvisioningSession) SetServerCertificateIds(v []string) {
	o.ServerCertificateIds = v
}

// GetContentPreparationTemplateIds returns the ContentPreparationTemplateIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetContentPreparationTemplateIds() []string {
	if o == nil || isNil(o.ContentPreparationTemplateIds) {
		var ret []string
		return ret
	}
	return o.ContentPreparationTemplateIds
}

// GetContentPreparationTemplateIdsOk returns a tuple with the ContentPreparationTemplateIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetContentPreparationTemplateIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ContentPreparationTemplateIds) {
		return nil, false
	}
	return o.ContentPreparationTemplateIds, true
}

// HasContentPreparationTemplateIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasContentPreparationTemplateIds() bool {
	if o != nil && !isNil(o.ContentPreparationTemplateIds) {
		return true
	}

	return false
}

// SetContentPreparationTemplateIds gets a reference to the given []string and assigns it to the ContentPreparationTemplateIds field.
func (o *ProvisioningSession) SetContentPreparationTemplateIds(v []string) {
	o.ContentPreparationTemplateIds = v
}

// GetMetricsReportingConfigurationIds returns the MetricsReportingConfigurationIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetMetricsReportingConfigurationIds() []string {
	if o == nil || isNil(o.MetricsReportingConfigurationIds) {
		var ret []string
		return ret
	}
	return o.MetricsReportingConfigurationIds
}

// GetMetricsReportingConfigurationIdsOk returns a tuple with the MetricsReportingConfigurationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetMetricsReportingConfigurationIdsOk() ([]string, bool) {
	if o == nil || isNil(o.MetricsReportingConfigurationIds) {
		return nil, false
	}
	return o.MetricsReportingConfigurationIds, true
}

// HasMetricsReportingConfigurationIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasMetricsReportingConfigurationIds() bool {
	if o != nil && !isNil(o.MetricsReportingConfigurationIds) {
		return true
	}

	return false
}

// SetMetricsReportingConfigurationIds gets a reference to the given []string and assigns it to the MetricsReportingConfigurationIds field.
func (o *ProvisioningSession) SetMetricsReportingConfigurationIds(v []string) {
	o.MetricsReportingConfigurationIds = v
}

// GetPolicyTemplateIds returns the PolicyTemplateIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetPolicyTemplateIds() []string {
	if o == nil || isNil(o.PolicyTemplateIds) {
		var ret []string
		return ret
	}
	return o.PolicyTemplateIds
}

// GetPolicyTemplateIdsOk returns a tuple with the PolicyTemplateIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetPolicyTemplateIdsOk() ([]string, bool) {
	if o == nil || isNil(o.PolicyTemplateIds) {
		return nil, false
	}
	return o.PolicyTemplateIds, true
}

// HasPolicyTemplateIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasPolicyTemplateIds() bool {
	if o != nil && !isNil(o.PolicyTemplateIds) {
		return true
	}

	return false
}

// SetPolicyTemplateIds gets a reference to the given []string and assigns it to the PolicyTemplateIds field.
func (o *ProvisioningSession) SetPolicyTemplateIds(v []string) {
	o.PolicyTemplateIds = v
}

// GetEdgeResourcesConfigurationIds returns the EdgeResourcesConfigurationIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetEdgeResourcesConfigurationIds() []string {
	if o == nil || isNil(o.EdgeResourcesConfigurationIds) {
		var ret []string
		return ret
	}
	return o.EdgeResourcesConfigurationIds
}

// GetEdgeResourcesConfigurationIdsOk returns a tuple with the EdgeResourcesConfigurationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetEdgeResourcesConfigurationIdsOk() ([]string, bool) {
	if o == nil || isNil(o.EdgeResourcesConfigurationIds) {
		return nil, false
	}
	return o.EdgeResourcesConfigurationIds, true
}

// HasEdgeResourcesConfigurationIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasEdgeResourcesConfigurationIds() bool {
	if o != nil && !isNil(o.EdgeResourcesConfigurationIds) {
		return true
	}

	return false
}

// SetEdgeResourcesConfigurationIds gets a reference to the given []string and assigns it to the EdgeResourcesConfigurationIds field.
func (o *ProvisioningSession) SetEdgeResourcesConfigurationIds(v []string) {
	o.EdgeResourcesConfigurationIds = v
}

// GetEventDataProcessingConfigurationIds returns the EventDataProcessingConfigurationIds field value if set, zero value otherwise.
func (o *ProvisioningSession) GetEventDataProcessingConfigurationIds() []string {
	if o == nil || isNil(o.EventDataProcessingConfigurationIds) {
		var ret []string
		return ret
	}
	return o.EventDataProcessingConfigurationIds
}

// GetEventDataProcessingConfigurationIdsOk returns a tuple with the EventDataProcessingConfigurationIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProvisioningSession) GetEventDataProcessingConfigurationIdsOk() ([]string, bool) {
	if o == nil || isNil(o.EventDataProcessingConfigurationIds) {
		return nil, false
	}
	return o.EventDataProcessingConfigurationIds, true
}

// HasEventDataProcessingConfigurationIds returns a boolean if a field has been set.
func (o *ProvisioningSession) HasEventDataProcessingConfigurationIds() bool {
	if o != nil && !isNil(o.EventDataProcessingConfigurationIds) {
		return true
	}

	return false
}

// SetEventDataProcessingConfigurationIds gets a reference to the given []string and assigns it to the EventDataProcessingConfigurationIds field.
func (o *ProvisioningSession) SetEventDataProcessingConfigurationIds(v []string) {
	o.EventDataProcessingConfigurationIds = v
}

func (o ProvisioningSession) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProvisioningSession) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provisioningSessionId"] = o.ProvisioningSessionId
	toSerialize["provisioningSessionType"] = o.ProvisioningSessionType
	if !isNil(o.AspId) {
		toSerialize["aspId"] = o.AspId
	}
	toSerialize["externalApplicationId"] = o.ExternalApplicationId
	if !isNil(o.ServerCertificateIds) {
		toSerialize["serverCertificateIds"] = o.ServerCertificateIds
	}
	if !isNil(o.ContentPreparationTemplateIds) {
		toSerialize["contentPreparationTemplateIds"] = o.ContentPreparationTemplateIds
	}
	if !isNil(o.MetricsReportingConfigurationIds) {
		toSerialize["metricsReportingConfigurationIds"] = o.MetricsReportingConfigurationIds
	}
	if !isNil(o.PolicyTemplateIds) {
		toSerialize["policyTemplateIds"] = o.PolicyTemplateIds
	}
	if !isNil(o.EdgeResourcesConfigurationIds) {
		toSerialize["edgeResourcesConfigurationIds"] = o.EdgeResourcesConfigurationIds
	}
	if !isNil(o.EventDataProcessingConfigurationIds) {
		toSerialize["eventDataProcessingConfigurationIds"] = o.EventDataProcessingConfigurationIds
	}
	return toSerialize, nil
}

type NullableProvisioningSession struct {
	value *ProvisioningSession
	isSet bool
}

func (v NullableProvisioningSession) Get() *ProvisioningSession {
	return v.value
}

func (v *NullableProvisioningSession) Set(val *ProvisioningSession) {
	v.value = val
	v.isSet = true
}

func (v NullableProvisioningSession) IsSet() bool {
	return v.isSet
}

func (v *NullableProvisioningSession) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProvisioningSession(val *ProvisioningSession) *NullableProvisioningSession {
	return &NullableProvisioningSession{value: val, isSet: true}
}

func (v NullableProvisioningSession) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProvisioningSession) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


