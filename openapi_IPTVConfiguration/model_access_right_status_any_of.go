/*
3gpp-iptvconfiguration

API for IPTV configuration.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_IPTVConfiguration

import (
	"encoding/json"
	"fmt"
)

// AccessRightStatusAnyOf the model 'AccessRightStatusAnyOf'
type AccessRightStatusAnyOf string

// List of AccessRightStatus_anyOf
const (
	FULLY_ALLOWED AccessRightStatusAnyOf = "FULLY_ALLOWED"
	PREVIEW_ALLOWED AccessRightStatusAnyOf = "PREVIEW_ALLOWED"
	NO_ALLOWED AccessRightStatusAnyOf = "NO_ALLOWED"
)

// All allowed values of AccessRightStatusAnyOf enum
var AllowedAccessRightStatusAnyOfEnumValues = []AccessRightStatusAnyOf{
	"FULLY_ALLOWED",
	"PREVIEW_ALLOWED",
	"NO_ALLOWED",
}

func (v *AccessRightStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AccessRightStatusAnyOf(value)
	for _, existing := range AllowedAccessRightStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AccessRightStatusAnyOf", value)
}

// NewAccessRightStatusAnyOfFromValue returns a pointer to a valid AccessRightStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAccessRightStatusAnyOfFromValue(v string) (*AccessRightStatusAnyOf, error) {
	ev := AccessRightStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AccessRightStatusAnyOf: valid values are %v", v, AllowedAccessRightStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AccessRightStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedAccessRightStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AccessRightStatus_anyOf value
func (v AccessRightStatusAnyOf) Ptr() *AccessRightStatusAnyOf {
	return &v
}

type NullableAccessRightStatusAnyOf struct {
	value *AccessRightStatusAnyOf
	isSet bool
}

func (v NullableAccessRightStatusAnyOf) Get() *AccessRightStatusAnyOf {
	return v.value
}

func (v *NullableAccessRightStatusAnyOf) Set(val *AccessRightStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessRightStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessRightStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessRightStatusAnyOf(val *AccessRightStatusAnyOf) *NullableAccessRightStatusAnyOf {
	return &NullableAccessRightStatusAnyOf{value: val, isSet: true}
}

func (v NullableAccessRightStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessRightStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

