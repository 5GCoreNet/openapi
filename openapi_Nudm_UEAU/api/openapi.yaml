openapi: 3.0.0
info:
  description: "UDM UE Authentication Service.  \nÂ© 2022, 3GPP Organizational Partners\
    \ (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  title: Nudm_UEAU
  version: 1.3.0-alpha.1
externalDocs:
  description: "3GPP TS 29.503 Unified Data Management Services, version 18.0.0"
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.503/
servers:
- url: "{apiRoot}/nudm-ueau/v1"
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in clause 4.4 of 3GPP TS 29.501.
security:
- oAuth2ClientCredentials:
  - nudm-ueau
- {}
paths:
  /{supiOrSuci}/security-information/generate-auth-data:
    post:
      operationId: GenerateAuthData
      parameters:
      - description: SUPI or SUCI of the user
        explode: false
        in: path
        name: supiOrSuci
        required: true
        schema:
          $ref: '#/components/schemas/SupiOrSuci'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationInfoResult'
          description: Expected response to a valid request
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:security-information:generate-auth-data:invoke
      summary: Generate authentication data for the UE
      tags:
      - Generate Auth Data
  /{supiOrSuci}/security-information-rg:
    get:
      operationId: GetRgAuthData
      parameters:
      - description: SUPI or SUCI of the user
        explode: false
        in: path
        name: supiOrSuci
        required: true
        schema:
          $ref: '#/components/schemas/SupiOrSuci'
        style: simple
      - description: Authenticated indication
        explode: true
        in: query
        name: authenticated-ind
        required: true
        schema:
          $ref: '#/components/schemas/AuthenticatedInd'
        style: form
      - description: Supported Features
        explode: true
        in: query
        name: supported-features
        required: false
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
        style: form
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/PlmnId'
        description: serving PLMN ID
        in: query
        name: plmn-id
        required: false
      - description: "Validator for conditional requests, as described in RFC 7232,\
          \ 3.2"
        explode: false
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
        style: simple
      - description: "Validator for conditional requests, as described in RFC 7232,\
          \ 3.3"
        explode: false
        in: header
        name: If-Modified-Since
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RgAuthCtx'
          description: Expected response to a valid request
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          description: 406 Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:security-information-rg:read
      summary: Get authentication data for the FN-RG
      tags:
      - Get Auth Data for FN-RG
  /{supi}/auth-events:
    post:
      operationId: ConfirmAuth
      parameters:
      - description: SUPI of the user
        explode: false
        in: path
        name: supi
        required: true
        schema:
          $ref: '#/components/schemas/Supi'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthEvent'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthEvent'
          description: Expected response to a valid request
          headers:
            Location:
              description: "Contains the URI of the newly created resource, according\
                \ to the structure: {apiRoot}/nudm-ueau/v1/{supi}/auth-events/{authEventId}"
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:auth-events:create
      summary: Create a new confirmation event
      tags:
      - Confirm Auth
  /{supi}/hss-security-information/{hssAuthType}/generate-av:
    post:
      operationId: GenerateAv
      parameters:
      - description: SUPI of the user
        explode: false
        in: path
        name: supi
        required: true
        schema:
          $ref: '#/components/schemas/Supi'
        style: simple
      - description: Type of AV requested by HSS
        explode: false
        in: path
        name: hssAuthType
        required: true
        schema:
          $ref: '#/components/schemas/HssAuthTypeInUri'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HssAuthenticationInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HssAuthenticationInfoResult'
          description: Expected response to a valid request
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:hss-security-information:generate-av:invoke
      summary: Generate authentication data for the UE in EPS or IMS domain
      tags:
      - Generate HSS Authentication Vectors
  /{supi}/auth-events/{authEventId}:
    put:
      operationId: DeleteAuth
      parameters:
      - description: SUPI of the user
        explode: false
        in: path
        name: supi
        required: true
        schema:
          $ref: '#/components/schemas/Supi'
        style: simple
      - description: authEvent Id
        explode: false
        in: path
        name: authEventId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthEvent'
        required: true
      responses:
        "204":
          description: Expected response to a successful authentication result removal
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:auth-event-id:modify
      summary: Deletes the authentication result in the UDM
      tags:
      - Delete Auth
  /{supi}/gba-security-information/generate-av:
    post:
      operationId: GenerateGbaAv
      parameters:
      - description: SUPI of the user
        explode: false
        in: path
        name: supi
        required: true
        schema:
          $ref: '#/components/schemas/Supi'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GbaAuthenticationInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GbaAuthenticationInfoResult'
          description: Expected response to a valid request
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      security:
      - {}
      - oAuth2ClientCredentials:
        - nudm-ueau
      - oAuth2ClientCredentials:
        - nudm-ueau
        - nudm-ueau:gba-security-information:generate-av:invoke
      summary: Generate authentication data for the UE in GBA domain
      tags:
      - Generate GBA Authentication Vectors
  /{supiOrSuci}/prose-security-information/generate-av:
    post:
      operationId: GenerateProseAV
      parameters:
      - description: SUPI or SUCI of the user
        explode: false
        in: path
        name: supiOrSuci
        required: true
        schema:
          $ref: '#/components/schemas/SupiOrSuci'
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProSeAuthenticationInfoRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProSeAuthenticationInfoResult'
          description: Expected response to a valid request
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "501":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Implemented
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Unexpected error
      summary: Generate authentication data for ProSe
      tags:
      - Generate ProSe Authentication Vectors
components:
  responses:
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    "411":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Length Required
    "413":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Payload Too Large
    "415":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unsupported Media Type
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Too Many Requests
    "500":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    "501":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Implemented
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad Gateway
    "503":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    "406":
      description: 406 Not Acceptable
    default:
      description: Generic Error
  schemas:
    AuthenticationInfoRequest:
      example:
        disasterRoamingInd: false
        supportedFeatures: supportedFeatures
        servingNetworkName: servingNetworkName
        resynchronizationInfo:
          rand: rand
          auts: auts
        nswoInd: false
        ausfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        cellCagInfo:
        - null
        - null
        n5gcInd: false
      properties:
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        servingNetworkName:
          pattern: "^(5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org(:[A-F0-9]{11})?)|5G:NSWO$"
          type: string
        resynchronizationInfo:
          $ref: '#/components/schemas/ResynchronizationInfo'
        ausfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        cellCagInfo:
          items:
            $ref: '#/components/schemas/CagId'
          minItems: 1
          type: array
        n5gcInd:
          default: false
          type: boolean
        nswoInd:
          default: false
          type: boolean
        disasterRoamingInd:
          default: false
          type: boolean
      required:
      - ausfInstanceId
      - servingNetworkName
      type: object
    AuthenticationInfoResult:
      example:
        akmaInd: false
        supportedFeatures: supportedFeatures
        routingId: routingId
        pvsInfo:
        - ipv4Addresses:
          - 198.51.100.1
          - 198.51.100.1
          ipv6Addresses:
          - 2001:db8:85a3::8a2e:370:7334
          - 2001:db8:85a3::8a2e:370:7334
          fqdnList:
          - null
          - null
        - ipv4Addresses:
          - 198.51.100.1
          - 198.51.100.1
          ipv6Addresses:
          - 2001:db8:85a3::8a2e:370:7334
          - 2001:db8:85a3::8a2e:370:7334
          fqdnList:
          - null
          - null
        authenticationVector: null
        authType: null
        supi: supi
        authAaa: false
      properties:
        authType:
          $ref: '#/components/schemas/AuthType'
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        authenticationVector:
          $ref: '#/components/schemas/AuthenticationVector'
        supi:
          description: "String identifying a Supi that shall contain either an IMSI,\
            \ a network specific identifier,\na Global Cable Identifier (GCI) or a\
            \ Global Line Identifier (GLI) as specified in clause \n2.2A of 3GPP TS\
            \ 23.003. It shall be formatted as follows\n - for an IMSI \"imsi-<imsi>\"\
            , where <imsi> shall be formatted according to clause 2.2\n   of 3GPP\
            \ TS 23.003 that describes an IMSI.\n - for a network specific identifier\
            \ \"nai-<nai>, where <nai> shall be formatted\n   according to clause\
            \ 28.7.2 of 3GPP TS 23.003 that describes an NAI.\n - for a GCI \"gci-<gci>\"\
            , where <gci> shall be formatted according to clause 28.15.2\n   of 3GPP\
            \ TS 23.003.\n - for a GLI \"gli-<gli>\", where <gli> shall be formatted\
            \ according to clause 28.16.2 of\n   3GPP TS 23.003.To enable that the\
            \ value is used as part of an URI, the string shall\n   only contain characters\
            \ allowed according to the \"lower-with-hyphen\" naming convention\n \
            \  defined in 3GPP TS 29.501.\n"
          pattern: "^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"
          type: string
        akmaInd:
          default: false
          type: boolean
        authAaa:
          default: false
          type: boolean
        routingId:
          pattern: "^[0-9]{1,4}$"
          type: string
        pvsInfo:
          items:
            $ref: '#/components/schemas/ServerAddressingInfo'
          minItems: 1
          type: array
      required:
      - authType
      type: object
    AuthenticationVector:
      discriminator:
        mapping:
          "5G_HE_AKA": '#/components/schemas/Av5GHeAka'
          EAP_AKA_PRIME: '#/components/schemas/AvEapAkaPrime'
        propertyName: avType
      oneOf:
      - $ref: '#/components/schemas/AvEapAkaPrime'
      - $ref: '#/components/schemas/Av5GHeAka'
    AvEapAkaPrime:
      properties:
        avType:
          $ref: '#/components/schemas/AvType'
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        xres:
          pattern: "^[A-Fa-f0-9]{8,32}$"
          type: string
        autn:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ckPrime:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ikPrime:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
      required:
      - autn
      - avType
      - ckPrime
      - ikPrime
      - rand
      - xres
      type: object
    Av5GHeAka:
      properties:
        avType:
          $ref: '#/components/schemas/AvType'
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        xresStar:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        autn:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        kausf:
          pattern: "^[A-Fa-f0-9]{64}$"
          type: string
      required:
      - autn
      - avType
      - kausf
      - rand
      - xresStar
      type: object
    ResynchronizationInfo:
      example:
        rand: rand
        auts: auts
      properties:
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        auts:
          pattern: "^[A-Fa-f0-9]{28}$"
          type: string
      required:
      - auts
      - rand
      type: object
    AuthEvent:
      example:
        timeStamp: 2000-01-23T04:56:07.000+00:00
        nfInstanceId: 046b6c7f-0b8a-43b9-b35d-6489e6daee91
        servingNetworkName: servingNetworkName
        resetIds:
        - resetIds
        - resetIds
        success: true
        nfSetId: nfSetId
        authRemovalInd: false
        authType: null
      properties:
        nfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        success:
          type: boolean
        timeStamp:
          description: string with format 'date-time' as defined in OpenAPI.
          format: date-time
          type: string
        authType:
          $ref: '#/components/schemas/AuthType'
        servingNetworkName:
          pattern: "^(5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org(:[A-F0-9]{11})?)|5G:NSWO$"
          type: string
        authRemovalInd:
          default: false
          type: boolean
        nfSetId:
          description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
            \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
            , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with \
            \ <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
            \  <MNC> encoding the Mobile Network Code part of the PLMN, comprising\
            \ 3 digits. \n  If there are only 2 significant digits in the MNC, one\
            \ \"0\" digit shall be inserted \n  at the left side to fill the 3 digits\
            \ coding of MNC.  Pattern: '^[0-9]{3}$'\n<NFType> encoded as a value defined\
            \ in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but \n  with lower case characters\
            \ <Set ID> encoded as a string of characters consisting of \n  alphabetic\
            \ characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that\
            \ \n  shall end with either an alphabetic character or a digit. \n"
          type: string
        resetIds:
          items:
            type: string
          minItems: 1
          type: array
      required:
      - authType
      - nfInstanceId
      - servingNetworkName
      - success
      - timeStamp
      type: object
    RgAuthCtx:
      example:
        authInd: false
        supportedFeatures: supportedFeatures
        supi: supi
      properties:
        authInd:
          default: false
          type: boolean
        supi:
          description: "String identifying a Supi that shall contain either an IMSI,\
            \ a network specific identifier,\na Global Cable Identifier (GCI) or a\
            \ Global Line Identifier (GLI) as specified in clause \n2.2A of 3GPP TS\
            \ 23.003. It shall be formatted as follows\n - for an IMSI \"imsi-<imsi>\"\
            , where <imsi> shall be formatted according to clause 2.2\n   of 3GPP\
            \ TS 23.003 that describes an IMSI.\n - for a network specific identifier\
            \ \"nai-<nai>, where <nai> shall be formatted\n   according to clause\
            \ 28.7.2 of 3GPP TS 23.003 that describes an NAI.\n - for a GCI \"gci-<gci>\"\
            , where <gci> shall be formatted according to clause 28.15.2\n   of 3GPP\
            \ TS 23.003.\n - for a GLI \"gli-<gli>\", where <gli> shall be formatted\
            \ according to clause 28.16.2 of\n   3GPP TS 23.003.To enable that the\
            \ value is used as part of an URI, the string shall\n   only contain characters\
            \ allowed according to the \"lower-with-hyphen\" naming convention\n \
            \  defined in 3GPP TS 29.501.\n"
          pattern: "^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"
          type: string
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - authInd
      type: object
    HssAuthenticationInfoRequest:
      example:
        supportedFeatures: supportedFeatures
        numOfRequestedVectors: 1
        anId: null
        hssAuthType: null
        resynchronizationInfo:
          rand: rand
          auts: auts
        servingNetworkId:
          mnc: mnc
          mcc: mcc
        requestingNodeType: null
      properties:
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        hssAuthType:
          $ref: '#/components/schemas/HssAuthType'
        numOfRequestedVectors:
          maximum: 5
          minimum: 1
          type: integer
        requestingNodeType:
          $ref: '#/components/schemas/NodeType'
        servingNetworkId:
          $ref: '#/components/schemas/PlmnId'
        resynchronizationInfo:
          $ref: '#/components/schemas/ResynchronizationInfo'
        anId:
          $ref: '#/components/schemas/AccessNetworkId'
      required:
      - hssAuthType
      - numOfRequestedVectors
      type: object
    HssAuthenticationInfoResult:
      example:
        supportedFeatures: supportedFeatures
        hssAuthenticationVectors: null
      properties:
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        hssAuthenticationVectors:
          $ref: '#/components/schemas/HssAuthenticationVectors'
      required:
      - hssAuthenticationVectors
      type: object
    HssAuthenticationVectors:
      oneOf:
      - items:
          $ref: '#/components/schemas/AvEpsAka'
        maxItems: 5
        minItems: 1
        type: array
      - items:
          $ref: '#/components/schemas/AvImsGbaEapAka'
        maxItems: 5
        minItems: 1
        type: array
      - items:
          $ref: '#/components/schemas/AvEapAkaPrime'
        maxItems: 5
        minItems: 1
        type: array
    AvEpsAka:
      properties:
        avType:
          $ref: '#/components/schemas/HssAvType'
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        xres:
          pattern: "^[A-Fa-f0-9]{8,32}$"
          type: string
        autn:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        kasme:
          pattern: "^[A-Fa-f0-9]{64}$"
          type: string
      required:
      - autn
      - avType
      - kasme
      - rand
      - xres
      type: object
    AvImsGbaEapAka:
      properties:
        avType:
          $ref: '#/components/schemas/HssAvType'
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        xres:
          pattern: "^[A-Fa-f0-9]{8,32}$"
          type: string
        autn:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ck:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ik:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
      required:
      - autn
      - avType
      - ck
      - ik
      - rand
      - xres
      type: object
    GbaAuthenticationInfoRequest:
      example:
        supportedFeatures: supportedFeatures
        resynchronizationInfo:
          rand: rand
          auts: auts
        authType: null
      properties:
        authType:
          $ref: '#/components/schemas/GbaAuthType'
        resynchronizationInfo:
          $ref: '#/components/schemas/ResynchronizationInfo_1'
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - authType
      type: object
    GbaAuthenticationInfoResult:
      example:
        supportedFeatures: supportedFeatures
        "3gAkaAv":
          rand: rand
          xres: xres
          ik: ik
          autn: autn
          ck: ck
      properties:
        "3gAkaAv":
          $ref: '#/components/schemas/3GAkaAv'
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      type: object
    ProSeAuthenticationInfoRequest:
      example:
        servingNetworkName: servingNetworkName
        supportedFeatures: supportedFeatures
        relayServiceCode: 1343566
        resynchronizationInfo:
          rand: rand
          auts: auts
      properties:
        servingNetworkName:
          pattern: "^(5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org(:[A-F0-9]{11})?)|5G:NSWO$"
          type: string
        relayServiceCode:
          description: |
            Relay Service Code to identify a connectivity service provided by the UE-to-Network relay.
          maximum: 16777215
          minimum: 0
          type: integer
        resynchronizationInfo:
          $ref: '#/components/schemas/ResynchronizationInfo'
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - relayServiceCode
      - servingNetworkName
      type: object
    ProSeAuthenticationInfoResult:
      example:
        supportedFeatures: supportedFeatures
        proseAuthenticationVectors: null
        authType: null
        supi: supi
      properties:
        authType:
          $ref: '#/components/schemas/AuthType'
        proseAuthenticationVectors:
          $ref: '#/components/schemas/ProSeAuthenticationVectors'
        supi:
          description: "String identifying a Supi that shall contain either an IMSI,\
            \ a network specific identifier,\na Global Cable Identifier (GCI) or a\
            \ Global Line Identifier (GLI) as specified in clause \n2.2A of 3GPP TS\
            \ 23.003. It shall be formatted as follows\n - for an IMSI \"imsi-<imsi>\"\
            , where <imsi> shall be formatted according to clause 2.2\n   of 3GPP\
            \ TS 23.003 that describes an IMSI.\n - for a network specific identifier\
            \ \"nai-<nai>, where <nai> shall be formatted\n   according to clause\
            \ 28.7.2 of 3GPP TS 23.003 that describes an NAI.\n - for a GCI \"gci-<gci>\"\
            , where <gci> shall be formatted according to clause 28.15.2\n   of 3GPP\
            \ TS 23.003.\n - for a GLI \"gli-<gli>\", where <gli> shall be formatted\
            \ according to clause 28.16.2 of\n   3GPP TS 23.003.To enable that the\
            \ value is used as part of an URI, the string shall\n   only contain characters\
            \ allowed according to the \"lower-with-hyphen\" naming convention\n \
            \  defined in 3GPP TS 29.501.\n"
          pattern: "^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"
          type: string
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - authType
      type: object
    ProSeAuthenticationVectors:
      oneOf:
      - items:
          $ref: '#/components/schemas/AvEapAkaPrime'
        maxItems: 5
        minItems: 1
        type: array
    Autn:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    Auts:
      pattern: "^[A-Fa-f0-9]{28}$"
      type: string
    CkPrime:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    IkPrime:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    Kausf:
      pattern: "^[A-Fa-f0-9]{64}$"
      type: string
    Rand:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    Xres:
      pattern: "^[A-Fa-f0-9]{8,32}$"
      type: string
    XresStar:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    ServingNetworkName:
      pattern: "^(5G:mnc[0-9]{3}[.]mcc[0-9]{3}[.]3gppnetwork[.]org(:[A-F0-9]{11})?)|5G:NSWO$"
      type: string
    Success:
      type: boolean
    AuthenticatedInd:
      type: boolean
    ConfidentialityKey:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    IntegrityKey:
      pattern: "^[A-Fa-f0-9]{32}$"
      type: string
    Kasme:
      pattern: "^[A-Fa-f0-9]{64}$"
      type: string
    NumOfRequestedVectors:
      maximum: 5
      minimum: 1
      type: integer
    AuthType:
      anyOf:
      - enum:
        - 5G_AKA
        - EAP_AKA_PRIME
        - EAP_TLS
        - NONE
        - EAP_TTLS
        type: string
      - type: string
    AvType:
      anyOf:
      - enum:
        - 5G_HE_AKA
        - EAP_AKA_PRIME
        type: string
      - type: string
    HssAuthType:
      anyOf:
      - enum:
        - EPS_AKA
        - EAP_AKA
        - EAP_AKA_PRIME
        - IMS_AKA
        - GBA_AKA
        - UMTS_AKA
        type: string
      - type: string
    HssAvType:
      anyOf:
      - enum:
        - EPS_AKA
        - EAP_AKA
        - IMS_AKA
        - GBA_AKA
        - UMTS_AKA
        type: string
      - type: string
    HssAuthTypeInUri:
      anyOf:
      - enum:
        - eps-aka
        - eap-aka
        - eap-aka-prime
        - ims-aka
        - gba-aka
        type: string
      - type: string
    AccessNetworkId:
      anyOf:
      - enum:
        - HRPD
        - WIMAX
        - WLAN
        - ETHERNET
        type: string
      - type: string
    NodeType:
      anyOf:
      - enum:
        - AUSF
        - VLR
        - SGSN
        - S_CSCF
        - BSF
        - GAN_AAA_SERVER
        - WLAN_AAA_SERVER
        - MME
        type: string
      - type: string
    GbaAuthType:
      anyOf:
      - enum:
        - DIGEST_AKAV1_MD5
        type: string
      - type: string
    SupiOrSuci:
      description: String identifying a SUPI or a SUCI.
      pattern: "^(imsi-[0-9]{5,15}|nai-.+|gli-.+|gci-.+|suci-(0-[0-9]{3}-[0-9]{2,3}|[1-7]-.+)-[0-9]{1,4}-(0-0-.*|[a-fA-F1-9]-([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])-[a-fA-F0-9]+)|.+)$"
      type: string
    ProblemDetails:
      description: Provides additional information in an error response.
      properties:
        type:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        cause:
          description: |
            A machine-readable application error cause specific to this occurrence of the problem.  This IE should be present and provide application-related error information, if available.
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        accessTokenError:
          $ref: '#/components/schemas/AccessTokenErr'
        accessTokenRequest:
          $ref: '#/components/schemas/AccessTokenReq'
        nrfId:
          description: Fully Qualified Domain Name
          maxLength: 253
          minLength: 4
          pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
            .?$"
          type: string
        supportedApiVersions:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Uri:
      description: String providing an URI formatted according to RFC 3986.
      type: string
    InvalidParam:
      description: It contains an invalid parameter and a related description.
      properties:
        param:
          description: |
            If the invalid parameter is an attribute in a JSON body, this IE shall contain the  attribute's name and shall be encoded as a JSON Pointer. If the invalid parameter is  an HTTP header, this IE shall be formatted as the concatenation of the string "header "  plus the name of such header. If the invalid parameter is a query parameter, this IE  shall be formatted as the concatenation of the string "query " plus the name of such  query parameter. If the invalid parameter is a variable part in the path of a resource  URI, this IE shall contain the name of the variable, including the symbols "{" and "}"  used in OpenAPI specification as the notation to represent variable path segments.
          type: string
        reason:
          description: |
            A human-readable reason, e.g. "must be a positive integer". In cases involving failed  operations in a PATCH request, the reason string should identify the operation that  failed using the operation's array index to assist in correlation of the invalid  parameter with the failed operation, e.g." Replacement value invalid for attribute  (failed operation index= 4)"
          type: string
      required:
      - param
      type: object
    SupportedFeatures:
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
      pattern: "^[A-Fa-f0-9]*$"
      type: string
    Fqdn:
      description: Fully Qualified Domain Name
      maxLength: 253
      minLength: 4
      pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
        .?$"
      type: string
    PlmnId:
      description: |
        When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
      example:
        mnc: mnc
        mcc: mcc
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      description: "Mobile Country Code part of the PLMN, comprising 3 digits, as\
        \ defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
      pattern: "^\\d{3}$"
      type: string
    Mnc:
      description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
        \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
      pattern: "^\\d{2,3}$"
      type: string
    Supi:
      description: "String identifying a Supi that shall contain either an IMSI, a\
        \ network specific identifier,\na Global Cable Identifier (GCI) or a Global\
        \ Line Identifier (GLI) as specified in clause \n2.2A of 3GPP TS 23.003. It\
        \ shall be formatted as follows\n - for an IMSI \"imsi-<imsi>\", where <imsi>\
        \ shall be formatted according to clause 2.2\n   of 3GPP TS 23.003 that describes\
        \ an IMSI.\n - for a network specific identifier \"nai-<nai>, where <nai>\
        \ shall be formatted\n   according to clause 28.7.2 of 3GPP TS 23.003 that\
        \ describes an NAI.\n - for a GCI \"gci-<gci>\", where <gci> shall be formatted\
        \ according to clause 28.15.2\n   of 3GPP TS 23.003.\n - for a GLI \"gli-<gli>\"\
        , where <gli> shall be formatted according to clause 28.16.2 of\n   3GPP TS\
        \ 23.003.To enable that the value is used as part of an URI, the string shall\n\
        \   only contain characters allowed according to the \"lower-with-hyphen\"\
        \ naming convention\n   defined in 3GPP TS 29.501.\n"
      pattern: "^(imsi-[0-9]{5,15}|nai-.+|gci-.+|gli-.+|.+)$"
      type: string
    NfInstanceId:
      description: "String uniquely identifying a NF instance. The format of the NF\
        \ Instance ID shall be a  Universally Unique Identifier (UUID) version 4,\
        \ as described in IETF RFC 4122. \n"
      format: uuid
      type: string
    CagId:
      description: String containing a Closed Access Group Identifier.
      pattern: "^[A-Fa-f0-9]{8}$"
      type: string
    ServerAddressingInfo:
      anyOf:
      - required:
        - ipv4Addresses
      - required:
        - ipv6Addresses
      - required:
        - fqdnList
      description: Contains addressing information (IP addresses and/or FQDNs) of
        a server.
      example:
        ipv4Addresses:
        - 198.51.100.1
        - 198.51.100.1
        ipv6Addresses:
        - 2001:db8:85a3::8a2e:370:7334
        - 2001:db8:85a3::8a2e:370:7334
        fqdnList:
        - null
        - null
      properties:
        ipv4Addresses:
          items:
            $ref: '#/components/schemas/Ipv4Addr'
          minItems: 1
          type: array
        ipv6Addresses:
          items:
            $ref: '#/components/schemas/Ipv6Addr'
          minItems: 1
          type: array
        fqdnList:
          items:
            $ref: '#/components/schemas/Fqdn'
          minItems: 1
          type: array
      type: object
    Ipv4Addr:
      description: |
        String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
      example: 198.51.100.1
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
      type: string
    Ipv6Addr:
      allOf:
      - pattern: "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$"
      - pattern: "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$"
      description: |
        String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
      example: 2001:db8:85a3::8a2e:370:7334
      type: string
    DateTime:
      description: string with format 'date-time' as defined in OpenAPI.
      format: date-time
      type: string
    NfSetId:
      description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
        \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
        , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC>\
        \ encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC>\
        \ encoding the Mobile Network Code part of the PLMN, comprising 3 digits.\
        \ \n  If there are only 2 significant digits in the MNC, one \"0\" digit shall\
        \ be inserted \n  at the left side to fill the 3 digits coding of MNC.  Pattern:\
        \ '^[0-9]{3}$'\n<NFType> encoded as a value defined in Table 6.1.6.3.3-1 of\
        \ 3GPP TS 29.510 but \n  with lower case characters <Set ID> encoded as a\
        \ string of characters consisting of \n  alphabetic characters (A-Z and a-z),\
        \ digits (0-9) and/or the hyphen (-) and that \n  shall end with either an\
        \ alphabetic character or a digit. \n"
      type: string
    ResynchronizationInfo_1:
      description: Contains RAND and AUTS
      example:
        rand: rand
        auts: auts
      properties:
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        auts:
          pattern: "^[A-Fa-f0-9]{28}$"
          type: string
      required:
      - auts
      - rand
      type: object
    "3GAkaAv":
      description: "Contains RAND, XRES, AUTN, CK, and IK"
      example:
        rand: rand
        xres: xres
        ik: ik
        autn: autn
        ck: ck
      properties:
        rand:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        xres:
          pattern: "^[A-Fa-f0-9]{8,32}$"
          type: string
        autn:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ck:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
        ik:
          pattern: "^[A-Fa-f0-9]{32}$"
          type: string
      required:
      - autn
      - ck
      - ik
      - rand
      - xres
      type: object
    RelayServiceCode:
      description: |
        Relay Service Code to identify a connectivity service provided by the UE-to-Network relay.
      maximum: 16777215
      minimum: 0
      type: integer
    AccessTokenErr:
      description: Error returned in the access token response message
      properties:
        error:
          enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          - invalid_scope
          type: string
        error_description:
          type: string
        error_uri:
          type: string
      required:
      - error
      type: object
    AccessTokenReq:
      description: Contains information related to the access token request
      properties:
        grant_type:
          enum:
          - client_credentials
          type: string
        nfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        nfType:
          $ref: '#/components/schemas/NFType'
        targetNfType:
          $ref: '#/components/schemas/NFType'
        scope:
          pattern: "^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$"
          type: string
        targetNfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        requesterPlmn:
          $ref: '#/components/schemas/PlmnId'
        requesterPlmnList:
          items:
            $ref: '#/components/schemas/PlmnId'
          minItems: 2
          type: array
        requesterSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        requesterFqdn:
          description: Fully Qualified Domain Name
          maxLength: 253
          minLength: 4
          pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
            .?$"
          type: string
        requesterSnpnList:
          items:
            $ref: '#/components/schemas/PlmnIdNid'
          minItems: 1
          type: array
        targetPlmn:
          $ref: '#/components/schemas/PlmnId'
        targetSnpn:
          $ref: '#/components/schemas/PlmnIdNid'
        targetSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        targetNsiList:
          items:
            type: string
          minItems: 1
          type: array
        targetNfSetId:
          description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
            \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
            , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with \
            \ <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
            \  <MNC> encoding the Mobile Network Code part of the PLMN, comprising\
            \ 3 digits. \n  If there are only 2 significant digits in the MNC, one\
            \ \"0\" digit shall be inserted \n  at the left side to fill the 3 digits\
            \ coding of MNC.  Pattern: '^[0-9]{3}$'\n<NFType> encoded as a value defined\
            \ in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but \n  with lower case characters\
            \ <Set ID> encoded as a string of characters consisting of \n  alphabetic\
            \ characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that\
            \ \n  shall end with either an alphabetic character or a digit. \n"
          type: string
        targetNfServiceSetId:
          description: "NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003)\
            \ formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF\
            \ Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\"\
            \ with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
            \   <MNC> encoding the Mobile Network Code part of the PLMN, comprising\
            \ 3 digits. \n  If there are only 2 significant digits in the MNC, one\
            \ \"0\" digit shall be inserted \n  at the left side to fill the 3 digits\
            \ coding of MNC.  Pattern: '^[0-9]{3}$'\n<NID> encoded as defined in clause\_\
            5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined\
            \ in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510\
            \  <Set ID> encoded as a string of characters consisting of alphabetic\
            \ \n  characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and\
            \ that shall end \n  with either an alphabetic character or a digit.\n"
          type: string
        hnrfAccessTokenUri:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        sourceNfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
      required:
      - grant_type
      - nfInstanceId
      - scope
      type: object
    NFType:
      anyOf:
      - enum:
        - NRF
        - UDM
        - AMF
        - SMF
        - AUSF
        - NEF
        - PCF
        - SMSF
        - NSSF
        - UDR
        - LMF
        - GMLC
        - 5G_EIR
        - SEPP
        - UPF
        - N3IWF
        - AF
        - UDSF
        - BSF
        - CHF
        - NWDAF
        - PCSCF
        - CBCF
        - HSS
        - UCMF
        - SOR_AF
        - SPAF
        - MME
        - SCSAS
        - SCEF
        - SCP
        - NSSAAF
        - ICSCF
        - SCSCF
        - DRA
        - IMS_AS
        - AANF
        - 5G_DDNMF
        - NSACF
        - MFAF
        - EASDF
        - DCCF
        - MB_SMF
        - TSCTSF
        - ADRF
        - GBA_BSF
        - CEF
        - MB_UPF
        - NSWOF
        - PKMF
        - MNPF
        - SMS_GMSC
        - SMS_IWMSC
        - MBSF
        - MBSTF
        - PANF
        type: string
      - type: string
      description: NF types known to NRF
    Snssai:
      description: |
        When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
      properties:
        sst:
          description: "Unsigned integer, within the range 0 to 255, representing\
            \ the Slice/Service Type.  It indicates the expected Network Slice behaviour\
            \ in terms of features and services. Values 0 to 127 correspond to the\
            \ standardized SST range. Values 128 to 255 correspond  to the Operator-specific\
            \ range. See clause 28.4.2 of 3GPP TS 23.003. Standardized values are\
            \ defined in clause 5.15.2.2 of 3GPP TS 23.501. \n"
          maximum: 255
          minimum: 0
          type: integer
        sd:
          description: |
            3-octet string, representing the Slice Differentiator, in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the SD shall appear first in the string, and the character representing the 4 least significant bit of the SD shall appear last in the string. This is an optional parameter that complements the Slice/Service type(s) to allow to  differentiate amongst multiple Network Slices of the same Slice/Service type. This IE shall be absent if no SD value is associated with the SST.
          pattern: "^[A-Fa-f0-9]{6}$"
          type: string
      required:
      - sst
      type: object
    PlmnIdNid:
      description: |
        Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
        nid:
          description: "This represents the Network Identifier, which together with\
            \ a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS\
            \ 23.501 clause 5.30.2.1). \n"
          pattern: "^[A-Fa-f0-9]{11}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Nid:
      description: "This represents the Network Identifier, which together with a\
        \ PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501\
        \ clause 5.30.2.1). \n"
      pattern: "^[A-Fa-f0-9]{11}$"
      type: string
    NfServiceSetId:
      description: "NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003)\
        \ formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF\
        \ Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\"\
        \ with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
        \   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3\
        \ digits. \n  If there are only 2 significant digits in the MNC, one \"0\"\
        \ digit shall be inserted \n  at the left side to fill the 3 digits coding\
        \ of MNC.  Pattern: '^[0-9]{3}$'\n<NID> encoded as defined in clause\_5.4.2\
        \ (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause\
        \ 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded\
        \ as a string of characters consisting of alphabetic \n  characters (A-Z and\
        \ a-z), digits (0-9) and/or the hyphen (-) and that shall end \n  with either\
        \ an alphabetic character or a digit.\n"
      type: string
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            nudm-ueau: Access to the nudm-ueau API
            nudm-ueau:security-information:generate-auth-data:invoke: Acess to invoke
              the "generate-auth-data" custom operation on the "security-information"
              resource
            nudm-ueau:security-information-rg:read: Access to read the "security-information-rg"
              resource
            nudm-ueau:auth-events:create: Access to create a new child resource on
              the "auth-events" collection resource
            nudm-ueau:auth-event-id:modify: Access to modify (delete) an "auth-event-id"
              individual resource
            nudm-ueau:hss-security-information:generate-av:invoke: Acess to invoke
              the "generate-av" custom operation on the "hss-security-information"
              resource
            nudm-ueau:gba-security-information:generate-av:invoke: Acess to invoke
              the "generate-av" custom operation on the "gba-security-information"
              resource
          tokenUrl: "{nrfApiRoot}/oauth2/token"
      type: oauth2
