/*
Nudm_UEAU

UDM UE Authentication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_UEAU

import (
	"encoding/json"
	"time"
)

// checks if the AuthEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthEvent{}

// AuthEvent struct for AuthEvent
type AuthEvent struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	NfInstanceId string `json:"nfInstanceId"`
	Success bool `json:"success"`
	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp time.Time `json:"timeStamp"`
	AuthType AuthType `json:"authType"`
	ServingNetworkName string `json:"servingNetworkName"`
	AuthRemovalInd *bool `json:"authRemovalInd,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.  
	NfSetId *string `json:"nfSetId,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
}

// NewAuthEvent instantiates a new AuthEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthEvent(nfInstanceId string, success bool, timeStamp time.Time, authType AuthType, servingNetworkName string) *AuthEvent {
	this := AuthEvent{}
	this.NfInstanceId = nfInstanceId
	this.Success = success
	this.TimeStamp = timeStamp
	this.AuthType = authType
	this.ServingNetworkName = servingNetworkName
	var authRemovalInd bool = false
	this.AuthRemovalInd = &authRemovalInd
	return &this
}

// NewAuthEventWithDefaults instantiates a new AuthEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthEventWithDefaults() *AuthEvent {
	this := AuthEvent{}
	var authRemovalInd bool = false
	this.AuthRemovalInd = &authRemovalInd
	return &this
}

// GetNfInstanceId returns the NfInstanceId field value
func (o *AuthEvent) GetNfInstanceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NfInstanceId
}

// GetNfInstanceIdOk returns a tuple with the NfInstanceId field value
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetNfInstanceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfInstanceId, true
}

// SetNfInstanceId sets field value
func (o *AuthEvent) SetNfInstanceId(v string) {
	o.NfInstanceId = v
}

// GetSuccess returns the Success field value
func (o *AuthEvent) GetSuccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Success
}

// GetSuccessOk returns a tuple with the Success field value
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetSuccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Success, true
}

// SetSuccess sets field value
func (o *AuthEvent) SetSuccess(v bool) {
	o.Success = v
}

// GetTimeStamp returns the TimeStamp field value
func (o *AuthEvent) GetTimeStamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetTimeStampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TimeStamp, true
}

// SetTimeStamp sets field value
func (o *AuthEvent) SetTimeStamp(v time.Time) {
	o.TimeStamp = v
}

// GetAuthType returns the AuthType field value
func (o *AuthEvent) GetAuthType() AuthType {
	if o == nil {
		var ret AuthType
		return ret
	}

	return o.AuthType
}

// GetAuthTypeOk returns a tuple with the AuthType field value
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetAuthTypeOk() (*AuthType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthType, true
}

// SetAuthType sets field value
func (o *AuthEvent) SetAuthType(v AuthType) {
	o.AuthType = v
}

// GetServingNetworkName returns the ServingNetworkName field value
func (o *AuthEvent) GetServingNetworkName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServingNetworkName
}

// GetServingNetworkNameOk returns a tuple with the ServingNetworkName field value
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetServingNetworkNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingNetworkName, true
}

// SetServingNetworkName sets field value
func (o *AuthEvent) SetServingNetworkName(v string) {
	o.ServingNetworkName = v
}

// GetAuthRemovalInd returns the AuthRemovalInd field value if set, zero value otherwise.
func (o *AuthEvent) GetAuthRemovalInd() bool {
	if o == nil || IsNil(o.AuthRemovalInd) {
		var ret bool
		return ret
	}
	return *o.AuthRemovalInd
}

// GetAuthRemovalIndOk returns a tuple with the AuthRemovalInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetAuthRemovalIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AuthRemovalInd) {
		return nil, false
	}
	return o.AuthRemovalInd, true
}

// HasAuthRemovalInd returns a boolean if a field has been set.
func (o *AuthEvent) HasAuthRemovalInd() bool {
	if o != nil && !IsNil(o.AuthRemovalInd) {
		return true
	}

	return false
}

// SetAuthRemovalInd gets a reference to the given bool and assigns it to the AuthRemovalInd field.
func (o *AuthEvent) SetAuthRemovalInd(v bool) {
	o.AuthRemovalInd = &v
}

// GetNfSetId returns the NfSetId field value if set, zero value otherwise.
func (o *AuthEvent) GetNfSetId() string {
	if o == nil || IsNil(o.NfSetId) {
		var ret string
		return ret
	}
	return *o.NfSetId
}

// GetNfSetIdOk returns a tuple with the NfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetNfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.NfSetId) {
		return nil, false
	}
	return o.NfSetId, true
}

// HasNfSetId returns a boolean if a field has been set.
func (o *AuthEvent) HasNfSetId() bool {
	if o != nil && !IsNil(o.NfSetId) {
		return true
	}

	return false
}

// SetNfSetId gets a reference to the given string and assigns it to the NfSetId field.
func (o *AuthEvent) SetNfSetId(v string) {
	o.NfSetId = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *AuthEvent) GetResetIds() []string {
	if o == nil || IsNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthEvent) GetResetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *AuthEvent) HasResetIds() bool {
	if o != nil && !IsNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *AuthEvent) SetResetIds(v []string) {
	o.ResetIds = v
}

func (o AuthEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["nfInstanceId"] = o.NfInstanceId
	toSerialize["success"] = o.Success
	toSerialize["timeStamp"] = o.TimeStamp
	toSerialize["authType"] = o.AuthType
	toSerialize["servingNetworkName"] = o.ServingNetworkName
	if !IsNil(o.AuthRemovalInd) {
		toSerialize["authRemovalInd"] = o.AuthRemovalInd
	}
	if !IsNil(o.NfSetId) {
		toSerialize["nfSetId"] = o.NfSetId
	}
	if !IsNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	return toSerialize, nil
}

type NullableAuthEvent struct {
	value *AuthEvent
	isSet bool
}

func (v NullableAuthEvent) Get() *AuthEvent {
	return v.value
}

func (v *NullableAuthEvent) Set(val *AuthEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthEvent(val *AuthEvent) *NullableAuthEvent {
	return &NullableAuthEvent{value: val, isSet: true}
}

func (v NullableAuthEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


