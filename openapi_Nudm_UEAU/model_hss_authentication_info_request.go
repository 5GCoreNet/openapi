/*
Nudm_UEAU

UDM UE Authentication Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_UEAU

import (
	"encoding/json"
)

// checks if the HssAuthenticationInfoRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HssAuthenticationInfoRequest{}

// HssAuthenticationInfoRequest struct for HssAuthenticationInfoRequest
type HssAuthenticationInfoRequest struct {
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	HssAuthType HssAuthType `json:"hssAuthType"`
	NumOfRequestedVectors int32 `json:"numOfRequestedVectors"`
	RequestingNodeType *NodeType `json:"requestingNodeType,omitempty"`
	ServingNetworkId *PlmnId `json:"servingNetworkId,omitempty"`
	ResynchronizationInfo *ResynchronizationInfo `json:"resynchronizationInfo,omitempty"`
	AnId *AccessNetworkId `json:"anId,omitempty"`
}

// NewHssAuthenticationInfoRequest instantiates a new HssAuthenticationInfoRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHssAuthenticationInfoRequest(hssAuthType HssAuthType, numOfRequestedVectors int32) *HssAuthenticationInfoRequest {
	this := HssAuthenticationInfoRequest{}
	this.HssAuthType = hssAuthType
	this.NumOfRequestedVectors = numOfRequestedVectors
	return &this
}

// NewHssAuthenticationInfoRequestWithDefaults instantiates a new HssAuthenticationInfoRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHssAuthenticationInfoRequestWithDefaults() *HssAuthenticationInfoRequest {
	this := HssAuthenticationInfoRequest{}
	return &this
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *HssAuthenticationInfoRequest) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *HssAuthenticationInfoRequest) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *HssAuthenticationInfoRequest) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetHssAuthType returns the HssAuthType field value
func (o *HssAuthenticationInfoRequest) GetHssAuthType() HssAuthType {
	if o == nil {
		var ret HssAuthType
		return ret
	}

	return o.HssAuthType
}

// GetHssAuthTypeOk returns a tuple with the HssAuthType field value
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetHssAuthTypeOk() (*HssAuthType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HssAuthType, true
}

// SetHssAuthType sets field value
func (o *HssAuthenticationInfoRequest) SetHssAuthType(v HssAuthType) {
	o.HssAuthType = v
}

// GetNumOfRequestedVectors returns the NumOfRequestedVectors field value
func (o *HssAuthenticationInfoRequest) GetNumOfRequestedVectors() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NumOfRequestedVectors
}

// GetNumOfRequestedVectorsOk returns a tuple with the NumOfRequestedVectors field value
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetNumOfRequestedVectorsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NumOfRequestedVectors, true
}

// SetNumOfRequestedVectors sets field value
func (o *HssAuthenticationInfoRequest) SetNumOfRequestedVectors(v int32) {
	o.NumOfRequestedVectors = v
}

// GetRequestingNodeType returns the RequestingNodeType field value if set, zero value otherwise.
func (o *HssAuthenticationInfoRequest) GetRequestingNodeType() NodeType {
	if o == nil || IsNil(o.RequestingNodeType) {
		var ret NodeType
		return ret
	}
	return *o.RequestingNodeType
}

// GetRequestingNodeTypeOk returns a tuple with the RequestingNodeType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetRequestingNodeTypeOk() (*NodeType, bool) {
	if o == nil || IsNil(o.RequestingNodeType) {
		return nil, false
	}
	return o.RequestingNodeType, true
}

// HasRequestingNodeType returns a boolean if a field has been set.
func (o *HssAuthenticationInfoRequest) HasRequestingNodeType() bool {
	if o != nil && !IsNil(o.RequestingNodeType) {
		return true
	}

	return false
}

// SetRequestingNodeType gets a reference to the given NodeType and assigns it to the RequestingNodeType field.
func (o *HssAuthenticationInfoRequest) SetRequestingNodeType(v NodeType) {
	o.RequestingNodeType = &v
}

// GetServingNetworkId returns the ServingNetworkId field value if set, zero value otherwise.
func (o *HssAuthenticationInfoRequest) GetServingNetworkId() PlmnId {
	if o == nil || IsNil(o.ServingNetworkId) {
		var ret PlmnId
		return ret
	}
	return *o.ServingNetworkId
}

// GetServingNetworkIdOk returns a tuple with the ServingNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetServingNetworkIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.ServingNetworkId) {
		return nil, false
	}
	return o.ServingNetworkId, true
}

// HasServingNetworkId returns a boolean if a field has been set.
func (o *HssAuthenticationInfoRequest) HasServingNetworkId() bool {
	if o != nil && !IsNil(o.ServingNetworkId) {
		return true
	}

	return false
}

// SetServingNetworkId gets a reference to the given PlmnId and assigns it to the ServingNetworkId field.
func (o *HssAuthenticationInfoRequest) SetServingNetworkId(v PlmnId) {
	o.ServingNetworkId = &v
}

// GetResynchronizationInfo returns the ResynchronizationInfo field value if set, zero value otherwise.
func (o *HssAuthenticationInfoRequest) GetResynchronizationInfo() ResynchronizationInfo {
	if o == nil || IsNil(o.ResynchronizationInfo) {
		var ret ResynchronizationInfo
		return ret
	}
	return *o.ResynchronizationInfo
}

// GetResynchronizationInfoOk returns a tuple with the ResynchronizationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetResynchronizationInfoOk() (*ResynchronizationInfo, bool) {
	if o == nil || IsNil(o.ResynchronizationInfo) {
		return nil, false
	}
	return o.ResynchronizationInfo, true
}

// HasResynchronizationInfo returns a boolean if a field has been set.
func (o *HssAuthenticationInfoRequest) HasResynchronizationInfo() bool {
	if o != nil && !IsNil(o.ResynchronizationInfo) {
		return true
	}

	return false
}

// SetResynchronizationInfo gets a reference to the given ResynchronizationInfo and assigns it to the ResynchronizationInfo field.
func (o *HssAuthenticationInfoRequest) SetResynchronizationInfo(v ResynchronizationInfo) {
	o.ResynchronizationInfo = &v
}

// GetAnId returns the AnId field value if set, zero value otherwise.
func (o *HssAuthenticationInfoRequest) GetAnId() AccessNetworkId {
	if o == nil || IsNil(o.AnId) {
		var ret AccessNetworkId
		return ret
	}
	return *o.AnId
}

// GetAnIdOk returns a tuple with the AnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HssAuthenticationInfoRequest) GetAnIdOk() (*AccessNetworkId, bool) {
	if o == nil || IsNil(o.AnId) {
		return nil, false
	}
	return o.AnId, true
}

// HasAnId returns a boolean if a field has been set.
func (o *HssAuthenticationInfoRequest) HasAnId() bool {
	if o != nil && !IsNil(o.AnId) {
		return true
	}

	return false
}

// SetAnId gets a reference to the given AccessNetworkId and assigns it to the AnId field.
func (o *HssAuthenticationInfoRequest) SetAnId(v AccessNetworkId) {
	o.AnId = &v
}

func (o HssAuthenticationInfoRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HssAuthenticationInfoRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	toSerialize["hssAuthType"] = o.HssAuthType
	toSerialize["numOfRequestedVectors"] = o.NumOfRequestedVectors
	if !IsNil(o.RequestingNodeType) {
		toSerialize["requestingNodeType"] = o.RequestingNodeType
	}
	if !IsNil(o.ServingNetworkId) {
		toSerialize["servingNetworkId"] = o.ServingNetworkId
	}
	if !IsNil(o.ResynchronizationInfo) {
		toSerialize["resynchronizationInfo"] = o.ResynchronizationInfo
	}
	if !IsNil(o.AnId) {
		toSerialize["anId"] = o.AnId
	}
	return toSerialize, nil
}

type NullableHssAuthenticationInfoRequest struct {
	value *HssAuthenticationInfoRequest
	isSet bool
}

func (v NullableHssAuthenticationInfoRequest) Get() *HssAuthenticationInfoRequest {
	return v.value
}

func (v *NullableHssAuthenticationInfoRequest) Set(val *HssAuthenticationInfoRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableHssAuthenticationInfoRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableHssAuthenticationInfoRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHssAuthenticationInfoRequest(val *HssAuthenticationInfoRequest) *NullableHssAuthenticationInfoRequest {
	return &NullableHssAuthenticationInfoRequest{value: val, isSet: true}
}

func (v NullableHssAuthenticationInfoRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHssAuthenticationInfoRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


