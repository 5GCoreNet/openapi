/*
TS 28.550 Performance Measurement Job Control Service

OAS 3.0.1 specification of the Performance Measurement Job Control Service @ 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 16.8.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_PerfMeasJobCtrlMnS

import (
	"encoding/json"
)

// checks if the ErrorResponseTypeError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ErrorResponseTypeError{}

// ErrorResponseTypeError struct for ErrorResponseTypeError
type ErrorResponseTypeError struct {
	ErrorInfo *string `json:"errorInfo,omitempty"`
}

// NewErrorResponseTypeError instantiates a new ErrorResponseTypeError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewErrorResponseTypeError() *ErrorResponseTypeError {
	this := ErrorResponseTypeError{}
	return &this
}

// NewErrorResponseTypeErrorWithDefaults instantiates a new ErrorResponseTypeError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewErrorResponseTypeErrorWithDefaults() *ErrorResponseTypeError {
	this := ErrorResponseTypeError{}
	return &this
}

// GetErrorInfo returns the ErrorInfo field value if set, zero value otherwise.
func (o *ErrorResponseTypeError) GetErrorInfo() string {
	if o == nil || IsNil(o.ErrorInfo) {
		var ret string
		return ret
	}
	return *o.ErrorInfo
}

// GetErrorInfoOk returns a tuple with the ErrorInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ErrorResponseTypeError) GetErrorInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ErrorInfo) {
		return nil, false
	}
	return o.ErrorInfo, true
}

// HasErrorInfo returns a boolean if a field has been set.
func (o *ErrorResponseTypeError) HasErrorInfo() bool {
	if o != nil && !IsNil(o.ErrorInfo) {
		return true
	}

	return false
}

// SetErrorInfo gets a reference to the given string and assigns it to the ErrorInfo field.
func (o *ErrorResponseTypeError) SetErrorInfo(v string) {
	o.ErrorInfo = &v
}

func (o ErrorResponseTypeError) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ErrorResponseTypeError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorInfo) {
		toSerialize["errorInfo"] = o.ErrorInfo
	}
	return toSerialize, nil
}

type NullableErrorResponseTypeError struct {
	value *ErrorResponseTypeError
	isSet bool
}

func (v NullableErrorResponseTypeError) Get() *ErrorResponseTypeError {
	return v.value
}

func (v *NullableErrorResponseTypeError) Set(val *ErrorResponseTypeError) {
	v.value = val
	v.isSet = true
}

func (v NullableErrorResponseTypeError) IsSet() bool {
	return v.isSet
}

func (v *NullableErrorResponseTypeError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableErrorResponseTypeError(val *ErrorResponseTypeError) *NullableErrorResponseTypeError {
	return &NullableErrorResponseTypeError{value: val, isSet: true}
}

func (v NullableErrorResponseTypeError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableErrorResponseTypeError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
