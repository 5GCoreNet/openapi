/*
3gpp-acs-pp

API for 5G ACS Parameter Provision.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ACSParameterProvision

import (
	"encoding/json"
)

// checks if the AcsConfigurationDataPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcsConfigurationDataPatch{}

// AcsConfigurationDataPatch Represents the parameters to request to modify an existing Individual ACS Configuration subscription resource. 
type AcsConfigurationDataPatch struct {
	AcsInfo *AcsInfo `json:"acsInfo,omitempty"`
	// String uniquely identifying MTC provider information.
	MtcProviderId *string `json:"mtcProviderId,omitempty"`
}

// NewAcsConfigurationDataPatch instantiates a new AcsConfigurationDataPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcsConfigurationDataPatch() *AcsConfigurationDataPatch {
	this := AcsConfigurationDataPatch{}
	return &this
}

// NewAcsConfigurationDataPatchWithDefaults instantiates a new AcsConfigurationDataPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcsConfigurationDataPatchWithDefaults() *AcsConfigurationDataPatch {
	this := AcsConfigurationDataPatch{}
	return &this
}

// GetAcsInfo returns the AcsInfo field value if set, zero value otherwise.
func (o *AcsConfigurationDataPatch) GetAcsInfo() AcsInfo {
	if o == nil || IsNil(o.AcsInfo) {
		var ret AcsInfo
		return ret
	}
	return *o.AcsInfo
}

// GetAcsInfoOk returns a tuple with the AcsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcsConfigurationDataPatch) GetAcsInfoOk() (*AcsInfo, bool) {
	if o == nil || IsNil(o.AcsInfo) {
		return nil, false
	}
	return o.AcsInfo, true
}

// HasAcsInfo returns a boolean if a field has been set.
func (o *AcsConfigurationDataPatch) HasAcsInfo() bool {
	if o != nil && !IsNil(o.AcsInfo) {
		return true
	}

	return false
}

// SetAcsInfo gets a reference to the given AcsInfo and assigns it to the AcsInfo field.
func (o *AcsConfigurationDataPatch) SetAcsInfo(v AcsInfo) {
	o.AcsInfo = &v
}

// GetMtcProviderId returns the MtcProviderId field value if set, zero value otherwise.
func (o *AcsConfigurationDataPatch) GetMtcProviderId() string {
	if o == nil || IsNil(o.MtcProviderId) {
		var ret string
		return ret
	}
	return *o.MtcProviderId
}

// GetMtcProviderIdOk returns a tuple with the MtcProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AcsConfigurationDataPatch) GetMtcProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.MtcProviderId) {
		return nil, false
	}
	return o.MtcProviderId, true
}

// HasMtcProviderId returns a boolean if a field has been set.
func (o *AcsConfigurationDataPatch) HasMtcProviderId() bool {
	if o != nil && !IsNil(o.MtcProviderId) {
		return true
	}

	return false
}

// SetMtcProviderId gets a reference to the given string and assigns it to the MtcProviderId field.
func (o *AcsConfigurationDataPatch) SetMtcProviderId(v string) {
	o.MtcProviderId = &v
}

func (o AcsConfigurationDataPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcsConfigurationDataPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AcsInfo) {
		toSerialize["acsInfo"] = o.AcsInfo
	}
	if !IsNil(o.MtcProviderId) {
		toSerialize["mtcProviderId"] = o.MtcProviderId
	}
	return toSerialize, nil
}

type NullableAcsConfigurationDataPatch struct {
	value *AcsConfigurationDataPatch
	isSet bool
}

func (v NullableAcsConfigurationDataPatch) Get() *AcsConfigurationDataPatch {
	return v.value
}

func (v *NullableAcsConfigurationDataPatch) Set(val *AcsConfigurationDataPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableAcsConfigurationDataPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableAcsConfigurationDataPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcsConfigurationDataPatch(val *AcsConfigurationDataPatch) *NullableAcsConfigurationDataPatch {
	return &NullableAcsConfigurationDataPatch{value: val, isSet: true}
}

func (v NullableAcsConfigurationDataPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcsConfigurationDataPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


