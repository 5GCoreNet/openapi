/*
LMF Location

LMF Location Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nlmf_Location

import (
	"encoding/json"
)

// checks if the CancelLocData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CancelLocData{}

// CancelLocData Information within Cancel Location Request.
type CancelLocData struct {
	// String providing an URI formatted according to RFC 3986.
	HgmlcCallBackURI string `json:"hgmlcCallBackURI"`
	// LDR Reference.
	LdrReference string `json:"ldrReference"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewCancelLocData instantiates a new CancelLocData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCancelLocData(hgmlcCallBackURI string, ldrReference string) *CancelLocData {
	this := CancelLocData{}
	this.HgmlcCallBackURI = hgmlcCallBackURI
	this.LdrReference = ldrReference
	return &this
}

// NewCancelLocDataWithDefaults instantiates a new CancelLocData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCancelLocDataWithDefaults() *CancelLocData {
	this := CancelLocData{}
	return &this
}

// GetHgmlcCallBackURI returns the HgmlcCallBackURI field value
func (o *CancelLocData) GetHgmlcCallBackURI() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HgmlcCallBackURI
}

// GetHgmlcCallBackURIOk returns a tuple with the HgmlcCallBackURI field value
// and a boolean to check if the value has been set.
func (o *CancelLocData) GetHgmlcCallBackURIOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HgmlcCallBackURI, true
}

// SetHgmlcCallBackURI sets field value
func (o *CancelLocData) SetHgmlcCallBackURI(v string) {
	o.HgmlcCallBackURI = v
}

// GetLdrReference returns the LdrReference field value
func (o *CancelLocData) GetLdrReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LdrReference
}

// GetLdrReferenceOk returns a tuple with the LdrReference field value
// and a boolean to check if the value has been set.
func (o *CancelLocData) GetLdrReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LdrReference, true
}

// SetLdrReference sets field value
func (o *CancelLocData) SetLdrReference(v string) {
	o.LdrReference = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *CancelLocData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CancelLocData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *CancelLocData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *CancelLocData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o CancelLocData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CancelLocData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["hgmlcCallBackURI"] = o.HgmlcCallBackURI
	toSerialize["ldrReference"] = o.LdrReference
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableCancelLocData struct {
	value *CancelLocData
	isSet bool
}

func (v NullableCancelLocData) Get() *CancelLocData {
	return v.value
}

func (v *NullableCancelLocData) Set(val *CancelLocData) {
	v.value = val
	v.isSet = true
}

func (v NullableCancelLocData) IsSet() bool {
	return v.isSet
}

func (v *NullableCancelLocData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCancelLocData(val *CancelLocData) *NullableCancelLocData {
	return &NullableCancelLocData{value: val, isSet: true}
}

func (v NullableCancelLocData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCancelLocData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
