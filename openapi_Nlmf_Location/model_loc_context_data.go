/*
LMF Location

LMF Location Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nlmf_Location

import (
	"encoding/json"
	"time"
)

// checks if the LocContextData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocContextData{}

// LocContextData Information within Transfer Location Context Request.
type LocContextData struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AmfId string `json:"amfId"`
	LocationQoS *LocationQoS `json:"locationQoS,omitempty"`
	SupportedGADShapes []SupportedGADShapes `json:"supportedGADShapes,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	Gpsi *string `json:"gpsi,omitempty"`
	LdrType LdrType `json:"ldrType"`
	// String providing an URI formatted according to RFC 3986.
	HgmlcCallBackURI string `json:"hgmlcCallBackURI"`
	// LDR Reference.
	LdrReference string `json:"ldrReference"`
	PeriodicEventInfo *PeriodicEventInfo `json:"periodicEventInfo,omitempty"`
	AreaEventInfo *AreaEventInfo `json:"areaEventInfo,omitempty"`
	MotionEventInfo *MotionEventInfo `json:"motionEventInfo,omitempty"`
	EventReportMessage EventReportMessage `json:"eventReportMessage"`
	EventReportingStatus *EventReportingStatus `json:"eventReportingStatus,omitempty"`
	UeLocationInfo *UELocationInfo `json:"ueLocationInfo,omitempty"`
	CIoT5GSOptimisation *bool `json:"cIoT5GSOptimisation,omitempty"`
	Ecgi *Ecgi `json:"ecgi,omitempty"`
	Ncgi *Ncgi `json:"ncgi,omitempty"`
	Guami *Guami `json:"guami,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	// Positioning capabilities supported by the UE. A string encoding the \"ProvideCapabilities-r9-IEs\" IE as specified in clause 6.3 of 3GPP TS 37.355 (start from octet 1).
	UePositioningCap *string `json:"uePositioningCap,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ScheduledLocTime *time.Time `json:"scheduledLocTime,omitempty"`
}

// NewLocContextData instantiates a new LocContextData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocContextData(amfId string, ldrType LdrType, hgmlcCallBackURI string, ldrReference string, eventReportMessage EventReportMessage) *LocContextData {
	this := LocContextData{}
	this.AmfId = amfId
	this.LdrType = ldrType
	this.HgmlcCallBackURI = hgmlcCallBackURI
	this.LdrReference = ldrReference
	this.EventReportMessage = eventReportMessage
	var cIoT5GSOptimisation bool = false
	this.CIoT5GSOptimisation = &cIoT5GSOptimisation
	return &this
}

// NewLocContextDataWithDefaults instantiates a new LocContextData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocContextDataWithDefaults() *LocContextData {
	this := LocContextData{}
	var cIoT5GSOptimisation bool = false
	this.CIoT5GSOptimisation = &cIoT5GSOptimisation
	return &this
}

// GetAmfId returns the AmfId field value
func (o *LocContextData) GetAmfId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AmfId
}

// GetAmfIdOk returns a tuple with the AmfId field value
// and a boolean to check if the value has been set.
func (o *LocContextData) GetAmfIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AmfId, true
}

// SetAmfId sets field value
func (o *LocContextData) SetAmfId(v string) {
	o.AmfId = v
}

// GetLocationQoS returns the LocationQoS field value if set, zero value otherwise.
func (o *LocContextData) GetLocationQoS() LocationQoS {
	if o == nil || isNil(o.LocationQoS) {
		var ret LocationQoS
		return ret
	}
	return *o.LocationQoS
}

// GetLocationQoSOk returns a tuple with the LocationQoS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetLocationQoSOk() (*LocationQoS, bool) {
	if o == nil || isNil(o.LocationQoS) {
		return nil, false
	}
	return o.LocationQoS, true
}

// HasLocationQoS returns a boolean if a field has been set.
func (o *LocContextData) HasLocationQoS() bool {
	if o != nil && !isNil(o.LocationQoS) {
		return true
	}

	return false
}

// SetLocationQoS gets a reference to the given LocationQoS and assigns it to the LocationQoS field.
func (o *LocContextData) SetLocationQoS(v LocationQoS) {
	o.LocationQoS = &v
}

// GetSupportedGADShapes returns the SupportedGADShapes field value if set, zero value otherwise.
func (o *LocContextData) GetSupportedGADShapes() []SupportedGADShapes {
	if o == nil || isNil(o.SupportedGADShapes) {
		var ret []SupportedGADShapes
		return ret
	}
	return o.SupportedGADShapes
}

// GetSupportedGADShapesOk returns a tuple with the SupportedGADShapes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetSupportedGADShapesOk() ([]SupportedGADShapes, bool) {
	if o == nil || isNil(o.SupportedGADShapes) {
		return nil, false
	}
	return o.SupportedGADShapes, true
}

// HasSupportedGADShapes returns a boolean if a field has been set.
func (o *LocContextData) HasSupportedGADShapes() bool {
	if o != nil && !isNil(o.SupportedGADShapes) {
		return true
	}

	return false
}

// SetSupportedGADShapes gets a reference to the given []SupportedGADShapes and assigns it to the SupportedGADShapes field.
func (o *LocContextData) SetSupportedGADShapes(v []SupportedGADShapes) {
	o.SupportedGADShapes = v
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *LocContextData) GetSupi() string {
	if o == nil || isNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetSupiOk() (*string, bool) {
	if o == nil || isNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *LocContextData) HasSupi() bool {
	if o != nil && !isNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *LocContextData) SetSupi(v string) {
	o.Supi = &v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *LocContextData) GetGpsi() string {
	if o == nil || isNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetGpsiOk() (*string, bool) {
	if o == nil || isNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *LocContextData) HasGpsi() bool {
	if o != nil && !isNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *LocContextData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetLdrType returns the LdrType field value
func (o *LocContextData) GetLdrType() LdrType {
	if o == nil {
		var ret LdrType
		return ret
	}

	return o.LdrType
}

// GetLdrTypeOk returns a tuple with the LdrType field value
// and a boolean to check if the value has been set.
func (o *LocContextData) GetLdrTypeOk() (*LdrType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LdrType, true
}

// SetLdrType sets field value
func (o *LocContextData) SetLdrType(v LdrType) {
	o.LdrType = v
}

// GetHgmlcCallBackURI returns the HgmlcCallBackURI field value
func (o *LocContextData) GetHgmlcCallBackURI() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.HgmlcCallBackURI
}

// GetHgmlcCallBackURIOk returns a tuple with the HgmlcCallBackURI field value
// and a boolean to check if the value has been set.
func (o *LocContextData) GetHgmlcCallBackURIOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.HgmlcCallBackURI, true
}

// SetHgmlcCallBackURI sets field value
func (o *LocContextData) SetHgmlcCallBackURI(v string) {
	o.HgmlcCallBackURI = v
}

// GetLdrReference returns the LdrReference field value
func (o *LocContextData) GetLdrReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LdrReference
}

// GetLdrReferenceOk returns a tuple with the LdrReference field value
// and a boolean to check if the value has been set.
func (o *LocContextData) GetLdrReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LdrReference, true
}

// SetLdrReference sets field value
func (o *LocContextData) SetLdrReference(v string) {
	o.LdrReference = v
}

// GetPeriodicEventInfo returns the PeriodicEventInfo field value if set, zero value otherwise.
func (o *LocContextData) GetPeriodicEventInfo() PeriodicEventInfo {
	if o == nil || isNil(o.PeriodicEventInfo) {
		var ret PeriodicEventInfo
		return ret
	}
	return *o.PeriodicEventInfo
}

// GetPeriodicEventInfoOk returns a tuple with the PeriodicEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetPeriodicEventInfoOk() (*PeriodicEventInfo, bool) {
	if o == nil || isNil(o.PeriodicEventInfo) {
		return nil, false
	}
	return o.PeriodicEventInfo, true
}

// HasPeriodicEventInfo returns a boolean if a field has been set.
func (o *LocContextData) HasPeriodicEventInfo() bool {
	if o != nil && !isNil(o.PeriodicEventInfo) {
		return true
	}

	return false
}

// SetPeriodicEventInfo gets a reference to the given PeriodicEventInfo and assigns it to the PeriodicEventInfo field.
func (o *LocContextData) SetPeriodicEventInfo(v PeriodicEventInfo) {
	o.PeriodicEventInfo = &v
}

// GetAreaEventInfo returns the AreaEventInfo field value if set, zero value otherwise.
func (o *LocContextData) GetAreaEventInfo() AreaEventInfo {
	if o == nil || isNil(o.AreaEventInfo) {
		var ret AreaEventInfo
		return ret
	}
	return *o.AreaEventInfo
}

// GetAreaEventInfoOk returns a tuple with the AreaEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetAreaEventInfoOk() (*AreaEventInfo, bool) {
	if o == nil || isNil(o.AreaEventInfo) {
		return nil, false
	}
	return o.AreaEventInfo, true
}

// HasAreaEventInfo returns a boolean if a field has been set.
func (o *LocContextData) HasAreaEventInfo() bool {
	if o != nil && !isNil(o.AreaEventInfo) {
		return true
	}

	return false
}

// SetAreaEventInfo gets a reference to the given AreaEventInfo and assigns it to the AreaEventInfo field.
func (o *LocContextData) SetAreaEventInfo(v AreaEventInfo) {
	o.AreaEventInfo = &v
}

// GetMotionEventInfo returns the MotionEventInfo field value if set, zero value otherwise.
func (o *LocContextData) GetMotionEventInfo() MotionEventInfo {
	if o == nil || isNil(o.MotionEventInfo) {
		var ret MotionEventInfo
		return ret
	}
	return *o.MotionEventInfo
}

// GetMotionEventInfoOk returns a tuple with the MotionEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetMotionEventInfoOk() (*MotionEventInfo, bool) {
	if o == nil || isNil(o.MotionEventInfo) {
		return nil, false
	}
	return o.MotionEventInfo, true
}

// HasMotionEventInfo returns a boolean if a field has been set.
func (o *LocContextData) HasMotionEventInfo() bool {
	if o != nil && !isNil(o.MotionEventInfo) {
		return true
	}

	return false
}

// SetMotionEventInfo gets a reference to the given MotionEventInfo and assigns it to the MotionEventInfo field.
func (o *LocContextData) SetMotionEventInfo(v MotionEventInfo) {
	o.MotionEventInfo = &v
}

// GetEventReportMessage returns the EventReportMessage field value
func (o *LocContextData) GetEventReportMessage() EventReportMessage {
	if o == nil {
		var ret EventReportMessage
		return ret
	}

	return o.EventReportMessage
}

// GetEventReportMessageOk returns a tuple with the EventReportMessage field value
// and a boolean to check if the value has been set.
func (o *LocContextData) GetEventReportMessageOk() (*EventReportMessage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventReportMessage, true
}

// SetEventReportMessage sets field value
func (o *LocContextData) SetEventReportMessage(v EventReportMessage) {
	o.EventReportMessage = v
}

// GetEventReportingStatus returns the EventReportingStatus field value if set, zero value otherwise.
func (o *LocContextData) GetEventReportingStatus() EventReportingStatus {
	if o == nil || isNil(o.EventReportingStatus) {
		var ret EventReportingStatus
		return ret
	}
	return *o.EventReportingStatus
}

// GetEventReportingStatusOk returns a tuple with the EventReportingStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetEventReportingStatusOk() (*EventReportingStatus, bool) {
	if o == nil || isNil(o.EventReportingStatus) {
		return nil, false
	}
	return o.EventReportingStatus, true
}

// HasEventReportingStatus returns a boolean if a field has been set.
func (o *LocContextData) HasEventReportingStatus() bool {
	if o != nil && !isNil(o.EventReportingStatus) {
		return true
	}

	return false
}

// SetEventReportingStatus gets a reference to the given EventReportingStatus and assigns it to the EventReportingStatus field.
func (o *LocContextData) SetEventReportingStatus(v EventReportingStatus) {
	o.EventReportingStatus = &v
}

// GetUeLocationInfo returns the UeLocationInfo field value if set, zero value otherwise.
func (o *LocContextData) GetUeLocationInfo() UELocationInfo {
	if o == nil || isNil(o.UeLocationInfo) {
		var ret UELocationInfo
		return ret
	}
	return *o.UeLocationInfo
}

// GetUeLocationInfoOk returns a tuple with the UeLocationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetUeLocationInfoOk() (*UELocationInfo, bool) {
	if o == nil || isNil(o.UeLocationInfo) {
		return nil, false
	}
	return o.UeLocationInfo, true
}

// HasUeLocationInfo returns a boolean if a field has been set.
func (o *LocContextData) HasUeLocationInfo() bool {
	if o != nil && !isNil(o.UeLocationInfo) {
		return true
	}

	return false
}

// SetUeLocationInfo gets a reference to the given UELocationInfo and assigns it to the UeLocationInfo field.
func (o *LocContextData) SetUeLocationInfo(v UELocationInfo) {
	o.UeLocationInfo = &v
}

// GetCIoT5GSOptimisation returns the CIoT5GSOptimisation field value if set, zero value otherwise.
func (o *LocContextData) GetCIoT5GSOptimisation() bool {
	if o == nil || isNil(o.CIoT5GSOptimisation) {
		var ret bool
		return ret
	}
	return *o.CIoT5GSOptimisation
}

// GetCIoT5GSOptimisationOk returns a tuple with the CIoT5GSOptimisation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetCIoT5GSOptimisationOk() (*bool, bool) {
	if o == nil || isNil(o.CIoT5GSOptimisation) {
		return nil, false
	}
	return o.CIoT5GSOptimisation, true
}

// HasCIoT5GSOptimisation returns a boolean if a field has been set.
func (o *LocContextData) HasCIoT5GSOptimisation() bool {
	if o != nil && !isNil(o.CIoT5GSOptimisation) {
		return true
	}

	return false
}

// SetCIoT5GSOptimisation gets a reference to the given bool and assigns it to the CIoT5GSOptimisation field.
func (o *LocContextData) SetCIoT5GSOptimisation(v bool) {
	o.CIoT5GSOptimisation = &v
}

// GetEcgi returns the Ecgi field value if set, zero value otherwise.
func (o *LocContextData) GetEcgi() Ecgi {
	if o == nil || isNil(o.Ecgi) {
		var ret Ecgi
		return ret
	}
	return *o.Ecgi
}

// GetEcgiOk returns a tuple with the Ecgi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetEcgiOk() (*Ecgi, bool) {
	if o == nil || isNil(o.Ecgi) {
		return nil, false
	}
	return o.Ecgi, true
}

// HasEcgi returns a boolean if a field has been set.
func (o *LocContextData) HasEcgi() bool {
	if o != nil && !isNil(o.Ecgi) {
		return true
	}

	return false
}

// SetEcgi gets a reference to the given Ecgi and assigns it to the Ecgi field.
func (o *LocContextData) SetEcgi(v Ecgi) {
	o.Ecgi = &v
}

// GetNcgi returns the Ncgi field value if set, zero value otherwise.
func (o *LocContextData) GetNcgi() Ncgi {
	if o == nil || isNil(o.Ncgi) {
		var ret Ncgi
		return ret
	}
	return *o.Ncgi
}

// GetNcgiOk returns a tuple with the Ncgi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetNcgiOk() (*Ncgi, bool) {
	if o == nil || isNil(o.Ncgi) {
		return nil, false
	}
	return o.Ncgi, true
}

// HasNcgi returns a boolean if a field has been set.
func (o *LocContextData) HasNcgi() bool {
	if o != nil && !isNil(o.Ncgi) {
		return true
	}

	return false
}

// SetNcgi gets a reference to the given Ncgi and assigns it to the Ncgi field.
func (o *LocContextData) SetNcgi(v Ncgi) {
	o.Ncgi = &v
}

// GetGuami returns the Guami field value if set, zero value otherwise.
func (o *LocContextData) GetGuami() Guami {
	if o == nil || isNil(o.Guami) {
		var ret Guami
		return ret
	}
	return *o.Guami
}

// GetGuamiOk returns a tuple with the Guami field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetGuamiOk() (*Guami, bool) {
	if o == nil || isNil(o.Guami) {
		return nil, false
	}
	return o.Guami, true
}

// HasGuami returns a boolean if a field has been set.
func (o *LocContextData) HasGuami() bool {
	if o != nil && !isNil(o.Guami) {
		return true
	}

	return false
}

// SetGuami gets a reference to the given Guami and assigns it to the Guami field.
func (o *LocContextData) SetGuami(v Guami) {
	o.Guami = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *LocContextData) GetSupportedFeatures() string {
	if o == nil || isNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *LocContextData) HasSupportedFeatures() bool {
	if o != nil && !isNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *LocContextData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetUePositioningCap returns the UePositioningCap field value if set, zero value otherwise.
func (o *LocContextData) GetUePositioningCap() string {
	if o == nil || isNil(o.UePositioningCap) {
		var ret string
		return ret
	}
	return *o.UePositioningCap
}

// GetUePositioningCapOk returns a tuple with the UePositioningCap field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetUePositioningCapOk() (*string, bool) {
	if o == nil || isNil(o.UePositioningCap) {
		return nil, false
	}
	return o.UePositioningCap, true
}

// HasUePositioningCap returns a boolean if a field has been set.
func (o *LocContextData) HasUePositioningCap() bool {
	if o != nil && !isNil(o.UePositioningCap) {
		return true
	}

	return false
}

// SetUePositioningCap gets a reference to the given string and assigns it to the UePositioningCap field.
func (o *LocContextData) SetUePositioningCap(v string) {
	o.UePositioningCap = &v
}

// GetScheduledLocTime returns the ScheduledLocTime field value if set, zero value otherwise.
func (o *LocContextData) GetScheduledLocTime() time.Time {
	if o == nil || isNil(o.ScheduledLocTime) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledLocTime
}

// GetScheduledLocTimeOk returns a tuple with the ScheduledLocTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocContextData) GetScheduledLocTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.ScheduledLocTime) {
		return nil, false
	}
	return o.ScheduledLocTime, true
}

// HasScheduledLocTime returns a boolean if a field has been set.
func (o *LocContextData) HasScheduledLocTime() bool {
	if o != nil && !isNil(o.ScheduledLocTime) {
		return true
	}

	return false
}

// SetScheduledLocTime gets a reference to the given time.Time and assigns it to the ScheduledLocTime field.
func (o *LocContextData) SetScheduledLocTime(v time.Time) {
	o.ScheduledLocTime = &v
}

func (o LocContextData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocContextData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["amfId"] = o.AmfId
	if !isNil(o.LocationQoS) {
		toSerialize["locationQoS"] = o.LocationQoS
	}
	if !isNil(o.SupportedGADShapes) {
		toSerialize["supportedGADShapes"] = o.SupportedGADShapes
	}
	if !isNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !isNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	toSerialize["ldrType"] = o.LdrType
	toSerialize["hgmlcCallBackURI"] = o.HgmlcCallBackURI
	toSerialize["ldrReference"] = o.LdrReference
	if !isNil(o.PeriodicEventInfo) {
		toSerialize["periodicEventInfo"] = o.PeriodicEventInfo
	}
	if !isNil(o.AreaEventInfo) {
		toSerialize["areaEventInfo"] = o.AreaEventInfo
	}
	if !isNil(o.MotionEventInfo) {
		toSerialize["motionEventInfo"] = o.MotionEventInfo
	}
	toSerialize["eventReportMessage"] = o.EventReportMessage
	if !isNil(o.EventReportingStatus) {
		toSerialize["eventReportingStatus"] = o.EventReportingStatus
	}
	if !isNil(o.UeLocationInfo) {
		toSerialize["ueLocationInfo"] = o.UeLocationInfo
	}
	if !isNil(o.CIoT5GSOptimisation) {
		toSerialize["cIoT5GSOptimisation"] = o.CIoT5GSOptimisation
	}
	if !isNil(o.Ecgi) {
		toSerialize["ecgi"] = o.Ecgi
	}
	if !isNil(o.Ncgi) {
		toSerialize["ncgi"] = o.Ncgi
	}
	if !isNil(o.Guami) {
		toSerialize["guami"] = o.Guami
	}
	if !isNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !isNil(o.UePositioningCap) {
		toSerialize["uePositioningCap"] = o.UePositioningCap
	}
	if !isNil(o.ScheduledLocTime) {
		toSerialize["scheduledLocTime"] = o.ScheduledLocTime
	}
	return toSerialize, nil
}

type NullableLocContextData struct {
	value *LocContextData
	isSet bool
}

func (v NullableLocContextData) Get() *LocContextData {
	return v.value
}

func (v *NullableLocContextData) Set(val *LocContextData) {
	v.value = val
	v.isSet = true
}

func (v NullableLocContextData) IsSet() bool {
	return v.isSet
}

func (v *NullableLocContextData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocContextData(val *LocContextData) *NullableLocContextData {
	return &NullableLocContextData{value: val, isSet: true}
}

func (v NullableLocContextData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocContextData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


