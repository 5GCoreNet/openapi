/*
Nnssaaf_NSSAA

Network Slice-Specific Authentication and Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnssaaf_NSSAA

import (
	"encoding/json"
)

// checks if the SliceAuthConfirmationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SliceAuthConfirmationResponse{}

// SliceAuthConfirmationResponse struct for SliceAuthConfirmationResponse
type SliceAuthConfirmationResponse struct {
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	Gpsi string `json:"gpsi"`
	Snssai Snssai `json:"snssai"`
	// contains an EAP packet
	EapMessage NullableString `json:"eapMessage"`
	AuthResult *AuthStatus `json:"authResult,omitempty"`
}

// NewSliceAuthConfirmationResponse instantiates a new SliceAuthConfirmationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSliceAuthConfirmationResponse(gpsi string, snssai Snssai, eapMessage NullableString) *SliceAuthConfirmationResponse {
	this := SliceAuthConfirmationResponse{}
	this.Gpsi = gpsi
	this.Snssai = snssai
	this.EapMessage = eapMessage
	return &this
}

// NewSliceAuthConfirmationResponseWithDefaults instantiates a new SliceAuthConfirmationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSliceAuthConfirmationResponseWithDefaults() *SliceAuthConfirmationResponse {
	this := SliceAuthConfirmationResponse{}
	return &this
}

// GetGpsi returns the Gpsi field value
func (o *SliceAuthConfirmationResponse) GetGpsi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value
// and a boolean to check if the value has been set.
func (o *SliceAuthConfirmationResponse) GetGpsiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Gpsi, true
}

// SetGpsi sets field value
func (o *SliceAuthConfirmationResponse) SetGpsi(v string) {
	o.Gpsi = v
}

// GetSnssai returns the Snssai field value
func (o *SliceAuthConfirmationResponse) GetSnssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value
// and a boolean to check if the value has been set.
func (o *SliceAuthConfirmationResponse) GetSnssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Snssai, true
}

// SetSnssai sets field value
func (o *SliceAuthConfirmationResponse) SetSnssai(v Snssai) {
	o.Snssai = v
}

// GetEapMessage returns the EapMessage field value
// If the value is explicit nil, the zero value for string will be returned
func (o *SliceAuthConfirmationResponse) GetEapMessage() string {
	if o == nil || o.EapMessage.Get() == nil {
		var ret string
		return ret
	}

	return *o.EapMessage.Get()
}

// GetEapMessageOk returns a tuple with the EapMessage field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SliceAuthConfirmationResponse) GetEapMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EapMessage.Get(), o.EapMessage.IsSet()
}

// SetEapMessage sets field value
func (o *SliceAuthConfirmationResponse) SetEapMessage(v string) {
	o.EapMessage.Set(&v)
}

// GetAuthResult returns the AuthResult field value if set, zero value otherwise.
func (o *SliceAuthConfirmationResponse) GetAuthResult() AuthStatus {
	if o == nil || IsNil(o.AuthResult) {
		var ret AuthStatus
		return ret
	}
	return *o.AuthResult
}

// GetAuthResultOk returns a tuple with the AuthResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SliceAuthConfirmationResponse) GetAuthResultOk() (*AuthStatus, bool) {
	if o == nil || IsNil(o.AuthResult) {
		return nil, false
	}
	return o.AuthResult, true
}

// HasAuthResult returns a boolean if a field has been set.
func (o *SliceAuthConfirmationResponse) HasAuthResult() bool {
	if o != nil && !IsNil(o.AuthResult) {
		return true
	}

	return false
}

// SetAuthResult gets a reference to the given AuthStatus and assigns it to the AuthResult field.
func (o *SliceAuthConfirmationResponse) SetAuthResult(v AuthStatus) {
	o.AuthResult = &v
}

func (o SliceAuthConfirmationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SliceAuthConfirmationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["gpsi"] = o.Gpsi
	toSerialize["snssai"] = o.Snssai
	toSerialize["eapMessage"] = o.EapMessage.Get()
	if !IsNil(o.AuthResult) {
		toSerialize["authResult"] = o.AuthResult
	}
	return toSerialize, nil
}

type NullableSliceAuthConfirmationResponse struct {
	value *SliceAuthConfirmationResponse
	isSet bool
}

func (v NullableSliceAuthConfirmationResponse) Get() *SliceAuthConfirmationResponse {
	return v.value
}

func (v *NullableSliceAuthConfirmationResponse) Set(val *SliceAuthConfirmationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableSliceAuthConfirmationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableSliceAuthConfirmationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSliceAuthConfirmationResponse(val *SliceAuthConfirmationResponse) *NullableSliceAuthConfirmationResponse {
	return &NullableSliceAuthConfirmationResponse{value: val, isSet: true}
}

func (v NullableSliceAuthConfirmationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSliceAuthConfirmationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


