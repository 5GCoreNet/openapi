openapi: 3.0.0
info:
  description: "API for EES Session with Qos service.  \nÂ© 2022, 3GPP Organizational\
    \ Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  title: EES Session with QoS API
  version: 1.1.0-alpha.1
externalDocs:
  description: |
    3GPP TS 29.558 V18.0.0 Enabling Edge Applications; Application Programming Interface (API) specification; Stage 3
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.558/
servers:
- url: "{apiRoot}/eees-session-with-qos/v1"
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in clause 7.5 of 3GPP TS 29.558.
security:
- {}
- oAuth2ClientCredentials: []
paths:
  /sessions:
    get:
      description: Retrieve all the Session With QoS information.
      operationId: ReadAllSessionsWithQoS
      parameters:
      - description: Identifier of the EAS which querying the status of subscriptions.
        explode: true
        in: query
        name: eas-id
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                description: |
                  All the subscription information related to the request URI is returned
                items:
                  $ref: '#/components/schemas/SessionWithQoS'
                minItems: 1
                type: array
          description: OK (Successful get all of the active subscriptions)
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Read all Sessions with QoS resource
      tags:
      - Sessions with QoS (Collection)
    post:
      callbacks:
        notificationDestination:
          '{request.body#/notificationDestination}':
            post:
              operationId: notificationDestination_request_bodyNotificationDestinationPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/UserPlaneEventNotification'
                required: true
              responses:
                "204":
                  description: No Content (successful notification)
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      description: |
        Request reservation of resources for a data session between AC and EAS with a specific QoS.
      operationId: CreateIndSessionWithQoS
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionWithQoS'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionWithQoS'
          description: Created (Successful creation)
          headers:
            Location:
              description: Contains the URI of the newly created resource
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Create a new Individual Session with QoS resource
      tags:
      - Sessions with QoS (Collection)
  /sessions/{sessionId}:
    delete:
      description: Remove an Individual Session with QoS resource identified by a
        sessionId.
      operationId: DeleteIndSessionWithQoS
      parameters:
      - description: session Id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: |
            The individual Session with QoS resource matching the sessionId is successfully deleted.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Delete an Individual Session with QoS resource
      tags:
      - Individual Session with QoS (Document)
    get:
      description: Read a subscription resource for a sessionId.
      operationId: ReadIndSessionWithQoS
      parameters:
      - description: Session Id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionWithQoS'
          description: The subscription information related to the request URI is
            returned.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Read Individual Session with QoS resource
      tags:
      - Individual Session with QoS (Document)
    patch:
      operationId: ModifyIndSessionWithQoS
      parameters:
      - description: session Id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/SessionWithQoSPatch'
        description: |
          Partial update an existing Individual Session with QoS resource identified by a sessionId.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionWithQoS'
          description: |
            The individual Session with QoS is successfully modified and the updated session with QoS context information is returned in the response.
        "204":
          description: No Content.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Modify an Individual Session with QoS resource
      tags:
      - Individual Session with QoS (Document)
    put:
      description: |
        Fully replace an existing Individual Session with QoS resource identified by a sessionId.
      operationId: UpdateIndSessionWithQoS
      parameters:
      - description: Session Id.
        explode: false
        in: path
        name: sessionId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SessionWithQoS'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SessionWithQoS'
          description: |
            The individual Session with QoS is successfully modified and the updated session with QoS context information is returned in the response.
        "204":
          description: No Content
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Update an Individual Session with QoS resource
      tags:
      - Individual Session with QoS (Document)
components:
  responses:
    "307":
      description: Temporary Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "308":
      description: Permanent Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    "406":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Acceptable
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Too Many Requests
    "500":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    "503":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    default:
      description: Generic Error
    "411":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Length Required
    "413":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Payload Too Large
    "415":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unsupported Media Type
  schemas:
    SessionWithQoS:
      description: Represents an Individual Session with QoS Subscription.
      example:
        notificationDestination: notificationDestination
        disUeNotif: true
        altQosReference:
        - altQosReference
        - altQosReference
        snssai:
          sd: sd
          sst: 58
        ipFlows:
        - null
        - null
        ipDomain: ipDomain
        dnn: dnn
        intGrpId: intGrpId
        qosReference: qosReference
        maxbrDl: maxbrDl
        websockNotifConfig:
          requestWebsocketUri: true
          websocketUri: websocketUri
        extGrpId: extGrpId
        requestTestNotification: true
        easId: easId
        ueIpv4Addr: ueIpv4Addr
        self: self
        ueIpv6Addr: ueIpv6Addr
        ueId: ueId
        qosMonInfo:
          reqQosMonParams:
          - null
          - null
          repFreqs:
          - null
          - null
          repThreshUl: 0
          repThreshDl: 0
          repPeriod: 5
          repThreshRp: 0
          waitTime: 5
        maxbrUl: maxbrUl
        events:
        - null
        - null
        suppFeat: suppFeat
        sponsorInformation:
          aspId: aspId
          sponsorId: sponsorId
      properties:
        self:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        easId:
          description: Identifier of an EAS.
          type: string
        ueIpv4Addr:
          description: string identifying a Ipv4 address formatted in the "dotted
            decimal" notation as defined in IETF RFC 1166.
          type: string
        ueIpv6Addr:
          description: string identifying a Ipv6 address formatted according to clause
            4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5
            of IETF RFC 5952 shall not be used.
          type: string
        ipDomain:
          type: string
        ueId:
          description: "String identifying a Gpsi shall contain either an External\
            \ Id or an MSISDN.  It shall be formatted as follows -External Identifier=\
            \ \"extid-'extid', where 'extid'  shall be formatted according to clause\
            \ 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier. \n"
          pattern: "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
          type: string
        intGrpId:
          description: "String identifying a group of devices network internal globally\
            \ unique ID which identifies a set of IMSIs, as specified in clause 19.9\
            \ of 3GPP TS 23.003. \n"
          pattern: "^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$"
          type: string
        extGrpId:
          description: "String identifying External Group Identifier that identifies\
            \ a group made up of one or more  subscriptions associated to a group\
            \ of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003. \n"
          pattern: "^extgroupid-[^@]+@[^@]+$"
          type: string
        ipFlows:
          description: Contains the flow description for the Uplink and/or Downlink
            IP flows.
          items:
            $ref: '#/components/schemas/FlowDescription'
          minItems: 1
          type: array
        qosReference:
          description: Identifies a pre-defined QoS information.
          type: string
        altQosReference:
          description: |
            Identifies an ordered list of pre-defined QoS information. The lower the index of the array for a given entry, the higher the priority.
          items:
            type: string
          type: array
        events:
          description: Indicates the events subscribed by the EAS.
          items:
            $ref: '#/components/schemas/UserPlaneEvent'
          type: array
        sponsorInformation:
          $ref: '#/components/schemas/SponsorInformation'
        qosMonInfo:
          $ref: '#/components/schemas/QosMonitoringInformation'
        notificationDestination:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        dnn:
          description: |
            String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
          type: string
        snssai:
          $ref: '#/components/schemas/Snssai'
        maxbrUl:
          description: |
            String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        maxbrDl:
          description: |
            String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        disUeNotif:
          description: |
            Indicates to disable QoS flow parameters signalling to the UE when the SMF is notified by the NG-RAN of changes in the fulfilled QoS situation when it is included and set to "true". The fulfilled situation is either the QoS profile or an Alternative QoS Profile. The default value "false" shall apply, if the attribute is not present and has not been supplied previously.
          type: boolean
        requestTestNotification:
          description: |
            Set to true by Subscriber to request the EES to send a test notification as defined in 3GPP TS 29.122. Set to false or omitted otherwise.
          type: boolean
        websockNotifConfig:
          $ref: '#/components/schemas/WebsockNotifConfig'
        suppFeat:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - easId
      - ipFlows
      type: object
    SessionWithQoSPatch:
      description: Represents a modification request of Individual Session with QoS
        Subscription.
      properties:
        ipFlows:
          description: Contains the flow description for the Uplink and/or Downlink
            IP flows.
          items:
            $ref: '#/components/schemas/FlowDescription'
          minItems: 1
          type: array
        qosReference:
          description: Identifies a pre-defined QoS information.
          type: string
        altQosReference:
          description: |
            Identifies an ordered list of pre-defined QoS information. The lower the index of the array for a given entry, the higher the priority.
          items:
            type: string
          type: array
        events:
          description: Indicates the events subscribed by the EAS.
          items:
            $ref: '#/components/schemas/UserPlaneEvent'
          type: array
        sponsorInformation:
          $ref: '#/components/schemas/SponsorInformation'
        qosMonInfo:
          $ref: '#/components/schemas/QosMonitoringInformationRm'
        notificationDestination:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        maxbrUl:
          description: |
            This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.
          nullable: true
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        maxbrDl:
          description: |
            This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.
          nullable: true
          pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
          type: string
        disUeNotif:
          type: boolean
      type: object
    UserPlaneEventNotification:
      description: Represents the user plane event notification.
      example:
        eventReports:
        - flowIds:
          - 5
          - 5
          accumulatedUsage:
            duration: 0
            totalVolume: 0
            downlinkVolume: 0
            uplinkVolume: 0
          appliedQosRef: appliedQosRef
          ratType: null
          plmnId:
            mnc: mnc
            nid: nid
            mcc: mcc
          event: null
          qosMonReports:
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
        - flowIds:
          - 5
          - 5
          accumulatedUsage:
            duration: 0
            totalVolume: 0
            downlinkVolume: 0
            uplinkVolume: 0
          appliedQosRef: appliedQosRef
          ratType: null
          plmnId:
            mnc: mnc
            nid: nid
            mcc: mcc
          event: null
          qosMonReports:
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
          - ulDelays:
            - null
            - null
            rtDelays:
            - null
            - null
            dlDelays:
            - null
            - null
        sessionId: sessionId
      properties:
        sessionId:
          description: |
            String identifying the individual data session information for which the QoS event notification is delivered.
          type: string
        eventReports:
          description: |
            Contains the flow description for the Uplink and/or Downlink IP flows.
          items:
            $ref: '#/components/schemas/UserPlaneEventReport'
          minItems: 1
          type: array
      required:
      - eventReports
      - sessionId
      type: object
    ProblemDetails:
      description: Represents additional information and details on an error response.
      properties:
        type:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        title:
          description: "A short, human-readable summary of the problem type. It should\
            \ not change from occurrence to occurrence of the problem."
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        cause:
          description: "A machine-readable application error cause specific to this\
            \ occurrence of the problem. This IE should be present and provide application-related\
            \ error information, if available."
          type: string
        invalidParams:
          description: "Description of invalid parameters, for a request rejected\
            \ due to invalid parameters."
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      type: object
    Uri:
      description: string providing an URI formatted according to IETF RFC 3986.
      type: string
    InvalidParam:
      description: "Represents the description of invalid parameters, for a request\
        \ rejected due to invalid parameters."
      properties:
        param:
          description: "Attribute's name encoded as a JSON Pointer, or header's name."
          type: string
        reason:
          description: "A human-readable reason, e.g. \"must be a positive integer\"\
            ."
          type: string
      required:
      - param
      type: object
    Ipv4Addr:
      description: string identifying a Ipv4 address formatted in the "dotted decimal"
        notation as defined in IETF RFC 1166.
      type: string
    Ipv6Addr:
      description: string identifying a Ipv6 address formatted according to clause
        4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of
        IETF RFC 5952 shall not be used.
      type: string
    Gpsi:
      description: "String identifying a Gpsi shall contain either an External Id\
        \ or an MSISDN.  It shall be formatted as follows -External Identifier= \"\
        extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2\
        \ of 3GPP TS 23.003 that describes an  External Identifier. \n"
      pattern: "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
      type: string
    GroupId:
      description: "String identifying a group of devices network internal globally\
        \ unique ID which identifies a set of IMSIs, as specified in clause 19.9 of\
        \ 3GPP TS 23.003. \n"
      pattern: "^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$"
      type: string
    ExternalGroupId:
      description: "String identifying External Group Identifier that identifies a\
        \ group made up of one or more  subscriptions associated to a group of IMSIs,\
        \ as specified in clause 19.7.3 of 3GPP TS 23.003. \n"
      pattern: "^extgroupid-[^@]+@[^@]+$"
      type: string
    FlowDescription:
      description: Defines a packet filter of an IP flow.
      type: string
    UserPlaneEvent:
      anyOf:
      - enum:
        - SESSION_TERMINATION
        - LOSS_OF_BEARER
        - RECOVERY_OF_BEARER
        - RELEASE_OF_BEARER
        - USAGE_REPORT
        - FAILED_RESOURCES_ALLOCATION
        - QOS_GUARANTEED
        - QOS_NOT_GUARANTEED
        - QOS_MONITORING
        - SUCCESSFUL_RESOURCES_ALLOCATION
        - ACCESS_TYPE_CHANGE
        - PLMN_CHG
        type: string
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are - SESSION_TERMINATION: Indicates that Rx session is terminated. - LOSS_OF_BEARER : Indicates a loss of a bearer. - RECOVERY_OF_BEARER: Indicates a recovery of a bearer. - RELEASE_OF_BEARER: Indicates a release of a bearer. - USAGE_REPORT: Indicates the usage report event. - FAILED_RESOURCES_ALLOCATION: Indicates the resource allocation is failed. - QOS_GUARANTEED: The QoS targets of one or more SDFs are guaranteed again. - QOS_NOT_GUARANTEED: The QoS targets of one or more SDFs are not being guaranteed. - QOS_MONITORING: Indicates a QoS monitoring event. - SUCCESSFUL_RESOURCES_ALLOCATION: Indicates the resource allocation is successful. - ACCESS_TYPE_CHANGE: Indicates an Access type change. - PLMN_CHG: Indicates a PLMN change.
    SponsorInformation:
      description: Represents a sponsor information.
      example:
        aspId: aspId
        sponsorId: sponsorId
      properties:
        sponsorId:
          description: It indicates Sponsor ID.
          type: string
        aspId:
          description: It indicates Application Service Provider ID.
          type: string
      required:
      - aspId
      - sponsorId
      type: object
    QosMonitoringInformation:
      description: Represents QoS monitoring information.
      example:
        reqQosMonParams:
        - null
        - null
        repFreqs:
        - null
        - null
        repThreshUl: 0
        repThreshDl: 0
        repPeriod: 5
        repThreshRp: 0
        waitTime: 5
      properties:
        reqQosMonParams:
          items:
            $ref: '#/components/schemas/RequestedQosMonitoringParameter'
          minItems: 1
          type: array
        repFreqs:
          items:
            $ref: '#/components/schemas/ReportingFrequency'
          minItems: 1
          type: array
        repThreshDl:
          description: "Unsigned Integer, i.e. only value 0 and integers above 0 are\
            \ permissible."
          minimum: 0
          type: integer
        repThreshUl:
          description: "Unsigned Integer, i.e. only value 0 and integers above 0 are\
            \ permissible."
          minimum: 0
          type: integer
        repThreshRp:
          description: "Unsigned Integer, i.e. only value 0 and integers above 0 are\
            \ permissible."
          minimum: 0
          type: integer
        waitTime:
          description: indicating a time in seconds.
          type: integer
        repPeriod:
          description: indicating a time in seconds.
          type: integer
      required:
      - repFreqs
      - reqQosMonParams
      type: object
    Dnn:
      description: |
        String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
      type: string
    Snssai:
      description: |
        When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
      example:
        sd: sd
        sst: 58
      properties:
        sst:
          description: "Unsigned integer, within the range 0 to 255, representing\
            \ the Slice/Service Type.  It indicates the expected Network Slice behaviour\
            \ in terms of features and services. Values 0 to 127 correspond to the\
            \ standardized SST range. Values 128 to 255 correspond  to the Operator-specific\
            \ range. See clause 28.4.2 of 3GPP TS 23.003. Standardized values are\
            \ defined in clause 5.15.2.2 of 3GPP TS 23.501. \n"
          maximum: 255
          minimum: 0
          type: integer
        sd:
          description: |
            3-octet string, representing the Slice Differentiator, in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the SD shall appear first in the string, and the character representing the 4 least significant bit of the SD shall appear last in the string. This is an optional parameter that complements the Slice/Service type(s) to allow to  differentiate amongst multiple Network Slices of the same Slice/Service type. This IE shall be absent if no SD value is associated with the SST.
          pattern: "^[A-Fa-f0-9]{6}$"
          type: string
      required:
      - sst
      type: object
    BitRate:
      description: |
        String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix "K" is used to represent the standard symbol "k".
      pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
      type: string
    WebsockNotifConfig:
      description: Represents the configuration information for the delivery of notifications
        over Websockets.
      example:
        requestWebsocketUri: true
        websocketUri: websocketUri
      properties:
        websocketUri:
          description: string formatted according to IETF RFC 3986 identifying a referenced
            resource.
          type: string
        requestWebsocketUri:
          description: Set by the SCS/AS to indicate that the Websocket delivery is
            requested.
          type: boolean
      type: object
    Link:
      description: string formatted according to IETF RFC 3986 identifying a referenced
        resource.
      type: string
    SupportedFeatures:
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
      pattern: "^[A-Fa-f0-9]*$"
      type: string
    QosMonitoringInformationRm:
      description: Represents the same as the QosMonitoringInformation data type but
        with the nullable:true property.
      properties:
        reqQosMonParams:
          items:
            $ref: '#/components/schemas/RequestedQosMonitoringParameter'
          minItems: 1
          type: array
        repFreqs:
          items:
            $ref: '#/components/schemas/ReportingFrequency'
          minItems: 1
          type: array
        repThreshDl:
          description: |
            Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property.
          minimum: 0
          nullable: true
          type: integer
        repThreshUl:
          description: |
            Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property.
          minimum: 0
          nullable: true
          type: integer
        repThreshRp:
          description: |
            Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property.
          minimum: 0
          nullable: true
          type: integer
        waitTime:
          description: "indicating a time in seconds with OpenAPI defined 'nullable:\
            \ true' property."
          nullable: true
          type: integer
        repPeriod:
          description: "indicating a time in seconds with OpenAPI defined 'nullable:\
            \ true' property."
          nullable: true
          type: integer
      type: object
    BitRateRm:
      description: |
        This data type is defined in the same way as the 'BitRate' data type, but with the OpenAPI 'nullable: true' property.
      nullable: true
      pattern: ^\d+(\.\d+)? (bps|Kbps|Mbps|Gbps|Tbps)$
      type: string
    UserPlaneEventReport:
      description: Represents an event report for user plane.
      example:
        flowIds:
        - 5
        - 5
        accumulatedUsage:
          duration: 0
          totalVolume: 0
          downlinkVolume: 0
          uplinkVolume: 0
        appliedQosRef: appliedQosRef
        ratType: null
        plmnId:
          mnc: mnc
          nid: nid
          mcc: mcc
        event: null
        qosMonReports:
        - ulDelays:
          - null
          - null
          rtDelays:
          - null
          - null
          dlDelays:
          - null
          - null
        - ulDelays:
          - null
          - null
          rtDelays:
          - null
          - null
          dlDelays:
          - null
          - null
      properties:
        event:
          $ref: '#/components/schemas/UserPlaneEvent'
        accumulatedUsage:
          $ref: '#/components/schemas/AccumulatedUsage'
        flowIds:
          description: |
            Identifies the affected flows that were sent during event subscription. It might be omitted when the reported event applies to all the flows sent during the subscription.
          items:
            type: integer
          minItems: 1
          type: array
        appliedQosRef:
          description: The currently applied QoS reference. Applicable for event QOS_NOT_GUARANTEED
            or SUCCESSFUL_RESOURCES_ALLOCATION.
          type: string
        plmnId:
          $ref: '#/components/schemas/PlmnIdNid'
        qosMonReports:
          description: Contains the QoS Monitoring Reporting information
          items:
            $ref: '#/components/schemas/QosMonitoringReport'
          minItems: 1
          type: array
        ratType:
          $ref: '#/components/schemas/RatType'
      required:
      - event
      type: object
    QosMonitoringReport:
      description: Represents a QoS monitoring report.
      example:
        ulDelays:
        - null
        - null
        rtDelays:
        - null
        - null
        dlDelays:
        - null
        - null
      properties:
        ulDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
        dlDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
        rtDelays:
          items:
            $ref: '#/components/schemas/Uinteger'
          minItems: 1
          type: array
      type: object
    RequestedQosMonitoringParameter:
      anyOf:
      - enum:
        - DOWNLINK
        - UPLINK
        - ROUND_TRIP
        type: string
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration and is not used to encode content defined in the present version of this API.
        type: string
      description: Indicates the requested QoS monitoring parameters to be measured.
    ReportingFrequency:
      anyOf:
      - enum:
        - EVENT_TRIGGERED
        - PERIODIC
        - SESSION_RELEASE
        type: string
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration and is not used to encode content defined in the present version of this API.
        type: string
      description: Indicates the frequency for the reporting.
    Uinteger:
      description: "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible."
      minimum: 0
      type: integer
    DurationSec:
      description: indicating a time in seconds.
      type: integer
    UintegerRm:
      description: |
        Unsigned Integer, i.e. only value 0 and integers above 0 are permissible with the OpenAPI 'nullable: true' property.
      minimum: 0
      nullable: true
      type: integer
    DurationSecRm:
      description: "indicating a time in seconds with OpenAPI defined 'nullable: true'\
        \ property."
      nullable: true
      type: integer
    AccumulatedUsage:
      description: Represents an accumulated usage.
      example:
        duration: 0
        totalVolume: 0
        downlinkVolume: 0
        uplinkVolume: 0
      properties:
        duration:
          description: Unsigned integer identifying a period of time in units of seconds.
          minimum: 0
          type: integer
        totalVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        downlinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
        uplinkVolume:
          description: Unsigned integer identifying a volume in units of bytes.
          format: int64
          minimum: 0
          type: integer
      type: object
    DurationSec_1:
      description: Unsigned integer identifying a period of time in units of seconds.
      minimum: 0
      type: integer
    Volume:
      description: Unsigned integer identifying a volume in units of bytes.
      format: int64
      minimum: 0
      type: integer
    PlmnIdNid:
      description: |
        Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
      example:
        mnc: mnc
        nid: nid
        mcc: mcc
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
        nid:
          description: "This represents the Network Identifier, which together with\
            \ a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS\
            \ 23.501 clause 5.30.2.1). \n"
          pattern: "^[A-Fa-f0-9]{11}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      description: "Mobile Country Code part of the PLMN, comprising 3 digits, as\
        \ defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
      pattern: "^\\d{3}$"
      type: string
    Mnc:
      description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
        \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
      pattern: "^\\d{2,3}$"
      type: string
    Nid:
      description: "This represents the Network Identifier, which together with a\
        \ PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501\
        \ clause 5.30.2.1). \n"
      pattern: "^[A-Fa-f0-9]{11}$"
      type: string
    RatType:
      anyOf:
      - enum:
        - NR
        - EUTRA
        - WLAN
        - VIRTUAL
        - NBIOT
        - WIRELINE
        - WIRELINE_CABLE
        - WIRELINE_BBF
        - LTE-M
        - NR_U
        - EUTRA_U
        - TRUSTED_N3GA
        - TRUSTED_WLAN
        - UTRA
        - GERA
        - NR_LEO
        - NR_MEO
        - NR_GEO
        - NR_OTHER_SAT
        - NR_REDCAP
        type: string
      - type: string
      description: Indicates the radio access used.
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: "{tokenUrl}"
      type: oauth2
