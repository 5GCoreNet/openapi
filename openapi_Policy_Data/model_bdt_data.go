/*
Unified Data Repository Service API file for policy data

The API version is defined in 3GPP TS 29.504   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Policy_Data

import (
	"encoding/json"
)

// checks if the BdtData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BdtData{}

// BdtData Contains the background data transfer data.
type BdtData struct {
	AspId string `json:"aspId"`
	TransPolicy TransferPolicy `json:"transPolicy"`
	// string identifying a BDT Reference ID as defined in clause 5.3.3 of 3GPP TS 29.154.
	BdtRefId *string `json:"bdtRefId,omitempty"`
	NwAreaInfo *NetworkAreaInfo `json:"nwAreaInfo,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	NumOfUes *int32 `json:"numOfUes,omitempty"`
	VolPerUe *UsageThreshold `json:"volPerUe,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn *string `json:"dnn,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	// Identify a traffic descriptor as defined in Figure 5.2.2 of 3GPP TS 24.526, octets v+5 to w.
	TrafficDes *string `json:"trafficDes,omitempty"`
	BdtpStatus *BdtPolicyStatus `json:"bdtpStatus,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat *string `json:"suppFeat,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
}

// NewBdtData instantiates a new BdtData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBdtData(aspId string, transPolicy TransferPolicy) *BdtData {
	this := BdtData{}
	this.AspId = aspId
	this.TransPolicy = transPolicy
	return &this
}

// NewBdtDataWithDefaults instantiates a new BdtData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBdtDataWithDefaults() *BdtData {
	this := BdtData{}
	return &this
}

// GetAspId returns the AspId field value
func (o *BdtData) GetAspId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AspId
}

// GetAspIdOk returns a tuple with the AspId field value
// and a boolean to check if the value has been set.
func (o *BdtData) GetAspIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AspId, true
}

// SetAspId sets field value
func (o *BdtData) SetAspId(v string) {
	o.AspId = v
}

// GetTransPolicy returns the TransPolicy field value
func (o *BdtData) GetTransPolicy() TransferPolicy {
	if o == nil {
		var ret TransferPolicy
		return ret
	}

	return o.TransPolicy
}

// GetTransPolicyOk returns a tuple with the TransPolicy field value
// and a boolean to check if the value has been set.
func (o *BdtData) GetTransPolicyOk() (*TransferPolicy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TransPolicy, true
}

// SetTransPolicy sets field value
func (o *BdtData) SetTransPolicy(v TransferPolicy) {
	o.TransPolicy = v
}

// GetBdtRefId returns the BdtRefId field value if set, zero value otherwise.
func (o *BdtData) GetBdtRefId() string {
	if o == nil || isNil(o.BdtRefId) {
		var ret string
		return ret
	}
	return *o.BdtRefId
}

// GetBdtRefIdOk returns a tuple with the BdtRefId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetBdtRefIdOk() (*string, bool) {
	if o == nil || isNil(o.BdtRefId) {
		return nil, false
	}
	return o.BdtRefId, true
}

// HasBdtRefId returns a boolean if a field has been set.
func (o *BdtData) HasBdtRefId() bool {
	if o != nil && !isNil(o.BdtRefId) {
		return true
	}

	return false
}

// SetBdtRefId gets a reference to the given string and assigns it to the BdtRefId field.
func (o *BdtData) SetBdtRefId(v string) {
	o.BdtRefId = &v
}

// GetNwAreaInfo returns the NwAreaInfo field value if set, zero value otherwise.
func (o *BdtData) GetNwAreaInfo() NetworkAreaInfo {
	if o == nil || isNil(o.NwAreaInfo) {
		var ret NetworkAreaInfo
		return ret
	}
	return *o.NwAreaInfo
}

// GetNwAreaInfoOk returns a tuple with the NwAreaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetNwAreaInfoOk() (*NetworkAreaInfo, bool) {
	if o == nil || isNil(o.NwAreaInfo) {
		return nil, false
	}
	return o.NwAreaInfo, true
}

// HasNwAreaInfo returns a boolean if a field has been set.
func (o *BdtData) HasNwAreaInfo() bool {
	if o != nil && !isNil(o.NwAreaInfo) {
		return true
	}

	return false
}

// SetNwAreaInfo gets a reference to the given NetworkAreaInfo and assigns it to the NwAreaInfo field.
func (o *BdtData) SetNwAreaInfo(v NetworkAreaInfo) {
	o.NwAreaInfo = &v
}

// GetNumOfUes returns the NumOfUes field value if set, zero value otherwise.
func (o *BdtData) GetNumOfUes() int32 {
	if o == nil || isNil(o.NumOfUes) {
		var ret int32
		return ret
	}
	return *o.NumOfUes
}

// GetNumOfUesOk returns a tuple with the NumOfUes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetNumOfUesOk() (*int32, bool) {
	if o == nil || isNil(o.NumOfUes) {
		return nil, false
	}
	return o.NumOfUes, true
}

// HasNumOfUes returns a boolean if a field has been set.
func (o *BdtData) HasNumOfUes() bool {
	if o != nil && !isNil(o.NumOfUes) {
		return true
	}

	return false
}

// SetNumOfUes gets a reference to the given int32 and assigns it to the NumOfUes field.
func (o *BdtData) SetNumOfUes(v int32) {
	o.NumOfUes = &v
}

// GetVolPerUe returns the VolPerUe field value if set, zero value otherwise.
func (o *BdtData) GetVolPerUe() UsageThreshold {
	if o == nil || isNil(o.VolPerUe) {
		var ret UsageThreshold
		return ret
	}
	return *o.VolPerUe
}

// GetVolPerUeOk returns a tuple with the VolPerUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetVolPerUeOk() (*UsageThreshold, bool) {
	if o == nil || isNil(o.VolPerUe) {
		return nil, false
	}
	return o.VolPerUe, true
}

// HasVolPerUe returns a boolean if a field has been set.
func (o *BdtData) HasVolPerUe() bool {
	if o != nil && !isNil(o.VolPerUe) {
		return true
	}

	return false
}

// SetVolPerUe gets a reference to the given UsageThreshold and assigns it to the VolPerUe field.
func (o *BdtData) SetVolPerUe(v UsageThreshold) {
	o.VolPerUe = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *BdtData) GetDnn() string {
	if o == nil || isNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetDnnOk() (*string, bool) {
	if o == nil || isNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *BdtData) HasDnn() bool {
	if o != nil && !isNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *BdtData) SetDnn(v string) {
	o.Dnn = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *BdtData) GetSnssai() Snssai {
	if o == nil || isNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || isNil(o.Snssai) {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *BdtData) HasSnssai() bool {
	if o != nil && !isNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *BdtData) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetTrafficDes returns the TrafficDes field value if set, zero value otherwise.
func (o *BdtData) GetTrafficDes() string {
	if o == nil || isNil(o.TrafficDes) {
		var ret string
		return ret
	}
	return *o.TrafficDes
}

// GetTrafficDesOk returns a tuple with the TrafficDes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetTrafficDesOk() (*string, bool) {
	if o == nil || isNil(o.TrafficDes) {
		return nil, false
	}
	return o.TrafficDes, true
}

// HasTrafficDes returns a boolean if a field has been set.
func (o *BdtData) HasTrafficDes() bool {
	if o != nil && !isNil(o.TrafficDes) {
		return true
	}

	return false
}

// SetTrafficDes gets a reference to the given string and assigns it to the TrafficDes field.
func (o *BdtData) SetTrafficDes(v string) {
	o.TrafficDes = &v
}

// GetBdtpStatus returns the BdtpStatus field value if set, zero value otherwise.
func (o *BdtData) GetBdtpStatus() BdtPolicyStatus {
	if o == nil || isNil(o.BdtpStatus) {
		var ret BdtPolicyStatus
		return ret
	}
	return *o.BdtpStatus
}

// GetBdtpStatusOk returns a tuple with the BdtpStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetBdtpStatusOk() (*BdtPolicyStatus, bool) {
	if o == nil || isNil(o.BdtpStatus) {
		return nil, false
	}
	return o.BdtpStatus, true
}

// HasBdtpStatus returns a boolean if a field has been set.
func (o *BdtData) HasBdtpStatus() bool {
	if o != nil && !isNil(o.BdtpStatus) {
		return true
	}

	return false
}

// SetBdtpStatus gets a reference to the given BdtPolicyStatus and assigns it to the BdtpStatus field.
func (o *BdtData) SetBdtpStatus(v BdtPolicyStatus) {
	o.BdtpStatus = &v
}

// GetSuppFeat returns the SuppFeat field value if set, zero value otherwise.
func (o *BdtData) GetSuppFeat() string {
	if o == nil || isNil(o.SuppFeat) {
		var ret string
		return ret
	}
	return *o.SuppFeat
}

// GetSuppFeatOk returns a tuple with the SuppFeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetSuppFeatOk() (*string, bool) {
	if o == nil || isNil(o.SuppFeat) {
		return nil, false
	}
	return o.SuppFeat, true
}

// HasSuppFeat returns a boolean if a field has been set.
func (o *BdtData) HasSuppFeat() bool {
	if o != nil && !isNil(o.SuppFeat) {
		return true
	}

	return false
}

// SetSuppFeat gets a reference to the given string and assigns it to the SuppFeat field.
func (o *BdtData) SetSuppFeat(v string) {
	o.SuppFeat = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *BdtData) GetResetIds() []string {
	if o == nil || isNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtData) GetResetIdsOk() ([]string, bool) {
	if o == nil || isNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *BdtData) HasResetIds() bool {
	if o != nil && !isNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *BdtData) SetResetIds(v []string) {
	o.ResetIds = v
}

func (o BdtData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BdtData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aspId"] = o.AspId
	toSerialize["transPolicy"] = o.TransPolicy
	if !isNil(o.BdtRefId) {
		toSerialize["bdtRefId"] = o.BdtRefId
	}
	if !isNil(o.NwAreaInfo) {
		toSerialize["nwAreaInfo"] = o.NwAreaInfo
	}
	if !isNil(o.NumOfUes) {
		toSerialize["numOfUes"] = o.NumOfUes
	}
	if !isNil(o.VolPerUe) {
		toSerialize["volPerUe"] = o.VolPerUe
	}
	if !isNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !isNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	if !isNil(o.TrafficDes) {
		toSerialize["trafficDes"] = o.TrafficDes
	}
	if !isNil(o.BdtpStatus) {
		toSerialize["bdtpStatus"] = o.BdtpStatus
	}
	if !isNil(o.SuppFeat) {
		toSerialize["suppFeat"] = o.SuppFeat
	}
	if !isNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	return toSerialize, nil
}

type NullableBdtData struct {
	value *BdtData
	isSet bool
}

func (v NullableBdtData) Get() *BdtData {
	return v.value
}

func (v *NullableBdtData) Set(val *BdtData) {
	v.value = val
	v.isSet = true
}

func (v NullableBdtData) IsSet() bool {
	return v.isSet
}

func (v *NullableBdtData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBdtData(val *BdtData) *NullableBdtData {
	return &NullableBdtData{value: val, isSet: true}
}

func (v NullableBdtData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBdtData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


