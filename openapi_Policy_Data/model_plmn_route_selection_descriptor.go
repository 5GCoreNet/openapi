/*
Unified Data Repository Service API file for policy data

The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Policy_Data

import (
	"encoding/json"
)

// checks if the PlmnRouteSelectionDescriptor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlmnRouteSelectionDescriptor{}

// PlmnRouteSelectionDescriptor Contains the route selection descriptors (combinations of SNSSAI, DNNs, PDU session types, SSC modes and ATSSS information) allowed by subscription to the UE for a serving PLMN 
type PlmnRouteSelectionDescriptor struct {
	ServingPlmn PlmnId `json:"servingPlmn"`
	SnssaiRouteSelDescs []SnssaiRouteSelectionDescriptor `json:"snssaiRouteSelDescs,omitempty"`
}

// NewPlmnRouteSelectionDescriptor instantiates a new PlmnRouteSelectionDescriptor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlmnRouteSelectionDescriptor(servingPlmn PlmnId) *PlmnRouteSelectionDescriptor {
	this := PlmnRouteSelectionDescriptor{}
	this.ServingPlmn = servingPlmn
	return &this
}

// NewPlmnRouteSelectionDescriptorWithDefaults instantiates a new PlmnRouteSelectionDescriptor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlmnRouteSelectionDescriptorWithDefaults() *PlmnRouteSelectionDescriptor {
	this := PlmnRouteSelectionDescriptor{}
	return &this
}

// GetServingPlmn returns the ServingPlmn field value
func (o *PlmnRouteSelectionDescriptor) GetServingPlmn() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.ServingPlmn
}

// GetServingPlmnOk returns a tuple with the ServingPlmn field value
// and a boolean to check if the value has been set.
func (o *PlmnRouteSelectionDescriptor) GetServingPlmnOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingPlmn, true
}

// SetServingPlmn sets field value
func (o *PlmnRouteSelectionDescriptor) SetServingPlmn(v PlmnId) {
	o.ServingPlmn = v
}

// GetSnssaiRouteSelDescs returns the SnssaiRouteSelDescs field value if set, zero value otherwise.
func (o *PlmnRouteSelectionDescriptor) GetSnssaiRouteSelDescs() []SnssaiRouteSelectionDescriptor {
	if o == nil || IsNil(o.SnssaiRouteSelDescs) {
		var ret []SnssaiRouteSelectionDescriptor
		return ret
	}
	return o.SnssaiRouteSelDescs
}

// GetSnssaiRouteSelDescsOk returns a tuple with the SnssaiRouteSelDescs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlmnRouteSelectionDescriptor) GetSnssaiRouteSelDescsOk() ([]SnssaiRouteSelectionDescriptor, bool) {
	if o == nil || IsNil(o.SnssaiRouteSelDescs) {
		return nil, false
	}
	return o.SnssaiRouteSelDescs, true
}

// HasSnssaiRouteSelDescs returns a boolean if a field has been set.
func (o *PlmnRouteSelectionDescriptor) HasSnssaiRouteSelDescs() bool {
	if o != nil && !IsNil(o.SnssaiRouteSelDescs) {
		return true
	}

	return false
}

// SetSnssaiRouteSelDescs gets a reference to the given []SnssaiRouteSelectionDescriptor and assigns it to the SnssaiRouteSelDescs field.
func (o *PlmnRouteSelectionDescriptor) SetSnssaiRouteSelDescs(v []SnssaiRouteSelectionDescriptor) {
	o.SnssaiRouteSelDescs = v
}

func (o PlmnRouteSelectionDescriptor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlmnRouteSelectionDescriptor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["servingPlmn"] = o.ServingPlmn
	if !IsNil(o.SnssaiRouteSelDescs) {
		toSerialize["snssaiRouteSelDescs"] = o.SnssaiRouteSelDescs
	}
	return toSerialize, nil
}

type NullablePlmnRouteSelectionDescriptor struct {
	value *PlmnRouteSelectionDescriptor
	isSet bool
}

func (v NullablePlmnRouteSelectionDescriptor) Get() *PlmnRouteSelectionDescriptor {
	return v.value
}

func (v *NullablePlmnRouteSelectionDescriptor) Set(val *PlmnRouteSelectionDescriptor) {
	v.value = val
	v.isSet = true
}

func (v NullablePlmnRouteSelectionDescriptor) IsSet() bool {
	return v.isSet
}

func (v *NullablePlmnRouteSelectionDescriptor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlmnRouteSelectionDescriptor(val *PlmnRouteSelectionDescriptor) *NullablePlmnRouteSelectionDescriptor {
	return &NullablePlmnRouteSelectionDescriptor{value: val, isSet: true}
}

func (v NullablePlmnRouteSelectionDescriptor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlmnRouteSelectionDescriptor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


