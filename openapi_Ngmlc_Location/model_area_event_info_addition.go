/*
Ngmlc_Location

GMLC Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Ngmlc_Location

import (
	"encoding/json"
)

// checks if the AreaEventInfoAddition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AreaEventInfoAddition{}

// AreaEventInfoAddition Additional information for Extended Area event information
type AreaEventInfoAddition struct {
	GeoAreaList []GeographicArea `json:"geoAreaList,omitempty"`
	IgnoreAreaDefInd *bool `json:"ignoreAreaDefInd,omitempty"`
}

// NewAreaEventInfoAddition instantiates a new AreaEventInfoAddition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAreaEventInfoAddition() *AreaEventInfoAddition {
	this := AreaEventInfoAddition{}
	var ignoreAreaDefInd bool = false
	this.IgnoreAreaDefInd = &ignoreAreaDefInd
	return &this
}

// NewAreaEventInfoAdditionWithDefaults instantiates a new AreaEventInfoAddition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAreaEventInfoAdditionWithDefaults() *AreaEventInfoAddition {
	this := AreaEventInfoAddition{}
	var ignoreAreaDefInd bool = false
	this.IgnoreAreaDefInd = &ignoreAreaDefInd
	return &this
}

// GetGeoAreaList returns the GeoAreaList field value if set, zero value otherwise.
func (o *AreaEventInfoAddition) GetGeoAreaList() []GeographicArea {
	if o == nil || isNil(o.GeoAreaList) {
		var ret []GeographicArea
		return ret
	}
	return o.GeoAreaList
}

// GetGeoAreaListOk returns a tuple with the GeoAreaList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AreaEventInfoAddition) GetGeoAreaListOk() ([]GeographicArea, bool) {
	if o == nil || isNil(o.GeoAreaList) {
		return nil, false
	}
	return o.GeoAreaList, true
}

// HasGeoAreaList returns a boolean if a field has been set.
func (o *AreaEventInfoAddition) HasGeoAreaList() bool {
	if o != nil && !isNil(o.GeoAreaList) {
		return true
	}

	return false
}

// SetGeoAreaList gets a reference to the given []GeographicArea and assigns it to the GeoAreaList field.
func (o *AreaEventInfoAddition) SetGeoAreaList(v []GeographicArea) {
	o.GeoAreaList = v
}

// GetIgnoreAreaDefInd returns the IgnoreAreaDefInd field value if set, zero value otherwise.
func (o *AreaEventInfoAddition) GetIgnoreAreaDefInd() bool {
	if o == nil || isNil(o.IgnoreAreaDefInd) {
		var ret bool
		return ret
	}
	return *o.IgnoreAreaDefInd
}

// GetIgnoreAreaDefIndOk returns a tuple with the IgnoreAreaDefInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AreaEventInfoAddition) GetIgnoreAreaDefIndOk() (*bool, bool) {
	if o == nil || isNil(o.IgnoreAreaDefInd) {
		return nil, false
	}
	return o.IgnoreAreaDefInd, true
}

// HasIgnoreAreaDefInd returns a boolean if a field has been set.
func (o *AreaEventInfoAddition) HasIgnoreAreaDefInd() bool {
	if o != nil && !isNil(o.IgnoreAreaDefInd) {
		return true
	}

	return false
}

// SetIgnoreAreaDefInd gets a reference to the given bool and assigns it to the IgnoreAreaDefInd field.
func (o *AreaEventInfoAddition) SetIgnoreAreaDefInd(v bool) {
	o.IgnoreAreaDefInd = &v
}

func (o AreaEventInfoAddition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AreaEventInfoAddition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.GeoAreaList) {
		toSerialize["geoAreaList"] = o.GeoAreaList
	}
	if !isNil(o.IgnoreAreaDefInd) {
		toSerialize["ignoreAreaDefInd"] = o.IgnoreAreaDefInd
	}
	return toSerialize, nil
}

type NullableAreaEventInfoAddition struct {
	value *AreaEventInfoAddition
	isSet bool
}

func (v NullableAreaEventInfoAddition) Get() *AreaEventInfoAddition {
	return v.value
}

func (v *NullableAreaEventInfoAddition) Set(val *AreaEventInfoAddition) {
	v.value = val
	v.isSet = true
}

func (v NullableAreaEventInfoAddition) IsSet() bool {
	return v.isSet
}

func (v *NullableAreaEventInfoAddition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAreaEventInfoAddition(val *AreaEventInfoAddition) *NullableAreaEventInfoAddition {
	return &NullableAreaEventInfoAddition{value: val, isSet: true}
}

func (v NullableAreaEventInfoAddition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAreaEventInfoAddition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


