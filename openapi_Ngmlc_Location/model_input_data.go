/*
Ngmlc_Location

GMLC Location Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Ngmlc_Location

import (
	"encoding/json"
	"time"
)

// checks if the InputData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InputData{}

// InputData Contains the input parameters in ProvideLocation service operation
type InputData struct {
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	Gpsi *string `json:"gpsi,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty"`
	// String identifying External Group Identifier that identifies a group made up of one or more  subscriptions associated to a group of IMSIs, as specified in clause 19.7.3 of 3GPP TS 23.003.  
	ExtGroupId *string `json:"extGroupId,omitempty"`
	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.  
	IntGroupId *string `json:"intGroupId,omitempty"`
	ExternalClientType ExternalClientType `json:"externalClientType"`
	LocationQoS *LocationQoS `json:"locationQoS,omitempty"`
	SupportedGADShapes []SupportedGADShapes `json:"supportedGADShapes,omitempty"`
	// Contains the service identity
	ServiceIdentity *string `json:"serviceIdentity,omitempty"`
	ServiceCoverage []string `json:"serviceCoverage,omitempty"`
	LdrType *LdrType `json:"ldrType,omitempty"`
	PeriodicEventInfo *PeriodicEventInfo `json:"periodicEventInfo,omitempty"`
	AreaEventInfo *AreaEventInfoExt `json:"areaEventInfo,omitempty"`
	MotionEventInfo *MotionEventInfo `json:"motionEventInfo,omitempty"`
	// LDR Reference.
	LdrReference *string `json:"ldrReference,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	HgmlcCallBackUri *string `json:"hgmlcCallBackUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	EventNotificationUri *string `json:"eventNotificationUri,omitempty"`
	// Contains the external client identification
	ExternalClientIdentification *string `json:"externalClientIdentification,omitempty"`
	AfId *string `json:"afId,omitempty"`
	UePrivacyRequirements *UePrivacyRequirements `json:"uePrivacyRequirements,omitempty"`
	// LCS service type.
	LcsServiceType *int32 `json:"lcsServiceType,omitempty"`
	VelocityRequested *VelocityRequested `json:"velocityRequested,omitempty"`
	Priority *LcsPriority `json:"priority,omitempty"`
	LocationTypeRequested *LocationTypeRequested `json:"locationTypeRequested,omitempty"`
	// Indicates value of the age of the location estimate.
	MaximumAgeOfLocationEstimate *int32 `json:"maximumAgeOfLocationEstimate,omitempty"`
	// String identifying the AMF ID composed of AMF Region ID (8 bits), AMF Set ID (10 bits) and AMF  Pointer (6 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of  6 hexadecimal characters (i.e., 24 bits).  
	AmfId *string `json:"amfId,omitempty"`
	// Contains the codeword
	CodeWord *string `json:"codeWord,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ScheduledLocTime *time.Time `json:"scheduledLocTime,omitempty"`
	ReliableLocReq *bool `json:"reliableLocReq,omitempty"`
}

// NewInputData instantiates a new InputData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInputData(externalClientType ExternalClientType) *InputData {
	this := InputData{}
	this.ExternalClientType = externalClientType
	var reliableLocReq bool = false
	this.ReliableLocReq = &reliableLocReq
	return &this
}

// NewInputDataWithDefaults instantiates a new InputData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInputDataWithDefaults() *InputData {
	this := InputData{}
	var reliableLocReq bool = false
	this.ReliableLocReq = &reliableLocReq
	return &this
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *InputData) GetGpsi() string {
	if o == nil || isNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetGpsiOk() (*string, bool) {
	if o == nil || isNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *InputData) HasGpsi() bool {
	if o != nil && !isNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *InputData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *InputData) GetSupi() string {
	if o == nil || isNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetSupiOk() (*string, bool) {
	if o == nil || isNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *InputData) HasSupi() bool {
	if o != nil && !isNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *InputData) SetSupi(v string) {
	o.Supi = &v
}

// GetExtGroupId returns the ExtGroupId field value if set, zero value otherwise.
func (o *InputData) GetExtGroupId() string {
	if o == nil || isNil(o.ExtGroupId) {
		var ret string
		return ret
	}
	return *o.ExtGroupId
}

// GetExtGroupIdOk returns a tuple with the ExtGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetExtGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.ExtGroupId) {
		return nil, false
	}
	return o.ExtGroupId, true
}

// HasExtGroupId returns a boolean if a field has been set.
func (o *InputData) HasExtGroupId() bool {
	if o != nil && !isNil(o.ExtGroupId) {
		return true
	}

	return false
}

// SetExtGroupId gets a reference to the given string and assigns it to the ExtGroupId field.
func (o *InputData) SetExtGroupId(v string) {
	o.ExtGroupId = &v
}

// GetIntGroupId returns the IntGroupId field value if set, zero value otherwise.
func (o *InputData) GetIntGroupId() string {
	if o == nil || isNil(o.IntGroupId) {
		var ret string
		return ret
	}
	return *o.IntGroupId
}

// GetIntGroupIdOk returns a tuple with the IntGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetIntGroupIdOk() (*string, bool) {
	if o == nil || isNil(o.IntGroupId) {
		return nil, false
	}
	return o.IntGroupId, true
}

// HasIntGroupId returns a boolean if a field has been set.
func (o *InputData) HasIntGroupId() bool {
	if o != nil && !isNil(o.IntGroupId) {
		return true
	}

	return false
}

// SetIntGroupId gets a reference to the given string and assigns it to the IntGroupId field.
func (o *InputData) SetIntGroupId(v string) {
	o.IntGroupId = &v
}

// GetExternalClientType returns the ExternalClientType field value
func (o *InputData) GetExternalClientType() ExternalClientType {
	if o == nil {
		var ret ExternalClientType
		return ret
	}

	return o.ExternalClientType
}

// GetExternalClientTypeOk returns a tuple with the ExternalClientType field value
// and a boolean to check if the value has been set.
func (o *InputData) GetExternalClientTypeOk() (*ExternalClientType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalClientType, true
}

// SetExternalClientType sets field value
func (o *InputData) SetExternalClientType(v ExternalClientType) {
	o.ExternalClientType = v
}

// GetLocationQoS returns the LocationQoS field value if set, zero value otherwise.
func (o *InputData) GetLocationQoS() LocationQoS {
	if o == nil || isNil(o.LocationQoS) {
		var ret LocationQoS
		return ret
	}
	return *o.LocationQoS
}

// GetLocationQoSOk returns a tuple with the LocationQoS field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetLocationQoSOk() (*LocationQoS, bool) {
	if o == nil || isNil(o.LocationQoS) {
		return nil, false
	}
	return o.LocationQoS, true
}

// HasLocationQoS returns a boolean if a field has been set.
func (o *InputData) HasLocationQoS() bool {
	if o != nil && !isNil(o.LocationQoS) {
		return true
	}

	return false
}

// SetLocationQoS gets a reference to the given LocationQoS and assigns it to the LocationQoS field.
func (o *InputData) SetLocationQoS(v LocationQoS) {
	o.LocationQoS = &v
}

// GetSupportedGADShapes returns the SupportedGADShapes field value if set, zero value otherwise.
func (o *InputData) GetSupportedGADShapes() []SupportedGADShapes {
	if o == nil || isNil(o.SupportedGADShapes) {
		var ret []SupportedGADShapes
		return ret
	}
	return o.SupportedGADShapes
}

// GetSupportedGADShapesOk returns a tuple with the SupportedGADShapes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetSupportedGADShapesOk() ([]SupportedGADShapes, bool) {
	if o == nil || isNil(o.SupportedGADShapes) {
		return nil, false
	}
	return o.SupportedGADShapes, true
}

// HasSupportedGADShapes returns a boolean if a field has been set.
func (o *InputData) HasSupportedGADShapes() bool {
	if o != nil && !isNil(o.SupportedGADShapes) {
		return true
	}

	return false
}

// SetSupportedGADShapes gets a reference to the given []SupportedGADShapes and assigns it to the SupportedGADShapes field.
func (o *InputData) SetSupportedGADShapes(v []SupportedGADShapes) {
	o.SupportedGADShapes = v
}

// GetServiceIdentity returns the ServiceIdentity field value if set, zero value otherwise.
func (o *InputData) GetServiceIdentity() string {
	if o == nil || isNil(o.ServiceIdentity) {
		var ret string
		return ret
	}
	return *o.ServiceIdentity
}

// GetServiceIdentityOk returns a tuple with the ServiceIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetServiceIdentityOk() (*string, bool) {
	if o == nil || isNil(o.ServiceIdentity) {
		return nil, false
	}
	return o.ServiceIdentity, true
}

// HasServiceIdentity returns a boolean if a field has been set.
func (o *InputData) HasServiceIdentity() bool {
	if o != nil && !isNil(o.ServiceIdentity) {
		return true
	}

	return false
}

// SetServiceIdentity gets a reference to the given string and assigns it to the ServiceIdentity field.
func (o *InputData) SetServiceIdentity(v string) {
	o.ServiceIdentity = &v
}

// GetServiceCoverage returns the ServiceCoverage field value if set, zero value otherwise.
func (o *InputData) GetServiceCoverage() []string {
	if o == nil || isNil(o.ServiceCoverage) {
		var ret []string
		return ret
	}
	return o.ServiceCoverage
}

// GetServiceCoverageOk returns a tuple with the ServiceCoverage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetServiceCoverageOk() ([]string, bool) {
	if o == nil || isNil(o.ServiceCoverage) {
		return nil, false
	}
	return o.ServiceCoverage, true
}

// HasServiceCoverage returns a boolean if a field has been set.
func (o *InputData) HasServiceCoverage() bool {
	if o != nil && !isNil(o.ServiceCoverage) {
		return true
	}

	return false
}

// SetServiceCoverage gets a reference to the given []string and assigns it to the ServiceCoverage field.
func (o *InputData) SetServiceCoverage(v []string) {
	o.ServiceCoverage = v
}

// GetLdrType returns the LdrType field value if set, zero value otherwise.
func (o *InputData) GetLdrType() LdrType {
	if o == nil || isNil(o.LdrType) {
		var ret LdrType
		return ret
	}
	return *o.LdrType
}

// GetLdrTypeOk returns a tuple with the LdrType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetLdrTypeOk() (*LdrType, bool) {
	if o == nil || isNil(o.LdrType) {
		return nil, false
	}
	return o.LdrType, true
}

// HasLdrType returns a boolean if a field has been set.
func (o *InputData) HasLdrType() bool {
	if o != nil && !isNil(o.LdrType) {
		return true
	}

	return false
}

// SetLdrType gets a reference to the given LdrType and assigns it to the LdrType field.
func (o *InputData) SetLdrType(v LdrType) {
	o.LdrType = &v
}

// GetPeriodicEventInfo returns the PeriodicEventInfo field value if set, zero value otherwise.
func (o *InputData) GetPeriodicEventInfo() PeriodicEventInfo {
	if o == nil || isNil(o.PeriodicEventInfo) {
		var ret PeriodicEventInfo
		return ret
	}
	return *o.PeriodicEventInfo
}

// GetPeriodicEventInfoOk returns a tuple with the PeriodicEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetPeriodicEventInfoOk() (*PeriodicEventInfo, bool) {
	if o == nil || isNil(o.PeriodicEventInfo) {
		return nil, false
	}
	return o.PeriodicEventInfo, true
}

// HasPeriodicEventInfo returns a boolean if a field has been set.
func (o *InputData) HasPeriodicEventInfo() bool {
	if o != nil && !isNil(o.PeriodicEventInfo) {
		return true
	}

	return false
}

// SetPeriodicEventInfo gets a reference to the given PeriodicEventInfo and assigns it to the PeriodicEventInfo field.
func (o *InputData) SetPeriodicEventInfo(v PeriodicEventInfo) {
	o.PeriodicEventInfo = &v
}

// GetAreaEventInfo returns the AreaEventInfo field value if set, zero value otherwise.
func (o *InputData) GetAreaEventInfo() AreaEventInfoExt {
	if o == nil || isNil(o.AreaEventInfo) {
		var ret AreaEventInfoExt
		return ret
	}
	return *o.AreaEventInfo
}

// GetAreaEventInfoOk returns a tuple with the AreaEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetAreaEventInfoOk() (*AreaEventInfoExt, bool) {
	if o == nil || isNil(o.AreaEventInfo) {
		return nil, false
	}
	return o.AreaEventInfo, true
}

// HasAreaEventInfo returns a boolean if a field has been set.
func (o *InputData) HasAreaEventInfo() bool {
	if o != nil && !isNil(o.AreaEventInfo) {
		return true
	}

	return false
}

// SetAreaEventInfo gets a reference to the given AreaEventInfoExt and assigns it to the AreaEventInfo field.
func (o *InputData) SetAreaEventInfo(v AreaEventInfoExt) {
	o.AreaEventInfo = &v
}

// GetMotionEventInfo returns the MotionEventInfo field value if set, zero value otherwise.
func (o *InputData) GetMotionEventInfo() MotionEventInfo {
	if o == nil || isNil(o.MotionEventInfo) {
		var ret MotionEventInfo
		return ret
	}
	return *o.MotionEventInfo
}

// GetMotionEventInfoOk returns a tuple with the MotionEventInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetMotionEventInfoOk() (*MotionEventInfo, bool) {
	if o == nil || isNil(o.MotionEventInfo) {
		return nil, false
	}
	return o.MotionEventInfo, true
}

// HasMotionEventInfo returns a boolean if a field has been set.
func (o *InputData) HasMotionEventInfo() bool {
	if o != nil && !isNil(o.MotionEventInfo) {
		return true
	}

	return false
}

// SetMotionEventInfo gets a reference to the given MotionEventInfo and assigns it to the MotionEventInfo field.
func (o *InputData) SetMotionEventInfo(v MotionEventInfo) {
	o.MotionEventInfo = &v
}

// GetLdrReference returns the LdrReference field value if set, zero value otherwise.
func (o *InputData) GetLdrReference() string {
	if o == nil || isNil(o.LdrReference) {
		var ret string
		return ret
	}
	return *o.LdrReference
}

// GetLdrReferenceOk returns a tuple with the LdrReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetLdrReferenceOk() (*string, bool) {
	if o == nil || isNil(o.LdrReference) {
		return nil, false
	}
	return o.LdrReference, true
}

// HasLdrReference returns a boolean if a field has been set.
func (o *InputData) HasLdrReference() bool {
	if o != nil && !isNil(o.LdrReference) {
		return true
	}

	return false
}

// SetLdrReference gets a reference to the given string and assigns it to the LdrReference field.
func (o *InputData) SetLdrReference(v string) {
	o.LdrReference = &v
}

// GetHgmlcCallBackUri returns the HgmlcCallBackUri field value if set, zero value otherwise.
func (o *InputData) GetHgmlcCallBackUri() string {
	if o == nil || isNil(o.HgmlcCallBackUri) {
		var ret string
		return ret
	}
	return *o.HgmlcCallBackUri
}

// GetHgmlcCallBackUriOk returns a tuple with the HgmlcCallBackUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetHgmlcCallBackUriOk() (*string, bool) {
	if o == nil || isNil(o.HgmlcCallBackUri) {
		return nil, false
	}
	return o.HgmlcCallBackUri, true
}

// HasHgmlcCallBackUri returns a boolean if a field has been set.
func (o *InputData) HasHgmlcCallBackUri() bool {
	if o != nil && !isNil(o.HgmlcCallBackUri) {
		return true
	}

	return false
}

// SetHgmlcCallBackUri gets a reference to the given string and assigns it to the HgmlcCallBackUri field.
func (o *InputData) SetHgmlcCallBackUri(v string) {
	o.HgmlcCallBackUri = &v
}

// GetEventNotificationUri returns the EventNotificationUri field value if set, zero value otherwise.
func (o *InputData) GetEventNotificationUri() string {
	if o == nil || isNil(o.EventNotificationUri) {
		var ret string
		return ret
	}
	return *o.EventNotificationUri
}

// GetEventNotificationUriOk returns a tuple with the EventNotificationUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetEventNotificationUriOk() (*string, bool) {
	if o == nil || isNil(o.EventNotificationUri) {
		return nil, false
	}
	return o.EventNotificationUri, true
}

// HasEventNotificationUri returns a boolean if a field has been set.
func (o *InputData) HasEventNotificationUri() bool {
	if o != nil && !isNil(o.EventNotificationUri) {
		return true
	}

	return false
}

// SetEventNotificationUri gets a reference to the given string and assigns it to the EventNotificationUri field.
func (o *InputData) SetEventNotificationUri(v string) {
	o.EventNotificationUri = &v
}

// GetExternalClientIdentification returns the ExternalClientIdentification field value if set, zero value otherwise.
func (o *InputData) GetExternalClientIdentification() string {
	if o == nil || isNil(o.ExternalClientIdentification) {
		var ret string
		return ret
	}
	return *o.ExternalClientIdentification
}

// GetExternalClientIdentificationOk returns a tuple with the ExternalClientIdentification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetExternalClientIdentificationOk() (*string, bool) {
	if o == nil || isNil(o.ExternalClientIdentification) {
		return nil, false
	}
	return o.ExternalClientIdentification, true
}

// HasExternalClientIdentification returns a boolean if a field has been set.
func (o *InputData) HasExternalClientIdentification() bool {
	if o != nil && !isNil(o.ExternalClientIdentification) {
		return true
	}

	return false
}

// SetExternalClientIdentification gets a reference to the given string and assigns it to the ExternalClientIdentification field.
func (o *InputData) SetExternalClientIdentification(v string) {
	o.ExternalClientIdentification = &v
}

// GetAfId returns the AfId field value if set, zero value otherwise.
func (o *InputData) GetAfId() string {
	if o == nil || isNil(o.AfId) {
		var ret string
		return ret
	}
	return *o.AfId
}

// GetAfIdOk returns a tuple with the AfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetAfIdOk() (*string, bool) {
	if o == nil || isNil(o.AfId) {
		return nil, false
	}
	return o.AfId, true
}

// HasAfId returns a boolean if a field has been set.
func (o *InputData) HasAfId() bool {
	if o != nil && !isNil(o.AfId) {
		return true
	}

	return false
}

// SetAfId gets a reference to the given string and assigns it to the AfId field.
func (o *InputData) SetAfId(v string) {
	o.AfId = &v
}

// GetUePrivacyRequirements returns the UePrivacyRequirements field value if set, zero value otherwise.
func (o *InputData) GetUePrivacyRequirements() UePrivacyRequirements {
	if o == nil || isNil(o.UePrivacyRequirements) {
		var ret UePrivacyRequirements
		return ret
	}
	return *o.UePrivacyRequirements
}

// GetUePrivacyRequirementsOk returns a tuple with the UePrivacyRequirements field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetUePrivacyRequirementsOk() (*UePrivacyRequirements, bool) {
	if o == nil || isNil(o.UePrivacyRequirements) {
		return nil, false
	}
	return o.UePrivacyRequirements, true
}

// HasUePrivacyRequirements returns a boolean if a field has been set.
func (o *InputData) HasUePrivacyRequirements() bool {
	if o != nil && !isNil(o.UePrivacyRequirements) {
		return true
	}

	return false
}

// SetUePrivacyRequirements gets a reference to the given UePrivacyRequirements and assigns it to the UePrivacyRequirements field.
func (o *InputData) SetUePrivacyRequirements(v UePrivacyRequirements) {
	o.UePrivacyRequirements = &v
}

// GetLcsServiceType returns the LcsServiceType field value if set, zero value otherwise.
func (o *InputData) GetLcsServiceType() int32 {
	if o == nil || isNil(o.LcsServiceType) {
		var ret int32
		return ret
	}
	return *o.LcsServiceType
}

// GetLcsServiceTypeOk returns a tuple with the LcsServiceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetLcsServiceTypeOk() (*int32, bool) {
	if o == nil || isNil(o.LcsServiceType) {
		return nil, false
	}
	return o.LcsServiceType, true
}

// HasLcsServiceType returns a boolean if a field has been set.
func (o *InputData) HasLcsServiceType() bool {
	if o != nil && !isNil(o.LcsServiceType) {
		return true
	}

	return false
}

// SetLcsServiceType gets a reference to the given int32 and assigns it to the LcsServiceType field.
func (o *InputData) SetLcsServiceType(v int32) {
	o.LcsServiceType = &v
}

// GetVelocityRequested returns the VelocityRequested field value if set, zero value otherwise.
func (o *InputData) GetVelocityRequested() VelocityRequested {
	if o == nil || isNil(o.VelocityRequested) {
		var ret VelocityRequested
		return ret
	}
	return *o.VelocityRequested
}

// GetVelocityRequestedOk returns a tuple with the VelocityRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetVelocityRequestedOk() (*VelocityRequested, bool) {
	if o == nil || isNil(o.VelocityRequested) {
		return nil, false
	}
	return o.VelocityRequested, true
}

// HasVelocityRequested returns a boolean if a field has been set.
func (o *InputData) HasVelocityRequested() bool {
	if o != nil && !isNil(o.VelocityRequested) {
		return true
	}

	return false
}

// SetVelocityRequested gets a reference to the given VelocityRequested and assigns it to the VelocityRequested field.
func (o *InputData) SetVelocityRequested(v VelocityRequested) {
	o.VelocityRequested = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *InputData) GetPriority() LcsPriority {
	if o == nil || isNil(o.Priority) {
		var ret LcsPriority
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetPriorityOk() (*LcsPriority, bool) {
	if o == nil || isNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *InputData) HasPriority() bool {
	if o != nil && !isNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given LcsPriority and assigns it to the Priority field.
func (o *InputData) SetPriority(v LcsPriority) {
	o.Priority = &v
}

// GetLocationTypeRequested returns the LocationTypeRequested field value if set, zero value otherwise.
func (o *InputData) GetLocationTypeRequested() LocationTypeRequested {
	if o == nil || isNil(o.LocationTypeRequested) {
		var ret LocationTypeRequested
		return ret
	}
	return *o.LocationTypeRequested
}

// GetLocationTypeRequestedOk returns a tuple with the LocationTypeRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetLocationTypeRequestedOk() (*LocationTypeRequested, bool) {
	if o == nil || isNil(o.LocationTypeRequested) {
		return nil, false
	}
	return o.LocationTypeRequested, true
}

// HasLocationTypeRequested returns a boolean if a field has been set.
func (o *InputData) HasLocationTypeRequested() bool {
	if o != nil && !isNil(o.LocationTypeRequested) {
		return true
	}

	return false
}

// SetLocationTypeRequested gets a reference to the given LocationTypeRequested and assigns it to the LocationTypeRequested field.
func (o *InputData) SetLocationTypeRequested(v LocationTypeRequested) {
	o.LocationTypeRequested = &v
}

// GetMaximumAgeOfLocationEstimate returns the MaximumAgeOfLocationEstimate field value if set, zero value otherwise.
func (o *InputData) GetMaximumAgeOfLocationEstimate() int32 {
	if o == nil || isNil(o.MaximumAgeOfLocationEstimate) {
		var ret int32
		return ret
	}
	return *o.MaximumAgeOfLocationEstimate
}

// GetMaximumAgeOfLocationEstimateOk returns a tuple with the MaximumAgeOfLocationEstimate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetMaximumAgeOfLocationEstimateOk() (*int32, bool) {
	if o == nil || isNil(o.MaximumAgeOfLocationEstimate) {
		return nil, false
	}
	return o.MaximumAgeOfLocationEstimate, true
}

// HasMaximumAgeOfLocationEstimate returns a boolean if a field has been set.
func (o *InputData) HasMaximumAgeOfLocationEstimate() bool {
	if o != nil && !isNil(o.MaximumAgeOfLocationEstimate) {
		return true
	}

	return false
}

// SetMaximumAgeOfLocationEstimate gets a reference to the given int32 and assigns it to the MaximumAgeOfLocationEstimate field.
func (o *InputData) SetMaximumAgeOfLocationEstimate(v int32) {
	o.MaximumAgeOfLocationEstimate = &v
}

// GetAmfId returns the AmfId field value if set, zero value otherwise.
func (o *InputData) GetAmfId() string {
	if o == nil || isNil(o.AmfId) {
		var ret string
		return ret
	}
	return *o.AmfId
}

// GetAmfIdOk returns a tuple with the AmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetAmfIdOk() (*string, bool) {
	if o == nil || isNil(o.AmfId) {
		return nil, false
	}
	return o.AmfId, true
}

// HasAmfId returns a boolean if a field has been set.
func (o *InputData) HasAmfId() bool {
	if o != nil && !isNil(o.AmfId) {
		return true
	}

	return false
}

// SetAmfId gets a reference to the given string and assigns it to the AmfId field.
func (o *InputData) SetAmfId(v string) {
	o.AmfId = &v
}

// GetCodeWord returns the CodeWord field value if set, zero value otherwise.
func (o *InputData) GetCodeWord() string {
	if o == nil || isNil(o.CodeWord) {
		var ret string
		return ret
	}
	return *o.CodeWord
}

// GetCodeWordOk returns a tuple with the CodeWord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetCodeWordOk() (*string, bool) {
	if o == nil || isNil(o.CodeWord) {
		return nil, false
	}
	return o.CodeWord, true
}

// HasCodeWord returns a boolean if a field has been set.
func (o *InputData) HasCodeWord() bool {
	if o != nil && !isNil(o.CodeWord) {
		return true
	}

	return false
}

// SetCodeWord gets a reference to the given string and assigns it to the CodeWord field.
func (o *InputData) SetCodeWord(v string) {
	o.CodeWord = &v
}

// GetScheduledLocTime returns the ScheduledLocTime field value if set, zero value otherwise.
func (o *InputData) GetScheduledLocTime() time.Time {
	if o == nil || isNil(o.ScheduledLocTime) {
		var ret time.Time
		return ret
	}
	return *o.ScheduledLocTime
}

// GetScheduledLocTimeOk returns a tuple with the ScheduledLocTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetScheduledLocTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.ScheduledLocTime) {
		return nil, false
	}
	return o.ScheduledLocTime, true
}

// HasScheduledLocTime returns a boolean if a field has been set.
func (o *InputData) HasScheduledLocTime() bool {
	if o != nil && !isNil(o.ScheduledLocTime) {
		return true
	}

	return false
}

// SetScheduledLocTime gets a reference to the given time.Time and assigns it to the ScheduledLocTime field.
func (o *InputData) SetScheduledLocTime(v time.Time) {
	o.ScheduledLocTime = &v
}

// GetReliableLocReq returns the ReliableLocReq field value if set, zero value otherwise.
func (o *InputData) GetReliableLocReq() bool {
	if o == nil || isNil(o.ReliableLocReq) {
		var ret bool
		return ret
	}
	return *o.ReliableLocReq
}

// GetReliableLocReqOk returns a tuple with the ReliableLocReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InputData) GetReliableLocReqOk() (*bool, bool) {
	if o == nil || isNil(o.ReliableLocReq) {
		return nil, false
	}
	return o.ReliableLocReq, true
}

// HasReliableLocReq returns a boolean if a field has been set.
func (o *InputData) HasReliableLocReq() bool {
	if o != nil && !isNil(o.ReliableLocReq) {
		return true
	}

	return false
}

// SetReliableLocReq gets a reference to the given bool and assigns it to the ReliableLocReq field.
func (o *InputData) SetReliableLocReq(v bool) {
	o.ReliableLocReq = &v
}

func (o InputData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InputData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !isNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !isNil(o.ExtGroupId) {
		toSerialize["extGroupId"] = o.ExtGroupId
	}
	if !isNil(o.IntGroupId) {
		toSerialize["intGroupId"] = o.IntGroupId
	}
	toSerialize["externalClientType"] = o.ExternalClientType
	if !isNil(o.LocationQoS) {
		toSerialize["locationQoS"] = o.LocationQoS
	}
	if !isNil(o.SupportedGADShapes) {
		toSerialize["supportedGADShapes"] = o.SupportedGADShapes
	}
	if !isNil(o.ServiceIdentity) {
		toSerialize["serviceIdentity"] = o.ServiceIdentity
	}
	if !isNil(o.ServiceCoverage) {
		toSerialize["serviceCoverage"] = o.ServiceCoverage
	}
	if !isNil(o.LdrType) {
		toSerialize["ldrType"] = o.LdrType
	}
	if !isNil(o.PeriodicEventInfo) {
		toSerialize["periodicEventInfo"] = o.PeriodicEventInfo
	}
	if !isNil(o.AreaEventInfo) {
		toSerialize["areaEventInfo"] = o.AreaEventInfo
	}
	if !isNil(o.MotionEventInfo) {
		toSerialize["motionEventInfo"] = o.MotionEventInfo
	}
	if !isNil(o.LdrReference) {
		toSerialize["ldrReference"] = o.LdrReference
	}
	if !isNil(o.HgmlcCallBackUri) {
		toSerialize["hgmlcCallBackUri"] = o.HgmlcCallBackUri
	}
	if !isNil(o.EventNotificationUri) {
		toSerialize["eventNotificationUri"] = o.EventNotificationUri
	}
	if !isNil(o.ExternalClientIdentification) {
		toSerialize["externalClientIdentification"] = o.ExternalClientIdentification
	}
	if !isNil(o.AfId) {
		toSerialize["afId"] = o.AfId
	}
	if !isNil(o.UePrivacyRequirements) {
		toSerialize["uePrivacyRequirements"] = o.UePrivacyRequirements
	}
	if !isNil(o.LcsServiceType) {
		toSerialize["lcsServiceType"] = o.LcsServiceType
	}
	if !isNil(o.VelocityRequested) {
		toSerialize["velocityRequested"] = o.VelocityRequested
	}
	if !isNil(o.Priority) {
		toSerialize["priority"] = o.Priority
	}
	if !isNil(o.LocationTypeRequested) {
		toSerialize["locationTypeRequested"] = o.LocationTypeRequested
	}
	if !isNil(o.MaximumAgeOfLocationEstimate) {
		toSerialize["maximumAgeOfLocationEstimate"] = o.MaximumAgeOfLocationEstimate
	}
	if !isNil(o.AmfId) {
		toSerialize["amfId"] = o.AmfId
	}
	if !isNil(o.CodeWord) {
		toSerialize["codeWord"] = o.CodeWord
	}
	if !isNil(o.ScheduledLocTime) {
		toSerialize["scheduledLocTime"] = o.ScheduledLocTime
	}
	if !isNil(o.ReliableLocReq) {
		toSerialize["reliableLocReq"] = o.ReliableLocReq
	}
	return toSerialize, nil
}

type NullableInputData struct {
	value *InputData
	isSet bool
}

func (v NullableInputData) Get() *InputData {
	return v.value
}

func (v *NullableInputData) Set(val *InputData) {
	v.value = val
	v.isSet = true
}

func (v NullableInputData) IsSet() bool {
	return v.isSet
}

func (v *NullableInputData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputData(val *InputData) *NullableInputData {
	return &NullableInputData{value: val, isSet: true}
}

func (v NullableInputData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


