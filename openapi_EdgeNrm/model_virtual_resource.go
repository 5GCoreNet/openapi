/*
3GPP Edge NRM

OAS 3.0.1 specification of the Edge NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EdgeNrm

import (
	"encoding/json"
)

// checks if the VirtualResource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VirtualResource{}

// VirtualResource struct for VirtualResource
type VirtualResource struct {
	VirtualMemory *int32  `json:"virtualMemory,omitempty"`
	VirtualDisk   *int32  `json:"virtualDisk,omitempty"`
	VirtualCPU    *string `json:"virtualCPU,omitempty"`
}

// NewVirtualResource instantiates a new VirtualResource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVirtualResource() *VirtualResource {
	this := VirtualResource{}
	return &this
}

// NewVirtualResourceWithDefaults instantiates a new VirtualResource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVirtualResourceWithDefaults() *VirtualResource {
	this := VirtualResource{}
	return &this
}

// GetVirtualMemory returns the VirtualMemory field value if set, zero value otherwise.
func (o *VirtualResource) GetVirtualMemory() int32 {
	if o == nil || IsNil(o.VirtualMemory) {
		var ret int32
		return ret
	}
	return *o.VirtualMemory
}

// GetVirtualMemoryOk returns a tuple with the VirtualMemory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualResource) GetVirtualMemoryOk() (*int32, bool) {
	if o == nil || IsNil(o.VirtualMemory) {
		return nil, false
	}
	return o.VirtualMemory, true
}

// HasVirtualMemory returns a boolean if a field has been set.
func (o *VirtualResource) HasVirtualMemory() bool {
	if o != nil && !IsNil(o.VirtualMemory) {
		return true
	}

	return false
}

// SetVirtualMemory gets a reference to the given int32 and assigns it to the VirtualMemory field.
func (o *VirtualResource) SetVirtualMemory(v int32) {
	o.VirtualMemory = &v
}

// GetVirtualDisk returns the VirtualDisk field value if set, zero value otherwise.
func (o *VirtualResource) GetVirtualDisk() int32 {
	if o == nil || IsNil(o.VirtualDisk) {
		var ret int32
		return ret
	}
	return *o.VirtualDisk
}

// GetVirtualDiskOk returns a tuple with the VirtualDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualResource) GetVirtualDiskOk() (*int32, bool) {
	if o == nil || IsNil(o.VirtualDisk) {
		return nil, false
	}
	return o.VirtualDisk, true
}

// HasVirtualDisk returns a boolean if a field has been set.
func (o *VirtualResource) HasVirtualDisk() bool {
	if o != nil && !IsNil(o.VirtualDisk) {
		return true
	}

	return false
}

// SetVirtualDisk gets a reference to the given int32 and assigns it to the VirtualDisk field.
func (o *VirtualResource) SetVirtualDisk(v int32) {
	o.VirtualDisk = &v
}

// GetVirtualCPU returns the VirtualCPU field value if set, zero value otherwise.
func (o *VirtualResource) GetVirtualCPU() string {
	if o == nil || IsNil(o.VirtualCPU) {
		var ret string
		return ret
	}
	return *o.VirtualCPU
}

// GetVirtualCPUOk returns a tuple with the VirtualCPU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VirtualResource) GetVirtualCPUOk() (*string, bool) {
	if o == nil || IsNil(o.VirtualCPU) {
		return nil, false
	}
	return o.VirtualCPU, true
}

// HasVirtualCPU returns a boolean if a field has been set.
func (o *VirtualResource) HasVirtualCPU() bool {
	if o != nil && !IsNil(o.VirtualCPU) {
		return true
	}

	return false
}

// SetVirtualCPU gets a reference to the given string and assigns it to the VirtualCPU field.
func (o *VirtualResource) SetVirtualCPU(v string) {
	o.VirtualCPU = &v
}

func (o VirtualResource) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VirtualResource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.VirtualMemory) {
		toSerialize["virtualMemory"] = o.VirtualMemory
	}
	if !IsNil(o.VirtualDisk) {
		toSerialize["virtualDisk"] = o.VirtualDisk
	}
	if !IsNil(o.VirtualCPU) {
		toSerialize["virtualCPU"] = o.VirtualCPU
	}
	return toSerialize, nil
}

type NullableVirtualResource struct {
	value *VirtualResource
	isSet bool
}

func (v NullableVirtualResource) Get() *VirtualResource {
	return v.value
}

func (v *NullableVirtualResource) Set(val *VirtualResource) {
	v.value = val
	v.isSet = true
}

func (v NullableVirtualResource) IsSet() bool {
	return v.isSet
}

func (v *NullableVirtualResource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVirtualResource(val *VirtualResource) *NullableVirtualResource {
	return &NullableVirtualResource{value: val, isSet: true}
}

func (v NullableVirtualResource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVirtualResource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
