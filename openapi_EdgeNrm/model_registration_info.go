/*
3GPP Edge NRM

OAS 3.0.1 specification of the Edge NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EdgeNrm

import (
	"encoding/json"
)

// checks if the RegistrationInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationInfo{}

// RegistrationInfo struct for RegistrationInfo
type RegistrationInfo struct {
	RegistrationExpiry *string `json:"registrationExpiry,omitempty"`
	RegistrationID     *string `json:"registrationID,omitempty"`
	SecCredential      *string `json:"secCredential,omitempty"`
}

// NewRegistrationInfo instantiates a new RegistrationInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationInfo() *RegistrationInfo {
	this := RegistrationInfo{}
	return &this
}

// NewRegistrationInfoWithDefaults instantiates a new RegistrationInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationInfoWithDefaults() *RegistrationInfo {
	this := RegistrationInfo{}
	return &this
}

// GetRegistrationExpiry returns the RegistrationExpiry field value if set, zero value otherwise.
func (o *RegistrationInfo) GetRegistrationExpiry() string {
	if o == nil || IsNil(o.RegistrationExpiry) {
		var ret string
		return ret
	}
	return *o.RegistrationExpiry
}

// GetRegistrationExpiryOk returns a tuple with the RegistrationExpiry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationInfo) GetRegistrationExpiryOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationExpiry) {
		return nil, false
	}
	return o.RegistrationExpiry, true
}

// HasRegistrationExpiry returns a boolean if a field has been set.
func (o *RegistrationInfo) HasRegistrationExpiry() bool {
	if o != nil && !IsNil(o.RegistrationExpiry) {
		return true
	}

	return false
}

// SetRegistrationExpiry gets a reference to the given string and assigns it to the RegistrationExpiry field.
func (o *RegistrationInfo) SetRegistrationExpiry(v string) {
	o.RegistrationExpiry = &v
}

// GetRegistrationID returns the RegistrationID field value if set, zero value otherwise.
func (o *RegistrationInfo) GetRegistrationID() string {
	if o == nil || IsNil(o.RegistrationID) {
		var ret string
		return ret
	}
	return *o.RegistrationID
}

// GetRegistrationIDOk returns a tuple with the RegistrationID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationInfo) GetRegistrationIDOk() (*string, bool) {
	if o == nil || IsNil(o.RegistrationID) {
		return nil, false
	}
	return o.RegistrationID, true
}

// HasRegistrationID returns a boolean if a field has been set.
func (o *RegistrationInfo) HasRegistrationID() bool {
	if o != nil && !IsNil(o.RegistrationID) {
		return true
	}

	return false
}

// SetRegistrationID gets a reference to the given string and assigns it to the RegistrationID field.
func (o *RegistrationInfo) SetRegistrationID(v string) {
	o.RegistrationID = &v
}

// GetSecCredential returns the SecCredential field value if set, zero value otherwise.
func (o *RegistrationInfo) GetSecCredential() string {
	if o == nil || IsNil(o.SecCredential) {
		var ret string
		return ret
	}
	return *o.SecCredential
}

// GetSecCredentialOk returns a tuple with the SecCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationInfo) GetSecCredentialOk() (*string, bool) {
	if o == nil || IsNil(o.SecCredential) {
		return nil, false
	}
	return o.SecCredential, true
}

// HasSecCredential returns a boolean if a field has been set.
func (o *RegistrationInfo) HasSecCredential() bool {
	if o != nil && !IsNil(o.SecCredential) {
		return true
	}

	return false
}

// SetSecCredential gets a reference to the given string and assigns it to the SecCredential field.
func (o *RegistrationInfo) SetSecCredential(v string) {
	o.SecCredential = &v
}

func (o RegistrationInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RegistrationExpiry) {
		toSerialize["registrationExpiry"] = o.RegistrationExpiry
	}
	if !IsNil(o.RegistrationID) {
		toSerialize["registrationID"] = o.RegistrationID
	}
	if !IsNil(o.SecCredential) {
		toSerialize["secCredential"] = o.SecCredential
	}
	return toSerialize, nil
}

type NullableRegistrationInfo struct {
	value *RegistrationInfo
	isSet bool
}

func (v NullableRegistrationInfo) Get() *RegistrationInfo {
	return v.value
}

func (v *NullableRegistrationInfo) Set(val *RegistrationInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationInfo(val *RegistrationInfo) *NullableRegistrationInfo {
	return &NullableRegistrationInfo{value: val, isSet: true}
}

func (v NullableRegistrationInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
