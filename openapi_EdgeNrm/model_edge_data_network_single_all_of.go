/*
3GPP Edge NRM

OAS 3.0.1 specification of the Edge NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EdgeNrm

import (
	"encoding/json"
)

// checks if the EdgeDataNetworkSingleAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeDataNetworkSingleAllOf{}

// EdgeDataNetworkSingleAllOf struct for EdgeDataNetworkSingleAllOf
type EdgeDataNetworkSingleAllOf struct {
	EdnIdentifier *string `json:"ednIdentifier,omitempty"`
	EDNConnectionInfo *EDNConnectionInfo `json:"eDNConnectionInfo,omitempty"`
}

// NewEdgeDataNetworkSingleAllOf instantiates a new EdgeDataNetworkSingleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeDataNetworkSingleAllOf() *EdgeDataNetworkSingleAllOf {
	this := EdgeDataNetworkSingleAllOf{}
	return &this
}

// NewEdgeDataNetworkSingleAllOfWithDefaults instantiates a new EdgeDataNetworkSingleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeDataNetworkSingleAllOfWithDefaults() *EdgeDataNetworkSingleAllOf {
	this := EdgeDataNetworkSingleAllOf{}
	return &this
}

// GetEdnIdentifier returns the EdnIdentifier field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingleAllOf) GetEdnIdentifier() string {
	if o == nil || IsNil(o.EdnIdentifier) {
		var ret string
		return ret
	}
	return *o.EdnIdentifier
}

// GetEdnIdentifierOk returns a tuple with the EdnIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingleAllOf) GetEdnIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EdnIdentifier) {
		return nil, false
	}
	return o.EdnIdentifier, true
}

// HasEdnIdentifier returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingleAllOf) HasEdnIdentifier() bool {
	if o != nil && !IsNil(o.EdnIdentifier) {
		return true
	}

	return false
}

// SetEdnIdentifier gets a reference to the given string and assigns it to the EdnIdentifier field.
func (o *EdgeDataNetworkSingleAllOf) SetEdnIdentifier(v string) {
	o.EdnIdentifier = &v
}

// GetEDNConnectionInfo returns the EDNConnectionInfo field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingleAllOf) GetEDNConnectionInfo() EDNConnectionInfo {
	if o == nil || IsNil(o.EDNConnectionInfo) {
		var ret EDNConnectionInfo
		return ret
	}
	return *o.EDNConnectionInfo
}

// GetEDNConnectionInfoOk returns a tuple with the EDNConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingleAllOf) GetEDNConnectionInfoOk() (*EDNConnectionInfo, bool) {
	if o == nil || IsNil(o.EDNConnectionInfo) {
		return nil, false
	}
	return o.EDNConnectionInfo, true
}

// HasEDNConnectionInfo returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingleAllOf) HasEDNConnectionInfo() bool {
	if o != nil && !IsNil(o.EDNConnectionInfo) {
		return true
	}

	return false
}

// SetEDNConnectionInfo gets a reference to the given EDNConnectionInfo and assigns it to the EDNConnectionInfo field.
func (o *EdgeDataNetworkSingleAllOf) SetEDNConnectionInfo(v EDNConnectionInfo) {
	o.EDNConnectionInfo = &v
}

func (o EdgeDataNetworkSingleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeDataNetworkSingleAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EdnIdentifier) {
		toSerialize["ednIdentifier"] = o.EdnIdentifier
	}
	if !IsNil(o.EDNConnectionInfo) {
		toSerialize["eDNConnectionInfo"] = o.EDNConnectionInfo
	}
	return toSerialize, nil
}

type NullableEdgeDataNetworkSingleAllOf struct {
	value *EdgeDataNetworkSingleAllOf
	isSet bool
}

func (v NullableEdgeDataNetworkSingleAllOf) Get() *EdgeDataNetworkSingleAllOf {
	return v.value
}

func (v *NullableEdgeDataNetworkSingleAllOf) Set(val *EdgeDataNetworkSingleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeDataNetworkSingleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeDataNetworkSingleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeDataNetworkSingleAllOf(val *EdgeDataNetworkSingleAllOf) *NullableEdgeDataNetworkSingleAllOf {
	return &NullableEdgeDataNetworkSingleAllOf{value: val, isSet: true}
}

func (v NullableEdgeDataNetworkSingleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeDataNetworkSingleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


