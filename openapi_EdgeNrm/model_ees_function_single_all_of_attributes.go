/*
3GPP Edge NRM

OAS 3.0.1 specification of the Edge NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EdgeNrm

import (
	"encoding/json"
)

// checks if the EESFunctionSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EESFunctionSingleAllOfAttributes{}

// EESFunctionSingleAllOfAttributes struct for EESFunctionSingleAllOfAttributes
type EESFunctionSingleAllOfAttributes struct {
	ManagedFunctionAttr
	EESIdentifier            *string            `json:"eESIdentifier,omitempty"`
	EESServingLocation       []ServingLocation  `json:"eESServingLocation,omitempty"`
	EESAddress               []string           `json:"eESAddress,omitempty"`
	SoftwareImageInfo        *SoftwareImageInfo `json:"softwareImageInfo,omitempty"`
	ServiceContinuitySupport *bool              `json:"serviceContinuitySupport,omitempty"`
	EASFunctonRef            []string           `json:"eASFunctonRef,omitempty"`
	RegistrationInfo         *RegistrationInfo  `json:"registrationInfo,omitempty"`
}

// NewEESFunctionSingleAllOfAttributes instantiates a new EESFunctionSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEESFunctionSingleAllOfAttributes() *EESFunctionSingleAllOfAttributes {
	this := EESFunctionSingleAllOfAttributes{}
	return &this
}

// NewEESFunctionSingleAllOfAttributesWithDefaults instantiates a new EESFunctionSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEESFunctionSingleAllOfAttributesWithDefaults() *EESFunctionSingleAllOfAttributes {
	this := EESFunctionSingleAllOfAttributes{}
	return &this
}

// GetEESIdentifier returns the EESIdentifier field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetEESIdentifier() string {
	if o == nil || IsNil(o.EESIdentifier) {
		var ret string
		return ret
	}
	return *o.EESIdentifier
}

// GetEESIdentifierOk returns a tuple with the EESIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetEESIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EESIdentifier) {
		return nil, false
	}
	return o.EESIdentifier, true
}

// HasEESIdentifier returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasEESIdentifier() bool {
	if o != nil && !IsNil(o.EESIdentifier) {
		return true
	}

	return false
}

// SetEESIdentifier gets a reference to the given string and assigns it to the EESIdentifier field.
func (o *EESFunctionSingleAllOfAttributes) SetEESIdentifier(v string) {
	o.EESIdentifier = &v
}

// GetEESServingLocation returns the EESServingLocation field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetEESServingLocation() []ServingLocation {
	if o == nil || IsNil(o.EESServingLocation) {
		var ret []ServingLocation
		return ret
	}
	return o.EESServingLocation
}

// GetEESServingLocationOk returns a tuple with the EESServingLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetEESServingLocationOk() ([]ServingLocation, bool) {
	if o == nil || IsNil(o.EESServingLocation) {
		return nil, false
	}
	return o.EESServingLocation, true
}

// HasEESServingLocation returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasEESServingLocation() bool {
	if o != nil && !IsNil(o.EESServingLocation) {
		return true
	}

	return false
}

// SetEESServingLocation gets a reference to the given []ServingLocation and assigns it to the EESServingLocation field.
func (o *EESFunctionSingleAllOfAttributes) SetEESServingLocation(v []ServingLocation) {
	o.EESServingLocation = v
}

// GetEESAddress returns the EESAddress field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetEESAddress() []string {
	if o == nil || IsNil(o.EESAddress) {
		var ret []string
		return ret
	}
	return o.EESAddress
}

// GetEESAddressOk returns a tuple with the EESAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetEESAddressOk() ([]string, bool) {
	if o == nil || IsNil(o.EESAddress) {
		return nil, false
	}
	return o.EESAddress, true
}

// HasEESAddress returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasEESAddress() bool {
	if o != nil && !IsNil(o.EESAddress) {
		return true
	}

	return false
}

// SetEESAddress gets a reference to the given []string and assigns it to the EESAddress field.
func (o *EESFunctionSingleAllOfAttributes) SetEESAddress(v []string) {
	o.EESAddress = v
}

// GetSoftwareImageInfo returns the SoftwareImageInfo field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetSoftwareImageInfo() SoftwareImageInfo {
	if o == nil || IsNil(o.SoftwareImageInfo) {
		var ret SoftwareImageInfo
		return ret
	}
	return *o.SoftwareImageInfo
}

// GetSoftwareImageInfoOk returns a tuple with the SoftwareImageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetSoftwareImageInfoOk() (*SoftwareImageInfo, bool) {
	if o == nil || IsNil(o.SoftwareImageInfo) {
		return nil, false
	}
	return o.SoftwareImageInfo, true
}

// HasSoftwareImageInfo returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasSoftwareImageInfo() bool {
	if o != nil && !IsNil(o.SoftwareImageInfo) {
		return true
	}

	return false
}

// SetSoftwareImageInfo gets a reference to the given SoftwareImageInfo and assigns it to the SoftwareImageInfo field.
func (o *EESFunctionSingleAllOfAttributes) SetSoftwareImageInfo(v SoftwareImageInfo) {
	o.SoftwareImageInfo = &v
}

// GetServiceContinuitySupport returns the ServiceContinuitySupport field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetServiceContinuitySupport() bool {
	if o == nil || IsNil(o.ServiceContinuitySupport) {
		var ret bool
		return ret
	}
	return *o.ServiceContinuitySupport
}

// GetServiceContinuitySupportOk returns a tuple with the ServiceContinuitySupport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetServiceContinuitySupportOk() (*bool, bool) {
	if o == nil || IsNil(o.ServiceContinuitySupport) {
		return nil, false
	}
	return o.ServiceContinuitySupport, true
}

// HasServiceContinuitySupport returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasServiceContinuitySupport() bool {
	if o != nil && !IsNil(o.ServiceContinuitySupport) {
		return true
	}

	return false
}

// SetServiceContinuitySupport gets a reference to the given bool and assigns it to the ServiceContinuitySupport field.
func (o *EESFunctionSingleAllOfAttributes) SetServiceContinuitySupport(v bool) {
	o.ServiceContinuitySupport = &v
}

// GetEASFunctonRef returns the EASFunctonRef field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetEASFunctonRef() []string {
	if o == nil || IsNil(o.EASFunctonRef) {
		var ret []string
		return ret
	}
	return o.EASFunctonRef
}

// GetEASFunctonRefOk returns a tuple with the EASFunctonRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetEASFunctonRefOk() ([]string, bool) {
	if o == nil || IsNil(o.EASFunctonRef) {
		return nil, false
	}
	return o.EASFunctonRef, true
}

// HasEASFunctonRef returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasEASFunctonRef() bool {
	if o != nil && !IsNil(o.EASFunctonRef) {
		return true
	}

	return false
}

// SetEASFunctonRef gets a reference to the given []string and assigns it to the EASFunctonRef field.
func (o *EESFunctionSingleAllOfAttributes) SetEASFunctonRef(v []string) {
	o.EASFunctonRef = v
}

// GetRegistrationInfo returns the RegistrationInfo field value if set, zero value otherwise.
func (o *EESFunctionSingleAllOfAttributes) GetRegistrationInfo() RegistrationInfo {
	if o == nil || IsNil(o.RegistrationInfo) {
		var ret RegistrationInfo
		return ret
	}
	return *o.RegistrationInfo
}

// GetRegistrationInfoOk returns a tuple with the RegistrationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EESFunctionSingleAllOfAttributes) GetRegistrationInfoOk() (*RegistrationInfo, bool) {
	if o == nil || IsNil(o.RegistrationInfo) {
		return nil, false
	}
	return o.RegistrationInfo, true
}

// HasRegistrationInfo returns a boolean if a field has been set.
func (o *EESFunctionSingleAllOfAttributes) HasRegistrationInfo() bool {
	if o != nil && !IsNil(o.RegistrationInfo) {
		return true
	}

	return false
}

// SetRegistrationInfo gets a reference to the given RegistrationInfo and assigns it to the RegistrationInfo field.
func (o *EESFunctionSingleAllOfAttributes) SetRegistrationInfo(v RegistrationInfo) {
	o.RegistrationInfo = &v
}

func (o EESFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EESFunctionSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedManagedFunctionAttr, errManagedFunctionAttr := json.Marshal(o.ManagedFunctionAttr)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	errManagedFunctionAttr = json.Unmarshal([]byte(serializedManagedFunctionAttr), &toSerialize)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	if !IsNil(o.EESIdentifier) {
		toSerialize["eESIdentifier"] = o.EESIdentifier
	}
	if !IsNil(o.EESServingLocation) {
		toSerialize["eESServingLocation"] = o.EESServingLocation
	}
	if !IsNil(o.EESAddress) {
		toSerialize["eESAddress"] = o.EESAddress
	}
	if !IsNil(o.SoftwareImageInfo) {
		toSerialize["softwareImageInfo"] = o.SoftwareImageInfo
	}
	if !IsNil(o.ServiceContinuitySupport) {
		toSerialize["serviceContinuitySupport"] = o.ServiceContinuitySupport
	}
	if !IsNil(o.EASFunctonRef) {
		toSerialize["eASFunctonRef"] = o.EASFunctonRef
	}
	if !IsNil(o.RegistrationInfo) {
		toSerialize["registrationInfo"] = o.RegistrationInfo
	}
	return toSerialize, nil
}

type NullableEESFunctionSingleAllOfAttributes struct {
	value *EESFunctionSingleAllOfAttributes
	isSet bool
}

func (v NullableEESFunctionSingleAllOfAttributes) Get() *EESFunctionSingleAllOfAttributes {
	return v.value
}

func (v *NullableEESFunctionSingleAllOfAttributes) Set(val *EESFunctionSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableEESFunctionSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableEESFunctionSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEESFunctionSingleAllOfAttributes(val *EESFunctionSingleAllOfAttributes) *NullableEESFunctionSingleAllOfAttributes {
	return &NullableEESFunctionSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableEESFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEESFunctionSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
