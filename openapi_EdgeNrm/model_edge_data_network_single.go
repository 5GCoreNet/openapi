/*
3GPP Edge NRM

OAS 3.0.1 specification of the Edge NRM Â© 2020, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EdgeNrm

import (
	"encoding/json"
)

// checks if the EdgeDataNetworkSingle type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EdgeDataNetworkSingle{}

// EdgeDataNetworkSingle struct for EdgeDataNetworkSingle
type EdgeDataNetworkSingle struct {
	Top
	EdnIdentifier     *string             `json:"ednIdentifier,omitempty"`
	EDNConnectionInfo *EDNConnectionInfo  `json:"eDNConnectionInfo,omitempty"`
	EASFunction       []EASFunctionSingle `json:"EASFunction,omitempty"`
	EESFunction       []EESFunctionSingle `json:"EESFunction,omitempty"`
}

// NewEdgeDataNetworkSingle instantiates a new EdgeDataNetworkSingle object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEdgeDataNetworkSingle(id NullableString) *EdgeDataNetworkSingle {
	this := EdgeDataNetworkSingle{}
	this.Id = id
	return &this
}

// NewEdgeDataNetworkSingleWithDefaults instantiates a new EdgeDataNetworkSingle object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEdgeDataNetworkSingleWithDefaults() *EdgeDataNetworkSingle {
	this := EdgeDataNetworkSingle{}
	return &this
}

// GetEdnIdentifier returns the EdnIdentifier field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingle) GetEdnIdentifier() string {
	if o == nil || IsNil(o.EdnIdentifier) {
		var ret string
		return ret
	}
	return *o.EdnIdentifier
}

// GetEdnIdentifierOk returns a tuple with the EdnIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingle) GetEdnIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EdnIdentifier) {
		return nil, false
	}
	return o.EdnIdentifier, true
}

// HasEdnIdentifier returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingle) HasEdnIdentifier() bool {
	if o != nil && !IsNil(o.EdnIdentifier) {
		return true
	}

	return false
}

// SetEdnIdentifier gets a reference to the given string and assigns it to the EdnIdentifier field.
func (o *EdgeDataNetworkSingle) SetEdnIdentifier(v string) {
	o.EdnIdentifier = &v
}

// GetEDNConnectionInfo returns the EDNConnectionInfo field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingle) GetEDNConnectionInfo() EDNConnectionInfo {
	if o == nil || IsNil(o.EDNConnectionInfo) {
		var ret EDNConnectionInfo
		return ret
	}
	return *o.EDNConnectionInfo
}

// GetEDNConnectionInfoOk returns a tuple with the EDNConnectionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingle) GetEDNConnectionInfoOk() (*EDNConnectionInfo, bool) {
	if o == nil || IsNil(o.EDNConnectionInfo) {
		return nil, false
	}
	return o.EDNConnectionInfo, true
}

// HasEDNConnectionInfo returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingle) HasEDNConnectionInfo() bool {
	if o != nil && !IsNil(o.EDNConnectionInfo) {
		return true
	}

	return false
}

// SetEDNConnectionInfo gets a reference to the given EDNConnectionInfo and assigns it to the EDNConnectionInfo field.
func (o *EdgeDataNetworkSingle) SetEDNConnectionInfo(v EDNConnectionInfo) {
	o.EDNConnectionInfo = &v
}

// GetEASFunction returns the EASFunction field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingle) GetEASFunction() []EASFunctionSingle {
	if o == nil || IsNil(o.EASFunction) {
		var ret []EASFunctionSingle
		return ret
	}
	return o.EASFunction
}

// GetEASFunctionOk returns a tuple with the EASFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingle) GetEASFunctionOk() ([]EASFunctionSingle, bool) {
	if o == nil || IsNil(o.EASFunction) {
		return nil, false
	}
	return o.EASFunction, true
}

// HasEASFunction returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingle) HasEASFunction() bool {
	if o != nil && !IsNil(o.EASFunction) {
		return true
	}

	return false
}

// SetEASFunction gets a reference to the given []EASFunctionSingle and assigns it to the EASFunction field.
func (o *EdgeDataNetworkSingle) SetEASFunction(v []EASFunctionSingle) {
	o.EASFunction = v
}

// GetEESFunction returns the EESFunction field value if set, zero value otherwise.
func (o *EdgeDataNetworkSingle) GetEESFunction() []EESFunctionSingle {
	if o == nil || IsNil(o.EESFunction) {
		var ret []EESFunctionSingle
		return ret
	}
	return o.EESFunction
}

// GetEESFunctionOk returns a tuple with the EESFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EdgeDataNetworkSingle) GetEESFunctionOk() ([]EESFunctionSingle, bool) {
	if o == nil || IsNil(o.EESFunction) {
		return nil, false
	}
	return o.EESFunction, true
}

// HasEESFunction returns a boolean if a field has been set.
func (o *EdgeDataNetworkSingle) HasEESFunction() bool {
	if o != nil && !IsNil(o.EESFunction) {
		return true
	}

	return false
}

// SetEESFunction gets a reference to the given []EESFunctionSingle and assigns it to the EESFunction field.
func (o *EdgeDataNetworkSingle) SetEESFunction(v []EESFunctionSingle) {
	o.EESFunction = v
}

func (o EdgeDataNetworkSingle) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EdgeDataNetworkSingle) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedTop, errTop := json.Marshal(o.Top)
	if errTop != nil {
		return map[string]interface{}{}, errTop
	}
	errTop = json.Unmarshal([]byte(serializedTop), &toSerialize)
	if errTop != nil {
		return map[string]interface{}{}, errTop
	}
	if !IsNil(o.EdnIdentifier) {
		toSerialize["ednIdentifier"] = o.EdnIdentifier
	}
	if !IsNil(o.EDNConnectionInfo) {
		toSerialize["eDNConnectionInfo"] = o.EDNConnectionInfo
	}
	if !IsNil(o.EASFunction) {
		toSerialize["EASFunction"] = o.EASFunction
	}
	if !IsNil(o.EESFunction) {
		toSerialize["EESFunction"] = o.EESFunction
	}
	return toSerialize, nil
}

type NullableEdgeDataNetworkSingle struct {
	value *EdgeDataNetworkSingle
	isSet bool
}

func (v NullableEdgeDataNetworkSingle) Get() *EdgeDataNetworkSingle {
	return v.value
}

func (v *NullableEdgeDataNetworkSingle) Set(val *EdgeDataNetworkSingle) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeDataNetworkSingle) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeDataNetworkSingle) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeDataNetworkSingle(val *EdgeDataNetworkSingle) *NullableEdgeDataNetworkSingle {
	return &NullableEdgeDataNetworkSingle{value: val, isSet: true}
}

func (v NullableEdgeDataNetworkSingle) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeDataNetworkSingle) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
