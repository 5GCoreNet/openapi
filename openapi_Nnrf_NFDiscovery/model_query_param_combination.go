/*
NRF NFDiscovery Service

NRF NFDiscovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnrf_NFDiscovery

import (
	"encoding/json"
)

// checks if the QueryParamCombination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QueryParamCombination{}

// QueryParamCombination Contains a list of Query Parameters
type QueryParamCombination struct {
	QueryParams []QueryParameter `json:"queryParams"`
}

// NewQueryParamCombination instantiates a new QueryParamCombination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQueryParamCombination(queryParams []QueryParameter) *QueryParamCombination {
	this := QueryParamCombination{}
	this.QueryParams = queryParams
	return &this
}

// NewQueryParamCombinationWithDefaults instantiates a new QueryParamCombination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQueryParamCombinationWithDefaults() *QueryParamCombination {
	this := QueryParamCombination{}
	return &this
}

// GetQueryParams returns the QueryParams field value
func (o *QueryParamCombination) GetQueryParams() []QueryParameter {
	if o == nil {
		var ret []QueryParameter
		return ret
	}

	return o.QueryParams
}

// GetQueryParamsOk returns a tuple with the QueryParams field value
// and a boolean to check if the value has been set.
func (o *QueryParamCombination) GetQueryParamsOk() ([]QueryParameter, bool) {
	if o == nil {
		return nil, false
	}
	return o.QueryParams, true
}

// SetQueryParams sets field value
func (o *QueryParamCombination) SetQueryParams(v []QueryParameter) {
	o.QueryParams = v
}

func (o QueryParamCombination) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QueryParamCombination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["queryParams"] = o.QueryParams
	return toSerialize, nil
}

type NullableQueryParamCombination struct {
	value *QueryParamCombination
	isSet bool
}

func (v NullableQueryParamCombination) Get() *QueryParamCombination {
	return v.value
}

func (v *NullableQueryParamCombination) Set(val *QueryParamCombination) {
	v.value = val
	v.isSet = true
}

func (v NullableQueryParamCombination) IsSet() bool {
	return v.isSet
}

func (v *NullableQueryParamCombination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQueryParamCombination(val *QueryParamCombination) *NullableQueryParamCombination {
	return &NullableQueryParamCombination{value: val, isSet: true}
}

func (v NullableQueryParamCombination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQueryParamCombination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
