/*
Namf_MBSCommunication

AMF Communication Service for MBS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_MBSCommunication

import (
	"encoding/json"
	"fmt"
)

// RanFailureIndicationAnyOf the model 'RanFailureIndicationAnyOf'
type RanFailureIndicationAnyOf string

// List of RanFailureIndication_anyOf
const (
	FAILURE_WITHOUT_RESTART RanFailureIndicationAnyOf = "NG_RAN_FAILURE_WITHOUT_RESTART"
	NOT_REACHABLE RanFailureIndicationAnyOf = "NG_RAN_NOT_REACHABLE"
)

// All allowed values of RanFailureIndicationAnyOf enum
var AllowedRanFailureIndicationAnyOfEnumValues = []RanFailureIndicationAnyOf{
	"NG_RAN_FAILURE_WITHOUT_RESTART",
	"NG_RAN_NOT_REACHABLE",
}

func (v *RanFailureIndicationAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RanFailureIndicationAnyOf(value)
	for _, existing := range AllowedRanFailureIndicationAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RanFailureIndicationAnyOf", value)
}

// NewRanFailureIndicationAnyOfFromValue returns a pointer to a valid RanFailureIndicationAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRanFailureIndicationAnyOfFromValue(v string) (*RanFailureIndicationAnyOf, error) {
	ev := RanFailureIndicationAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RanFailureIndicationAnyOf: valid values are %v", v, AllowedRanFailureIndicationAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RanFailureIndicationAnyOf) IsValid() bool {
	for _, existing := range AllowedRanFailureIndicationAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RanFailureIndication_anyOf value
func (v RanFailureIndicationAnyOf) Ptr() *RanFailureIndicationAnyOf {
	return &v
}

type NullableRanFailureIndicationAnyOf struct {
	value *RanFailureIndicationAnyOf
	isSet bool
}

func (v NullableRanFailureIndicationAnyOf) Get() *RanFailureIndicationAnyOf {
	return v.value
}

func (v *NullableRanFailureIndicationAnyOf) Set(val *RanFailureIndicationAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRanFailureIndicationAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRanFailureIndicationAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRanFailureIndicationAnyOf(val *RanFailureIndicationAnyOf) *NullableRanFailureIndicationAnyOf {
	return &NullableRanFailureIndicationAnyOf{value: val, isSet: true}
}

func (v NullableRanFailureIndicationAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRanFailureIndicationAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

