/*
Namf_MBSCommunication

AMF Communication Service for MBS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_MBSCommunication

import (
	"encoding/json"
	"fmt"
)

// MbsNgapIeTypeAnyOf the model 'MbsNgapIeTypeAnyOf'
type MbsNgapIeTypeAnyOf string

// List of MbsNgapIeType_anyOf
const (
	ACT_REQ MbsNgapIeTypeAnyOf = "MBS_SES_ACT_REQ"
	DEACT_REQ MbsNgapIeTypeAnyOf = "MBS_SES_DEACT_REQ"
	UPD_REQ MbsNgapIeTypeAnyOf = "MBS_SES_UPD_REQ"
)

// All allowed values of MbsNgapIeTypeAnyOf enum
var AllowedMbsNgapIeTypeAnyOfEnumValues = []MbsNgapIeTypeAnyOf{
	"MBS_SES_ACT_REQ",
	"MBS_SES_DEACT_REQ",
	"MBS_SES_UPD_REQ",
}

func (v *MbsNgapIeTypeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := MbsNgapIeTypeAnyOf(value)
	for _, existing := range AllowedMbsNgapIeTypeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid MbsNgapIeTypeAnyOf", value)
}

// NewMbsNgapIeTypeAnyOfFromValue returns a pointer to a valid MbsNgapIeTypeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewMbsNgapIeTypeAnyOfFromValue(v string) (*MbsNgapIeTypeAnyOf, error) {
	ev := MbsNgapIeTypeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for MbsNgapIeTypeAnyOf: valid values are %v", v, AllowedMbsNgapIeTypeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v MbsNgapIeTypeAnyOf) IsValid() bool {
	for _, existing := range AllowedMbsNgapIeTypeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to MbsNgapIeType_anyOf value
func (v MbsNgapIeTypeAnyOf) Ptr() *MbsNgapIeTypeAnyOf {
	return &v
}

type NullableMbsNgapIeTypeAnyOf struct {
	value *MbsNgapIeTypeAnyOf
	isSet bool
}

func (v NullableMbsNgapIeTypeAnyOf) Get() *MbsNgapIeTypeAnyOf {
	return v.value
}

func (v *NullableMbsNgapIeTypeAnyOf) Set(val *MbsNgapIeTypeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableMbsNgapIeTypeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableMbsNgapIeTypeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbsNgapIeTypeAnyOf(val *MbsNgapIeTypeAnyOf) *NullableMbsNgapIeTypeAnyOf {
	return &NullableMbsNgapIeTypeAnyOf{value: val, isSet: true}
}

func (v NullableMbsNgapIeTypeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbsNgapIeTypeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

