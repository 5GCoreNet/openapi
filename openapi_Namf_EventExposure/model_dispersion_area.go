/*
Namf_EventExposure

AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_EventExposure

import (
	"encoding/json"
)

// checks if the DispersionArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DispersionArea{}

// DispersionArea Dispersion Area
type DispersionArea struct {
	TaiList  []Tai  `json:"taiList,omitempty"`
	NcgiList []Ncgi `json:"ncgiList,omitempty"`
	EcgiList []Ecgi `json:"ecgiList,omitempty"`
	N3gaInd  *bool  `json:"n3gaInd,omitempty"`
}

// NewDispersionArea instantiates a new DispersionArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDispersionArea() *DispersionArea {
	this := DispersionArea{}
	var n3gaInd bool = false
	this.N3gaInd = &n3gaInd
	return &this
}

// NewDispersionAreaWithDefaults instantiates a new DispersionArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDispersionAreaWithDefaults() *DispersionArea {
	this := DispersionArea{}
	var n3gaInd bool = false
	this.N3gaInd = &n3gaInd
	return &this
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *DispersionArea) GetTaiList() []Tai {
	if o == nil || IsNil(o.TaiList) {
		var ret []Tai
		return ret
	}
	return o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispersionArea) GetTaiListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *DispersionArea) HasTaiList() bool {
	if o != nil && !IsNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given []Tai and assigns it to the TaiList field.
func (o *DispersionArea) SetTaiList(v []Tai) {
	o.TaiList = v
}

// GetNcgiList returns the NcgiList field value if set, zero value otherwise.
func (o *DispersionArea) GetNcgiList() []Ncgi {
	if o == nil || IsNil(o.NcgiList) {
		var ret []Ncgi
		return ret
	}
	return o.NcgiList
}

// GetNcgiListOk returns a tuple with the NcgiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispersionArea) GetNcgiListOk() ([]Ncgi, bool) {
	if o == nil || IsNil(o.NcgiList) {
		return nil, false
	}
	return o.NcgiList, true
}

// HasNcgiList returns a boolean if a field has been set.
func (o *DispersionArea) HasNcgiList() bool {
	if o != nil && !IsNil(o.NcgiList) {
		return true
	}

	return false
}

// SetNcgiList gets a reference to the given []Ncgi and assigns it to the NcgiList field.
func (o *DispersionArea) SetNcgiList(v []Ncgi) {
	o.NcgiList = v
}

// GetEcgiList returns the EcgiList field value if set, zero value otherwise.
func (o *DispersionArea) GetEcgiList() []Ecgi {
	if o == nil || IsNil(o.EcgiList) {
		var ret []Ecgi
		return ret
	}
	return o.EcgiList
}

// GetEcgiListOk returns a tuple with the EcgiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispersionArea) GetEcgiListOk() ([]Ecgi, bool) {
	if o == nil || IsNil(o.EcgiList) {
		return nil, false
	}
	return o.EcgiList, true
}

// HasEcgiList returns a boolean if a field has been set.
func (o *DispersionArea) HasEcgiList() bool {
	if o != nil && !IsNil(o.EcgiList) {
		return true
	}

	return false
}

// SetEcgiList gets a reference to the given []Ecgi and assigns it to the EcgiList field.
func (o *DispersionArea) SetEcgiList(v []Ecgi) {
	o.EcgiList = v
}

// GetN3gaInd returns the N3gaInd field value if set, zero value otherwise.
func (o *DispersionArea) GetN3gaInd() bool {
	if o == nil || IsNil(o.N3gaInd) {
		var ret bool
		return ret
	}
	return *o.N3gaInd
}

// GetN3gaIndOk returns a tuple with the N3gaInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DispersionArea) GetN3gaIndOk() (*bool, bool) {
	if o == nil || IsNil(o.N3gaInd) {
		return nil, false
	}
	return o.N3gaInd, true
}

// HasN3gaInd returns a boolean if a field has been set.
func (o *DispersionArea) HasN3gaInd() bool {
	if o != nil && !IsNil(o.N3gaInd) {
		return true
	}

	return false
}

// SetN3gaInd gets a reference to the given bool and assigns it to the N3gaInd field.
func (o *DispersionArea) SetN3gaInd(v bool) {
	o.N3gaInd = &v
}

func (o DispersionArea) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DispersionArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	if !IsNil(o.NcgiList) {
		toSerialize["ncgiList"] = o.NcgiList
	}
	if !IsNil(o.EcgiList) {
		toSerialize["ecgiList"] = o.EcgiList
	}
	if !IsNil(o.N3gaInd) {
		toSerialize["n3gaInd"] = o.N3gaInd
	}
	return toSerialize, nil
}

type NullableDispersionArea struct {
	value *DispersionArea
	isSet bool
}

func (v NullableDispersionArea) Get() *DispersionArea {
	return v.value
}

func (v *NullableDispersionArea) Set(val *DispersionArea) {
	v.value = val
	v.isSet = true
}

func (v NullableDispersionArea) IsSet() bool {
	return v.isSet
}

func (v *NullableDispersionArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDispersionArea(val *DispersionArea) *NullableDispersionArea {
	return &NullableDispersionArea{value: val, isSet: true}
}

func (v NullableDispersionArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDispersionArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
