/*
Namf_EventExposure

AMF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_EventExposure

import (
	"encoding/json"
	"time"
)

// checks if the AmfUpdateEventOptionItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AmfUpdateEventOptionItem{}

// AmfUpdateEventOptionItem Document describing the modifications to AMF event subscription options
type AmfUpdateEventOptionItem struct {
	Op string `json:"op"`
	Path string `json:"path"`
	// string with format 'date-time' as defined in OpenAPI.
	Value time.Time `json:"value"`
	NotifFlag *NotificationFlag `json:"notifFlag,omitempty"`
}

// NewAmfUpdateEventOptionItem instantiates a new AmfUpdateEventOptionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAmfUpdateEventOptionItem(op string, path string, value time.Time) *AmfUpdateEventOptionItem {
	this := AmfUpdateEventOptionItem{}
	this.Op = op
	this.Path = path
	this.Value = value
	return &this
}

// NewAmfUpdateEventOptionItemWithDefaults instantiates a new AmfUpdateEventOptionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAmfUpdateEventOptionItemWithDefaults() *AmfUpdateEventOptionItem {
	this := AmfUpdateEventOptionItem{}
	return &this
}

// GetOp returns the Op field value
func (o *AmfUpdateEventOptionItem) GetOp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *AmfUpdateEventOptionItem) GetOpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *AmfUpdateEventOptionItem) SetOp(v string) {
	o.Op = v
}

// GetPath returns the Path field value
func (o *AmfUpdateEventOptionItem) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *AmfUpdateEventOptionItem) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *AmfUpdateEventOptionItem) SetPath(v string) {
	o.Path = v
}

// GetValue returns the Value field value
func (o *AmfUpdateEventOptionItem) GetValue() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *AmfUpdateEventOptionItem) GetValueOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *AmfUpdateEventOptionItem) SetValue(v time.Time) {
	o.Value = v
}

// GetNotifFlag returns the NotifFlag field value if set, zero value otherwise.
func (o *AmfUpdateEventOptionItem) GetNotifFlag() NotificationFlag {
	if o == nil || isNil(o.NotifFlag) {
		var ret NotificationFlag
		return ret
	}
	return *o.NotifFlag
}

// GetNotifFlagOk returns a tuple with the NotifFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AmfUpdateEventOptionItem) GetNotifFlagOk() (*NotificationFlag, bool) {
	if o == nil || isNil(o.NotifFlag) {
		return nil, false
	}
	return o.NotifFlag, true
}

// HasNotifFlag returns a boolean if a field has been set.
func (o *AmfUpdateEventOptionItem) HasNotifFlag() bool {
	if o != nil && !isNil(o.NotifFlag) {
		return true
	}

	return false
}

// SetNotifFlag gets a reference to the given NotificationFlag and assigns it to the NotifFlag field.
func (o *AmfUpdateEventOptionItem) SetNotifFlag(v NotificationFlag) {
	o.NotifFlag = &v
}

func (o AmfUpdateEventOptionItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AmfUpdateEventOptionItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["path"] = o.Path
	toSerialize["value"] = o.Value
	if !isNil(o.NotifFlag) {
		toSerialize["notifFlag"] = o.NotifFlag
	}
	return toSerialize, nil
}

type NullableAmfUpdateEventOptionItem struct {
	value *AmfUpdateEventOptionItem
	isSet bool
}

func (v NullableAmfUpdateEventOptionItem) Get() *AmfUpdateEventOptionItem {
	return v.value
}

func (v *NullableAmfUpdateEventOptionItem) Set(val *AmfUpdateEventOptionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableAmfUpdateEventOptionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableAmfUpdateEventOptionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAmfUpdateEventOptionItem(val *AmfUpdateEventOptionItem) *NullableAmfUpdateEventOptionItem {
	return &NullableAmfUpdateEventOptionItem{value: val, isSet: true}
}

func (v NullableAmfUpdateEventOptionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAmfUpdateEventOptionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


