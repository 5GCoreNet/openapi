/*
3gpp-am-policyauthorization

API for AM policy authorization.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_AMPolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// AppAmContextExpData Represents an Individual application AM context exposure resource.
type AppAmContextExpData struct {
	Interface *interface{}
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *AppAmContextExpData) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into interface{}
	err = json.Unmarshal(data, &dst.Interface)
	if err == nil {
		jsonInterface, _ := json.Marshal(dst.Interface)
		if string(jsonInterface) == "{}" { // empty struct
			dst.Interface = nil
		} else {
			return nil // data stored in dst.Interface, return on the first match
		}
	} else {
		dst.Interface = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(AppAmContextExpData)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *AppAmContextExpData) MarshalJSON() ([]byte, error) {
	if src.Interface != nil {
		return json.Marshal(&src.Interface)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableAppAmContextExpData struct {
	value *AppAmContextExpData
	isSet bool
}

func (v NullableAppAmContextExpData) Get() *AppAmContextExpData {
	return v.value
}

func (v *NullableAppAmContextExpData) Set(val *AppAmContextExpData) {
	v.value = val
	v.isSet = true
}

func (v NullableAppAmContextExpData) IsSet() bool {
	return v.isSet
}

func (v *NullableAppAmContextExpData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppAmContextExpData(val *AppAmContextExpData) *NullableAppAmContextExpData {
	return &NullableAppAmContextExpData{value: val, isSet: true}
}

func (v NullableAppAmContextExpData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppAmContextExpData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
