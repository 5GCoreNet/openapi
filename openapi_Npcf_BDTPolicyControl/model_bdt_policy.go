/*
Npcf_BDTPolicyControl Service API

PCF BDT Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_BDTPolicyControl

import (
	"encoding/json"
)

// checks if the BdtPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BdtPolicy{}

// BdtPolicy Represents an Individual BDT policy resource.
type BdtPolicy struct {
	BdtPolData *BdtPolicyData `json:"bdtPolData,omitempty"`
	BdtReqData *BdtReqData    `json:"bdtReqData,omitempty"`
}

// NewBdtPolicy instantiates a new BdtPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBdtPolicy() *BdtPolicy {
	this := BdtPolicy{}
	return &this
}

// NewBdtPolicyWithDefaults instantiates a new BdtPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBdtPolicyWithDefaults() *BdtPolicy {
	this := BdtPolicy{}
	return &this
}

// GetBdtPolData returns the BdtPolData field value if set, zero value otherwise.
func (o *BdtPolicy) GetBdtPolData() BdtPolicyData {
	if o == nil || IsNil(o.BdtPolData) {
		var ret BdtPolicyData
		return ret
	}
	return *o.BdtPolData
}

// GetBdtPolDataOk returns a tuple with the BdtPolData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtPolicy) GetBdtPolDataOk() (*BdtPolicyData, bool) {
	if o == nil || IsNil(o.BdtPolData) {
		return nil, false
	}
	return o.BdtPolData, true
}

// HasBdtPolData returns a boolean if a field has been set.
func (o *BdtPolicy) HasBdtPolData() bool {
	if o != nil && !IsNil(o.BdtPolData) {
		return true
	}

	return false
}

// SetBdtPolData gets a reference to the given BdtPolicyData and assigns it to the BdtPolData field.
func (o *BdtPolicy) SetBdtPolData(v BdtPolicyData) {
	o.BdtPolData = &v
}

// GetBdtReqData returns the BdtReqData field value if set, zero value otherwise.
func (o *BdtPolicy) GetBdtReqData() BdtReqData {
	if o == nil || IsNil(o.BdtReqData) {
		var ret BdtReqData
		return ret
	}
	return *o.BdtReqData
}

// GetBdtReqDataOk returns a tuple with the BdtReqData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BdtPolicy) GetBdtReqDataOk() (*BdtReqData, bool) {
	if o == nil || IsNil(o.BdtReqData) {
		return nil, false
	}
	return o.BdtReqData, true
}

// HasBdtReqData returns a boolean if a field has been set.
func (o *BdtPolicy) HasBdtReqData() bool {
	if o != nil && !IsNil(o.BdtReqData) {
		return true
	}

	return false
}

// SetBdtReqData gets a reference to the given BdtReqData and assigns it to the BdtReqData field.
func (o *BdtPolicy) SetBdtReqData(v BdtReqData) {
	o.BdtReqData = &v
}

func (o BdtPolicy) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BdtPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BdtPolData) {
		toSerialize["bdtPolData"] = o.BdtPolData
	}
	if !IsNil(o.BdtReqData) {
		toSerialize["bdtReqData"] = o.BdtReqData
	}
	return toSerialize, nil
}

type NullableBdtPolicy struct {
	value *BdtPolicy
	isSet bool
}

func (v NullableBdtPolicy) Get() *BdtPolicy {
	return v.value
}

func (v *NullableBdtPolicy) Set(val *BdtPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableBdtPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableBdtPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBdtPolicy(val *BdtPolicy) *NullableBdtPolicy {
	return &NullableBdtPolicy{value: val, isSet: true}
}

func (v NullableBdtPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBdtPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
