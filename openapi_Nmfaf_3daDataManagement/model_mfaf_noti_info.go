/*
Nmfaf_3daDataManagement

MFAF 3GPP DCCF Adaptor (3DA) Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmfaf_3daDataManagement

import (
	"encoding/json"
)

// checks if the MfafNotiInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MfafNotiInfo{}

// MfafNotiInfo The MFAF notification information. It shall be provided in a response message if it had not been provided in the respective request message. 
type MfafNotiInfo struct {
	// String providing an URI formatted according to RFC 3986.
	MfafNotifUri string `json:"mfafNotifUri"`
	MfafCorreId string `json:"mfafCorreId"`
}

// NewMfafNotiInfo instantiates a new MfafNotiInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMfafNotiInfo(mfafNotifUri string, mfafCorreId string) *MfafNotiInfo {
	this := MfafNotiInfo{}
	this.MfafNotifUri = mfafNotifUri
	this.MfafCorreId = mfafCorreId
	return &this
}

// NewMfafNotiInfoWithDefaults instantiates a new MfafNotiInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMfafNotiInfoWithDefaults() *MfafNotiInfo {
	this := MfafNotiInfo{}
	return &this
}

// GetMfafNotifUri returns the MfafNotifUri field value
func (o *MfafNotiInfo) GetMfafNotifUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MfafNotifUri
}

// GetMfafNotifUriOk returns a tuple with the MfafNotifUri field value
// and a boolean to check if the value has been set.
func (o *MfafNotiInfo) GetMfafNotifUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MfafNotifUri, true
}

// SetMfafNotifUri sets field value
func (o *MfafNotiInfo) SetMfafNotifUri(v string) {
	o.MfafNotifUri = v
}

// GetMfafCorreId returns the MfafCorreId field value
func (o *MfafNotiInfo) GetMfafCorreId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MfafCorreId
}

// GetMfafCorreIdOk returns a tuple with the MfafCorreId field value
// and a boolean to check if the value has been set.
func (o *MfafNotiInfo) GetMfafCorreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MfafCorreId, true
}

// SetMfafCorreId sets field value
func (o *MfafNotiInfo) SetMfafCorreId(v string) {
	o.MfafCorreId = v
}

func (o MfafNotiInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MfafNotiInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mfafNotifUri"] = o.MfafNotifUri
	toSerialize["mfafCorreId"] = o.MfafCorreId
	return toSerialize, nil
}

type NullableMfafNotiInfo struct {
	value *MfafNotiInfo
	isSet bool
}

func (v NullableMfafNotiInfo) Get() *MfafNotiInfo {
	return v.value
}

func (v *NullableMfafNotiInfo) Set(val *MfafNotiInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMfafNotiInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMfafNotiInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMfafNotiInfo(val *MfafNotiInfo) *NullableMfafNotiInfo {
	return &NullableMfafNotiInfo{value: val, isSet: true}
}

func (v NullableMfafNotiInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMfafNotiInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


