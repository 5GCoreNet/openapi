/*
Nmfaf_3daDataManagement

MFAF 3GPP DCCF Adaptor (3DA) Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmfaf_3daDataManagement

import (
	"encoding/json"
)

// checks if the MfafConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MfafConfiguration{}

// MfafConfiguration Represents an Individual MFAF Configuration.
type MfafConfiguration struct {
	// The configuration of the MFAF for mapping data or analytics.
	MessageConfigurations []MessageConfiguration `json:"messageConfigurations"`
}

// NewMfafConfiguration instantiates a new MfafConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMfafConfiguration(messageConfigurations []MessageConfiguration) *MfafConfiguration {
	this := MfafConfiguration{}
	this.MessageConfigurations = messageConfigurations
	return &this
}

// NewMfafConfigurationWithDefaults instantiates a new MfafConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMfafConfigurationWithDefaults() *MfafConfiguration {
	this := MfafConfiguration{}
	return &this
}

// GetMessageConfigurations returns the MessageConfigurations field value
func (o *MfafConfiguration) GetMessageConfigurations() []MessageConfiguration {
	if o == nil {
		var ret []MessageConfiguration
		return ret
	}

	return o.MessageConfigurations
}

// GetMessageConfigurationsOk returns a tuple with the MessageConfigurations field value
// and a boolean to check if the value has been set.
func (o *MfafConfiguration) GetMessageConfigurationsOk() ([]MessageConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return o.MessageConfigurations, true
}

// SetMessageConfigurations sets field value
func (o *MfafConfiguration) SetMessageConfigurations(v []MessageConfiguration) {
	o.MessageConfigurations = v
}

func (o MfafConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MfafConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["messageConfigurations"] = o.MessageConfigurations
	return toSerialize, nil
}

type NullableMfafConfiguration struct {
	value *MfafConfiguration
	isSet bool
}

func (v NullableMfafConfiguration) Get() *MfafConfiguration {
	return v.value
}

func (v *NullableMfafConfiguration) Set(val *MfafConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableMfafConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableMfafConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMfafConfiguration(val *MfafConfiguration) *NullableMfafConfiguration {
	return &NullableMfafConfiguration{value: val, isSet: true}
}

func (v NullableMfafConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMfafConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
