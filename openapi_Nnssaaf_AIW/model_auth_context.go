/*
Nnssaaf_AIW

AAA Interworking Authentication and Authorization Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnssaaf_AIW

import (
	"encoding/json"
)

// checks if the AuthContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthContext{}

// AuthContext struct for AuthContext
type AuthContext struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi string `json:"supi"`
	// contains the resource ID of authentication context
	AuthCtxId string `json:"authCtxId"`
	// contains an EAP packet
	EapMessage NullableString `json:"eapMessage,omitempty"`
	// contains an EAP packet
	TtlsInnerMethodContainer NullableString `json:"ttlsInnerMethodContainer,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewAuthContext instantiates a new AuthContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthContext(supi string, authCtxId string) *AuthContext {
	this := AuthContext{}
	this.Supi = supi
	this.AuthCtxId = authCtxId
	return &this
}

// NewAuthContextWithDefaults instantiates a new AuthContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthContextWithDefaults() *AuthContext {
	this := AuthContext{}
	return &this
}

// GetSupi returns the Supi field value
func (o *AuthContext) GetSupi() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Supi
}

// GetSupiOk returns a tuple with the Supi field value
// and a boolean to check if the value has been set.
func (o *AuthContext) GetSupiOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Supi, true
}

// SetSupi sets field value
func (o *AuthContext) SetSupi(v string) {
	o.Supi = v
}

// GetAuthCtxId returns the AuthCtxId field value
func (o *AuthContext) GetAuthCtxId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AuthCtxId
}

// GetAuthCtxIdOk returns a tuple with the AuthCtxId field value
// and a boolean to check if the value has been set.
func (o *AuthContext) GetAuthCtxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AuthCtxId, true
}

// SetAuthCtxId sets field value
func (o *AuthContext) SetAuthCtxId(v string) {
	o.AuthCtxId = v
}

// GetEapMessage returns the EapMessage field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthContext) GetEapMessage() string {
	if o == nil || IsNil(o.EapMessage.Get()) {
		var ret string
		return ret
	}
	return *o.EapMessage.Get()
}

// GetEapMessageOk returns a tuple with the EapMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthContext) GetEapMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EapMessage.Get(), o.EapMessage.IsSet()
}

// HasEapMessage returns a boolean if a field has been set.
func (o *AuthContext) HasEapMessage() bool {
	if o != nil && o.EapMessage.IsSet() {
		return true
	}

	return false
}

// SetEapMessage gets a reference to the given NullableString and assigns it to the EapMessage field.
func (o *AuthContext) SetEapMessage(v string) {
	o.EapMessage.Set(&v)
}

// SetEapMessageNil sets the value for EapMessage to be an explicit nil
func (o *AuthContext) SetEapMessageNil() {
	o.EapMessage.Set(nil)
}

// UnsetEapMessage ensures that no value is present for EapMessage, not even an explicit nil
func (o *AuthContext) UnsetEapMessage() {
	o.EapMessage.Unset()
}

// GetTtlsInnerMethodContainer returns the TtlsInnerMethodContainer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *AuthContext) GetTtlsInnerMethodContainer() string {
	if o == nil || IsNil(o.TtlsInnerMethodContainer.Get()) {
		var ret string
		return ret
	}
	return *o.TtlsInnerMethodContainer.Get()
}

// GetTtlsInnerMethodContainerOk returns a tuple with the TtlsInnerMethodContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *AuthContext) GetTtlsInnerMethodContainerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TtlsInnerMethodContainer.Get(), o.TtlsInnerMethodContainer.IsSet()
}

// HasTtlsInnerMethodContainer returns a boolean if a field has been set.
func (o *AuthContext) HasTtlsInnerMethodContainer() bool {
	if o != nil && o.TtlsInnerMethodContainer.IsSet() {
		return true
	}

	return false
}

// SetTtlsInnerMethodContainer gets a reference to the given NullableString and assigns it to the TtlsInnerMethodContainer field.
func (o *AuthContext) SetTtlsInnerMethodContainer(v string) {
	o.TtlsInnerMethodContainer.Set(&v)
}

// SetTtlsInnerMethodContainerNil sets the value for TtlsInnerMethodContainer to be an explicit nil
func (o *AuthContext) SetTtlsInnerMethodContainerNil() {
	o.TtlsInnerMethodContainer.Set(nil)
}

// UnsetTtlsInnerMethodContainer ensures that no value is present for TtlsInnerMethodContainer, not even an explicit nil
func (o *AuthContext) UnsetTtlsInnerMethodContainer() {
	o.TtlsInnerMethodContainer.Unset()
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *AuthContext) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthContext) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *AuthContext) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *AuthContext) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o AuthContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["supi"] = o.Supi
	toSerialize["authCtxId"] = o.AuthCtxId
	if o.EapMessage.IsSet() {
		toSerialize["eapMessage"] = o.EapMessage.Get()
	}
	if o.TtlsInnerMethodContainer.IsSet() {
		toSerialize["ttlsInnerMethodContainer"] = o.TtlsInnerMethodContainer.Get()
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableAuthContext struct {
	value *AuthContext
	isSet bool
}

func (v NullableAuthContext) Get() *AuthContext {
	return v.value
}

func (v *NullableAuthContext) Set(val *AuthContext) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthContext) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthContext(val *AuthContext) *NullableAuthContext {
	return &NullableAuthContext{value: val, isSet: true}
}

func (v NullableAuthContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
