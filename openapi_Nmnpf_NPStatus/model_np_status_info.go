/*
Nmnpf_NPStatus

Nmnpf Number Portability Status Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmnpf_NPStatus

import (
	"encoding/json"
)

// checks if the NpStatusInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpStatusInfo{}

// NpStatusInfo Contains the Subscription Network
type NpStatusInfo struct {
	SubscriptionNetwork PlmnId `json:"subscriptionNetwork"`
}

// NewNpStatusInfo instantiates a new NpStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpStatusInfo(subscriptionNetwork PlmnId) *NpStatusInfo {
	this := NpStatusInfo{}
	this.SubscriptionNetwork = subscriptionNetwork
	return &this
}

// NewNpStatusInfoWithDefaults instantiates a new NpStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpStatusInfoWithDefaults() *NpStatusInfo {
	this := NpStatusInfo{}
	return &this
}

// GetSubscriptionNetwork returns the SubscriptionNetwork field value
func (o *NpStatusInfo) GetSubscriptionNetwork() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.SubscriptionNetwork
}

// GetSubscriptionNetworkOk returns a tuple with the SubscriptionNetwork field value
// and a boolean to check if the value has been set.
func (o *NpStatusInfo) GetSubscriptionNetworkOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionNetwork, true
}

// SetSubscriptionNetwork sets field value
func (o *NpStatusInfo) SetSubscriptionNetwork(v PlmnId) {
	o.SubscriptionNetwork = v
}

func (o NpStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpStatusInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscriptionNetwork"] = o.SubscriptionNetwork
	return toSerialize, nil
}

type NullableNpStatusInfo struct {
	value *NpStatusInfo
	isSet bool
}

func (v NullableNpStatusInfo) Get() *NpStatusInfo {
	return v.value
}

func (v *NullableNpStatusInfo) Set(val *NpStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNpStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNpStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpStatusInfo(val *NpStatusInfo) *NullableNpStatusInfo {
	return &NullableNpStatusInfo{value: val, isSet: true}
}

func (v NullableNpStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
