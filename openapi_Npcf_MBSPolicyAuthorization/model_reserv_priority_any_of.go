/*
Npcf_MBSPolicyAuthorization API

MBS Policy Authorization Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_MBSPolicyAuthorization

import (
	"encoding/json"
	"fmt"
)

// ReservPriorityAnyOf the model 'ReservPriorityAnyOf'
type ReservPriorityAnyOf string

// List of ReservPriority_anyOf
const (
	_1 ReservPriorityAnyOf = "PRIO_1"
	_2 ReservPriorityAnyOf = "PRIO_2"
	_3 ReservPriorityAnyOf = "PRIO_3"
	_4 ReservPriorityAnyOf = "PRIO_4"
	_5 ReservPriorityAnyOf = "PRIO_5"
	_6 ReservPriorityAnyOf = "PRIO_6"
	_7 ReservPriorityAnyOf = "PRIO_7"
	_8 ReservPriorityAnyOf = "PRIO_8"
	_9 ReservPriorityAnyOf = "PRIO_9"
	_10 ReservPriorityAnyOf = "PRIO_10"
	_11 ReservPriorityAnyOf = "PRIO_11"
	_12 ReservPriorityAnyOf = "PRIO_12"
	_13 ReservPriorityAnyOf = "PRIO_13"
	_14 ReservPriorityAnyOf = "PRIO_14"
	_15 ReservPriorityAnyOf = "PRIO_15"
	_16 ReservPriorityAnyOf = "PRIO_16"
)

// All allowed values of ReservPriorityAnyOf enum
var AllowedReservPriorityAnyOfEnumValues = []ReservPriorityAnyOf{
	"PRIO_1",
	"PRIO_2",
	"PRIO_3",
	"PRIO_4",
	"PRIO_5",
	"PRIO_6",
	"PRIO_7",
	"PRIO_8",
	"PRIO_9",
	"PRIO_10",
	"PRIO_11",
	"PRIO_12",
	"PRIO_13",
	"PRIO_14",
	"PRIO_15",
	"PRIO_16",
}

func (v *ReservPriorityAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ReservPriorityAnyOf(value)
	for _, existing := range AllowedReservPriorityAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ReservPriorityAnyOf", value)
}

// NewReservPriorityAnyOfFromValue returns a pointer to a valid ReservPriorityAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewReservPriorityAnyOfFromValue(v string) (*ReservPriorityAnyOf, error) {
	ev := ReservPriorityAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ReservPriorityAnyOf: valid values are %v", v, AllowedReservPriorityAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ReservPriorityAnyOf) IsValid() bool {
	for _, existing := range AllowedReservPriorityAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ReservPriority_anyOf value
func (v ReservPriorityAnyOf) Ptr() *ReservPriorityAnyOf {
	return &v
}

type NullableReservPriorityAnyOf struct {
	value *ReservPriorityAnyOf
	isSet bool
}

func (v NullableReservPriorityAnyOf) Get() *ReservPriorityAnyOf {
	return v.value
}

func (v *NullableReservPriorityAnyOf) Set(val *ReservPriorityAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableReservPriorityAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableReservPriorityAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReservPriorityAnyOf(val *ReservPriorityAnyOf) *NullableReservPriorityAnyOf {
	return &NullableReservPriorityAnyOf{value: val, isSet: true}
}

func (v NullableReservPriorityAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReservPriorityAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

