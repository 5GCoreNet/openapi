/*
Npcf_MBSPolicyAuthorization API

MBS Policy Authorization Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_MBSPolicyAuthorization

import (
	"encoding/json"
)

// checks if the MbsAppSessionCtxt type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MbsAppSessionCtxt{}

// MbsAppSessionCtxt Represents the parameter of an MBS Application Session Context. 
type MbsAppSessionCtxt struct {
	MbsSessionId MbsSessionId `json:"mbsSessionId"`
	MbsServInfo *MbsServiceInfo `json:"mbsServInfo,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn *string `json:"dnn,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	ContactPcfInd *bool `json:"contactPcfInd,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeat *string `json:"suppFeat,omitempty"`
}

// NewMbsAppSessionCtxt instantiates a new MbsAppSessionCtxt object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMbsAppSessionCtxt(mbsSessionId MbsSessionId) *MbsAppSessionCtxt {
	this := MbsAppSessionCtxt{}
	this.MbsSessionId = mbsSessionId
	var contactPcfInd bool = false
	this.ContactPcfInd = &contactPcfInd
	return &this
}

// NewMbsAppSessionCtxtWithDefaults instantiates a new MbsAppSessionCtxt object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMbsAppSessionCtxtWithDefaults() *MbsAppSessionCtxt {
	this := MbsAppSessionCtxt{}
	var contactPcfInd bool = false
	this.ContactPcfInd = &contactPcfInd
	return &this
}

// GetMbsSessionId returns the MbsSessionId field value
func (o *MbsAppSessionCtxt) GetMbsSessionId() MbsSessionId {
	if o == nil {
		var ret MbsSessionId
		return ret
	}

	return o.MbsSessionId
}

// GetMbsSessionIdOk returns a tuple with the MbsSessionId field value
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetMbsSessionIdOk() (*MbsSessionId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MbsSessionId, true
}

// SetMbsSessionId sets field value
func (o *MbsAppSessionCtxt) SetMbsSessionId(v MbsSessionId) {
	o.MbsSessionId = v
}

// GetMbsServInfo returns the MbsServInfo field value if set, zero value otherwise.
func (o *MbsAppSessionCtxt) GetMbsServInfo() MbsServiceInfo {
	if o == nil || isNil(o.MbsServInfo) {
		var ret MbsServiceInfo
		return ret
	}
	return *o.MbsServInfo
}

// GetMbsServInfoOk returns a tuple with the MbsServInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetMbsServInfoOk() (*MbsServiceInfo, bool) {
	if o == nil || isNil(o.MbsServInfo) {
		return nil, false
	}
	return o.MbsServInfo, true
}

// HasMbsServInfo returns a boolean if a field has been set.
func (o *MbsAppSessionCtxt) HasMbsServInfo() bool {
	if o != nil && !isNil(o.MbsServInfo) {
		return true
	}

	return false
}

// SetMbsServInfo gets a reference to the given MbsServiceInfo and assigns it to the MbsServInfo field.
func (o *MbsAppSessionCtxt) SetMbsServInfo(v MbsServiceInfo) {
	o.MbsServInfo = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *MbsAppSessionCtxt) GetDnn() string {
	if o == nil || isNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetDnnOk() (*string, bool) {
	if o == nil || isNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *MbsAppSessionCtxt) HasDnn() bool {
	if o != nil && !isNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *MbsAppSessionCtxt) SetDnn(v string) {
	o.Dnn = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *MbsAppSessionCtxt) GetSnssai() Snssai {
	if o == nil || isNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || isNil(o.Snssai) {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *MbsAppSessionCtxt) HasSnssai() bool {
	if o != nil && !isNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *MbsAppSessionCtxt) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetContactPcfInd returns the ContactPcfInd field value if set, zero value otherwise.
func (o *MbsAppSessionCtxt) GetContactPcfInd() bool {
	if o == nil || isNil(o.ContactPcfInd) {
		var ret bool
		return ret
	}
	return *o.ContactPcfInd
}

// GetContactPcfIndOk returns a tuple with the ContactPcfInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetContactPcfIndOk() (*bool, bool) {
	if o == nil || isNil(o.ContactPcfInd) {
		return nil, false
	}
	return o.ContactPcfInd, true
}

// HasContactPcfInd returns a boolean if a field has been set.
func (o *MbsAppSessionCtxt) HasContactPcfInd() bool {
	if o != nil && !isNil(o.ContactPcfInd) {
		return true
	}

	return false
}

// SetContactPcfInd gets a reference to the given bool and assigns it to the ContactPcfInd field.
func (o *MbsAppSessionCtxt) SetContactPcfInd(v bool) {
	o.ContactPcfInd = &v
}

// GetSuppFeat returns the SuppFeat field value if set, zero value otherwise.
func (o *MbsAppSessionCtxt) GetSuppFeat() string {
	if o == nil || isNil(o.SuppFeat) {
		var ret string
		return ret
	}
	return *o.SuppFeat
}

// GetSuppFeatOk returns a tuple with the SuppFeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MbsAppSessionCtxt) GetSuppFeatOk() (*string, bool) {
	if o == nil || isNil(o.SuppFeat) {
		return nil, false
	}
	return o.SuppFeat, true
}

// HasSuppFeat returns a boolean if a field has been set.
func (o *MbsAppSessionCtxt) HasSuppFeat() bool {
	if o != nil && !isNil(o.SuppFeat) {
		return true
	}

	return false
}

// SetSuppFeat gets a reference to the given string and assigns it to the SuppFeat field.
func (o *MbsAppSessionCtxt) SetSuppFeat(v string) {
	o.SuppFeat = &v
}

func (o MbsAppSessionCtxt) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MbsAppSessionCtxt) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mbsSessionId"] = o.MbsSessionId
	if !isNil(o.MbsServInfo) {
		toSerialize["mbsServInfo"] = o.MbsServInfo
	}
	if !isNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !isNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	if !isNil(o.ContactPcfInd) {
		toSerialize["contactPcfInd"] = o.ContactPcfInd
	}
	if !isNil(o.SuppFeat) {
		toSerialize["suppFeat"] = o.SuppFeat
	}
	return toSerialize, nil
}

type NullableMbsAppSessionCtxt struct {
	value *MbsAppSessionCtxt
	isSet bool
}

func (v NullableMbsAppSessionCtxt) Get() *MbsAppSessionCtxt {
	return v.value
}

func (v *NullableMbsAppSessionCtxt) Set(val *MbsAppSessionCtxt) {
	v.value = val
	v.isSet = true
}

func (v NullableMbsAppSessionCtxt) IsSet() bool {
	return v.isSet
}

func (v *NullableMbsAppSessionCtxt) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMbsAppSessionCtxt(val *MbsAppSessionCtxt) *NullableMbsAppSessionCtxt {
	return &NullableMbsAppSessionCtxt{value: val, isSet: true}
}

func (v NullableMbsAppSessionCtxt) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMbsAppSessionCtxt) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


