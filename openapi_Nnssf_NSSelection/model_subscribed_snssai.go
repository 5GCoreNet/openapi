/*
NSSF NS Selection

NSSF Network Slice Selection Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnssf_NSSelection

import (
	"encoding/json"
)

// checks if the SubscribedSnssai type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SubscribedSnssai{}

// SubscribedSnssai Contains the subscribed S-NSSAI
type SubscribedSnssai struct {
	SubscribedSnssai    Snssai   `json:"subscribedSnssai"`
	DefaultIndication   *bool    `json:"defaultIndication,omitempty"`
	SubscribedNsSrgList []string `json:"subscribedNsSrgList,omitempty"`
}

// NewSubscribedSnssai instantiates a new SubscribedSnssai object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSubscribedSnssai(subscribedSnssai Snssai) *SubscribedSnssai {
	this := SubscribedSnssai{}
	this.SubscribedSnssai = subscribedSnssai
	return &this
}

// NewSubscribedSnssaiWithDefaults instantiates a new SubscribedSnssai object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSubscribedSnssaiWithDefaults() *SubscribedSnssai {
	this := SubscribedSnssai{}
	return &this
}

// GetSubscribedSnssai returns the SubscribedSnssai field value
func (o *SubscribedSnssai) GetSubscribedSnssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.SubscribedSnssai
}

// GetSubscribedSnssaiOk returns a tuple with the SubscribedSnssai field value
// and a boolean to check if the value has been set.
func (o *SubscribedSnssai) GetSubscribedSnssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscribedSnssai, true
}

// SetSubscribedSnssai sets field value
func (o *SubscribedSnssai) SetSubscribedSnssai(v Snssai) {
	o.SubscribedSnssai = v
}

// GetDefaultIndication returns the DefaultIndication field value if set, zero value otherwise.
func (o *SubscribedSnssai) GetDefaultIndication() bool {
	if o == nil || IsNil(o.DefaultIndication) {
		var ret bool
		return ret
	}
	return *o.DefaultIndication
}

// GetDefaultIndicationOk returns a tuple with the DefaultIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribedSnssai) GetDefaultIndicationOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultIndication) {
		return nil, false
	}
	return o.DefaultIndication, true
}

// HasDefaultIndication returns a boolean if a field has been set.
func (o *SubscribedSnssai) HasDefaultIndication() bool {
	if o != nil && !IsNil(o.DefaultIndication) {
		return true
	}

	return false
}

// SetDefaultIndication gets a reference to the given bool and assigns it to the DefaultIndication field.
func (o *SubscribedSnssai) SetDefaultIndication(v bool) {
	o.DefaultIndication = &v
}

// GetSubscribedNsSrgList returns the SubscribedNsSrgList field value if set, zero value otherwise.
func (o *SubscribedSnssai) GetSubscribedNsSrgList() []string {
	if o == nil || IsNil(o.SubscribedNsSrgList) {
		var ret []string
		return ret
	}
	return o.SubscribedNsSrgList
}

// GetSubscribedNsSrgListOk returns a tuple with the SubscribedNsSrgList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SubscribedSnssai) GetSubscribedNsSrgListOk() ([]string, bool) {
	if o == nil || IsNil(o.SubscribedNsSrgList) {
		return nil, false
	}
	return o.SubscribedNsSrgList, true
}

// HasSubscribedNsSrgList returns a boolean if a field has been set.
func (o *SubscribedSnssai) HasSubscribedNsSrgList() bool {
	if o != nil && !IsNil(o.SubscribedNsSrgList) {
		return true
	}

	return false
}

// SetSubscribedNsSrgList gets a reference to the given []string and assigns it to the SubscribedNsSrgList field.
func (o *SubscribedSnssai) SetSubscribedNsSrgList(v []string) {
	o.SubscribedNsSrgList = v
}

func (o SubscribedSnssai) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SubscribedSnssai) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subscribedSnssai"] = o.SubscribedSnssai
	if !IsNil(o.DefaultIndication) {
		toSerialize["defaultIndication"] = o.DefaultIndication
	}
	if !IsNil(o.SubscribedNsSrgList) {
		toSerialize["subscribedNsSrgList"] = o.SubscribedNsSrgList
	}
	return toSerialize, nil
}

type NullableSubscribedSnssai struct {
	value *SubscribedSnssai
	isSet bool
}

func (v NullableSubscribedSnssai) Get() *SubscribedSnssai {
	return v.value
}

func (v *NullableSubscribedSnssai) Set(val *SubscribedSnssai) {
	v.value = val
	v.isSet = true
}

func (v NullableSubscribedSnssai) IsSet() bool {
	return v.isSet
}

func (v *NullableSubscribedSnssai) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSubscribedSnssai(val *SubscribedSnssai) *NullableSubscribedSnssai {
	return &NullableSubscribedSnssai{value: val, isSet: true}
}

func (v NullableSubscribedSnssai) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSubscribedSnssai) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
