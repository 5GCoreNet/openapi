/*
NSSF NS Selection

NSSF Network Slice Selection Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnssf_NSSelection

import (
	"encoding/json"
	"fmt"
)

// RoamingIndicationAnyOf the model 'RoamingIndicationAnyOf'
type RoamingIndicationAnyOf string

// List of RoamingIndication_anyOf
const (
	NON_ROAMING RoamingIndicationAnyOf = "NON_ROAMING"
	LOCAL_BREAKOUT RoamingIndicationAnyOf = "LOCAL_BREAKOUT"
	HOME_ROUTED_ROAMING RoamingIndicationAnyOf = "HOME_ROUTED_ROAMING"
)

// All allowed values of RoamingIndicationAnyOf enum
var AllowedRoamingIndicationAnyOfEnumValues = []RoamingIndicationAnyOf{
	"NON_ROAMING",
	"LOCAL_BREAKOUT",
	"HOME_ROUTED_ROAMING",
}

func (v *RoamingIndicationAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RoamingIndicationAnyOf(value)
	for _, existing := range AllowedRoamingIndicationAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RoamingIndicationAnyOf", value)
}

// NewRoamingIndicationAnyOfFromValue returns a pointer to a valid RoamingIndicationAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRoamingIndicationAnyOfFromValue(v string) (*RoamingIndicationAnyOf, error) {
	ev := RoamingIndicationAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RoamingIndicationAnyOf: valid values are %v", v, AllowedRoamingIndicationAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RoamingIndicationAnyOf) IsValid() bool {
	for _, existing := range AllowedRoamingIndicationAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RoamingIndication_anyOf value
func (v RoamingIndicationAnyOf) Ptr() *RoamingIndicationAnyOf {
	return &v
}

type NullableRoamingIndicationAnyOf struct {
	value *RoamingIndicationAnyOf
	isSet bool
}

func (v NullableRoamingIndicationAnyOf) Get() *RoamingIndicationAnyOf {
	return v.value
}

func (v *NullableRoamingIndicationAnyOf) Set(val *RoamingIndicationAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRoamingIndicationAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRoamingIndicationAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoamingIndicationAnyOf(val *RoamingIndicationAnyOf) *NullableRoamingIndicationAnyOf {
	return &NullableRoamingIndicationAnyOf{value: val, isSet: true}
}

func (v NullableRoamingIndicationAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoamingIndicationAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

