/*
M1_ContentHostingProvisioning

5GMS AF M1 Content Hosting Provisioning API Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_M1_ContentHostingProvisioning

import (
	"encoding/json"
)

// checks if the PathRewriteRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PathRewriteRule{}

// PathRewriteRule A rule to manipulate URL paths.
type PathRewriteRule struct {
	RequestPathPattern string `json:"requestPathPattern"`
	MappedPath         string `json:"mappedPath"`
}

// NewPathRewriteRule instantiates a new PathRewriteRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPathRewriteRule(requestPathPattern string, mappedPath string) *PathRewriteRule {
	this := PathRewriteRule{}
	this.RequestPathPattern = requestPathPattern
	this.MappedPath = mappedPath
	return &this
}

// NewPathRewriteRuleWithDefaults instantiates a new PathRewriteRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPathRewriteRuleWithDefaults() *PathRewriteRule {
	this := PathRewriteRule{}
	return &this
}

// GetRequestPathPattern returns the RequestPathPattern field value
func (o *PathRewriteRule) GetRequestPathPattern() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestPathPattern
}

// GetRequestPathPatternOk returns a tuple with the RequestPathPattern field value
// and a boolean to check if the value has been set.
func (o *PathRewriteRule) GetRequestPathPatternOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestPathPattern, true
}

// SetRequestPathPattern sets field value
func (o *PathRewriteRule) SetRequestPathPattern(v string) {
	o.RequestPathPattern = v
}

// GetMappedPath returns the MappedPath field value
func (o *PathRewriteRule) GetMappedPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MappedPath
}

// GetMappedPathOk returns a tuple with the MappedPath field value
// and a boolean to check if the value has been set.
func (o *PathRewriteRule) GetMappedPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MappedPath, true
}

// SetMappedPath sets field value
func (o *PathRewriteRule) SetMappedPath(v string) {
	o.MappedPath = v
}

func (o PathRewriteRule) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PathRewriteRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestPathPattern"] = o.RequestPathPattern
	toSerialize["mappedPath"] = o.MappedPath
	return toSerialize, nil
}

type NullablePathRewriteRule struct {
	value *PathRewriteRule
	isSet bool
}

func (v NullablePathRewriteRule) Get() *PathRewriteRule {
	return v.value
}

func (v *NullablePathRewriteRule) Set(val *PathRewriteRule) {
	v.value = val
	v.isSet = true
}

func (v NullablePathRewriteRule) IsSet() bool {
	return v.isSet
}

func (v *NullablePathRewriteRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePathRewriteRule(val *PathRewriteRule) *NullablePathRewriteRule {
	return &NullablePathRewriteRule{value: val, isSet: true}
}

func (v NullablePathRewriteRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePathRewriteRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
