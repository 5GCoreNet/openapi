/*
Nudm_PP

Nudm Parameter Provision Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_PP

import (
	"encoding/json"
)

// checks if the CommunicationCharacteristics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommunicationCharacteristics{}

// CommunicationCharacteristics struct for CommunicationCharacteristics
type CommunicationCharacteristics struct {
	PpSubsRegTimer        NullablePpSubsRegTimer        `json:"ppSubsRegTimer,omitempty"`
	PpActiveTime          NullablePpActiveTime          `json:"ppActiveTime,omitempty"`
	PpDlPacketCount       NullableInt32                 `json:"ppDlPacketCount,omitempty"`
	PpDlPacketCountExt    NullablePpDlPacketCountExt    `json:"ppDlPacketCountExt,omitempty"`
	PpMaximumResponseTime NullablePpMaximumResponseTime `json:"ppMaximumResponseTime,omitempty"`
	PpMaximumLatency      NullablePpMaximumLatency      `json:"ppMaximumLatency,omitempty"`
}

// NewCommunicationCharacteristics instantiates a new CommunicationCharacteristics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommunicationCharacteristics() *CommunicationCharacteristics {
	this := CommunicationCharacteristics{}
	return &this
}

// NewCommunicationCharacteristicsWithDefaults instantiates a new CommunicationCharacteristics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommunicationCharacteristicsWithDefaults() *CommunicationCharacteristics {
	this := CommunicationCharacteristics{}
	return &this
}

// GetPpSubsRegTimer returns the PpSubsRegTimer field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpSubsRegTimer() PpSubsRegTimer {
	if o == nil || IsNil(o.PpSubsRegTimer.Get()) {
		var ret PpSubsRegTimer
		return ret
	}
	return *o.PpSubsRegTimer.Get()
}

// GetPpSubsRegTimerOk returns a tuple with the PpSubsRegTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpSubsRegTimerOk() (*PpSubsRegTimer, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpSubsRegTimer.Get(), o.PpSubsRegTimer.IsSet()
}

// HasPpSubsRegTimer returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpSubsRegTimer() bool {
	if o != nil && o.PpSubsRegTimer.IsSet() {
		return true
	}

	return false
}

// SetPpSubsRegTimer gets a reference to the given NullablePpSubsRegTimer and assigns it to the PpSubsRegTimer field.
func (o *CommunicationCharacteristics) SetPpSubsRegTimer(v PpSubsRegTimer) {
	o.PpSubsRegTimer.Set(&v)
}

// SetPpSubsRegTimerNil sets the value for PpSubsRegTimer to be an explicit nil
func (o *CommunicationCharacteristics) SetPpSubsRegTimerNil() {
	o.PpSubsRegTimer.Set(nil)
}

// UnsetPpSubsRegTimer ensures that no value is present for PpSubsRegTimer, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpSubsRegTimer() {
	o.PpSubsRegTimer.Unset()
}

// GetPpActiveTime returns the PpActiveTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpActiveTime() PpActiveTime {
	if o == nil || IsNil(o.PpActiveTime.Get()) {
		var ret PpActiveTime
		return ret
	}
	return *o.PpActiveTime.Get()
}

// GetPpActiveTimeOk returns a tuple with the PpActiveTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpActiveTimeOk() (*PpActiveTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpActiveTime.Get(), o.PpActiveTime.IsSet()
}

// HasPpActiveTime returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpActiveTime() bool {
	if o != nil && o.PpActiveTime.IsSet() {
		return true
	}

	return false
}

// SetPpActiveTime gets a reference to the given NullablePpActiveTime and assigns it to the PpActiveTime field.
func (o *CommunicationCharacteristics) SetPpActiveTime(v PpActiveTime) {
	o.PpActiveTime.Set(&v)
}

// SetPpActiveTimeNil sets the value for PpActiveTime to be an explicit nil
func (o *CommunicationCharacteristics) SetPpActiveTimeNil() {
	o.PpActiveTime.Set(nil)
}

// UnsetPpActiveTime ensures that no value is present for PpActiveTime, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpActiveTime() {
	o.PpActiveTime.Unset()
}

// GetPpDlPacketCount returns the PpDlPacketCount field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpDlPacketCount() int32 {
	if o == nil || IsNil(o.PpDlPacketCount.Get()) {
		var ret int32
		return ret
	}
	return *o.PpDlPacketCount.Get()
}

// GetPpDlPacketCountOk returns a tuple with the PpDlPacketCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpDlPacketCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpDlPacketCount.Get(), o.PpDlPacketCount.IsSet()
}

// HasPpDlPacketCount returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpDlPacketCount() bool {
	if o != nil && o.PpDlPacketCount.IsSet() {
		return true
	}

	return false
}

// SetPpDlPacketCount gets a reference to the given NullableInt32 and assigns it to the PpDlPacketCount field.
func (o *CommunicationCharacteristics) SetPpDlPacketCount(v int32) {
	o.PpDlPacketCount.Set(&v)
}

// SetPpDlPacketCountNil sets the value for PpDlPacketCount to be an explicit nil
func (o *CommunicationCharacteristics) SetPpDlPacketCountNil() {
	o.PpDlPacketCount.Set(nil)
}

// UnsetPpDlPacketCount ensures that no value is present for PpDlPacketCount, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpDlPacketCount() {
	o.PpDlPacketCount.Unset()
}

// GetPpDlPacketCountExt returns the PpDlPacketCountExt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpDlPacketCountExt() PpDlPacketCountExt {
	if o == nil || IsNil(o.PpDlPacketCountExt.Get()) {
		var ret PpDlPacketCountExt
		return ret
	}
	return *o.PpDlPacketCountExt.Get()
}

// GetPpDlPacketCountExtOk returns a tuple with the PpDlPacketCountExt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpDlPacketCountExtOk() (*PpDlPacketCountExt, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpDlPacketCountExt.Get(), o.PpDlPacketCountExt.IsSet()
}

// HasPpDlPacketCountExt returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpDlPacketCountExt() bool {
	if o != nil && o.PpDlPacketCountExt.IsSet() {
		return true
	}

	return false
}

// SetPpDlPacketCountExt gets a reference to the given NullablePpDlPacketCountExt and assigns it to the PpDlPacketCountExt field.
func (o *CommunicationCharacteristics) SetPpDlPacketCountExt(v PpDlPacketCountExt) {
	o.PpDlPacketCountExt.Set(&v)
}

// SetPpDlPacketCountExtNil sets the value for PpDlPacketCountExt to be an explicit nil
func (o *CommunicationCharacteristics) SetPpDlPacketCountExtNil() {
	o.PpDlPacketCountExt.Set(nil)
}

// UnsetPpDlPacketCountExt ensures that no value is present for PpDlPacketCountExt, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpDlPacketCountExt() {
	o.PpDlPacketCountExt.Unset()
}

// GetPpMaximumResponseTime returns the PpMaximumResponseTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpMaximumResponseTime() PpMaximumResponseTime {
	if o == nil || IsNil(o.PpMaximumResponseTime.Get()) {
		var ret PpMaximumResponseTime
		return ret
	}
	return *o.PpMaximumResponseTime.Get()
}

// GetPpMaximumResponseTimeOk returns a tuple with the PpMaximumResponseTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpMaximumResponseTimeOk() (*PpMaximumResponseTime, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpMaximumResponseTime.Get(), o.PpMaximumResponseTime.IsSet()
}

// HasPpMaximumResponseTime returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpMaximumResponseTime() bool {
	if o != nil && o.PpMaximumResponseTime.IsSet() {
		return true
	}

	return false
}

// SetPpMaximumResponseTime gets a reference to the given NullablePpMaximumResponseTime and assigns it to the PpMaximumResponseTime field.
func (o *CommunicationCharacteristics) SetPpMaximumResponseTime(v PpMaximumResponseTime) {
	o.PpMaximumResponseTime.Set(&v)
}

// SetPpMaximumResponseTimeNil sets the value for PpMaximumResponseTime to be an explicit nil
func (o *CommunicationCharacteristics) SetPpMaximumResponseTimeNil() {
	o.PpMaximumResponseTime.Set(nil)
}

// UnsetPpMaximumResponseTime ensures that no value is present for PpMaximumResponseTime, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpMaximumResponseTime() {
	o.PpMaximumResponseTime.Unset()
}

// GetPpMaximumLatency returns the PpMaximumLatency field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CommunicationCharacteristics) GetPpMaximumLatency() PpMaximumLatency {
	if o == nil || IsNil(o.PpMaximumLatency.Get()) {
		var ret PpMaximumLatency
		return ret
	}
	return *o.PpMaximumLatency.Get()
}

// GetPpMaximumLatencyOk returns a tuple with the PpMaximumLatency field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CommunicationCharacteristics) GetPpMaximumLatencyOk() (*PpMaximumLatency, bool) {
	if o == nil {
		return nil, false
	}
	return o.PpMaximumLatency.Get(), o.PpMaximumLatency.IsSet()
}

// HasPpMaximumLatency returns a boolean if a field has been set.
func (o *CommunicationCharacteristics) HasPpMaximumLatency() bool {
	if o != nil && o.PpMaximumLatency.IsSet() {
		return true
	}

	return false
}

// SetPpMaximumLatency gets a reference to the given NullablePpMaximumLatency and assigns it to the PpMaximumLatency field.
func (o *CommunicationCharacteristics) SetPpMaximumLatency(v PpMaximumLatency) {
	o.PpMaximumLatency.Set(&v)
}

// SetPpMaximumLatencyNil sets the value for PpMaximumLatency to be an explicit nil
func (o *CommunicationCharacteristics) SetPpMaximumLatencyNil() {
	o.PpMaximumLatency.Set(nil)
}

// UnsetPpMaximumLatency ensures that no value is present for PpMaximumLatency, not even an explicit nil
func (o *CommunicationCharacteristics) UnsetPpMaximumLatency() {
	o.PpMaximumLatency.Unset()
}

func (o CommunicationCharacteristics) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommunicationCharacteristics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.PpSubsRegTimer.IsSet() {
		toSerialize["ppSubsRegTimer"] = o.PpSubsRegTimer.Get()
	}
	if o.PpActiveTime.IsSet() {
		toSerialize["ppActiveTime"] = o.PpActiveTime.Get()
	}
	if o.PpDlPacketCount.IsSet() {
		toSerialize["ppDlPacketCount"] = o.PpDlPacketCount.Get()
	}
	if o.PpDlPacketCountExt.IsSet() {
		toSerialize["ppDlPacketCountExt"] = o.PpDlPacketCountExt.Get()
	}
	if o.PpMaximumResponseTime.IsSet() {
		toSerialize["ppMaximumResponseTime"] = o.PpMaximumResponseTime.Get()
	}
	if o.PpMaximumLatency.IsSet() {
		toSerialize["ppMaximumLatency"] = o.PpMaximumLatency.Get()
	}
	return toSerialize, nil
}

type NullableCommunicationCharacteristics struct {
	value *CommunicationCharacteristics
	isSet bool
}

func (v NullableCommunicationCharacteristics) Get() *CommunicationCharacteristics {
	return v.value
}

func (v *NullableCommunicationCharacteristics) Set(val *CommunicationCharacteristics) {
	v.value = val
	v.isSet = true
}

func (v NullableCommunicationCharacteristics) IsSet() bool {
	return v.isSet
}

func (v *NullableCommunicationCharacteristics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommunicationCharacteristics(val *CommunicationCharacteristics) *NullableCommunicationCharacteristics {
	return &NullableCommunicationCharacteristics{value: val, isSet: true}
}

func (v NullableCommunicationCharacteristics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommunicationCharacteristics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
