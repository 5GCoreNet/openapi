/*
Neasdf_DNSContext

EASDF DNS Context Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Neasdf_DNSContext

import (
	"encoding/json"
)

// checks if the DnsQueryReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsQueryReport{}

// DnsQueryReport DNS Query Event Report
type DnsQueryReport struct {
	// Fully Qualified Domain Name
	Fqdn *string `json:"fqdn,omitempty"`
}

// NewDnsQueryReport instantiates a new DnsQueryReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsQueryReport() *DnsQueryReport {
	this := DnsQueryReport{}
	return &this
}

// NewDnsQueryReportWithDefaults instantiates a new DnsQueryReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsQueryReportWithDefaults() *DnsQueryReport {
	this := DnsQueryReport{}
	return &this
}

// GetFqdn returns the Fqdn field value if set, zero value otherwise.
func (o *DnsQueryReport) GetFqdn() string {
	if o == nil || IsNil(o.Fqdn) {
		var ret string
		return ret
	}
	return *o.Fqdn
}

// GetFqdnOk returns a tuple with the Fqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsQueryReport) GetFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.Fqdn) {
		return nil, false
	}
	return o.Fqdn, true
}

// HasFqdn returns a boolean if a field has been set.
func (o *DnsQueryReport) HasFqdn() bool {
	if o != nil && !IsNil(o.Fqdn) {
		return true
	}

	return false
}

// SetFqdn gets a reference to the given string and assigns it to the Fqdn field.
func (o *DnsQueryReport) SetFqdn(v string) {
	o.Fqdn = &v
}

func (o DnsQueryReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsQueryReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Fqdn) {
		toSerialize["fqdn"] = o.Fqdn
	}
	return toSerialize, nil
}

type NullableDnsQueryReport struct {
	value *DnsQueryReport
	isSet bool
}

func (v NullableDnsQueryReport) Get() *DnsQueryReport {
	return v.value
}

func (v *NullableDnsQueryReport) Set(val *DnsQueryReport) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsQueryReport) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsQueryReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsQueryReport(val *DnsQueryReport) *NullableDnsQueryReport {
	return &NullableDnsQueryReport{value: val, isSet: true}
}

func (v NullableDnsQueryReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsQueryReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


