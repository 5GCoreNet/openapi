/*
Neasdf_DNSContext

EASDF DNS Context Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Neasdf_DNSContext

import (
	"encoding/json"
)

// checks if the BaselineDnsRspMdtInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaselineDnsRspMdtInfo{}

// BaselineDnsRspMdtInfo Baseline DNS Response MDT Information
type BaselineDnsRspMdtInfo struct {
	BaseDnsMdtList []BaselineDnsMdtId `json:"baseDnsMdtList"`
}

// NewBaselineDnsRspMdtInfo instantiates a new BaselineDnsRspMdtInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaselineDnsRspMdtInfo(baseDnsMdtList []BaselineDnsMdtId) *BaselineDnsRspMdtInfo {
	this := BaselineDnsRspMdtInfo{}
	this.BaseDnsMdtList = baseDnsMdtList
	return &this
}

// NewBaselineDnsRspMdtInfoWithDefaults instantiates a new BaselineDnsRspMdtInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaselineDnsRspMdtInfoWithDefaults() *BaselineDnsRspMdtInfo {
	this := BaselineDnsRspMdtInfo{}
	return &this
}

// GetBaseDnsMdtList returns the BaseDnsMdtList field value
func (o *BaselineDnsRspMdtInfo) GetBaseDnsMdtList() []BaselineDnsMdtId {
	if o == nil {
		var ret []BaselineDnsMdtId
		return ret
	}

	return o.BaseDnsMdtList
}

// GetBaseDnsMdtListOk returns a tuple with the BaseDnsMdtList field value
// and a boolean to check if the value has been set.
func (o *BaselineDnsRspMdtInfo) GetBaseDnsMdtListOk() ([]BaselineDnsMdtId, bool) {
	if o == nil {
		return nil, false
	}
	return o.BaseDnsMdtList, true
}

// SetBaseDnsMdtList sets field value
func (o *BaselineDnsRspMdtInfo) SetBaseDnsMdtList(v []BaselineDnsMdtId) {
	o.BaseDnsMdtList = v
}

func (o BaselineDnsRspMdtInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaselineDnsRspMdtInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["baseDnsMdtList"] = o.BaseDnsMdtList
	return toSerialize, nil
}

type NullableBaselineDnsRspMdtInfo struct {
	value *BaselineDnsRspMdtInfo
	isSet bool
}

func (v NullableBaselineDnsRspMdtInfo) Get() *BaselineDnsRspMdtInfo {
	return v.value
}

func (v *NullableBaselineDnsRspMdtInfo) Set(val *BaselineDnsRspMdtInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableBaselineDnsRspMdtInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableBaselineDnsRspMdtInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaselineDnsRspMdtInfo(val *BaselineDnsRspMdtInfo) *NullableBaselineDnsRspMdtInfo {
	return &NullableBaselineDnsRspMdtInfo{value: val, isSet: true}
}

func (v NullableBaselineDnsRspMdtInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaselineDnsRspMdtInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


