/*
GBA BSF Nbsp_GBA Service

GBA BSF Nbsp_GBA Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nbsp_GBA

import (
	"encoding/json"
)

// checks if the UssListItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UssListItem{}

// UssListItem Data item in a User Security Settings array list
type UssListItem struct {
	Uss Uss `json:"uss"`
}

// NewUssListItem instantiates a new UssListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUssListItem(uss Uss) *UssListItem {
	this := UssListItem{}
	this.Uss = uss
	return &this
}

// NewUssListItemWithDefaults instantiates a new UssListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUssListItemWithDefaults() *UssListItem {
	this := UssListItem{}
	return &this
}

// GetUss returns the Uss field value
func (o *UssListItem) GetUss() Uss {
	if o == nil {
		var ret Uss
		return ret
	}

	return o.Uss
}

// GetUssOk returns a tuple with the Uss field value
// and a boolean to check if the value has been set.
func (o *UssListItem) GetUssOk() (*Uss, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Uss, true
}

// SetUss sets field value
func (o *UssListItem) SetUss(v Uss) {
	o.Uss = v
}

func (o UssListItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UssListItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["uss"] = o.Uss
	return toSerialize, nil
}

type NullableUssListItem struct {
	value *UssListItem
	isSet bool
}

func (v NullableUssListItem) Get() *UssListItem {
	return v.value
}

func (v *NullableUssListItem) Set(val *UssListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableUssListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableUssListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUssListItem(val *UssListItem) *NullableUssListItem {
	return &NullableUssListItem{value: val, isSet: true}
}

func (v NullableUssListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUssListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


