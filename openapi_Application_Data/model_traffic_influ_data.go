/*
Unified Data Repository Service API file for Application Data

The API version is defined in 3GPP TS 29.504   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Application_Data

import (
	"encoding/json"
	"time"
)

// checks if the TrafficInfluData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrafficInfluData{}

// TrafficInfluData Represents the Traffic Influence Data.
type TrafficInfluData struct {
	// Contains the Notification Correlation Id allocated by the NEF for the UP path change notification. 
	UpPathChgNotifCorreId *string `json:"upPathChgNotifCorreId,omitempty"`
	// Identifies whether an application can be relocated once a location of the application has been selected. 
	AppReloInd *bool `json:"appReloInd,omitempty"`
	// Identifies an application.
	AfAppId *string `json:"afAppId,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	Dnn *string `json:"dnn,omitempty"`
	// Identifies Ethernet packet filters. Either \"trafficFilters\" or \"ethTrafficFilters\" shall be included if applicable. 
	EthTrafficFilters []EthFlowDescription `json:"ethTrafficFilters,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	// String identifying a group of devices network internal globally unique ID which identifies a set of IMSIs, as specified in clause 19.9 of 3GPP TS 23.003.  
	InterGroupId *string `json:"interGroupId,omitempty"`
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty"`
	// Identifies IP packet filters. Either \"trafficFilters\" or \"ethTrafficFilters\" shall be included if applicable. 
	TrafficFilters []FlowInfo `json:"trafficFilters,omitempty"`
	// Identifies the N6 traffic routing requirement.
	TrafficRoutes []RouteToLocation `json:"trafficRoutes,omitempty"`
	TraffCorreInd *bool `json:"traffCorreInd,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidStartTime *time.Time `json:"validStartTime,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidEndTime *time.Time `json:"validEndTime,omitempty"`
	// Identifies the temporal validities for the N6 traffic routing requirement.
	TempValidities []TemporalValidity `json:"tempValidities,omitempty"`
	NwAreaInfo *NetworkAreaInfo `json:"nwAreaInfo,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	UpPathChgNotifUri *string `json:"upPathChgNotifUri,omitempty"`
	Headers []string `json:"headers,omitempty"`
	SubscribedEvents []SubscribedEvent `json:"subscribedEvents,omitempty"`
	DnaiChgType *DnaiChangeType `json:"dnaiChgType,omitempty"`
	AfAckInd *bool `json:"afAckInd,omitempty"`
	AddrPreserInd *bool `json:"addrPreserInd,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	MaxAllowedUpLat *int32 `json:"maxAllowedUpLat,omitempty"`
	// Indicates whether simultaneous connectivity should be temporarily maintained for the source and target PSA. 
	SimConnInd *bool `json:"simConnInd,omitempty"`
	// indicating a time in seconds.
	SimConnTerm *int32 `json:"simConnTerm,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	ResUri *string `json:"resUri,omitempty"`
	ResetIds []string `json:"resetIds,omitempty"`
}

// NewTrafficInfluData instantiates a new TrafficInfluData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrafficInfluData() *TrafficInfluData {
	this := TrafficInfluData{}
	return &this
}

// NewTrafficInfluDataWithDefaults instantiates a new TrafficInfluData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrafficInfluDataWithDefaults() *TrafficInfluData {
	this := TrafficInfluData{}
	return &this
}

// GetUpPathChgNotifCorreId returns the UpPathChgNotifCorreId field value if set, zero value otherwise.
func (o *TrafficInfluData) GetUpPathChgNotifCorreId() string {
	if o == nil || IsNil(o.UpPathChgNotifCorreId) {
		var ret string
		return ret
	}
	return *o.UpPathChgNotifCorreId
}

// GetUpPathChgNotifCorreIdOk returns a tuple with the UpPathChgNotifCorreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetUpPathChgNotifCorreIdOk() (*string, bool) {
	if o == nil || IsNil(o.UpPathChgNotifCorreId) {
		return nil, false
	}
	return o.UpPathChgNotifCorreId, true
}

// HasUpPathChgNotifCorreId returns a boolean if a field has been set.
func (o *TrafficInfluData) HasUpPathChgNotifCorreId() bool {
	if o != nil && !IsNil(o.UpPathChgNotifCorreId) {
		return true
	}

	return false
}

// SetUpPathChgNotifCorreId gets a reference to the given string and assigns it to the UpPathChgNotifCorreId field.
func (o *TrafficInfluData) SetUpPathChgNotifCorreId(v string) {
	o.UpPathChgNotifCorreId = &v
}

// GetAppReloInd returns the AppReloInd field value if set, zero value otherwise.
func (o *TrafficInfluData) GetAppReloInd() bool {
	if o == nil || IsNil(o.AppReloInd) {
		var ret bool
		return ret
	}
	return *o.AppReloInd
}

// GetAppReloIndOk returns a tuple with the AppReloInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetAppReloIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AppReloInd) {
		return nil, false
	}
	return o.AppReloInd, true
}

// HasAppReloInd returns a boolean if a field has been set.
func (o *TrafficInfluData) HasAppReloInd() bool {
	if o != nil && !IsNil(o.AppReloInd) {
		return true
	}

	return false
}

// SetAppReloInd gets a reference to the given bool and assigns it to the AppReloInd field.
func (o *TrafficInfluData) SetAppReloInd(v bool) {
	o.AppReloInd = &v
}

// GetAfAppId returns the AfAppId field value if set, zero value otherwise.
func (o *TrafficInfluData) GetAfAppId() string {
	if o == nil || IsNil(o.AfAppId) {
		var ret string
		return ret
	}
	return *o.AfAppId
}

// GetAfAppIdOk returns a tuple with the AfAppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetAfAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AfAppId) {
		return nil, false
	}
	return o.AfAppId, true
}

// HasAfAppId returns a boolean if a field has been set.
func (o *TrafficInfluData) HasAfAppId() bool {
	if o != nil && !IsNil(o.AfAppId) {
		return true
	}

	return false
}

// SetAfAppId gets a reference to the given string and assigns it to the AfAppId field.
func (o *TrafficInfluData) SetAfAppId(v string) {
	o.AfAppId = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *TrafficInfluData) GetDnn() string {
	if o == nil || IsNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetDnnOk() (*string, bool) {
	if o == nil || IsNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *TrafficInfluData) HasDnn() bool {
	if o != nil && !IsNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *TrafficInfluData) SetDnn(v string) {
	o.Dnn = &v
}

// GetEthTrafficFilters returns the EthTrafficFilters field value if set, zero value otherwise.
func (o *TrafficInfluData) GetEthTrafficFilters() []EthFlowDescription {
	if o == nil || IsNil(o.EthTrafficFilters) {
		var ret []EthFlowDescription
		return ret
	}
	return o.EthTrafficFilters
}

// GetEthTrafficFiltersOk returns a tuple with the EthTrafficFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetEthTrafficFiltersOk() ([]EthFlowDescription, bool) {
	if o == nil || IsNil(o.EthTrafficFilters) {
		return nil, false
	}
	return o.EthTrafficFilters, true
}

// HasEthTrafficFilters returns a boolean if a field has been set.
func (o *TrafficInfluData) HasEthTrafficFilters() bool {
	if o != nil && !IsNil(o.EthTrafficFilters) {
		return true
	}

	return false
}

// SetEthTrafficFilters gets a reference to the given []EthFlowDescription and assigns it to the EthTrafficFilters field.
func (o *TrafficInfluData) SetEthTrafficFilters(v []EthFlowDescription) {
	o.EthTrafficFilters = v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSnssai() Snssai {
	if o == nil || IsNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.Snssai) {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSnssai() bool {
	if o != nil && !IsNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *TrafficInfluData) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetInterGroupId returns the InterGroupId field value if set, zero value otherwise.
func (o *TrafficInfluData) GetInterGroupId() string {
	if o == nil || IsNil(o.InterGroupId) {
		var ret string
		return ret
	}
	return *o.InterGroupId
}

// GetInterGroupIdOk returns a tuple with the InterGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetInterGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.InterGroupId) {
		return nil, false
	}
	return o.InterGroupId, true
}

// HasInterGroupId returns a boolean if a field has been set.
func (o *TrafficInfluData) HasInterGroupId() bool {
	if o != nil && !IsNil(o.InterGroupId) {
		return true
	}

	return false
}

// SetInterGroupId gets a reference to the given string and assigns it to the InterGroupId field.
func (o *TrafficInfluData) SetInterGroupId(v string) {
	o.InterGroupId = &v
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *TrafficInfluData) SetSupi(v string) {
	o.Supi = &v
}

// GetTrafficFilters returns the TrafficFilters field value if set, zero value otherwise.
func (o *TrafficInfluData) GetTrafficFilters() []FlowInfo {
	if o == nil || IsNil(o.TrafficFilters) {
		var ret []FlowInfo
		return ret
	}
	return o.TrafficFilters
}

// GetTrafficFiltersOk returns a tuple with the TrafficFilters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetTrafficFiltersOk() ([]FlowInfo, bool) {
	if o == nil || IsNil(o.TrafficFilters) {
		return nil, false
	}
	return o.TrafficFilters, true
}

// HasTrafficFilters returns a boolean if a field has been set.
func (o *TrafficInfluData) HasTrafficFilters() bool {
	if o != nil && !IsNil(o.TrafficFilters) {
		return true
	}

	return false
}

// SetTrafficFilters gets a reference to the given []FlowInfo and assigns it to the TrafficFilters field.
func (o *TrafficInfluData) SetTrafficFilters(v []FlowInfo) {
	o.TrafficFilters = v
}

// GetTrafficRoutes returns the TrafficRoutes field value if set, zero value otherwise.
func (o *TrafficInfluData) GetTrafficRoutes() []RouteToLocation {
	if o == nil || IsNil(o.TrafficRoutes) {
		var ret []RouteToLocation
		return ret
	}
	return o.TrafficRoutes
}

// GetTrafficRoutesOk returns a tuple with the TrafficRoutes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetTrafficRoutesOk() ([]RouteToLocation, bool) {
	if o == nil || IsNil(o.TrafficRoutes) {
		return nil, false
	}
	return o.TrafficRoutes, true
}

// HasTrafficRoutes returns a boolean if a field has been set.
func (o *TrafficInfluData) HasTrafficRoutes() bool {
	if o != nil && !IsNil(o.TrafficRoutes) {
		return true
	}

	return false
}

// SetTrafficRoutes gets a reference to the given []RouteToLocation and assigns it to the TrafficRoutes field.
func (o *TrafficInfluData) SetTrafficRoutes(v []RouteToLocation) {
	o.TrafficRoutes = v
}

// GetTraffCorreInd returns the TraffCorreInd field value if set, zero value otherwise.
func (o *TrafficInfluData) GetTraffCorreInd() bool {
	if o == nil || IsNil(o.TraffCorreInd) {
		var ret bool
		return ret
	}
	return *o.TraffCorreInd
}

// GetTraffCorreIndOk returns a tuple with the TraffCorreInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetTraffCorreIndOk() (*bool, bool) {
	if o == nil || IsNil(o.TraffCorreInd) {
		return nil, false
	}
	return o.TraffCorreInd, true
}

// HasTraffCorreInd returns a boolean if a field has been set.
func (o *TrafficInfluData) HasTraffCorreInd() bool {
	if o != nil && !IsNil(o.TraffCorreInd) {
		return true
	}

	return false
}

// SetTraffCorreInd gets a reference to the given bool and assigns it to the TraffCorreInd field.
func (o *TrafficInfluData) SetTraffCorreInd(v bool) {
	o.TraffCorreInd = &v
}

// GetValidStartTime returns the ValidStartTime field value if set, zero value otherwise.
func (o *TrafficInfluData) GetValidStartTime() time.Time {
	if o == nil || IsNil(o.ValidStartTime) {
		var ret time.Time
		return ret
	}
	return *o.ValidStartTime
}

// GetValidStartTimeOk returns a tuple with the ValidStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetValidStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ValidStartTime) {
		return nil, false
	}
	return o.ValidStartTime, true
}

// HasValidStartTime returns a boolean if a field has been set.
func (o *TrafficInfluData) HasValidStartTime() bool {
	if o != nil && !IsNil(o.ValidStartTime) {
		return true
	}

	return false
}

// SetValidStartTime gets a reference to the given time.Time and assigns it to the ValidStartTime field.
func (o *TrafficInfluData) SetValidStartTime(v time.Time) {
	o.ValidStartTime = &v
}

// GetValidEndTime returns the ValidEndTime field value if set, zero value otherwise.
func (o *TrafficInfluData) GetValidEndTime() time.Time {
	if o == nil || IsNil(o.ValidEndTime) {
		var ret time.Time
		return ret
	}
	return *o.ValidEndTime
}

// GetValidEndTimeOk returns a tuple with the ValidEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetValidEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ValidEndTime) {
		return nil, false
	}
	return o.ValidEndTime, true
}

// HasValidEndTime returns a boolean if a field has been set.
func (o *TrafficInfluData) HasValidEndTime() bool {
	if o != nil && !IsNil(o.ValidEndTime) {
		return true
	}

	return false
}

// SetValidEndTime gets a reference to the given time.Time and assigns it to the ValidEndTime field.
func (o *TrafficInfluData) SetValidEndTime(v time.Time) {
	o.ValidEndTime = &v
}

// GetTempValidities returns the TempValidities field value if set, zero value otherwise.
func (o *TrafficInfluData) GetTempValidities() []TemporalValidity {
	if o == nil || IsNil(o.TempValidities) {
		var ret []TemporalValidity
		return ret
	}
	return o.TempValidities
}

// GetTempValiditiesOk returns a tuple with the TempValidities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetTempValiditiesOk() ([]TemporalValidity, bool) {
	if o == nil || IsNil(o.TempValidities) {
		return nil, false
	}
	return o.TempValidities, true
}

// HasTempValidities returns a boolean if a field has been set.
func (o *TrafficInfluData) HasTempValidities() bool {
	if o != nil && !IsNil(o.TempValidities) {
		return true
	}

	return false
}

// SetTempValidities gets a reference to the given []TemporalValidity and assigns it to the TempValidities field.
func (o *TrafficInfluData) SetTempValidities(v []TemporalValidity) {
	o.TempValidities = v
}

// GetNwAreaInfo returns the NwAreaInfo field value if set, zero value otherwise.
func (o *TrafficInfluData) GetNwAreaInfo() NetworkAreaInfo {
	if o == nil || IsNil(o.NwAreaInfo) {
		var ret NetworkAreaInfo
		return ret
	}
	return *o.NwAreaInfo
}

// GetNwAreaInfoOk returns a tuple with the NwAreaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetNwAreaInfoOk() (*NetworkAreaInfo, bool) {
	if o == nil || IsNil(o.NwAreaInfo) {
		return nil, false
	}
	return o.NwAreaInfo, true
}

// HasNwAreaInfo returns a boolean if a field has been set.
func (o *TrafficInfluData) HasNwAreaInfo() bool {
	if o != nil && !IsNil(o.NwAreaInfo) {
		return true
	}

	return false
}

// SetNwAreaInfo gets a reference to the given NetworkAreaInfo and assigns it to the NwAreaInfo field.
func (o *TrafficInfluData) SetNwAreaInfo(v NetworkAreaInfo) {
	o.NwAreaInfo = &v
}

// GetUpPathChgNotifUri returns the UpPathChgNotifUri field value if set, zero value otherwise.
func (o *TrafficInfluData) GetUpPathChgNotifUri() string {
	if o == nil || IsNil(o.UpPathChgNotifUri) {
		var ret string
		return ret
	}
	return *o.UpPathChgNotifUri
}

// GetUpPathChgNotifUriOk returns a tuple with the UpPathChgNotifUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetUpPathChgNotifUriOk() (*string, bool) {
	if o == nil || IsNil(o.UpPathChgNotifUri) {
		return nil, false
	}
	return o.UpPathChgNotifUri, true
}

// HasUpPathChgNotifUri returns a boolean if a field has been set.
func (o *TrafficInfluData) HasUpPathChgNotifUri() bool {
	if o != nil && !IsNil(o.UpPathChgNotifUri) {
		return true
	}

	return false
}

// SetUpPathChgNotifUri gets a reference to the given string and assigns it to the UpPathChgNotifUri field.
func (o *TrafficInfluData) SetUpPathChgNotifUri(v string) {
	o.UpPathChgNotifUri = &v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *TrafficInfluData) GetHeaders() []string {
	if o == nil || IsNil(o.Headers) {
		var ret []string
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetHeadersOk() ([]string, bool) {
	if o == nil || IsNil(o.Headers) {
		return nil, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *TrafficInfluData) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given []string and assigns it to the Headers field.
func (o *TrafficInfluData) SetHeaders(v []string) {
	o.Headers = v
}

// GetSubscribedEvents returns the SubscribedEvents field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSubscribedEvents() []SubscribedEvent {
	if o == nil || IsNil(o.SubscribedEvents) {
		var ret []SubscribedEvent
		return ret
	}
	return o.SubscribedEvents
}

// GetSubscribedEventsOk returns a tuple with the SubscribedEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSubscribedEventsOk() ([]SubscribedEvent, bool) {
	if o == nil || IsNil(o.SubscribedEvents) {
		return nil, false
	}
	return o.SubscribedEvents, true
}

// HasSubscribedEvents returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSubscribedEvents() bool {
	if o != nil && !IsNil(o.SubscribedEvents) {
		return true
	}

	return false
}

// SetSubscribedEvents gets a reference to the given []SubscribedEvent and assigns it to the SubscribedEvents field.
func (o *TrafficInfluData) SetSubscribedEvents(v []SubscribedEvent) {
	o.SubscribedEvents = v
}

// GetDnaiChgType returns the DnaiChgType field value if set, zero value otherwise.
func (o *TrafficInfluData) GetDnaiChgType() DnaiChangeType {
	if o == nil || IsNil(o.DnaiChgType) {
		var ret DnaiChangeType
		return ret
	}
	return *o.DnaiChgType
}

// GetDnaiChgTypeOk returns a tuple with the DnaiChgType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetDnaiChgTypeOk() (*DnaiChangeType, bool) {
	if o == nil || IsNil(o.DnaiChgType) {
		return nil, false
	}
	return o.DnaiChgType, true
}

// HasDnaiChgType returns a boolean if a field has been set.
func (o *TrafficInfluData) HasDnaiChgType() bool {
	if o != nil && !IsNil(o.DnaiChgType) {
		return true
	}

	return false
}

// SetDnaiChgType gets a reference to the given DnaiChangeType and assigns it to the DnaiChgType field.
func (o *TrafficInfluData) SetDnaiChgType(v DnaiChangeType) {
	o.DnaiChgType = &v
}

// GetAfAckInd returns the AfAckInd field value if set, zero value otherwise.
func (o *TrafficInfluData) GetAfAckInd() bool {
	if o == nil || IsNil(o.AfAckInd) {
		var ret bool
		return ret
	}
	return *o.AfAckInd
}

// GetAfAckIndOk returns a tuple with the AfAckInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetAfAckIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AfAckInd) {
		return nil, false
	}
	return o.AfAckInd, true
}

// HasAfAckInd returns a boolean if a field has been set.
func (o *TrafficInfluData) HasAfAckInd() bool {
	if o != nil && !IsNil(o.AfAckInd) {
		return true
	}

	return false
}

// SetAfAckInd gets a reference to the given bool and assigns it to the AfAckInd field.
func (o *TrafficInfluData) SetAfAckInd(v bool) {
	o.AfAckInd = &v
}

// GetAddrPreserInd returns the AddrPreserInd field value if set, zero value otherwise.
func (o *TrafficInfluData) GetAddrPreserInd() bool {
	if o == nil || IsNil(o.AddrPreserInd) {
		var ret bool
		return ret
	}
	return *o.AddrPreserInd
}

// GetAddrPreserIndOk returns a tuple with the AddrPreserInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetAddrPreserIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AddrPreserInd) {
		return nil, false
	}
	return o.AddrPreserInd, true
}

// HasAddrPreserInd returns a boolean if a field has been set.
func (o *TrafficInfluData) HasAddrPreserInd() bool {
	if o != nil && !IsNil(o.AddrPreserInd) {
		return true
	}

	return false
}

// SetAddrPreserInd gets a reference to the given bool and assigns it to the AddrPreserInd field.
func (o *TrafficInfluData) SetAddrPreserInd(v bool) {
	o.AddrPreserInd = &v
}

// GetMaxAllowedUpLat returns the MaxAllowedUpLat field value if set, zero value otherwise.
func (o *TrafficInfluData) GetMaxAllowedUpLat() int32 {
	if o == nil || IsNil(o.MaxAllowedUpLat) {
		var ret int32
		return ret
	}
	return *o.MaxAllowedUpLat
}

// GetMaxAllowedUpLatOk returns a tuple with the MaxAllowedUpLat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetMaxAllowedUpLatOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxAllowedUpLat) {
		return nil, false
	}
	return o.MaxAllowedUpLat, true
}

// HasMaxAllowedUpLat returns a boolean if a field has been set.
func (o *TrafficInfluData) HasMaxAllowedUpLat() bool {
	if o != nil && !IsNil(o.MaxAllowedUpLat) {
		return true
	}

	return false
}

// SetMaxAllowedUpLat gets a reference to the given int32 and assigns it to the MaxAllowedUpLat field.
func (o *TrafficInfluData) SetMaxAllowedUpLat(v int32) {
	o.MaxAllowedUpLat = &v
}

// GetSimConnInd returns the SimConnInd field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSimConnInd() bool {
	if o == nil || IsNil(o.SimConnInd) {
		var ret bool
		return ret
	}
	return *o.SimConnInd
}

// GetSimConnIndOk returns a tuple with the SimConnInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSimConnIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SimConnInd) {
		return nil, false
	}
	return o.SimConnInd, true
}

// HasSimConnInd returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSimConnInd() bool {
	if o != nil && !IsNil(o.SimConnInd) {
		return true
	}

	return false
}

// SetSimConnInd gets a reference to the given bool and assigns it to the SimConnInd field.
func (o *TrafficInfluData) SetSimConnInd(v bool) {
	o.SimConnInd = &v
}

// GetSimConnTerm returns the SimConnTerm field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSimConnTerm() int32 {
	if o == nil || IsNil(o.SimConnTerm) {
		var ret int32
		return ret
	}
	return *o.SimConnTerm
}

// GetSimConnTermOk returns a tuple with the SimConnTerm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSimConnTermOk() (*int32, bool) {
	if o == nil || IsNil(o.SimConnTerm) {
		return nil, false
	}
	return o.SimConnTerm, true
}

// HasSimConnTerm returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSimConnTerm() bool {
	if o != nil && !IsNil(o.SimConnTerm) {
		return true
	}

	return false
}

// SetSimConnTerm gets a reference to the given int32 and assigns it to the SimConnTerm field.
func (o *TrafficInfluData) SetSimConnTerm(v int32) {
	o.SimConnTerm = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *TrafficInfluData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *TrafficInfluData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *TrafficInfluData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetResUri returns the ResUri field value if set, zero value otherwise.
func (o *TrafficInfluData) GetResUri() string {
	if o == nil || IsNil(o.ResUri) {
		var ret string
		return ret
	}
	return *o.ResUri
}

// GetResUriOk returns a tuple with the ResUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetResUriOk() (*string, bool) {
	if o == nil || IsNil(o.ResUri) {
		return nil, false
	}
	return o.ResUri, true
}

// HasResUri returns a boolean if a field has been set.
func (o *TrafficInfluData) HasResUri() bool {
	if o != nil && !IsNil(o.ResUri) {
		return true
	}

	return false
}

// SetResUri gets a reference to the given string and assigns it to the ResUri field.
func (o *TrafficInfluData) SetResUri(v string) {
	o.ResUri = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *TrafficInfluData) GetResetIds() []string {
	if o == nil || IsNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrafficInfluData) GetResetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *TrafficInfluData) HasResetIds() bool {
	if o != nil && !IsNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *TrafficInfluData) SetResetIds(v []string) {
	o.ResetIds = v
}

func (o TrafficInfluData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrafficInfluData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UpPathChgNotifCorreId) {
		toSerialize["upPathChgNotifCorreId"] = o.UpPathChgNotifCorreId
	}
	if !IsNil(o.AppReloInd) {
		toSerialize["appReloInd"] = o.AppReloInd
	}
	if !IsNil(o.AfAppId) {
		toSerialize["afAppId"] = o.AfAppId
	}
	if !IsNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !IsNil(o.EthTrafficFilters) {
		toSerialize["ethTrafficFilters"] = o.EthTrafficFilters
	}
	if !IsNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	if !IsNil(o.InterGroupId) {
		toSerialize["interGroupId"] = o.InterGroupId
	}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.TrafficFilters) {
		toSerialize["trafficFilters"] = o.TrafficFilters
	}
	if !IsNil(o.TrafficRoutes) {
		toSerialize["trafficRoutes"] = o.TrafficRoutes
	}
	if !IsNil(o.TraffCorreInd) {
		toSerialize["traffCorreInd"] = o.TraffCorreInd
	}
	if !IsNil(o.ValidStartTime) {
		toSerialize["validStartTime"] = o.ValidStartTime
	}
	if !IsNil(o.ValidEndTime) {
		toSerialize["validEndTime"] = o.ValidEndTime
	}
	if !IsNil(o.TempValidities) {
		toSerialize["tempValidities"] = o.TempValidities
	}
	if !IsNil(o.NwAreaInfo) {
		toSerialize["nwAreaInfo"] = o.NwAreaInfo
	}
	if !IsNil(o.UpPathChgNotifUri) {
		toSerialize["upPathChgNotifUri"] = o.UpPathChgNotifUri
	}
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	if !IsNil(o.SubscribedEvents) {
		toSerialize["subscribedEvents"] = o.SubscribedEvents
	}
	if !IsNil(o.DnaiChgType) {
		toSerialize["dnaiChgType"] = o.DnaiChgType
	}
	if !IsNil(o.AfAckInd) {
		toSerialize["afAckInd"] = o.AfAckInd
	}
	if !IsNil(o.AddrPreserInd) {
		toSerialize["addrPreserInd"] = o.AddrPreserInd
	}
	if !IsNil(o.MaxAllowedUpLat) {
		toSerialize["maxAllowedUpLat"] = o.MaxAllowedUpLat
	}
	if !IsNil(o.SimConnInd) {
		toSerialize["simConnInd"] = o.SimConnInd
	}
	if !IsNil(o.SimConnTerm) {
		toSerialize["simConnTerm"] = o.SimConnTerm
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.ResUri) {
		toSerialize["resUri"] = o.ResUri
	}
	if !IsNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	return toSerialize, nil
}

type NullableTrafficInfluData struct {
	value *TrafficInfluData
	isSet bool
}

func (v NullableTrafficInfluData) Get() *TrafficInfluData {
	return v.value
}

func (v *NullableTrafficInfluData) Set(val *TrafficInfluData) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficInfluData) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficInfluData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficInfluData(val *TrafficInfluData) *NullableTrafficInfluData {
	return &NullableTrafficInfluData{value: val, isSet: true}
}

func (v NullableTrafficInfluData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficInfluData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


