/*
Unified Data Repository Service API file for Application Data

The API version is defined in 3GPP TS 29.504   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: -
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Application_Data

import (
	"encoding/json"
	"fmt"
)

// ApplicationDataInfluenceDataSubsToNotifyGetRequestInner - struct for ApplicationDataInfluenceDataSubsToNotifyGetRequestInner
type ApplicationDataInfluenceDataSubsToNotifyGetRequestInner struct {
	TrafficInfluData *TrafficInfluData
	TrafficInfluDataNotif *TrafficInfluDataNotif
}

// TrafficInfluDataAsApplicationDataInfluenceDataSubsToNotifyGetRequestInner is a convenience function that returns TrafficInfluData wrapped in ApplicationDataInfluenceDataSubsToNotifyGetRequestInner
func TrafficInfluDataAsApplicationDataInfluenceDataSubsToNotifyGetRequestInner(v *TrafficInfluData) ApplicationDataInfluenceDataSubsToNotifyGetRequestInner {
	return ApplicationDataInfluenceDataSubsToNotifyGetRequestInner{
		TrafficInfluData: v,
	}
}

// TrafficInfluDataNotifAsApplicationDataInfluenceDataSubsToNotifyGetRequestInner is a convenience function that returns TrafficInfluDataNotif wrapped in ApplicationDataInfluenceDataSubsToNotifyGetRequestInner
func TrafficInfluDataNotifAsApplicationDataInfluenceDataSubsToNotifyGetRequestInner(v *TrafficInfluDataNotif) ApplicationDataInfluenceDataSubsToNotifyGetRequestInner {
	return ApplicationDataInfluenceDataSubsToNotifyGetRequestInner{
		TrafficInfluDataNotif: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into TrafficInfluData
	err = newStrictDecoder(data).Decode(&dst.TrafficInfluData)
	if err == nil {
		jsonTrafficInfluData, _ := json.Marshal(dst.TrafficInfluData)
		if string(jsonTrafficInfluData) == "{}" { // empty struct
			dst.TrafficInfluData = nil
		} else {
			match++
		}
	} else {
		dst.TrafficInfluData = nil
	}

	// try to unmarshal data into TrafficInfluDataNotif
	err = newStrictDecoder(data).Decode(&dst.TrafficInfluDataNotif)
	if err == nil {
		jsonTrafficInfluDataNotif, _ := json.Marshal(dst.TrafficInfluDataNotif)
		if string(jsonTrafficInfluDataNotif) == "{}" { // empty struct
			dst.TrafficInfluDataNotif = nil
		} else {
			match++
		}
	} else {
		dst.TrafficInfluDataNotif = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.TrafficInfluData = nil
		dst.TrafficInfluDataNotif = nil

		return fmt.Errorf("data matches more than one schema in oneOf(ApplicationDataInfluenceDataSubsToNotifyGetRequestInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(ApplicationDataInfluenceDataSubsToNotifyGetRequestInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ApplicationDataInfluenceDataSubsToNotifyGetRequestInner) MarshalJSON() ([]byte, error) {
	if src.TrafficInfluData != nil {
		return json.Marshal(&src.TrafficInfluData)
	}

	if src.TrafficInfluDataNotif != nil {
		return json.Marshal(&src.TrafficInfluDataNotif)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.TrafficInfluData != nil {
		return obj.TrafficInfluData
	}

	if obj.TrafficInfluDataNotif != nil {
		return obj.TrafficInfluDataNotif
	}

	// all schemas are nil
	return nil
}

type NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner struct {
	value *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner
	isSet bool
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) Get() *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner {
	return v.value
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) Set(val *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner(val *ApplicationDataInfluenceDataSubsToNotifyGetRequestInner) *NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner {
	return &NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner{value: val, isSet: true}
}

func (v NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationDataInfluenceDataSubsToNotifyGetRequestInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


