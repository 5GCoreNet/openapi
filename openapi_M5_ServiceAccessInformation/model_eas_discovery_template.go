/*
M5_ServiceAccessInformation

5GMS AF M5 Service Access Information API Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_M5_ServiceAccessInformation

import (
	"encoding/json"
)

// checks if the EASDiscoveryTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EASDiscoveryTemplate{}

// EASDiscoveryTemplate A template for discovering an EAS instance .
type EASDiscoveryTemplate struct {
	EasType         string   `json:"easType"`
	EasProviderIds  []string `json:"easProviderIds"`
	ServiceFeatures []string `json:"serviceFeatures"`
}

// NewEASDiscoveryTemplate instantiates a new EASDiscoveryTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEASDiscoveryTemplate(easType string, easProviderIds []string, serviceFeatures []string) *EASDiscoveryTemplate {
	this := EASDiscoveryTemplate{}
	this.EasType = easType
	this.EasProviderIds = easProviderIds
	this.ServiceFeatures = serviceFeatures
	return &this
}

// NewEASDiscoveryTemplateWithDefaults instantiates a new EASDiscoveryTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEASDiscoveryTemplateWithDefaults() *EASDiscoveryTemplate {
	this := EASDiscoveryTemplate{}
	return &this
}

// GetEasType returns the EasType field value
func (o *EASDiscoveryTemplate) GetEasType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EasType
}

// GetEasTypeOk returns a tuple with the EasType field value
// and a boolean to check if the value has been set.
func (o *EASDiscoveryTemplate) GetEasTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EasType, true
}

// SetEasType sets field value
func (o *EASDiscoveryTemplate) SetEasType(v string) {
	o.EasType = v
}

// GetEasProviderIds returns the EasProviderIds field value
func (o *EASDiscoveryTemplate) GetEasProviderIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.EasProviderIds
}

// GetEasProviderIdsOk returns a tuple with the EasProviderIds field value
// and a boolean to check if the value has been set.
func (o *EASDiscoveryTemplate) GetEasProviderIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.EasProviderIds, true
}

// SetEasProviderIds sets field value
func (o *EASDiscoveryTemplate) SetEasProviderIds(v []string) {
	o.EasProviderIds = v
}

// GetServiceFeatures returns the ServiceFeatures field value
func (o *EASDiscoveryTemplate) GetServiceFeatures() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.ServiceFeatures
}

// GetServiceFeaturesOk returns a tuple with the ServiceFeatures field value
// and a boolean to check if the value has been set.
func (o *EASDiscoveryTemplate) GetServiceFeaturesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ServiceFeatures, true
}

// SetServiceFeatures sets field value
func (o *EASDiscoveryTemplate) SetServiceFeatures(v []string) {
	o.ServiceFeatures = v
}

func (o EASDiscoveryTemplate) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EASDiscoveryTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["easType"] = o.EasType
	toSerialize["easProviderIds"] = o.EasProviderIds
	toSerialize["serviceFeatures"] = o.ServiceFeatures
	return toSerialize, nil
}

type NullableEASDiscoveryTemplate struct {
	value *EASDiscoveryTemplate
	isSet bool
}

func (v NullableEASDiscoveryTemplate) Get() *EASDiscoveryTemplate {
	return v.value
}

func (v *NullableEASDiscoveryTemplate) Set(val *EASDiscoveryTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableEASDiscoveryTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableEASDiscoveryTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEASDiscoveryTemplate(val *EASDiscoveryTemplate) *NullableEASDiscoveryTemplate {
	return &NullableEASDiscoveryTemplate{value: val, isSet: true}
}

func (v NullableEASDiscoveryTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEASDiscoveryTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
