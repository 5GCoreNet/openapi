/*
VAE_ApplicationRequirement

API for VAE Application Requirement Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_VAE_ApplicationRequirement

import (
	"encoding/json"
)

// checks if the ApplicationRequirement type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationRequirement{}

// ApplicationRequirement Represents the requirements for application change.
type ApplicationRequirement struct {
	ServiceLevel *ServiceLevel `json:"serviceLevel,omitempty"`
}

// NewApplicationRequirement instantiates a new ApplicationRequirement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationRequirement() *ApplicationRequirement {
	this := ApplicationRequirement{}
	return &this
}

// NewApplicationRequirementWithDefaults instantiates a new ApplicationRequirement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationRequirementWithDefaults() *ApplicationRequirement {
	this := ApplicationRequirement{}
	return &this
}

// GetServiceLevel returns the ServiceLevel field value if set, zero value otherwise.
func (o *ApplicationRequirement) GetServiceLevel() ServiceLevel {
	if o == nil || IsNil(o.ServiceLevel) {
		var ret ServiceLevel
		return ret
	}
	return *o.ServiceLevel
}

// GetServiceLevelOk returns a tuple with the ServiceLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationRequirement) GetServiceLevelOk() (*ServiceLevel, bool) {
	if o == nil || IsNil(o.ServiceLevel) {
		return nil, false
	}
	return o.ServiceLevel, true
}

// HasServiceLevel returns a boolean if a field has been set.
func (o *ApplicationRequirement) HasServiceLevel() bool {
	if o != nil && !IsNil(o.ServiceLevel) {
		return true
	}

	return false
}

// SetServiceLevel gets a reference to the given ServiceLevel and assigns it to the ServiceLevel field.
func (o *ApplicationRequirement) SetServiceLevel(v ServiceLevel) {
	o.ServiceLevel = &v
}

func (o ApplicationRequirement) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationRequirement) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceLevel) {
		toSerialize["serviceLevel"] = o.ServiceLevel
	}
	return toSerialize, nil
}

type NullableApplicationRequirement struct {
	value *ApplicationRequirement
	isSet bool
}

func (v NullableApplicationRequirement) Get() *ApplicationRequirement {
	return v.value
}

func (v *NullableApplicationRequirement) Set(val *ApplicationRequirement) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationRequirement) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationRequirement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationRequirement(val *ApplicationRequirement) *NullableApplicationRequirement {
	return &NullableApplicationRequirement{value: val, isSet: true}
}

func (v NullableApplicationRequirement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationRequirement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
