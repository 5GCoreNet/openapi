/*
N5g-ddnmf_Discovery API

N5g-ddnmf_Discovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N5g-ddnmf_Discovery

import (
	"encoding/json"
	"time"
)

// checks if the MatchReportRespData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MatchReportRespData{}

// MatchReportRespData Represents Match Report Acknowledgement
type MatchReportRespData struct {
	ProseAppIdNames []string `json:"proseAppIdNames,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime *time.Time `json:"validityTime,omitempty"`
	// Contains the metadata.
	MetaData *string `json:"metaData,omitempty"`
	MetaDataIndexMasks []string `json:"metaDataIndexMasks,omitempty"`
}

// NewMatchReportRespData instantiates a new MatchReportRespData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMatchReportRespData() *MatchReportRespData {
	this := MatchReportRespData{}
	return &this
}

// NewMatchReportRespDataWithDefaults instantiates a new MatchReportRespData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMatchReportRespDataWithDefaults() *MatchReportRespData {
	this := MatchReportRespData{}
	return &this
}

// GetProseAppIdNames returns the ProseAppIdNames field value if set, zero value otherwise.
func (o *MatchReportRespData) GetProseAppIdNames() []string {
	if o == nil || IsNil(o.ProseAppIdNames) {
		var ret []string
		return ret
	}
	return o.ProseAppIdNames
}

// GetProseAppIdNamesOk returns a tuple with the ProseAppIdNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchReportRespData) GetProseAppIdNamesOk() ([]string, bool) {
	if o == nil || IsNil(o.ProseAppIdNames) {
		return nil, false
	}
	return o.ProseAppIdNames, true
}

// HasProseAppIdNames returns a boolean if a field has been set.
func (o *MatchReportRespData) HasProseAppIdNames() bool {
	if o != nil && !IsNil(o.ProseAppIdNames) {
		return true
	}

	return false
}

// SetProseAppIdNames gets a reference to the given []string and assigns it to the ProseAppIdNames field.
func (o *MatchReportRespData) SetProseAppIdNames(v []string) {
	o.ProseAppIdNames = v
}

// GetValidityTime returns the ValidityTime field value if set, zero value otherwise.
func (o *MatchReportRespData) GetValidityTime() time.Time {
	if o == nil || IsNil(o.ValidityTime) {
		var ret time.Time
		return ret
	}
	return *o.ValidityTime
}

// GetValidityTimeOk returns a tuple with the ValidityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchReportRespData) GetValidityTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ValidityTime) {
		return nil, false
	}
	return o.ValidityTime, true
}

// HasValidityTime returns a boolean if a field has been set.
func (o *MatchReportRespData) HasValidityTime() bool {
	if o != nil && !IsNil(o.ValidityTime) {
		return true
	}

	return false
}

// SetValidityTime gets a reference to the given time.Time and assigns it to the ValidityTime field.
func (o *MatchReportRespData) SetValidityTime(v time.Time) {
	o.ValidityTime = &v
}

// GetMetaData returns the MetaData field value if set, zero value otherwise.
func (o *MatchReportRespData) GetMetaData() string {
	if o == nil || IsNil(o.MetaData) {
		var ret string
		return ret
	}
	return *o.MetaData
}

// GetMetaDataOk returns a tuple with the MetaData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchReportRespData) GetMetaDataOk() (*string, bool) {
	if o == nil || IsNil(o.MetaData) {
		return nil, false
	}
	return o.MetaData, true
}

// HasMetaData returns a boolean if a field has been set.
func (o *MatchReportRespData) HasMetaData() bool {
	if o != nil && !IsNil(o.MetaData) {
		return true
	}

	return false
}

// SetMetaData gets a reference to the given string and assigns it to the MetaData field.
func (o *MatchReportRespData) SetMetaData(v string) {
	o.MetaData = &v
}

// GetMetaDataIndexMasks returns the MetaDataIndexMasks field value if set, zero value otherwise.
func (o *MatchReportRespData) GetMetaDataIndexMasks() []string {
	if o == nil || IsNil(o.MetaDataIndexMasks) {
		var ret []string
		return ret
	}
	return o.MetaDataIndexMasks
}

// GetMetaDataIndexMasksOk returns a tuple with the MetaDataIndexMasks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MatchReportRespData) GetMetaDataIndexMasksOk() ([]string, bool) {
	if o == nil || IsNil(o.MetaDataIndexMasks) {
		return nil, false
	}
	return o.MetaDataIndexMasks, true
}

// HasMetaDataIndexMasks returns a boolean if a field has been set.
func (o *MatchReportRespData) HasMetaDataIndexMasks() bool {
	if o != nil && !IsNil(o.MetaDataIndexMasks) {
		return true
	}

	return false
}

// SetMetaDataIndexMasks gets a reference to the given []string and assigns it to the MetaDataIndexMasks field.
func (o *MatchReportRespData) SetMetaDataIndexMasks(v []string) {
	o.MetaDataIndexMasks = v
}

func (o MatchReportRespData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MatchReportRespData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProseAppIdNames) {
		toSerialize["proseAppIdNames"] = o.ProseAppIdNames
	}
	if !IsNil(o.ValidityTime) {
		toSerialize["validityTime"] = o.ValidityTime
	}
	if !IsNil(o.MetaData) {
		toSerialize["metaData"] = o.MetaData
	}
	if !IsNil(o.MetaDataIndexMasks) {
		toSerialize["metaDataIndexMasks"] = o.MetaDataIndexMasks
	}
	return toSerialize, nil
}

type NullableMatchReportRespData struct {
	value *MatchReportRespData
	isSet bool
}

func (v NullableMatchReportRespData) Get() *MatchReportRespData {
	return v.value
}

func (v *NullableMatchReportRespData) Set(val *MatchReportRespData) {
	v.value = val
	v.isSet = true
}

func (v NullableMatchReportRespData) IsSet() bool {
	return v.isSet
}

func (v *NullableMatchReportRespData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMatchReportRespData(val *MatchReportRespData) *NullableMatchReportRespData {
	return &NullableMatchReportRespData{value: val, isSet: true}
}

func (v NullableMatchReportRespData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMatchReportRespData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


