/*
N5g-ddnmf_Discovery API

N5g-ddnmf_Discovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N5g-ddnmf_Discovery

import (
	"encoding/json"
	"time"
)

// checks if the MonitorAuthDataForRestricted type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorAuthDataForRestricted{}

// MonitorAuthDataForRestricted Represents the obtained Announce Authorize Data for restricted discovery for a UE
type MonitorAuthDataForRestricted struct {
	// Contains the ProSe Restricted Code.
	ProseRestrictedCode string `json:"proseRestrictedCode"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidityTime time.Time `json:"validityTime"`
}

// NewMonitorAuthDataForRestricted instantiates a new MonitorAuthDataForRestricted object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorAuthDataForRestricted(proseRestrictedCode string, validityTime time.Time) *MonitorAuthDataForRestricted {
	this := MonitorAuthDataForRestricted{}
	this.ProseRestrictedCode = proseRestrictedCode
	this.ValidityTime = validityTime
	return &this
}

// NewMonitorAuthDataForRestrictedWithDefaults instantiates a new MonitorAuthDataForRestricted object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorAuthDataForRestrictedWithDefaults() *MonitorAuthDataForRestricted {
	this := MonitorAuthDataForRestricted{}
	return &this
}

// GetProseRestrictedCode returns the ProseRestrictedCode field value
func (o *MonitorAuthDataForRestricted) GetProseRestrictedCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProseRestrictedCode
}

// GetProseRestrictedCodeOk returns a tuple with the ProseRestrictedCode field value
// and a boolean to check if the value has been set.
func (o *MonitorAuthDataForRestricted) GetProseRestrictedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProseRestrictedCode, true
}

// SetProseRestrictedCode sets field value
func (o *MonitorAuthDataForRestricted) SetProseRestrictedCode(v string) {
	o.ProseRestrictedCode = v
}

// GetValidityTime returns the ValidityTime field value
func (o *MonitorAuthDataForRestricted) GetValidityTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValidityTime
}

// GetValidityTimeOk returns a tuple with the ValidityTime field value
// and a boolean to check if the value has been set.
func (o *MonitorAuthDataForRestricted) GetValidityTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidityTime, true
}

// SetValidityTime sets field value
func (o *MonitorAuthDataForRestricted) SetValidityTime(v time.Time) {
	o.ValidityTime = v
}

func (o MonitorAuthDataForRestricted) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorAuthDataForRestricted) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["proseRestrictedCode"] = o.ProseRestrictedCode
	toSerialize["validityTime"] = o.ValidityTime
	return toSerialize, nil
}

type NullableMonitorAuthDataForRestricted struct {
	value *MonitorAuthDataForRestricted
	isSet bool
}

func (v NullableMonitorAuthDataForRestricted) Get() *MonitorAuthDataForRestricted {
	return v.value
}

func (v *NullableMonitorAuthDataForRestricted) Set(val *MonitorAuthDataForRestricted) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorAuthDataForRestricted) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorAuthDataForRestricted) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorAuthDataForRestricted(val *MonitorAuthDataForRestricted) *NullableMonitorAuthDataForRestricted {
	return &NullableMonitorAuthDataForRestricted{value: val, isSet: true}
}

func (v NullableMonitorAuthDataForRestricted) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorAuthDataForRestricted) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


