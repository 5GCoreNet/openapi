/*
Neasdf_BaselineDNSPattern

EASDF Baseline DNS Pattern Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Neasdf_BaselineDNSPattern

import (
	"encoding/json"
)

// checks if the BaselineDnsAit type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaselineDnsAit{}

// BaselineDnsAit Baseline DNS action information Template
type BaselineDnsAit struct {
	AitId string `json:"aitId"`
	Label *string `json:"label,omitempty"`
	EcsOption *EcsOption `json:"ecsOption,omitempty"`
	DnsServerAddressList []IpAddr `json:"dnsServerAddressList,omitempty"`
}

// NewBaselineDnsAit instantiates a new BaselineDnsAit object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaselineDnsAit(aitId string) *BaselineDnsAit {
	this := BaselineDnsAit{}
	this.AitId = aitId
	return &this
}

// NewBaselineDnsAitWithDefaults instantiates a new BaselineDnsAit object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaselineDnsAitWithDefaults() *BaselineDnsAit {
	this := BaselineDnsAit{}
	return &this
}

// GetAitId returns the AitId field value
func (o *BaselineDnsAit) GetAitId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AitId
}

// GetAitIdOk returns a tuple with the AitId field value
// and a boolean to check if the value has been set.
func (o *BaselineDnsAit) GetAitIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AitId, true
}

// SetAitId sets field value
func (o *BaselineDnsAit) SetAitId(v string) {
	o.AitId = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *BaselineDnsAit) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaselineDnsAit) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *BaselineDnsAit) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *BaselineDnsAit) SetLabel(v string) {
	o.Label = &v
}

// GetEcsOption returns the EcsOption field value if set, zero value otherwise.
func (o *BaselineDnsAit) GetEcsOption() EcsOption {
	if o == nil || IsNil(o.EcsOption) {
		var ret EcsOption
		return ret
	}
	return *o.EcsOption
}

// GetEcsOptionOk returns a tuple with the EcsOption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaselineDnsAit) GetEcsOptionOk() (*EcsOption, bool) {
	if o == nil || IsNil(o.EcsOption) {
		return nil, false
	}
	return o.EcsOption, true
}

// HasEcsOption returns a boolean if a field has been set.
func (o *BaselineDnsAit) HasEcsOption() bool {
	if o != nil && !IsNil(o.EcsOption) {
		return true
	}

	return false
}

// SetEcsOption gets a reference to the given EcsOption and assigns it to the EcsOption field.
func (o *BaselineDnsAit) SetEcsOption(v EcsOption) {
	o.EcsOption = &v
}

// GetDnsServerAddressList returns the DnsServerAddressList field value if set, zero value otherwise.
func (o *BaselineDnsAit) GetDnsServerAddressList() []IpAddr {
	if o == nil || IsNil(o.DnsServerAddressList) {
		var ret []IpAddr
		return ret
	}
	return o.DnsServerAddressList
}

// GetDnsServerAddressListOk returns a tuple with the DnsServerAddressList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaselineDnsAit) GetDnsServerAddressListOk() ([]IpAddr, bool) {
	if o == nil || IsNil(o.DnsServerAddressList) {
		return nil, false
	}
	return o.DnsServerAddressList, true
}

// HasDnsServerAddressList returns a boolean if a field has been set.
func (o *BaselineDnsAit) HasDnsServerAddressList() bool {
	if o != nil && !IsNil(o.DnsServerAddressList) {
		return true
	}

	return false
}

// SetDnsServerAddressList gets a reference to the given []IpAddr and assigns it to the DnsServerAddressList field.
func (o *BaselineDnsAit) SetDnsServerAddressList(v []IpAddr) {
	o.DnsServerAddressList = v
}

func (o BaselineDnsAit) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaselineDnsAit) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["aitId"] = o.AitId
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.EcsOption) {
		toSerialize["ecsOption"] = o.EcsOption
	}
	if !IsNil(o.DnsServerAddressList) {
		toSerialize["dnsServerAddressList"] = o.DnsServerAddressList
	}
	return toSerialize, nil
}

type NullableBaselineDnsAit struct {
	value *BaselineDnsAit
	isSet bool
}

func (v NullableBaselineDnsAit) Get() *BaselineDnsAit {
	return v.value
}

func (v *NullableBaselineDnsAit) Set(val *BaselineDnsAit) {
	v.value = val
	v.isSet = true
}

func (v NullableBaselineDnsAit) IsSet() bool {
	return v.isSet
}

func (v *NullableBaselineDnsAit) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaselineDnsAit(val *BaselineDnsAit) *NullableBaselineDnsAit {
	return &NullableBaselineDnsAit{value: val, isSet: true}
}

func (v NullableBaselineDnsAit) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaselineDnsAit) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


