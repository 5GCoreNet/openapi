/*
N32 Handshake API

N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N32_Handshake

import (
	"encoding/json"
)

// checks if the N32fContextInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N32fContextInfo{}

// N32fContextInfo N32-f context information
type N32fContextInfo struct {
	N32fContextId string `json:"n32fContextId"`
}

// NewN32fContextInfo instantiates a new N32fContextInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN32fContextInfo(n32fContextId string) *N32fContextInfo {
	this := N32fContextInfo{}
	this.N32fContextId = n32fContextId
	return &this
}

// NewN32fContextInfoWithDefaults instantiates a new N32fContextInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN32fContextInfoWithDefaults() *N32fContextInfo {
	this := N32fContextInfo{}
	return &this
}

// GetN32fContextId returns the N32fContextId field value
func (o *N32fContextInfo) GetN32fContextId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.N32fContextId
}

// GetN32fContextIdOk returns a tuple with the N32fContextId field value
// and a boolean to check if the value has been set.
func (o *N32fContextInfo) GetN32fContextIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N32fContextId, true
}

// SetN32fContextId sets field value
func (o *N32fContextInfo) SetN32fContextId(v string) {
	o.N32fContextId = v
}

func (o N32fContextInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N32fContextInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["n32fContextId"] = o.N32fContextId
	return toSerialize, nil
}

type NullableN32fContextInfo struct {
	value *N32fContextInfo
	isSet bool
}

func (v NullableN32fContextInfo) Get() *N32fContextInfo {
	return v.value
}

func (v *NullableN32fContextInfo) Set(val *N32fContextInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableN32fContextInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableN32fContextInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN32fContextInfo(val *N32fContextInfo) *NullableN32fContextInfo {
	return &NullableN32fContextInfo{value: val, isSet: true}
}

func (v NullableN32fContextInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN32fContextInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


