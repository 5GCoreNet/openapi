/*
N32 Handshake API

N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N32_Handshake

import (
	"encoding/json"
)

// checks if the ProtectionPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProtectionPolicy{}

// ProtectionPolicy The protection policy to be negotiated between the SEPPs
type ProtectionPolicy struct {
	ApiIeMappingList []ApiIeMapping `json:"apiIeMappingList"`
	DataTypeEncPolicy []IeType `json:"dataTypeEncPolicy,omitempty"`
}

// NewProtectionPolicy instantiates a new ProtectionPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProtectionPolicy(apiIeMappingList []ApiIeMapping) *ProtectionPolicy {
	this := ProtectionPolicy{}
	this.ApiIeMappingList = apiIeMappingList
	return &this
}

// NewProtectionPolicyWithDefaults instantiates a new ProtectionPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProtectionPolicyWithDefaults() *ProtectionPolicy {
	this := ProtectionPolicy{}
	return &this
}

// GetApiIeMappingList returns the ApiIeMappingList field value
func (o *ProtectionPolicy) GetApiIeMappingList() []ApiIeMapping {
	if o == nil {
		var ret []ApiIeMapping
		return ret
	}

	return o.ApiIeMappingList
}

// GetApiIeMappingListOk returns a tuple with the ApiIeMappingList field value
// and a boolean to check if the value has been set.
func (o *ProtectionPolicy) GetApiIeMappingListOk() ([]ApiIeMapping, bool) {
	if o == nil {
		return nil, false
	}
	return o.ApiIeMappingList, true
}

// SetApiIeMappingList sets field value
func (o *ProtectionPolicy) SetApiIeMappingList(v []ApiIeMapping) {
	o.ApiIeMappingList = v
}

// GetDataTypeEncPolicy returns the DataTypeEncPolicy field value if set, zero value otherwise.
func (o *ProtectionPolicy) GetDataTypeEncPolicy() []IeType {
	if o == nil || isNil(o.DataTypeEncPolicy) {
		var ret []IeType
		return ret
	}
	return o.DataTypeEncPolicy
}

// GetDataTypeEncPolicyOk returns a tuple with the DataTypeEncPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProtectionPolicy) GetDataTypeEncPolicyOk() ([]IeType, bool) {
	if o == nil || isNil(o.DataTypeEncPolicy) {
		return nil, false
	}
	return o.DataTypeEncPolicy, true
}

// HasDataTypeEncPolicy returns a boolean if a field has been set.
func (o *ProtectionPolicy) HasDataTypeEncPolicy() bool {
	if o != nil && !isNil(o.DataTypeEncPolicy) {
		return true
	}

	return false
}

// SetDataTypeEncPolicy gets a reference to the given []IeType and assigns it to the DataTypeEncPolicy field.
func (o *ProtectionPolicy) SetDataTypeEncPolicy(v []IeType) {
	o.DataTypeEncPolicy = v
}

func (o ProtectionPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProtectionPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["apiIeMappingList"] = o.ApiIeMappingList
	if !isNil(o.DataTypeEncPolicy) {
		toSerialize["dataTypeEncPolicy"] = o.DataTypeEncPolicy
	}
	return toSerialize, nil
}

type NullableProtectionPolicy struct {
	value *ProtectionPolicy
	isSet bool
}

func (v NullableProtectionPolicy) Get() *ProtectionPolicy {
	return v.value
}

func (v *NullableProtectionPolicy) Set(val *ProtectionPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableProtectionPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableProtectionPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProtectionPolicy(val *ProtectionPolicy) *NullableProtectionPolicy {
	return &NullableProtectionPolicy{value: val, isSet: true}
}

func (v NullableProtectionPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProtectionPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


