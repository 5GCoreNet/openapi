/*
N32 Handshake API

N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N32_Handshake

import (
	"encoding/json"
)

// checks if the N32fErrorInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N32fErrorInfo{}

// N32fErrorInfo N32-f error information
type N32fErrorInfo struct {
	N32fMessageId          string                   `json:"n32fMessageId"`
	N32fErrorType          N32fErrorType            `json:"n32fErrorType"`
	N32fContextId          *string                  `json:"n32fContextId,omitempty"`
	FailedModificationList []FailedModificationInfo `json:"failedModificationList,omitempty"`
	ErrorDetailsList       []N32fErrorDetail        `json:"errorDetailsList,omitempty"`
}

// NewN32fErrorInfo instantiates a new N32fErrorInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN32fErrorInfo(n32fMessageId string, n32fErrorType N32fErrorType) *N32fErrorInfo {
	this := N32fErrorInfo{}
	this.N32fMessageId = n32fMessageId
	this.N32fErrorType = n32fErrorType
	return &this
}

// NewN32fErrorInfoWithDefaults instantiates a new N32fErrorInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN32fErrorInfoWithDefaults() *N32fErrorInfo {
	this := N32fErrorInfo{}
	return &this
}

// GetN32fMessageId returns the N32fMessageId field value
func (o *N32fErrorInfo) GetN32fMessageId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.N32fMessageId
}

// GetN32fMessageIdOk returns a tuple with the N32fMessageId field value
// and a boolean to check if the value has been set.
func (o *N32fErrorInfo) GetN32fMessageIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N32fMessageId, true
}

// SetN32fMessageId sets field value
func (o *N32fErrorInfo) SetN32fMessageId(v string) {
	o.N32fMessageId = v
}

// GetN32fErrorType returns the N32fErrorType field value
func (o *N32fErrorInfo) GetN32fErrorType() N32fErrorType {
	if o == nil {
		var ret N32fErrorType
		return ret
	}

	return o.N32fErrorType
}

// GetN32fErrorTypeOk returns a tuple with the N32fErrorType field value
// and a boolean to check if the value has been set.
func (o *N32fErrorInfo) GetN32fErrorTypeOk() (*N32fErrorType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N32fErrorType, true
}

// SetN32fErrorType sets field value
func (o *N32fErrorInfo) SetN32fErrorType(v N32fErrorType) {
	o.N32fErrorType = v
}

// GetN32fContextId returns the N32fContextId field value if set, zero value otherwise.
func (o *N32fErrorInfo) GetN32fContextId() string {
	if o == nil || IsNil(o.N32fContextId) {
		var ret string
		return ret
	}
	return *o.N32fContextId
}

// GetN32fContextIdOk returns a tuple with the N32fContextId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N32fErrorInfo) GetN32fContextIdOk() (*string, bool) {
	if o == nil || IsNil(o.N32fContextId) {
		return nil, false
	}
	return o.N32fContextId, true
}

// HasN32fContextId returns a boolean if a field has been set.
func (o *N32fErrorInfo) HasN32fContextId() bool {
	if o != nil && !IsNil(o.N32fContextId) {
		return true
	}

	return false
}

// SetN32fContextId gets a reference to the given string and assigns it to the N32fContextId field.
func (o *N32fErrorInfo) SetN32fContextId(v string) {
	o.N32fContextId = &v
}

// GetFailedModificationList returns the FailedModificationList field value if set, zero value otherwise.
func (o *N32fErrorInfo) GetFailedModificationList() []FailedModificationInfo {
	if o == nil || IsNil(o.FailedModificationList) {
		var ret []FailedModificationInfo
		return ret
	}
	return o.FailedModificationList
}

// GetFailedModificationListOk returns a tuple with the FailedModificationList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N32fErrorInfo) GetFailedModificationListOk() ([]FailedModificationInfo, bool) {
	if o == nil || IsNil(o.FailedModificationList) {
		return nil, false
	}
	return o.FailedModificationList, true
}

// HasFailedModificationList returns a boolean if a field has been set.
func (o *N32fErrorInfo) HasFailedModificationList() bool {
	if o != nil && !IsNil(o.FailedModificationList) {
		return true
	}

	return false
}

// SetFailedModificationList gets a reference to the given []FailedModificationInfo and assigns it to the FailedModificationList field.
func (o *N32fErrorInfo) SetFailedModificationList(v []FailedModificationInfo) {
	o.FailedModificationList = v
}

// GetErrorDetailsList returns the ErrorDetailsList field value if set, zero value otherwise.
func (o *N32fErrorInfo) GetErrorDetailsList() []N32fErrorDetail {
	if o == nil || IsNil(o.ErrorDetailsList) {
		var ret []N32fErrorDetail
		return ret
	}
	return o.ErrorDetailsList
}

// GetErrorDetailsListOk returns a tuple with the ErrorDetailsList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N32fErrorInfo) GetErrorDetailsListOk() ([]N32fErrorDetail, bool) {
	if o == nil || IsNil(o.ErrorDetailsList) {
		return nil, false
	}
	return o.ErrorDetailsList, true
}

// HasErrorDetailsList returns a boolean if a field has been set.
func (o *N32fErrorInfo) HasErrorDetailsList() bool {
	if o != nil && !IsNil(o.ErrorDetailsList) {
		return true
	}

	return false
}

// SetErrorDetailsList gets a reference to the given []N32fErrorDetail and assigns it to the ErrorDetailsList field.
func (o *N32fErrorInfo) SetErrorDetailsList(v []N32fErrorDetail) {
	o.ErrorDetailsList = v
}

func (o N32fErrorInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N32fErrorInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["n32fMessageId"] = o.N32fMessageId
	toSerialize["n32fErrorType"] = o.N32fErrorType
	if !IsNil(o.N32fContextId) {
		toSerialize["n32fContextId"] = o.N32fContextId
	}
	if !IsNil(o.FailedModificationList) {
		toSerialize["failedModificationList"] = o.FailedModificationList
	}
	if !IsNil(o.ErrorDetailsList) {
		toSerialize["errorDetailsList"] = o.ErrorDetailsList
	}
	return toSerialize, nil
}

type NullableN32fErrorInfo struct {
	value *N32fErrorInfo
	isSet bool
}

func (v NullableN32fErrorInfo) Get() *N32fErrorInfo {
	return v.value
}

func (v *NullableN32fErrorInfo) Set(val *N32fErrorInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableN32fErrorInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableN32fErrorInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN32fErrorInfo(val *N32fErrorInfo) *NullableN32fErrorInfo {
	return &NullableN32fErrorInfo{value: val, isSet: true}
}

func (v NullableN32fErrorInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN32fErrorInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
