/*
N32 Handshake API

N32-c Handshake Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N32_Handshake

import (
	"encoding/json"
)

// checks if the IpxProviderSecInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpxProviderSecInfo{}

// IpxProviderSecInfo Defines the security information list of an IPX
type IpxProviderSecInfo struct {
	// Fully Qualified Domain Name
	IpxProviderId string `json:"ipxProviderId"`
	RawPublicKeyList []string `json:"rawPublicKeyList,omitempty"`
	CertificateList []string `json:"certificateList,omitempty"`
}

// NewIpxProviderSecInfo instantiates a new IpxProviderSecInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpxProviderSecInfo(ipxProviderId string) *IpxProviderSecInfo {
	this := IpxProviderSecInfo{}
	this.IpxProviderId = ipxProviderId
	return &this
}

// NewIpxProviderSecInfoWithDefaults instantiates a new IpxProviderSecInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpxProviderSecInfoWithDefaults() *IpxProviderSecInfo {
	this := IpxProviderSecInfo{}
	return &this
}

// GetIpxProviderId returns the IpxProviderId field value
func (o *IpxProviderSecInfo) GetIpxProviderId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.IpxProviderId
}

// GetIpxProviderIdOk returns a tuple with the IpxProviderId field value
// and a boolean to check if the value has been set.
func (o *IpxProviderSecInfo) GetIpxProviderIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpxProviderId, true
}

// SetIpxProviderId sets field value
func (o *IpxProviderSecInfo) SetIpxProviderId(v string) {
	o.IpxProviderId = v
}

// GetRawPublicKeyList returns the RawPublicKeyList field value if set, zero value otherwise.
func (o *IpxProviderSecInfo) GetRawPublicKeyList() []string {
	if o == nil || isNil(o.RawPublicKeyList) {
		var ret []string
		return ret
	}
	return o.RawPublicKeyList
}

// GetRawPublicKeyListOk returns a tuple with the RawPublicKeyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpxProviderSecInfo) GetRawPublicKeyListOk() ([]string, bool) {
	if o == nil || isNil(o.RawPublicKeyList) {
		return nil, false
	}
	return o.RawPublicKeyList, true
}

// HasRawPublicKeyList returns a boolean if a field has been set.
func (o *IpxProviderSecInfo) HasRawPublicKeyList() bool {
	if o != nil && !isNil(o.RawPublicKeyList) {
		return true
	}

	return false
}

// SetRawPublicKeyList gets a reference to the given []string and assigns it to the RawPublicKeyList field.
func (o *IpxProviderSecInfo) SetRawPublicKeyList(v []string) {
	o.RawPublicKeyList = v
}

// GetCertificateList returns the CertificateList field value if set, zero value otherwise.
func (o *IpxProviderSecInfo) GetCertificateList() []string {
	if o == nil || isNil(o.CertificateList) {
		var ret []string
		return ret
	}
	return o.CertificateList
}

// GetCertificateListOk returns a tuple with the CertificateList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpxProviderSecInfo) GetCertificateListOk() ([]string, bool) {
	if o == nil || isNil(o.CertificateList) {
		return nil, false
	}
	return o.CertificateList, true
}

// HasCertificateList returns a boolean if a field has been set.
func (o *IpxProviderSecInfo) HasCertificateList() bool {
	if o != nil && !isNil(o.CertificateList) {
		return true
	}

	return false
}

// SetCertificateList gets a reference to the given []string and assigns it to the CertificateList field.
func (o *IpxProviderSecInfo) SetCertificateList(v []string) {
	o.CertificateList = v
}

func (o IpxProviderSecInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpxProviderSecInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ipxProviderId"] = o.IpxProviderId
	if !isNil(o.RawPublicKeyList) {
		toSerialize["rawPublicKeyList"] = o.RawPublicKeyList
	}
	if !isNil(o.CertificateList) {
		toSerialize["certificateList"] = o.CertificateList
	}
	return toSerialize, nil
}

type NullableIpxProviderSecInfo struct {
	value *IpxProviderSecInfo
	isSet bool
}

func (v NullableIpxProviderSecInfo) Get() *IpxProviderSecInfo {
	return v.value
}

func (v *NullableIpxProviderSecInfo) Set(val *IpxProviderSecInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIpxProviderSecInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIpxProviderSecInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpxProviderSecInfo(val *IpxProviderSecInfo) *NullableIpxProviderSecInfo {
	return &NullableIpxProviderSecInfo{value: val, isSet: true}
}

func (v NullableIpxProviderSecInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpxProviderSecInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


