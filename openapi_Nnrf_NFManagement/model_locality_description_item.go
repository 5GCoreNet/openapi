/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnrf_NFManagement

import (
	"encoding/json"
)

// checks if the LocalityDescriptionItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocalityDescriptionItem{}

// LocalityDescriptionItem Locality description item
type LocalityDescriptionItem struct {
	LocalityType LocalityType `json:"localityType"`
	LocalityValue string `json:"localityValue"`
}

// NewLocalityDescriptionItem instantiates a new LocalityDescriptionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocalityDescriptionItem(localityType LocalityType, localityValue string) *LocalityDescriptionItem {
	this := LocalityDescriptionItem{}
	this.LocalityType = localityType
	this.LocalityValue = localityValue
	return &this
}

// NewLocalityDescriptionItemWithDefaults instantiates a new LocalityDescriptionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocalityDescriptionItemWithDefaults() *LocalityDescriptionItem {
	this := LocalityDescriptionItem{}
	return &this
}

// GetLocalityType returns the LocalityType field value
func (o *LocalityDescriptionItem) GetLocalityType() LocalityType {
	if o == nil {
		var ret LocalityType
		return ret
	}

	return o.LocalityType
}

// GetLocalityTypeOk returns a tuple with the LocalityType field value
// and a boolean to check if the value has been set.
func (o *LocalityDescriptionItem) GetLocalityTypeOk() (*LocalityType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalityType, true
}

// SetLocalityType sets field value
func (o *LocalityDescriptionItem) SetLocalityType(v LocalityType) {
	o.LocalityType = v
}

// GetLocalityValue returns the LocalityValue field value
func (o *LocalityDescriptionItem) GetLocalityValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalityValue
}

// GetLocalityValueOk returns a tuple with the LocalityValue field value
// and a boolean to check if the value has been set.
func (o *LocalityDescriptionItem) GetLocalityValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalityValue, true
}

// SetLocalityValue sets field value
func (o *LocalityDescriptionItem) SetLocalityValue(v string) {
	o.LocalityValue = v
}

func (o LocalityDescriptionItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocalityDescriptionItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["localityType"] = o.LocalityType
	toSerialize["localityValue"] = o.LocalityValue
	return toSerialize, nil
}

type NullableLocalityDescriptionItem struct {
	value *LocalityDescriptionItem
	isSet bool
}

func (v NullableLocalityDescriptionItem) Get() *LocalityDescriptionItem {
	return v.value
}

func (v *NullableLocalityDescriptionItem) Set(val *LocalityDescriptionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableLocalityDescriptionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableLocalityDescriptionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocalityDescriptionItem(val *LocalityDescriptionItem) *NullableLocalityDescriptionItem {
	return &NullableLocalityDescriptionItem{value: val, isSet: true}
}

func (v NullableLocalityDescriptionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocalityDescriptionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


