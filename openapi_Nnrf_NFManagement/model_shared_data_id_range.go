/*
NRF NFManagement Service

NRF NFManagement Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnrf_NFManagement

import (
	"encoding/json"
)

// checks if the SharedDataIdRange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedDataIdRange{}

// SharedDataIdRange A range of SharedDataIds based on regular-expression matching
type SharedDataIdRange struct {
	Pattern *string `json:"pattern,omitempty"`
}

// NewSharedDataIdRange instantiates a new SharedDataIdRange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedDataIdRange() *SharedDataIdRange {
	this := SharedDataIdRange{}
	return &this
}

// NewSharedDataIdRangeWithDefaults instantiates a new SharedDataIdRange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedDataIdRangeWithDefaults() *SharedDataIdRange {
	this := SharedDataIdRange{}
	return &this
}

// GetPattern returns the Pattern field value if set, zero value otherwise.
func (o *SharedDataIdRange) GetPattern() string {
	if o == nil || IsNil(o.Pattern) {
		var ret string
		return ret
	}
	return *o.Pattern
}

// GetPatternOk returns a tuple with the Pattern field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SharedDataIdRange) GetPatternOk() (*string, bool) {
	if o == nil || IsNil(o.Pattern) {
		return nil, false
	}
	return o.Pattern, true
}

// HasPattern returns a boolean if a field has been set.
func (o *SharedDataIdRange) HasPattern() bool {
	if o != nil && !IsNil(o.Pattern) {
		return true
	}

	return false
}

// SetPattern gets a reference to the given string and assigns it to the Pattern field.
func (o *SharedDataIdRange) SetPattern(v string) {
	o.Pattern = &v
}

func (o SharedDataIdRange) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedDataIdRange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pattern) {
		toSerialize["pattern"] = o.Pattern
	}
	return toSerialize, nil
}

type NullableSharedDataIdRange struct {
	value *SharedDataIdRange
	isSet bool
}

func (v NullableSharedDataIdRange) Get() *SharedDataIdRange {
	return v.value
}

func (v *NullableSharedDataIdRange) Set(val *SharedDataIdRange) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedDataIdRange) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedDataIdRange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedDataIdRange(val *SharedDataIdRange) *NullableSharedDataIdRange {
	return &NullableSharedDataIdRange{value: val, isSet: true}
}

func (v NullableSharedDataIdRange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedDataIdRange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


