/*
EES UE Location Information_API

API for EES UE Location Information.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_UELocation

import (
	"encoding/json"
)

// checks if the LocationNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationNotification{}

// LocationNotification Represents the filters information for AC Information Subscription.
type LocationNotification struct {
	// Identifier of the location information subscription for which the location information notification is related to. 
	SubId string `json:"subId"`
	// List of notifications with location information.
	LocEvs []LocationEvent `json:"locEvs"`
}

// NewLocationNotification instantiates a new LocationNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationNotification(subId string, locEvs []LocationEvent) *LocationNotification {
	this := LocationNotification{}
	this.SubId = subId
	this.LocEvs = locEvs
	return &this
}

// NewLocationNotificationWithDefaults instantiates a new LocationNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationNotificationWithDefaults() *LocationNotification {
	this := LocationNotification{}
	return &this
}

// GetSubId returns the SubId field value
func (o *LocationNotification) GetSubId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubId
}

// GetSubIdOk returns a tuple with the SubId field value
// and a boolean to check if the value has been set.
func (o *LocationNotification) GetSubIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubId, true
}

// SetSubId sets field value
func (o *LocationNotification) SetSubId(v string) {
	o.SubId = v
}

// GetLocEvs returns the LocEvs field value
func (o *LocationNotification) GetLocEvs() []LocationEvent {
	if o == nil {
		var ret []LocationEvent
		return ret
	}

	return o.LocEvs
}

// GetLocEvsOk returns a tuple with the LocEvs field value
// and a boolean to check if the value has been set.
func (o *LocationNotification) GetLocEvsOk() ([]LocationEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.LocEvs, true
}

// SetLocEvs sets field value
func (o *LocationNotification) SetLocEvs(v []LocationEvent) {
	o.LocEvs = v
}

func (o LocationNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subId"] = o.SubId
	toSerialize["locEvs"] = o.LocEvs
	return toSerialize, nil
}

type NullableLocationNotification struct {
	value *LocationNotification
	isSet bool
}

func (v NullableLocationNotification) Get() *LocationNotification {
	return v.value
}

func (v *NullableLocationNotification) Set(val *LocationNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationNotification(val *LocationNotification) *NullableLocationNotification {
	return &NullableLocationNotification{value: val, isSet: true}
}

func (v NullableLocationNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


