/*
SS_NetworkResourceMonitoring

API for SEAL Network Resource Monitoring.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SS_NetworkResourceMonitoring

import (
	"encoding/json"
)

// checks if the ReportingThreshold type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReportingThreshold{}

// ReportingThreshold Indicates the requested reporting termination threshold for the measurement index(es).
type ReportingThreshold struct {
	MeasThrValues MeasurementData   `json:"measThrValues"`
	ThrDirection  MatchingDirection `json:"thrDirection"`
}

// NewReportingThreshold instantiates a new ReportingThreshold object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReportingThreshold(measThrValues MeasurementData, thrDirection MatchingDirection) *ReportingThreshold {
	this := ReportingThreshold{}
	this.MeasThrValues = measThrValues
	this.ThrDirection = thrDirection
	return &this
}

// NewReportingThresholdWithDefaults instantiates a new ReportingThreshold object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReportingThresholdWithDefaults() *ReportingThreshold {
	this := ReportingThreshold{}
	return &this
}

// GetMeasThrValues returns the MeasThrValues field value
func (o *ReportingThreshold) GetMeasThrValues() MeasurementData {
	if o == nil {
		var ret MeasurementData
		return ret
	}

	return o.MeasThrValues
}

// GetMeasThrValuesOk returns a tuple with the MeasThrValues field value
// and a boolean to check if the value has been set.
func (o *ReportingThreshold) GetMeasThrValuesOk() (*MeasurementData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MeasThrValues, true
}

// SetMeasThrValues sets field value
func (o *ReportingThreshold) SetMeasThrValues(v MeasurementData) {
	o.MeasThrValues = v
}

// GetThrDirection returns the ThrDirection field value
func (o *ReportingThreshold) GetThrDirection() MatchingDirection {
	if o == nil {
		var ret MatchingDirection
		return ret
	}

	return o.ThrDirection
}

// GetThrDirectionOk returns a tuple with the ThrDirection field value
// and a boolean to check if the value has been set.
func (o *ReportingThreshold) GetThrDirectionOk() (*MatchingDirection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ThrDirection, true
}

// SetThrDirection sets field value
func (o *ReportingThreshold) SetThrDirection(v MatchingDirection) {
	o.ThrDirection = v
}

func (o ReportingThreshold) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReportingThreshold) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["measThrValues"] = o.MeasThrValues
	toSerialize["thrDirection"] = o.ThrDirection
	return toSerialize, nil
}

type NullableReportingThreshold struct {
	value *ReportingThreshold
	isSet bool
}

func (v NullableReportingThreshold) Get() *ReportingThreshold {
	return v.value
}

func (v *NullableReportingThreshold) Set(val *ReportingThreshold) {
	v.value = val
	v.isSet = true
}

func (v NullableReportingThreshold) IsSet() bool {
	return v.isSet
}

func (v *NullableReportingThreshold) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReportingThreshold(val *ReportingThreshold) *NullableReportingThreshold {
	return &NullableReportingThreshold{value: val, isSet: true}
}

func (v NullableReportingThreshold) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReportingThreshold) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
