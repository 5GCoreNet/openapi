/*
Npcf_AMPolicyControl

Access and Mobility Policy Control Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_AMPolicyControl

import (
	"encoding/json"
	"fmt"
)

// RequestTriggerAnyOf the model 'RequestTriggerAnyOf'
type RequestTriggerAnyOf string

// List of RequestTrigger_anyOf
const (
	LOC_CH RequestTriggerAnyOf = "LOC_CH"
	PRA_CH RequestTriggerAnyOf = "PRA_CH"
	SERV_AREA_CH RequestTriggerAnyOf = "SERV_AREA_CH"
	RFSP_CH RequestTriggerAnyOf = "RFSP_CH"
	ALLOWED_NSSAI_CH RequestTriggerAnyOf = "ALLOWED_NSSAI_CH"
	UE_AMBR_CH RequestTriggerAnyOf = "UE_AMBR_CH"
	UE_SLICE_MBR_CH RequestTriggerAnyOf = "UE_SLICE_MBR_CH"
	SMF_SELECT_CH RequestTriggerAnyOf = "SMF_SELECT_CH"
	ACCESS_TYPE_CH RequestTriggerAnyOf = "ACCESS_TYPE_CH"
	NWDAF_DATA_CH RequestTriggerAnyOf = "NWDAF_DATA_CH"
	TARGET_NSSAI RequestTriggerAnyOf = "TARGET_NSSAI"
)

// All allowed values of RequestTriggerAnyOf enum
var AllowedRequestTriggerAnyOfEnumValues = []RequestTriggerAnyOf{
	"LOC_CH",
	"PRA_CH",
	"SERV_AREA_CH",
	"RFSP_CH",
	"ALLOWED_NSSAI_CH",
	"UE_AMBR_CH",
	"UE_SLICE_MBR_CH",
	"SMF_SELECT_CH",
	"ACCESS_TYPE_CH",
	"NWDAF_DATA_CH",
	"TARGET_NSSAI",
}

func (v *RequestTriggerAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RequestTriggerAnyOf(value)
	for _, existing := range AllowedRequestTriggerAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RequestTriggerAnyOf", value)
}

// NewRequestTriggerAnyOfFromValue returns a pointer to a valid RequestTriggerAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRequestTriggerAnyOfFromValue(v string) (*RequestTriggerAnyOf, error) {
	ev := RequestTriggerAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RequestTriggerAnyOf: valid values are %v", v, AllowedRequestTriggerAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RequestTriggerAnyOf) IsValid() bool {
	for _, existing := range AllowedRequestTriggerAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RequestTrigger_anyOf value
func (v RequestTriggerAnyOf) Ptr() *RequestTriggerAnyOf {
	return &v
}

type NullableRequestTriggerAnyOf struct {
	value *RequestTriggerAnyOf
	isSet bool
}

func (v NullableRequestTriggerAnyOf) Get() *RequestTriggerAnyOf {
	return v.value
}

func (v *NullableRequestTriggerAnyOf) Set(val *RequestTriggerAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRequestTriggerAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRequestTriggerAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRequestTriggerAnyOf(val *RequestTriggerAnyOf) *NullableRequestTriggerAnyOf {
	return &NullableRequestTriggerAnyOf{value: val, isSet: true}
}

func (v NullableRequestTriggerAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRequestTriggerAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

