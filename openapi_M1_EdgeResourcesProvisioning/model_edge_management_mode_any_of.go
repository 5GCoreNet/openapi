/*
M1_EdgeResourcesProvisioning

5GMS AF M1 Edge Resources Provisioning API Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 2.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_M1_EdgeResourcesProvisioning

import (
	"encoding/json"
	"fmt"
)

// EdgeManagementModeAnyOf the model 'EdgeManagementModeAnyOf'
type EdgeManagementModeAnyOf string

// List of EdgeManagementMode_anyOf
const (
	AF_DRIVEN EdgeManagementModeAnyOf = "EM_AF_DRIVEN"
	APP_DRIVEN EdgeManagementModeAnyOf = "EM_APP_DRIVEN"
)

// All allowed values of EdgeManagementModeAnyOf enum
var AllowedEdgeManagementModeAnyOfEnumValues = []EdgeManagementModeAnyOf{
	"EM_AF_DRIVEN",
	"EM_APP_DRIVEN",
}

func (v *EdgeManagementModeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EdgeManagementModeAnyOf(value)
	for _, existing := range AllowedEdgeManagementModeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EdgeManagementModeAnyOf", value)
}

// NewEdgeManagementModeAnyOfFromValue returns a pointer to a valid EdgeManagementModeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEdgeManagementModeAnyOfFromValue(v string) (*EdgeManagementModeAnyOf, error) {
	ev := EdgeManagementModeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EdgeManagementModeAnyOf: valid values are %v", v, AllowedEdgeManagementModeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EdgeManagementModeAnyOf) IsValid() bool {
	for _, existing := range AllowedEdgeManagementModeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EdgeManagementMode_anyOf value
func (v EdgeManagementModeAnyOf) Ptr() *EdgeManagementModeAnyOf {
	return &v
}

type NullableEdgeManagementModeAnyOf struct {
	value *EdgeManagementModeAnyOf
	isSet bool
}

func (v NullableEdgeManagementModeAnyOf) Get() *EdgeManagementModeAnyOf {
	return v.value
}

func (v *NullableEdgeManagementModeAnyOf) Set(val *EdgeManagementModeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEdgeManagementModeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEdgeManagementModeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEdgeManagementModeAnyOf(val *EdgeManagementModeAnyOf) *NullableEdgeManagementModeAnyOf {
	return &NullableEdgeManagementModeAnyOf{value: val, isSet: true}
}

func (v NullableEdgeManagementModeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEdgeManagementModeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

