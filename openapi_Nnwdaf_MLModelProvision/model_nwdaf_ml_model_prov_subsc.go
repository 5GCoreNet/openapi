/*
Nnwdaf_MLModelProvision

Nnwdaf_MLModelProvision API Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnwdaf_MLModelProvision

import (
	"encoding/json"
)

// checks if the NwdafMLModelProvSubsc type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NwdafMLModelProvSubsc{}

// NwdafMLModelProvSubsc Represents NWDAF Event Subscription resources.
type NwdafMLModelProvSubsc struct {
	// Subscribed events
	MLEventSubscs []MLEventSubscription `json:"mLEventSubscs"`
	// String providing an URI formatted according to RFC 3986.
	NotifUri string `json:"notifUri"`
	MLEventNotifs []MLEventNotif `json:"mLEventNotifs,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SuppFeats *string `json:"suppFeats,omitempty"`
	NotifCorreId *string `json:"notifCorreId,omitempty"`
	EventReq *ReportingInformation `json:"eventReq,omitempty"`
	FailEventReports []FailureEventInfoForMLModel `json:"failEventReports,omitempty"`
}

// NewNwdafMLModelProvSubsc instantiates a new NwdafMLModelProvSubsc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNwdafMLModelProvSubsc(mLEventSubscs []MLEventSubscription, notifUri string) *NwdafMLModelProvSubsc {
	this := NwdafMLModelProvSubsc{}
	this.MLEventSubscs = mLEventSubscs
	this.NotifUri = notifUri
	return &this
}

// NewNwdafMLModelProvSubscWithDefaults instantiates a new NwdafMLModelProvSubsc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNwdafMLModelProvSubscWithDefaults() *NwdafMLModelProvSubsc {
	this := NwdafMLModelProvSubsc{}
	return &this
}

// GetMLEventSubscs returns the MLEventSubscs field value
func (o *NwdafMLModelProvSubsc) GetMLEventSubscs() []MLEventSubscription {
	if o == nil {
		var ret []MLEventSubscription
		return ret
	}

	return o.MLEventSubscs
}

// GetMLEventSubscsOk returns a tuple with the MLEventSubscs field value
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetMLEventSubscsOk() ([]MLEventSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return o.MLEventSubscs, true
}

// SetMLEventSubscs sets field value
func (o *NwdafMLModelProvSubsc) SetMLEventSubscs(v []MLEventSubscription) {
	o.MLEventSubscs = v
}

// GetNotifUri returns the NotifUri field value
func (o *NwdafMLModelProvSubsc) GetNotifUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotifUri
}

// GetNotifUriOk returns a tuple with the NotifUri field value
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetNotifUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifUri, true
}

// SetNotifUri sets field value
func (o *NwdafMLModelProvSubsc) SetNotifUri(v string) {
	o.NotifUri = v
}

// GetMLEventNotifs returns the MLEventNotifs field value if set, zero value otherwise.
func (o *NwdafMLModelProvSubsc) GetMLEventNotifs() []MLEventNotif {
	if o == nil || IsNil(o.MLEventNotifs) {
		var ret []MLEventNotif
		return ret
	}
	return o.MLEventNotifs
}

// GetMLEventNotifsOk returns a tuple with the MLEventNotifs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetMLEventNotifsOk() ([]MLEventNotif, bool) {
	if o == nil || IsNil(o.MLEventNotifs) {
		return nil, false
	}
	return o.MLEventNotifs, true
}

// HasMLEventNotifs returns a boolean if a field has been set.
func (o *NwdafMLModelProvSubsc) HasMLEventNotifs() bool {
	if o != nil && !IsNil(o.MLEventNotifs) {
		return true
	}

	return false
}

// SetMLEventNotifs gets a reference to the given []MLEventNotif and assigns it to the MLEventNotifs field.
func (o *NwdafMLModelProvSubsc) SetMLEventNotifs(v []MLEventNotif) {
	o.MLEventNotifs = v
}

// GetSuppFeats returns the SuppFeats field value if set, zero value otherwise.
func (o *NwdafMLModelProvSubsc) GetSuppFeats() string {
	if o == nil || IsNil(o.SuppFeats) {
		var ret string
		return ret
	}
	return *o.SuppFeats
}

// GetSuppFeatsOk returns a tuple with the SuppFeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetSuppFeatsOk() (*string, bool) {
	if o == nil || IsNil(o.SuppFeats) {
		return nil, false
	}
	return o.SuppFeats, true
}

// HasSuppFeats returns a boolean if a field has been set.
func (o *NwdafMLModelProvSubsc) HasSuppFeats() bool {
	if o != nil && !IsNil(o.SuppFeats) {
		return true
	}

	return false
}

// SetSuppFeats gets a reference to the given string and assigns it to the SuppFeats field.
func (o *NwdafMLModelProvSubsc) SetSuppFeats(v string) {
	o.SuppFeats = &v
}

// GetNotifCorreId returns the NotifCorreId field value if set, zero value otherwise.
func (o *NwdafMLModelProvSubsc) GetNotifCorreId() string {
	if o == nil || IsNil(o.NotifCorreId) {
		var ret string
		return ret
	}
	return *o.NotifCorreId
}

// GetNotifCorreIdOk returns a tuple with the NotifCorreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetNotifCorreIdOk() (*string, bool) {
	if o == nil || IsNil(o.NotifCorreId) {
		return nil, false
	}
	return o.NotifCorreId, true
}

// HasNotifCorreId returns a boolean if a field has been set.
func (o *NwdafMLModelProvSubsc) HasNotifCorreId() bool {
	if o != nil && !IsNil(o.NotifCorreId) {
		return true
	}

	return false
}

// SetNotifCorreId gets a reference to the given string and assigns it to the NotifCorreId field.
func (o *NwdafMLModelProvSubsc) SetNotifCorreId(v string) {
	o.NotifCorreId = &v
}

// GetEventReq returns the EventReq field value if set, zero value otherwise.
func (o *NwdafMLModelProvSubsc) GetEventReq() ReportingInformation {
	if o == nil || IsNil(o.EventReq) {
		var ret ReportingInformation
		return ret
	}
	return *o.EventReq
}

// GetEventReqOk returns a tuple with the EventReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetEventReqOk() (*ReportingInformation, bool) {
	if o == nil || IsNil(o.EventReq) {
		return nil, false
	}
	return o.EventReq, true
}

// HasEventReq returns a boolean if a field has been set.
func (o *NwdafMLModelProvSubsc) HasEventReq() bool {
	if o != nil && !IsNil(o.EventReq) {
		return true
	}

	return false
}

// SetEventReq gets a reference to the given ReportingInformation and assigns it to the EventReq field.
func (o *NwdafMLModelProvSubsc) SetEventReq(v ReportingInformation) {
	o.EventReq = &v
}

// GetFailEventReports returns the FailEventReports field value if set, zero value otherwise.
func (o *NwdafMLModelProvSubsc) GetFailEventReports() []FailureEventInfoForMLModel {
	if o == nil || IsNil(o.FailEventReports) {
		var ret []FailureEventInfoForMLModel
		return ret
	}
	return o.FailEventReports
}

// GetFailEventReportsOk returns a tuple with the FailEventReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvSubsc) GetFailEventReportsOk() ([]FailureEventInfoForMLModel, bool) {
	if o == nil || IsNil(o.FailEventReports) {
		return nil, false
	}
	return o.FailEventReports, true
}

// HasFailEventReports returns a boolean if a field has been set.
func (o *NwdafMLModelProvSubsc) HasFailEventReports() bool {
	if o != nil && !IsNil(o.FailEventReports) {
		return true
	}

	return false
}

// SetFailEventReports gets a reference to the given []FailureEventInfoForMLModel and assigns it to the FailEventReports field.
func (o *NwdafMLModelProvSubsc) SetFailEventReports(v []FailureEventInfoForMLModel) {
	o.FailEventReports = v
}

func (o NwdafMLModelProvSubsc) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NwdafMLModelProvSubsc) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mLEventSubscs"] = o.MLEventSubscs
	toSerialize["notifUri"] = o.NotifUri
	if !IsNil(o.MLEventNotifs) {
		toSerialize["mLEventNotifs"] = o.MLEventNotifs
	}
	if !IsNil(o.SuppFeats) {
		toSerialize["suppFeats"] = o.SuppFeats
	}
	if !IsNil(o.NotifCorreId) {
		toSerialize["notifCorreId"] = o.NotifCorreId
	}
	if !IsNil(o.EventReq) {
		toSerialize["eventReq"] = o.EventReq
	}
	if !IsNil(o.FailEventReports) {
		toSerialize["failEventReports"] = o.FailEventReports
	}
	return toSerialize, nil
}

type NullableNwdafMLModelProvSubsc struct {
	value *NwdafMLModelProvSubsc
	isSet bool
}

func (v NullableNwdafMLModelProvSubsc) Get() *NwdafMLModelProvSubsc {
	return v.value
}

func (v *NullableNwdafMLModelProvSubsc) Set(val *NwdafMLModelProvSubsc) {
	v.value = val
	v.isSet = true
}

func (v NullableNwdafMLModelProvSubsc) IsSet() bool {
	return v.isSet
}

func (v *NullableNwdafMLModelProvSubsc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNwdafMLModelProvSubsc(val *NwdafMLModelProvSubsc) *NullableNwdafMLModelProvSubsc {
	return &NullableNwdafMLModelProvSubsc{value: val, isSet: true}
}

func (v NullableNwdafMLModelProvSubsc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNwdafMLModelProvSubsc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


