/*
Nnwdaf_MLModelProvision

Nnwdaf_MLModelProvision API Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnwdaf_MLModelProvision

import (
	"encoding/json"
)

// checks if the NwdafMLModelProvNotif type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NwdafMLModelProvNotif{}

// NwdafMLModelProvNotif Represents notifications on events that occurred.
type NwdafMLModelProvNotif struct {
	// Notifications about Individual Events.
	EventNotifs []MLEventNotif `json:"eventNotifs"`
	// String identifying a subscription to the Nnwdaf_MLModelProvision Service.
	SubscriptionId string `json:"subscriptionId"`
}

// NewNwdafMLModelProvNotif instantiates a new NwdafMLModelProvNotif object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNwdafMLModelProvNotif(eventNotifs []MLEventNotif, subscriptionId string) *NwdafMLModelProvNotif {
	this := NwdafMLModelProvNotif{}
	this.EventNotifs = eventNotifs
	this.SubscriptionId = subscriptionId
	return &this
}

// NewNwdafMLModelProvNotifWithDefaults instantiates a new NwdafMLModelProvNotif object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNwdafMLModelProvNotifWithDefaults() *NwdafMLModelProvNotif {
	this := NwdafMLModelProvNotif{}
	return &this
}

// GetEventNotifs returns the EventNotifs field value
func (o *NwdafMLModelProvNotif) GetEventNotifs() []MLEventNotif {
	if o == nil {
		var ret []MLEventNotif
		return ret
	}

	return o.EventNotifs
}

// GetEventNotifsOk returns a tuple with the EventNotifs field value
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvNotif) GetEventNotifsOk() ([]MLEventNotif, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventNotifs, true
}

// SetEventNotifs sets field value
func (o *NwdafMLModelProvNotif) SetEventNotifs(v []MLEventNotif) {
	o.EventNotifs = v
}

// GetSubscriptionId returns the SubscriptionId field value
func (o *NwdafMLModelProvNotif) GetSubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value
// and a boolean to check if the value has been set.
func (o *NwdafMLModelProvNotif) GetSubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubscriptionId, true
}

// SetSubscriptionId sets field value
func (o *NwdafMLModelProvNotif) SetSubscriptionId(v string) {
	o.SubscriptionId = v
}

func (o NwdafMLModelProvNotif) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NwdafMLModelProvNotif) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventNotifs"] = o.EventNotifs
	toSerialize["subscriptionId"] = o.SubscriptionId
	return toSerialize, nil
}

type NullableNwdafMLModelProvNotif struct {
	value *NwdafMLModelProvNotif
	isSet bool
}

func (v NullableNwdafMLModelProvNotif) Get() *NwdafMLModelProvNotif {
	return v.value
}

func (v *NullableNwdafMLModelProvNotif) Set(val *NwdafMLModelProvNotif) {
	v.value = val
	v.isSet = true
}

func (v NullableNwdafMLModelProvNotif) IsSet() bool {
	return v.isSet
}

func (v *NullableNwdafMLModelProvNotif) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNwdafMLModelProvNotif(val *NwdafMLModelProvNotif) *NullableNwdafMLModelProvNotif {
	return &NullableNwdafMLModelProvNotif{value: val, isSet: true}
}

func (v NullableNwdafMLModelProvNotif) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNwdafMLModelProvNotif) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


