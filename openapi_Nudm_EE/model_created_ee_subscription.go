/*
Nudm_EE

Nudm Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_EE

import (
	"encoding/json"
)

// checks if the CreatedEeSubscription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreatedEeSubscription{}

// CreatedEeSubscription struct for CreatedEeSubscription
type CreatedEeSubscription struct {
	EeSubscription EeSubscription `json:"eeSubscription"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	NumberOfUes  *int32             `json:"numberOfUes,omitempty"`
	EventReports []MonitoringReport `json:"eventReports,omitempty"`
	EpcStatusInd *bool              `json:"epcStatusInd,omitempty"`
	// A map (list of key-value pairs where referenceId converted from integer to string serves as key; see clause 6.4.6.3.2) of FailedMonitoringConfiguration
	FailedMonitoringConfigs *map[string]FailedMonitoringConfiguration `json:"failedMonitoringConfigs,omitempty"`
	// A map (list of key-value pairs where referenceId converted from integer to string serves as key; see clause 6.4.6.3.2) of FailedMonitoringConfiguration, the key value \"ALL\" may be used to identify a map entry which contains the failed cause of the EE subscription was not successful in EPC domain.
	FailedMoniConfigsEPC *map[string]FailedMonitoringConfiguration `json:"failedMoniConfigsEPC,omitempty"`
	ResetIds             []string                                  `json:"resetIds,omitempty"`
}

// NewCreatedEeSubscription instantiates a new CreatedEeSubscription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreatedEeSubscription(eeSubscription EeSubscription) *CreatedEeSubscription {
	this := CreatedEeSubscription{}
	this.EeSubscription = eeSubscription
	return &this
}

// NewCreatedEeSubscriptionWithDefaults instantiates a new CreatedEeSubscription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreatedEeSubscriptionWithDefaults() *CreatedEeSubscription {
	this := CreatedEeSubscription{}
	return &this
}

// GetEeSubscription returns the EeSubscription field value
func (o *CreatedEeSubscription) GetEeSubscription() EeSubscription {
	if o == nil {
		var ret EeSubscription
		return ret
	}

	return o.EeSubscription
}

// GetEeSubscriptionOk returns a tuple with the EeSubscription field value
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetEeSubscriptionOk() (*EeSubscription, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EeSubscription, true
}

// SetEeSubscription sets field value
func (o *CreatedEeSubscription) SetEeSubscription(v EeSubscription) {
	o.EeSubscription = v
}

// GetNumberOfUes returns the NumberOfUes field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetNumberOfUes() int32 {
	if o == nil || IsNil(o.NumberOfUes) {
		var ret int32
		return ret
	}
	return *o.NumberOfUes
}

// GetNumberOfUesOk returns a tuple with the NumberOfUes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetNumberOfUesOk() (*int32, bool) {
	if o == nil || IsNil(o.NumberOfUes) {
		return nil, false
	}
	return o.NumberOfUes, true
}

// HasNumberOfUes returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasNumberOfUes() bool {
	if o != nil && !IsNil(o.NumberOfUes) {
		return true
	}

	return false
}

// SetNumberOfUes gets a reference to the given int32 and assigns it to the NumberOfUes field.
func (o *CreatedEeSubscription) SetNumberOfUes(v int32) {
	o.NumberOfUes = &v
}

// GetEventReports returns the EventReports field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetEventReports() []MonitoringReport {
	if o == nil || IsNil(o.EventReports) {
		var ret []MonitoringReport
		return ret
	}
	return o.EventReports
}

// GetEventReportsOk returns a tuple with the EventReports field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetEventReportsOk() ([]MonitoringReport, bool) {
	if o == nil || IsNil(o.EventReports) {
		return nil, false
	}
	return o.EventReports, true
}

// HasEventReports returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasEventReports() bool {
	if o != nil && !IsNil(o.EventReports) {
		return true
	}

	return false
}

// SetEventReports gets a reference to the given []MonitoringReport and assigns it to the EventReports field.
func (o *CreatedEeSubscription) SetEventReports(v []MonitoringReport) {
	o.EventReports = v
}

// GetEpcStatusInd returns the EpcStatusInd field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetEpcStatusInd() bool {
	if o == nil || IsNil(o.EpcStatusInd) {
		var ret bool
		return ret
	}
	return *o.EpcStatusInd
}

// GetEpcStatusIndOk returns a tuple with the EpcStatusInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetEpcStatusIndOk() (*bool, bool) {
	if o == nil || IsNil(o.EpcStatusInd) {
		return nil, false
	}
	return o.EpcStatusInd, true
}

// HasEpcStatusInd returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasEpcStatusInd() bool {
	if o != nil && !IsNil(o.EpcStatusInd) {
		return true
	}

	return false
}

// SetEpcStatusInd gets a reference to the given bool and assigns it to the EpcStatusInd field.
func (o *CreatedEeSubscription) SetEpcStatusInd(v bool) {
	o.EpcStatusInd = &v
}

// GetFailedMonitoringConfigs returns the FailedMonitoringConfigs field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetFailedMonitoringConfigs() map[string]FailedMonitoringConfiguration {
	if o == nil || IsNil(o.FailedMonitoringConfigs) {
		var ret map[string]FailedMonitoringConfiguration
		return ret
	}
	return *o.FailedMonitoringConfigs
}

// GetFailedMonitoringConfigsOk returns a tuple with the FailedMonitoringConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetFailedMonitoringConfigsOk() (*map[string]FailedMonitoringConfiguration, bool) {
	if o == nil || IsNil(o.FailedMonitoringConfigs) {
		return nil, false
	}
	return o.FailedMonitoringConfigs, true
}

// HasFailedMonitoringConfigs returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasFailedMonitoringConfigs() bool {
	if o != nil && !IsNil(o.FailedMonitoringConfigs) {
		return true
	}

	return false
}

// SetFailedMonitoringConfigs gets a reference to the given map[string]FailedMonitoringConfiguration and assigns it to the FailedMonitoringConfigs field.
func (o *CreatedEeSubscription) SetFailedMonitoringConfigs(v map[string]FailedMonitoringConfiguration) {
	o.FailedMonitoringConfigs = &v
}

// GetFailedMoniConfigsEPC returns the FailedMoniConfigsEPC field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetFailedMoniConfigsEPC() map[string]FailedMonitoringConfiguration {
	if o == nil || IsNil(o.FailedMoniConfigsEPC) {
		var ret map[string]FailedMonitoringConfiguration
		return ret
	}
	return *o.FailedMoniConfigsEPC
}

// GetFailedMoniConfigsEPCOk returns a tuple with the FailedMoniConfigsEPC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetFailedMoniConfigsEPCOk() (*map[string]FailedMonitoringConfiguration, bool) {
	if o == nil || IsNil(o.FailedMoniConfigsEPC) {
		return nil, false
	}
	return o.FailedMoniConfigsEPC, true
}

// HasFailedMoniConfigsEPC returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasFailedMoniConfigsEPC() bool {
	if o != nil && !IsNil(o.FailedMoniConfigsEPC) {
		return true
	}

	return false
}

// SetFailedMoniConfigsEPC gets a reference to the given map[string]FailedMonitoringConfiguration and assigns it to the FailedMoniConfigsEPC field.
func (o *CreatedEeSubscription) SetFailedMoniConfigsEPC(v map[string]FailedMonitoringConfiguration) {
	o.FailedMoniConfigsEPC = &v
}

// GetResetIds returns the ResetIds field value if set, zero value otherwise.
func (o *CreatedEeSubscription) GetResetIds() []string {
	if o == nil || IsNil(o.ResetIds) {
		var ret []string
		return ret
	}
	return o.ResetIds
}

// GetResetIdsOk returns a tuple with the ResetIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreatedEeSubscription) GetResetIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.ResetIds) {
		return nil, false
	}
	return o.ResetIds, true
}

// HasResetIds returns a boolean if a field has been set.
func (o *CreatedEeSubscription) HasResetIds() bool {
	if o != nil && !IsNil(o.ResetIds) {
		return true
	}

	return false
}

// SetResetIds gets a reference to the given []string and assigns it to the ResetIds field.
func (o *CreatedEeSubscription) SetResetIds(v []string) {
	o.ResetIds = v
}

func (o CreatedEeSubscription) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreatedEeSubscription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eeSubscription"] = o.EeSubscription
	if !IsNil(o.NumberOfUes) {
		toSerialize["numberOfUes"] = o.NumberOfUes
	}
	if !IsNil(o.EventReports) {
		toSerialize["eventReports"] = o.EventReports
	}
	if !IsNil(o.EpcStatusInd) {
		toSerialize["epcStatusInd"] = o.EpcStatusInd
	}
	if !IsNil(o.FailedMonitoringConfigs) {
		toSerialize["failedMonitoringConfigs"] = o.FailedMonitoringConfigs
	}
	if !IsNil(o.FailedMoniConfigsEPC) {
		toSerialize["failedMoniConfigsEPC"] = o.FailedMoniConfigsEPC
	}
	if !IsNil(o.ResetIds) {
		toSerialize["resetIds"] = o.ResetIds
	}
	return toSerialize, nil
}

type NullableCreatedEeSubscription struct {
	value *CreatedEeSubscription
	isSet bool
}

func (v NullableCreatedEeSubscription) Get() *CreatedEeSubscription {
	return v.value
}

func (v *NullableCreatedEeSubscription) Set(val *CreatedEeSubscription) {
	v.value = val
	v.isSet = true
}

func (v NullableCreatedEeSubscription) IsSet() bool {
	return v.isSet
}

func (v *NullableCreatedEeSubscription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreatedEeSubscription(val *CreatedEeSubscription) *NullableCreatedEeSubscription {
	return &NullableCreatedEeSubscription{value: val, isSet: true}
}

func (v NullableCreatedEeSubscription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreatedEeSubscription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
