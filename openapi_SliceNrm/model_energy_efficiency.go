/*
Slice NRM

OAS 3.0.1 specification of the Slice NRM @ 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SliceNrm

import (
	"encoding/json"
)

// checks if the EnergyEfficiency type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnergyEfficiency{}

// EnergyEfficiency struct for EnergyEfficiency
type EnergyEfficiency struct {
	ServAttrCom *ServAttrCom `json:"servAttrCom,omitempty"`
	Performance *EEPerfReq `json:"performance,omitempty"`
}

// NewEnergyEfficiency instantiates a new EnergyEfficiency object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnergyEfficiency() *EnergyEfficiency {
	this := EnergyEfficiency{}
	return &this
}

// NewEnergyEfficiencyWithDefaults instantiates a new EnergyEfficiency object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnergyEfficiencyWithDefaults() *EnergyEfficiency {
	this := EnergyEfficiency{}
	return &this
}

// GetServAttrCom returns the ServAttrCom field value if set, zero value otherwise.
func (o *EnergyEfficiency) GetServAttrCom() ServAttrCom {
	if o == nil || IsNil(o.ServAttrCom) {
		var ret ServAttrCom
		return ret
	}
	return *o.ServAttrCom
}

// GetServAttrComOk returns a tuple with the ServAttrCom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnergyEfficiency) GetServAttrComOk() (*ServAttrCom, bool) {
	if o == nil || IsNil(o.ServAttrCom) {
		return nil, false
	}
	return o.ServAttrCom, true
}

// HasServAttrCom returns a boolean if a field has been set.
func (o *EnergyEfficiency) HasServAttrCom() bool {
	if o != nil && !IsNil(o.ServAttrCom) {
		return true
	}

	return false
}

// SetServAttrCom gets a reference to the given ServAttrCom and assigns it to the ServAttrCom field.
func (o *EnergyEfficiency) SetServAttrCom(v ServAttrCom) {
	o.ServAttrCom = &v
}

// GetPerformance returns the Performance field value if set, zero value otherwise.
func (o *EnergyEfficiency) GetPerformance() EEPerfReq {
	if o == nil || IsNil(o.Performance) {
		var ret EEPerfReq
		return ret
	}
	return *o.Performance
}

// GetPerformanceOk returns a tuple with the Performance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnergyEfficiency) GetPerformanceOk() (*EEPerfReq, bool) {
	if o == nil || IsNil(o.Performance) {
		return nil, false
	}
	return o.Performance, true
}

// HasPerformance returns a boolean if a field has been set.
func (o *EnergyEfficiency) HasPerformance() bool {
	if o != nil && !IsNil(o.Performance) {
		return true
	}

	return false
}

// SetPerformance gets a reference to the given EEPerfReq and assigns it to the Performance field.
func (o *EnergyEfficiency) SetPerformance(v EEPerfReq) {
	o.Performance = &v
}

func (o EnergyEfficiency) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnergyEfficiency) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServAttrCom) {
		toSerialize["servAttrCom"] = o.ServAttrCom
	}
	if !IsNil(o.Performance) {
		toSerialize["performance"] = o.Performance
	}
	return toSerialize, nil
}

type NullableEnergyEfficiency struct {
	value *EnergyEfficiency
	isSet bool
}

func (v NullableEnergyEfficiency) Get() *EnergyEfficiency {
	return v.value
}

func (v *NullableEnergyEfficiency) Set(val *EnergyEfficiency) {
	v.value = val
	v.isSet = true
}

func (v NullableEnergyEfficiency) IsSet() bool {
	return v.isSet
}

func (v *NullableEnergyEfficiency) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnergyEfficiency(val *EnergyEfficiency) *NullableEnergyEfficiency {
	return &NullableEnergyEfficiency{value: val, isSet: true}
}

func (v NullableEnergyEfficiency) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnergyEfficiency) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


