/*
Slice NRM

OAS 3.0.1 specification of the Slice NRM @ 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_SliceNrm

import (
	"encoding/json"
)

// checks if the NetworkSliceSingleAllOfAttributesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkSliceSingleAllOfAttributesAllOf{}

// NetworkSliceSingleAllOfAttributesAllOf struct for NetworkSliceSingleAllOfAttributesAllOf
type NetworkSliceSingleAllOfAttributesAllOf struct {
	NetworkSliceSubnetRef *string              `json:"networkSliceSubnetRef,omitempty"`
	OperationalState      *OperationalState    `json:"operationalState,omitempty"`
	AdministrativeState   *AdministrativeState `json:"administrativeState,omitempty"`
	ServiceProfileList    []ServiceProfile     `json:"serviceProfileList,omitempty"`
}

// NewNetworkSliceSingleAllOfAttributesAllOf instantiates a new NetworkSliceSingleAllOfAttributesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkSliceSingleAllOfAttributesAllOf() *NetworkSliceSingleAllOfAttributesAllOf {
	this := NetworkSliceSingleAllOfAttributesAllOf{}
	return &this
}

// NewNetworkSliceSingleAllOfAttributesAllOfWithDefaults instantiates a new NetworkSliceSingleAllOfAttributesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkSliceSingleAllOfAttributesAllOfWithDefaults() *NetworkSliceSingleAllOfAttributesAllOf {
	this := NetworkSliceSingleAllOfAttributesAllOf{}
	return &this
}

// GetNetworkSliceSubnetRef returns the NetworkSliceSubnetRef field value if set, zero value otherwise.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetNetworkSliceSubnetRef() string {
	if o == nil || IsNil(o.NetworkSliceSubnetRef) {
		var ret string
		return ret
	}
	return *o.NetworkSliceSubnetRef
}

// GetNetworkSliceSubnetRefOk returns a tuple with the NetworkSliceSubnetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetNetworkSliceSubnetRefOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkSliceSubnetRef) {
		return nil, false
	}
	return o.NetworkSliceSubnetRef, true
}

// HasNetworkSliceSubnetRef returns a boolean if a field has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) HasNetworkSliceSubnetRef() bool {
	if o != nil && !IsNil(o.NetworkSliceSubnetRef) {
		return true
	}

	return false
}

// SetNetworkSliceSubnetRef gets a reference to the given string and assigns it to the NetworkSliceSubnetRef field.
func (o *NetworkSliceSingleAllOfAttributesAllOf) SetNetworkSliceSubnetRef(v string) {
	o.NetworkSliceSubnetRef = &v
}

// GetOperationalState returns the OperationalState field value if set, zero value otherwise.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetOperationalState() OperationalState {
	if o == nil || IsNil(o.OperationalState) {
		var ret OperationalState
		return ret
	}
	return *o.OperationalState
}

// GetOperationalStateOk returns a tuple with the OperationalState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetOperationalStateOk() (*OperationalState, bool) {
	if o == nil || IsNil(o.OperationalState) {
		return nil, false
	}
	return o.OperationalState, true
}

// HasOperationalState returns a boolean if a field has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) HasOperationalState() bool {
	if o != nil && !IsNil(o.OperationalState) {
		return true
	}

	return false
}

// SetOperationalState gets a reference to the given OperationalState and assigns it to the OperationalState field.
func (o *NetworkSliceSingleAllOfAttributesAllOf) SetOperationalState(v OperationalState) {
	o.OperationalState = &v
}

// GetAdministrativeState returns the AdministrativeState field value if set, zero value otherwise.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetAdministrativeState() AdministrativeState {
	if o == nil || IsNil(o.AdministrativeState) {
		var ret AdministrativeState
		return ret
	}
	return *o.AdministrativeState
}

// GetAdministrativeStateOk returns a tuple with the AdministrativeState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetAdministrativeStateOk() (*AdministrativeState, bool) {
	if o == nil || IsNil(o.AdministrativeState) {
		return nil, false
	}
	return o.AdministrativeState, true
}

// HasAdministrativeState returns a boolean if a field has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) HasAdministrativeState() bool {
	if o != nil && !IsNil(o.AdministrativeState) {
		return true
	}

	return false
}

// SetAdministrativeState gets a reference to the given AdministrativeState and assigns it to the AdministrativeState field.
func (o *NetworkSliceSingleAllOfAttributesAllOf) SetAdministrativeState(v AdministrativeState) {
	o.AdministrativeState = &v
}

// GetServiceProfileList returns the ServiceProfileList field value if set, zero value otherwise.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetServiceProfileList() []ServiceProfile {
	if o == nil || IsNil(o.ServiceProfileList) {
		var ret []ServiceProfile
		return ret
	}
	return o.ServiceProfileList
}

// GetServiceProfileListOk returns a tuple with the ServiceProfileList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) GetServiceProfileListOk() ([]ServiceProfile, bool) {
	if o == nil || IsNil(o.ServiceProfileList) {
		return nil, false
	}
	return o.ServiceProfileList, true
}

// HasServiceProfileList returns a boolean if a field has been set.
func (o *NetworkSliceSingleAllOfAttributesAllOf) HasServiceProfileList() bool {
	if o != nil && !IsNil(o.ServiceProfileList) {
		return true
	}

	return false
}

// SetServiceProfileList gets a reference to the given []ServiceProfile and assigns it to the ServiceProfileList field.
func (o *NetworkSliceSingleAllOfAttributesAllOf) SetServiceProfileList(v []ServiceProfile) {
	o.ServiceProfileList = v
}

func (o NetworkSliceSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkSliceSingleAllOfAttributesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkSliceSubnetRef) {
		toSerialize["networkSliceSubnetRef"] = o.NetworkSliceSubnetRef
	}
	if !IsNil(o.OperationalState) {
		toSerialize["operationalState"] = o.OperationalState
	}
	if !IsNil(o.AdministrativeState) {
		toSerialize["administrativeState"] = o.AdministrativeState
	}
	if !IsNil(o.ServiceProfileList) {
		toSerialize["serviceProfileList"] = o.ServiceProfileList
	}
	return toSerialize, nil
}

type NullableNetworkSliceSingleAllOfAttributesAllOf struct {
	value *NetworkSliceSingleAllOfAttributesAllOf
	isSet bool
}

func (v NullableNetworkSliceSingleAllOfAttributesAllOf) Get() *NetworkSliceSingleAllOfAttributesAllOf {
	return v.value
}

func (v *NullableNetworkSliceSingleAllOfAttributesAllOf) Set(val *NetworkSliceSingleAllOfAttributesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkSliceSingleAllOfAttributesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkSliceSingleAllOfAttributesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkSliceSingleAllOfAttributesAllOf(val *NetworkSliceSingleAllOfAttributesAllOf) *NullableNetworkSliceSingleAllOfAttributesAllOf {
	return &NullableNetworkSliceSingleAllOfAttributesAllOf{value: val, isSet: true}
}

func (v NullableNetworkSliceSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkSliceSingleAllOfAttributesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
