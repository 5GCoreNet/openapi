/*
Nhss_imsSDM

Nhss Subscriber Data Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_imsSDM

import (
	"encoding/json"
)

// checks if the ApplicationServer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApplicationServer{}

// ApplicationServer Application Server which shall be triggered if the conditions of a certain IFC are met, and its associated data 
type ApplicationServer struct {
	AsUri string `json:"asUri"`
	SessionContinue *bool `json:"sessionContinue,omitempty"`
	ServiceInfoList []ServiceInformation `json:"serviceInfoList,omitempty"`
}

// NewApplicationServer instantiates a new ApplicationServer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApplicationServer(asUri string) *ApplicationServer {
	this := ApplicationServer{}
	this.AsUri = asUri
	return &this
}

// NewApplicationServerWithDefaults instantiates a new ApplicationServer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApplicationServerWithDefaults() *ApplicationServer {
	this := ApplicationServer{}
	return &this
}

// GetAsUri returns the AsUri field value
func (o *ApplicationServer) GetAsUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AsUri
}

// GetAsUriOk returns a tuple with the AsUri field value
// and a boolean to check if the value has been set.
func (o *ApplicationServer) GetAsUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AsUri, true
}

// SetAsUri sets field value
func (o *ApplicationServer) SetAsUri(v string) {
	o.AsUri = v
}

// GetSessionContinue returns the SessionContinue field value if set, zero value otherwise.
func (o *ApplicationServer) GetSessionContinue() bool {
	if o == nil || isNil(o.SessionContinue) {
		var ret bool
		return ret
	}
	return *o.SessionContinue
}

// GetSessionContinueOk returns a tuple with the SessionContinue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationServer) GetSessionContinueOk() (*bool, bool) {
	if o == nil || isNil(o.SessionContinue) {
		return nil, false
	}
	return o.SessionContinue, true
}

// HasSessionContinue returns a boolean if a field has been set.
func (o *ApplicationServer) HasSessionContinue() bool {
	if o != nil && !isNil(o.SessionContinue) {
		return true
	}

	return false
}

// SetSessionContinue gets a reference to the given bool and assigns it to the SessionContinue field.
func (o *ApplicationServer) SetSessionContinue(v bool) {
	o.SessionContinue = &v
}

// GetServiceInfoList returns the ServiceInfoList field value if set, zero value otherwise.
func (o *ApplicationServer) GetServiceInfoList() []ServiceInformation {
	if o == nil || isNil(o.ServiceInfoList) {
		var ret []ServiceInformation
		return ret
	}
	return o.ServiceInfoList
}

// GetServiceInfoListOk returns a tuple with the ServiceInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApplicationServer) GetServiceInfoListOk() ([]ServiceInformation, bool) {
	if o == nil || isNil(o.ServiceInfoList) {
		return nil, false
	}
	return o.ServiceInfoList, true
}

// HasServiceInfoList returns a boolean if a field has been set.
func (o *ApplicationServer) HasServiceInfoList() bool {
	if o != nil && !isNil(o.ServiceInfoList) {
		return true
	}

	return false
}

// SetServiceInfoList gets a reference to the given []ServiceInformation and assigns it to the ServiceInfoList field.
func (o *ApplicationServer) SetServiceInfoList(v []ServiceInformation) {
	o.ServiceInfoList = v
}

func (o ApplicationServer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApplicationServer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["asUri"] = o.AsUri
	if !isNil(o.SessionContinue) {
		toSerialize["sessionContinue"] = o.SessionContinue
	}
	if !isNil(o.ServiceInfoList) {
		toSerialize["serviceInfoList"] = o.ServiceInfoList
	}
	return toSerialize, nil
}

type NullableApplicationServer struct {
	value *ApplicationServer
	isSet bool
}

func (v NullableApplicationServer) Get() *ApplicationServer {
	return v.value
}

func (v *NullableApplicationServer) Set(val *ApplicationServer) {
	v.value = val
	v.isSet = true
}

func (v NullableApplicationServer) IsSet() bool {
	return v.isSet
}

func (v *NullableApplicationServer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApplicationServer(val *ApplicationServer) *NullableApplicationServer {
	return &NullableApplicationServer{value: val, isSet: true}
}

func (v NullableApplicationServer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApplicationServer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


