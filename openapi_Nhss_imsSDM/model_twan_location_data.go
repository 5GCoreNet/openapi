/*
Nhss_imsSDM

Nhss Subscriber Data Management Service for IMS.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_imsSDM

import (
	"encoding/json"
)

// checks if the TwanLocationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TwanLocationData{}

// TwanLocationData Location information of the 3GPP AAA Server for Trusted W-LAN Access
type TwanLocationData struct {
	TwanSsid string `json:"twanSsid"`
	PlmnId PlmnId `json:"plmnId"`
	TwanBssid *string `json:"twanBssid,omitempty"`
	CivicAddress *string `json:"civicAddress,omitempty"`
	TwanOperatorName *string `json:"twanOperatorName,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time. 
	TimeZone *string `json:"timeZone,omitempty"`
	LogicalAccessId *string `json:"logicalAccessId,omitempty"`
}

// NewTwanLocationData instantiates a new TwanLocationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTwanLocationData(twanSsid string, plmnId PlmnId) *TwanLocationData {
	this := TwanLocationData{}
	this.TwanSsid = twanSsid
	this.PlmnId = plmnId
	return &this
}

// NewTwanLocationDataWithDefaults instantiates a new TwanLocationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTwanLocationDataWithDefaults() *TwanLocationData {
	this := TwanLocationData{}
	return &this
}

// GetTwanSsid returns the TwanSsid field value
func (o *TwanLocationData) GetTwanSsid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TwanSsid
}

// GetTwanSsidOk returns a tuple with the TwanSsid field value
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetTwanSsidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TwanSsid, true
}

// SetTwanSsid sets field value
func (o *TwanLocationData) SetTwanSsid(v string) {
	o.TwanSsid = v
}

// GetPlmnId returns the PlmnId field value
func (o *TwanLocationData) GetPlmnId() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlmnId, true
}

// SetPlmnId sets field value
func (o *TwanLocationData) SetPlmnId(v PlmnId) {
	o.PlmnId = v
}

// GetTwanBssid returns the TwanBssid field value if set, zero value otherwise.
func (o *TwanLocationData) GetTwanBssid() string {
	if o == nil || IsNil(o.TwanBssid) {
		var ret string
		return ret
	}
	return *o.TwanBssid
}

// GetTwanBssidOk returns a tuple with the TwanBssid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetTwanBssidOk() (*string, bool) {
	if o == nil || IsNil(o.TwanBssid) {
		return nil, false
	}
	return o.TwanBssid, true
}

// HasTwanBssid returns a boolean if a field has been set.
func (o *TwanLocationData) HasTwanBssid() bool {
	if o != nil && !IsNil(o.TwanBssid) {
		return true
	}

	return false
}

// SetTwanBssid gets a reference to the given string and assigns it to the TwanBssid field.
func (o *TwanLocationData) SetTwanBssid(v string) {
	o.TwanBssid = &v
}

// GetCivicAddress returns the CivicAddress field value if set, zero value otherwise.
func (o *TwanLocationData) GetCivicAddress() string {
	if o == nil || IsNil(o.CivicAddress) {
		var ret string
		return ret
	}
	return *o.CivicAddress
}

// GetCivicAddressOk returns a tuple with the CivicAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetCivicAddressOk() (*string, bool) {
	if o == nil || IsNil(o.CivicAddress) {
		return nil, false
	}
	return o.CivicAddress, true
}

// HasCivicAddress returns a boolean if a field has been set.
func (o *TwanLocationData) HasCivicAddress() bool {
	if o != nil && !IsNil(o.CivicAddress) {
		return true
	}

	return false
}

// SetCivicAddress gets a reference to the given string and assigns it to the CivicAddress field.
func (o *TwanLocationData) SetCivicAddress(v string) {
	o.CivicAddress = &v
}

// GetTwanOperatorName returns the TwanOperatorName field value if set, zero value otherwise.
func (o *TwanLocationData) GetTwanOperatorName() string {
	if o == nil || IsNil(o.TwanOperatorName) {
		var ret string
		return ret
	}
	return *o.TwanOperatorName
}

// GetTwanOperatorNameOk returns a tuple with the TwanOperatorName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetTwanOperatorNameOk() (*string, bool) {
	if o == nil || IsNil(o.TwanOperatorName) {
		return nil, false
	}
	return o.TwanOperatorName, true
}

// HasTwanOperatorName returns a boolean if a field has been set.
func (o *TwanLocationData) HasTwanOperatorName() bool {
	if o != nil && !IsNil(o.TwanOperatorName) {
		return true
	}

	return false
}

// SetTwanOperatorName gets a reference to the given string and assigns it to the TwanOperatorName field.
func (o *TwanLocationData) SetTwanOperatorName(v string) {
	o.TwanOperatorName = &v
}

// GetTimeZone returns the TimeZone field value if set, zero value otherwise.
func (o *TwanLocationData) GetTimeZone() string {
	if o == nil || IsNil(o.TimeZone) {
		var ret string
		return ret
	}
	return *o.TimeZone
}

// GetTimeZoneOk returns a tuple with the TimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.TimeZone) {
		return nil, false
	}
	return o.TimeZone, true
}

// HasTimeZone returns a boolean if a field has been set.
func (o *TwanLocationData) HasTimeZone() bool {
	if o != nil && !IsNil(o.TimeZone) {
		return true
	}

	return false
}

// SetTimeZone gets a reference to the given string and assigns it to the TimeZone field.
func (o *TwanLocationData) SetTimeZone(v string) {
	o.TimeZone = &v
}

// GetLogicalAccessId returns the LogicalAccessId field value if set, zero value otherwise.
func (o *TwanLocationData) GetLogicalAccessId() string {
	if o == nil || IsNil(o.LogicalAccessId) {
		var ret string
		return ret
	}
	return *o.LogicalAccessId
}

// GetLogicalAccessIdOk returns a tuple with the LogicalAccessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TwanLocationData) GetLogicalAccessIdOk() (*string, bool) {
	if o == nil || IsNil(o.LogicalAccessId) {
		return nil, false
	}
	return o.LogicalAccessId, true
}

// HasLogicalAccessId returns a boolean if a field has been set.
func (o *TwanLocationData) HasLogicalAccessId() bool {
	if o != nil && !IsNil(o.LogicalAccessId) {
		return true
	}

	return false
}

// SetLogicalAccessId gets a reference to the given string and assigns it to the LogicalAccessId field.
func (o *TwanLocationData) SetLogicalAccessId(v string) {
	o.LogicalAccessId = &v
}

func (o TwanLocationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TwanLocationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["twanSsid"] = o.TwanSsid
	toSerialize["plmnId"] = o.PlmnId
	if !IsNil(o.TwanBssid) {
		toSerialize["twanBssid"] = o.TwanBssid
	}
	if !IsNil(o.CivicAddress) {
		toSerialize["civicAddress"] = o.CivicAddress
	}
	if !IsNil(o.TwanOperatorName) {
		toSerialize["twanOperatorName"] = o.TwanOperatorName
	}
	if !IsNil(o.TimeZone) {
		toSerialize["timeZone"] = o.TimeZone
	}
	if !IsNil(o.LogicalAccessId) {
		toSerialize["logicalAccessId"] = o.LogicalAccessId
	}
	return toSerialize, nil
}

type NullableTwanLocationData struct {
	value *TwanLocationData
	isSet bool
}

func (v NullableTwanLocationData) Get() *TwanLocationData {
	return v.value
}

func (v *NullableTwanLocationData) Set(val *TwanLocationData) {
	v.value = val
	v.isSet = true
}

func (v NullableTwanLocationData) IsSet() bool {
	return v.isSet
}

func (v *NullableTwanLocationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTwanLocationData(val *TwanLocationData) *NullableTwanLocationData {
	return &NullableTwanLocationData{value: val, isSet: true}
}

func (v NullableTwanLocationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTwanLocationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


