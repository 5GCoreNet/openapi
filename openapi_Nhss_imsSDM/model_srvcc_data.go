/*
Nhss_imsSDM

Nhss Subscriber Data Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_imsSDM

import (
	"encoding/json"
)

// checks if the SrvccData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SrvccData{}

// SrvccData UE SRVCC capability (if available) and STN-SR (if subscribed)
type SrvccData struct {
	// String representing the STN-SR as defined in clause 18.6 of 3GPP TS 23.003.
	StnSr string `json:"stnSr"`
	UeSrvccCapabilities []SrvccCapability `json:"ueSrvccCapabilities,omitempty"`
}

// NewSrvccData instantiates a new SrvccData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSrvccData(stnSr string) *SrvccData {
	this := SrvccData{}
	this.StnSr = stnSr
	return &this
}

// NewSrvccDataWithDefaults instantiates a new SrvccData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSrvccDataWithDefaults() *SrvccData {
	this := SrvccData{}
	return &this
}

// GetStnSr returns the StnSr field value
func (o *SrvccData) GetStnSr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StnSr
}

// GetStnSrOk returns a tuple with the StnSr field value
// and a boolean to check if the value has been set.
func (o *SrvccData) GetStnSrOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StnSr, true
}

// SetStnSr sets field value
func (o *SrvccData) SetStnSr(v string) {
	o.StnSr = v
}

// GetUeSrvccCapabilities returns the UeSrvccCapabilities field value if set, zero value otherwise.
func (o *SrvccData) GetUeSrvccCapabilities() []SrvccCapability {
	if o == nil || isNil(o.UeSrvccCapabilities) {
		var ret []SrvccCapability
		return ret
	}
	return o.UeSrvccCapabilities
}

// GetUeSrvccCapabilitiesOk returns a tuple with the UeSrvccCapabilities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SrvccData) GetUeSrvccCapabilitiesOk() ([]SrvccCapability, bool) {
	if o == nil || isNil(o.UeSrvccCapabilities) {
		return nil, false
	}
	return o.UeSrvccCapabilities, true
}

// HasUeSrvccCapabilities returns a boolean if a field has been set.
func (o *SrvccData) HasUeSrvccCapabilities() bool {
	if o != nil && !isNil(o.UeSrvccCapabilities) {
		return true
	}

	return false
}

// SetUeSrvccCapabilities gets a reference to the given []SrvccCapability and assigns it to the UeSrvccCapabilities field.
func (o *SrvccData) SetUeSrvccCapabilities(v []SrvccCapability) {
	o.UeSrvccCapabilities = v
}

func (o SrvccData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SrvccData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stnSr"] = o.StnSr
	if !isNil(o.UeSrvccCapabilities) {
		toSerialize["ueSrvccCapabilities"] = o.UeSrvccCapabilities
	}
	return toSerialize, nil
}

type NullableSrvccData struct {
	value *SrvccData
	isSet bool
}

func (v NullableSrvccData) Get() *SrvccData {
	return v.value
}

func (v *NullableSrvccData) Set(val *SrvccData) {
	v.value = val
	v.isSet = true
}

func (v NullableSrvccData) IsSet() bool {
	return v.isSet
}

func (v *NullableSrvccData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSrvccData(val *SrvccData) *NullableSrvccData {
	return &NullableSrvccData{value: val, isSet: true}
}

func (v NullableSrvccData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSrvccData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


