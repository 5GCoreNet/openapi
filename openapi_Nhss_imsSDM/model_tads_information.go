/*
Nhss_imsSDM

Nhss Subscriber Data Management Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_imsSDM

import (
	"encoding/json"
	"time"
)

// checks if the TadsInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TadsInformation{}

// TadsInformation T-ADS Information
type TadsInformation struct {
	VoiceOverPsSessionSupport ImsVoiceOverPsSessionSupport `json:"voiceOverPsSessionSupport"`
	AccessType *AccessType1 `json:"accessType,omitempty"`
	RatType *RatType `json:"ratType,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	LastUeActivityTime *time.Time `json:"lastUeActivityTime,omitempty"`
}

// NewTadsInformation instantiates a new TadsInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTadsInformation(voiceOverPsSessionSupport ImsVoiceOverPsSessionSupport) *TadsInformation {
	this := TadsInformation{}
	this.VoiceOverPsSessionSupport = voiceOverPsSessionSupport
	return &this
}

// NewTadsInformationWithDefaults instantiates a new TadsInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTadsInformationWithDefaults() *TadsInformation {
	this := TadsInformation{}
	return &this
}

// GetVoiceOverPsSessionSupport returns the VoiceOverPsSessionSupport field value
func (o *TadsInformation) GetVoiceOverPsSessionSupport() ImsVoiceOverPsSessionSupport {
	if o == nil {
		var ret ImsVoiceOverPsSessionSupport
		return ret
	}

	return o.VoiceOverPsSessionSupport
}

// GetVoiceOverPsSessionSupportOk returns a tuple with the VoiceOverPsSessionSupport field value
// and a boolean to check if the value has been set.
func (o *TadsInformation) GetVoiceOverPsSessionSupportOk() (*ImsVoiceOverPsSessionSupport, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VoiceOverPsSessionSupport, true
}

// SetVoiceOverPsSessionSupport sets field value
func (o *TadsInformation) SetVoiceOverPsSessionSupport(v ImsVoiceOverPsSessionSupport) {
	o.VoiceOverPsSessionSupport = v
}

// GetAccessType returns the AccessType field value if set, zero value otherwise.
func (o *TadsInformation) GetAccessType() AccessType1 {
	if o == nil || isNil(o.AccessType) {
		var ret AccessType1
		return ret
	}
	return *o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TadsInformation) GetAccessTypeOk() (*AccessType1, bool) {
	if o == nil || isNil(o.AccessType) {
		return nil, false
	}
	return o.AccessType, true
}

// HasAccessType returns a boolean if a field has been set.
func (o *TadsInformation) HasAccessType() bool {
	if o != nil && !isNil(o.AccessType) {
		return true
	}

	return false
}

// SetAccessType gets a reference to the given AccessType1 and assigns it to the AccessType field.
func (o *TadsInformation) SetAccessType(v AccessType1) {
	o.AccessType = &v
}

// GetRatType returns the RatType field value if set, zero value otherwise.
func (o *TadsInformation) GetRatType() RatType {
	if o == nil || isNil(o.RatType) {
		var ret RatType
		return ret
	}
	return *o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TadsInformation) GetRatTypeOk() (*RatType, bool) {
	if o == nil || isNil(o.RatType) {
		return nil, false
	}
	return o.RatType, true
}

// HasRatType returns a boolean if a field has been set.
func (o *TadsInformation) HasRatType() bool {
	if o != nil && !isNil(o.RatType) {
		return true
	}

	return false
}

// SetRatType gets a reference to the given RatType and assigns it to the RatType field.
func (o *TadsInformation) SetRatType(v RatType) {
	o.RatType = &v
}

// GetLastUeActivityTime returns the LastUeActivityTime field value if set, zero value otherwise.
func (o *TadsInformation) GetLastUeActivityTime() time.Time {
	if o == nil || isNil(o.LastUeActivityTime) {
		var ret time.Time
		return ret
	}
	return *o.LastUeActivityTime
}

// GetLastUeActivityTimeOk returns a tuple with the LastUeActivityTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TadsInformation) GetLastUeActivityTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.LastUeActivityTime) {
		return nil, false
	}
	return o.LastUeActivityTime, true
}

// HasLastUeActivityTime returns a boolean if a field has been set.
func (o *TadsInformation) HasLastUeActivityTime() bool {
	if o != nil && !isNil(o.LastUeActivityTime) {
		return true
	}

	return false
}

// SetLastUeActivityTime gets a reference to the given time.Time and assigns it to the LastUeActivityTime field.
func (o *TadsInformation) SetLastUeActivityTime(v time.Time) {
	o.LastUeActivityTime = &v
}

func (o TadsInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TadsInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["voiceOverPsSessionSupport"] = o.VoiceOverPsSessionSupport
	if !isNil(o.AccessType) {
		toSerialize["accessType"] = o.AccessType
	}
	if !isNil(o.RatType) {
		toSerialize["ratType"] = o.RatType
	}
	if !isNil(o.LastUeActivityTime) {
		toSerialize["lastUeActivityTime"] = o.LastUeActivityTime
	}
	return toSerialize, nil
}

type NullableTadsInformation struct {
	value *TadsInformation
	isSet bool
}

func (v NullableTadsInformation) Get() *TadsInformation {
	return v.value
}

func (v *NullableTadsInformation) Set(val *TadsInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableTadsInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableTadsInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTadsInformation(val *TadsInformation) *NullableTadsInformation {
	return &NullableTadsInformation{value: val, isSet: true}
}

func (v NullableTadsInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTadsInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


