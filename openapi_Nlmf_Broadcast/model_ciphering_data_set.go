/*
LMF Broadcast

LMF Broadcast Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nlmf_Broadcast

import (
	"encoding/json"
	"time"
)

// checks if the CipheringDataSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CipheringDataSet{}

// CipheringDataSet Represents a Ciphering Data Set.
type CipheringDataSet struct {
	// Ciphering Data Set Identifier.
	CipheringSetID int32 `json:"cipheringSetID"`
	// Ciphering Key.
	CipheringKey string `json:"cipheringKey"`
	// First component of the initial ciphering counter.
	C0 string `json:"c0"`
	// string with format 'bytes' as defined in OpenAPI
	LtePosSibTypes *string `json:"ltePosSibTypes,omitempty"`
	// string with format 'bytes' as defined in OpenAPI
	NrPosSibTypes *string `json:"nrPosSibTypes,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ValidityStartTime time.Time `json:"validityStartTime"`
	// Validity Duration of the Ciphering Data Set.
	ValidityDuration int32 `json:"validityDuration"`
	// string with format 'bytes' as defined in OpenAPI
	TaiList *string `json:"taiList,omitempty"`
}

// NewCipheringDataSet instantiates a new CipheringDataSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCipheringDataSet(cipheringSetID int32, cipheringKey string, c0 string, validityStartTime time.Time, validityDuration int32) *CipheringDataSet {
	this := CipheringDataSet{}
	this.CipheringSetID = cipheringSetID
	this.CipheringKey = cipheringKey
	this.C0 = c0
	this.ValidityStartTime = validityStartTime
	this.ValidityDuration = validityDuration
	return &this
}

// NewCipheringDataSetWithDefaults instantiates a new CipheringDataSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCipheringDataSetWithDefaults() *CipheringDataSet {
	this := CipheringDataSet{}
	return &this
}

// GetCipheringSetID returns the CipheringSetID field value
func (o *CipheringDataSet) GetCipheringSetID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CipheringSetID
}

// GetCipheringSetIDOk returns a tuple with the CipheringSetID field value
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetCipheringSetIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CipheringSetID, true
}

// SetCipheringSetID sets field value
func (o *CipheringDataSet) SetCipheringSetID(v int32) {
	o.CipheringSetID = v
}

// GetCipheringKey returns the CipheringKey field value
func (o *CipheringDataSet) GetCipheringKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CipheringKey
}

// GetCipheringKeyOk returns a tuple with the CipheringKey field value
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetCipheringKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CipheringKey, true
}

// SetCipheringKey sets field value
func (o *CipheringDataSet) SetCipheringKey(v string) {
	o.CipheringKey = v
}

// GetC0 returns the C0 field value
func (o *CipheringDataSet) GetC0() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.C0
}

// GetC0Ok returns a tuple with the C0 field value
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetC0Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.C0, true
}

// SetC0 sets field value
func (o *CipheringDataSet) SetC0(v string) {
	o.C0 = v
}

// GetLtePosSibTypes returns the LtePosSibTypes field value if set, zero value otherwise.
func (o *CipheringDataSet) GetLtePosSibTypes() string {
	if o == nil || isNil(o.LtePosSibTypes) {
		var ret string
		return ret
	}
	return *o.LtePosSibTypes
}

// GetLtePosSibTypesOk returns a tuple with the LtePosSibTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetLtePosSibTypesOk() (*string, bool) {
	if o == nil || isNil(o.LtePosSibTypes) {
		return nil, false
	}
	return o.LtePosSibTypes, true
}

// HasLtePosSibTypes returns a boolean if a field has been set.
func (o *CipheringDataSet) HasLtePosSibTypes() bool {
	if o != nil && !isNil(o.LtePosSibTypes) {
		return true
	}

	return false
}

// SetLtePosSibTypes gets a reference to the given string and assigns it to the LtePosSibTypes field.
func (o *CipheringDataSet) SetLtePosSibTypes(v string) {
	o.LtePosSibTypes = &v
}

// GetNrPosSibTypes returns the NrPosSibTypes field value if set, zero value otherwise.
func (o *CipheringDataSet) GetNrPosSibTypes() string {
	if o == nil || isNil(o.NrPosSibTypes) {
		var ret string
		return ret
	}
	return *o.NrPosSibTypes
}

// GetNrPosSibTypesOk returns a tuple with the NrPosSibTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetNrPosSibTypesOk() (*string, bool) {
	if o == nil || isNil(o.NrPosSibTypes) {
		return nil, false
	}
	return o.NrPosSibTypes, true
}

// HasNrPosSibTypes returns a boolean if a field has been set.
func (o *CipheringDataSet) HasNrPosSibTypes() bool {
	if o != nil && !isNil(o.NrPosSibTypes) {
		return true
	}

	return false
}

// SetNrPosSibTypes gets a reference to the given string and assigns it to the NrPosSibTypes field.
func (o *CipheringDataSet) SetNrPosSibTypes(v string) {
	o.NrPosSibTypes = &v
}

// GetValidityStartTime returns the ValidityStartTime field value
func (o *CipheringDataSet) GetValidityStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ValidityStartTime
}

// GetValidityStartTimeOk returns a tuple with the ValidityStartTime field value
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetValidityStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidityStartTime, true
}

// SetValidityStartTime sets field value
func (o *CipheringDataSet) SetValidityStartTime(v time.Time) {
	o.ValidityStartTime = v
}

// GetValidityDuration returns the ValidityDuration field value
func (o *CipheringDataSet) GetValidityDuration() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ValidityDuration
}

// GetValidityDurationOk returns a tuple with the ValidityDuration field value
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetValidityDurationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ValidityDuration, true
}

// SetValidityDuration sets field value
func (o *CipheringDataSet) SetValidityDuration(v int32) {
	o.ValidityDuration = v
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *CipheringDataSet) GetTaiList() string {
	if o == nil || isNil(o.TaiList) {
		var ret string
		return ret
	}
	return *o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CipheringDataSet) GetTaiListOk() (*string, bool) {
	if o == nil || isNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *CipheringDataSet) HasTaiList() bool {
	if o != nil && !isNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given string and assigns it to the TaiList field.
func (o *CipheringDataSet) SetTaiList(v string) {
	o.TaiList = &v
}

func (o CipheringDataSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CipheringDataSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cipheringSetID"] = o.CipheringSetID
	toSerialize["cipheringKey"] = o.CipheringKey
	toSerialize["c0"] = o.C0
	if !isNil(o.LtePosSibTypes) {
		toSerialize["ltePosSibTypes"] = o.LtePosSibTypes
	}
	if !isNil(o.NrPosSibTypes) {
		toSerialize["nrPosSibTypes"] = o.NrPosSibTypes
	}
	toSerialize["validityStartTime"] = o.ValidityStartTime
	toSerialize["validityDuration"] = o.ValidityDuration
	if !isNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	return toSerialize, nil
}

type NullableCipheringDataSet struct {
	value *CipheringDataSet
	isSet bool
}

func (v NullableCipheringDataSet) Get() *CipheringDataSet {
	return v.value
}

func (v *NullableCipheringDataSet) Set(val *CipheringDataSet) {
	v.value = val
	v.isSet = true
}

func (v NullableCipheringDataSet) IsSet() bool {
	return v.isSet
}

func (v *NullableCipheringDataSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCipheringDataSet(val *CipheringDataSet) *NullableCipheringDataSet {
	return &NullableCipheringDataSet{value: val, isSet: true}
}

func (v NullableCipheringDataSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCipheringDataSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


