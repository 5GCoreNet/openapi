/*
LMF Broadcast

LMF Broadcast Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nlmf_Broadcast

import (
	"encoding/json"
)

// checks if the CipheringKeyResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CipheringKeyResponse{}

// CipheringKeyResponse Information within Ciphering Key Data Notification Response.
type CipheringKeyResponse struct {
	CipheringDataReport []CipheringSetReport `json:"cipheringDataReport,omitempty"`
}

// NewCipheringKeyResponse instantiates a new CipheringKeyResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCipheringKeyResponse() *CipheringKeyResponse {
	this := CipheringKeyResponse{}
	return &this
}

// NewCipheringKeyResponseWithDefaults instantiates a new CipheringKeyResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCipheringKeyResponseWithDefaults() *CipheringKeyResponse {
	this := CipheringKeyResponse{}
	return &this
}

// GetCipheringDataReport returns the CipheringDataReport field value if set, zero value otherwise.
func (o *CipheringKeyResponse) GetCipheringDataReport() []CipheringSetReport {
	if o == nil || IsNil(o.CipheringDataReport) {
		var ret []CipheringSetReport
		return ret
	}
	return o.CipheringDataReport
}

// GetCipheringDataReportOk returns a tuple with the CipheringDataReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CipheringKeyResponse) GetCipheringDataReportOk() ([]CipheringSetReport, bool) {
	if o == nil || IsNil(o.CipheringDataReport) {
		return nil, false
	}
	return o.CipheringDataReport, true
}

// HasCipheringDataReport returns a boolean if a field has been set.
func (o *CipheringKeyResponse) HasCipheringDataReport() bool {
	if o != nil && !IsNil(o.CipheringDataReport) {
		return true
	}

	return false
}

// SetCipheringDataReport gets a reference to the given []CipheringSetReport and assigns it to the CipheringDataReport field.
func (o *CipheringKeyResponse) SetCipheringDataReport(v []CipheringSetReport) {
	o.CipheringDataReport = v
}

func (o CipheringKeyResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CipheringKeyResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CipheringDataReport) {
		toSerialize["cipheringDataReport"] = o.CipheringDataReport
	}
	return toSerialize, nil
}

type NullableCipheringKeyResponse struct {
	value *CipheringKeyResponse
	isSet bool
}

func (v NullableCipheringKeyResponse) Get() *CipheringKeyResponse {
	return v.value
}

func (v *NullableCipheringKeyResponse) Set(val *CipheringKeyResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableCipheringKeyResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableCipheringKeyResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCipheringKeyResponse(val *CipheringKeyResponse) *NullableCipheringKeyResponse {
	return &NullableCipheringKeyResponse{value: val, isSet: true}
}

func (v NullableCipheringKeyResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCipheringKeyResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


