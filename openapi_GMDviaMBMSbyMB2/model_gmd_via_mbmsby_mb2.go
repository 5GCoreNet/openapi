/*
GMDviaMBMSbyMB2

API for Group Message Delivery via MBMS by MB2   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_GMDviaMBMSbyMB2

import (
	"encoding/json"
	"time"
)

// checks if the GMDViaMBMSByMb2 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GMDViaMBMSByMb2{}

// GMDViaMBMSByMb2 Represents a group message delivery via MBMS by MB2.
type GMDViaMBMSByMb2 struct {
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Self *string `json:"self,omitempty"`
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NotificationDestination string `json:"notificationDestination"`
	// Set to true by the SCS/AS to request the SCEF to send a test notification as defined in clause 5.2.5.3. Set to false or omitted otherwise.
	RequestTestNotification *bool `json:"requestTestNotification,omitempty"`
	WebsockNotifConfig *WebsockNotifConfig `json:"websockNotifConfig,omitempty"`
	// string containing a local identifier followed by \"@\" and a domain identifier. Both the local identifier and the domain identifier shall be encoded as strings that do not contain any \"@\" characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
	ExternalGroupId *string `json:"externalGroupId,omitempty"`
	MbmsLocArea *MbmsLocArea `json:"mbmsLocArea,omitempty"`
	// string with format \"date-time\" as defined in OpenAPI.
	MessageDeliveryStartTime *time.Time `json:"messageDeliveryStartTime,omitempty"`
	// String with format \"byte\" as defined in OpenAPI Specification, i.e, base64-encoded characters.
	GroupMessagePayload *string `json:"groupMessagePayload,omitempty"`
	// string identifying a Ipv4 address formatted in the \"dotted decimal\" notation as defined in IETF RFC 1166, with \"readOnly=true\" property.
	ScefMessageDeliveryIPv4 *string `json:"scefMessageDeliveryIPv4,omitempty"`
	// string identifying a Ipv6 address formatted according to clause 4 in IETF RFC 5952, with \"readOnly=true\" property. The mixed Ipv4 Ipv6 notation according to clause 5 of IETF RFC 5952 shall not be used.
	ScefMessageDeliveryIPv6 *string `json:"scefMessageDeliveryIPv6,omitempty"`
	// Unsigned integer with valid values between 0 and 65535, with \"readOnly=true\" property.
	ScefMessageDeliveryPort *int32 `json:"scefMessageDeliveryPort,omitempty"`
}

// NewGMDViaMBMSByMb2 instantiates a new GMDViaMBMSByMb2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGMDViaMBMSByMb2(notificationDestination string) *GMDViaMBMSByMb2 {
	this := GMDViaMBMSByMb2{}
	this.NotificationDestination = notificationDestination
	return &this
}

// NewGMDViaMBMSByMb2WithDefaults instantiates a new GMDViaMBMSByMb2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGMDViaMBMSByMb2WithDefaults() *GMDViaMBMSByMb2 {
	this := GMDViaMBMSByMb2{}
	return &this
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *GMDViaMBMSByMb2) SetSelf(v string) {
	o.Self = &v
}

// GetNotificationDestination returns the NotificationDestination field value
func (o *GMDViaMBMSByMb2) GetNotificationDestination() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationDestination
}

// GetNotificationDestinationOk returns a tuple with the NotificationDestination field value
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetNotificationDestinationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationDestination, true
}

// SetNotificationDestination sets field value
func (o *GMDViaMBMSByMb2) SetNotificationDestination(v string) {
	o.NotificationDestination = v
}

// GetRequestTestNotification returns the RequestTestNotification field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetRequestTestNotification() bool {
	if o == nil || IsNil(o.RequestTestNotification) {
		var ret bool
		return ret
	}
	return *o.RequestTestNotification
}

// GetRequestTestNotificationOk returns a tuple with the RequestTestNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetRequestTestNotificationOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestTestNotification) {
		return nil, false
	}
	return o.RequestTestNotification, true
}

// HasRequestTestNotification returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasRequestTestNotification() bool {
	if o != nil && !IsNil(o.RequestTestNotification) {
		return true
	}

	return false
}

// SetRequestTestNotification gets a reference to the given bool and assigns it to the RequestTestNotification field.
func (o *GMDViaMBMSByMb2) SetRequestTestNotification(v bool) {
	o.RequestTestNotification = &v
}

// GetWebsockNotifConfig returns the WebsockNotifConfig field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetWebsockNotifConfig() WebsockNotifConfig {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		var ret WebsockNotifConfig
		return ret
	}
	return *o.WebsockNotifConfig
}

// GetWebsockNotifConfigOk returns a tuple with the WebsockNotifConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetWebsockNotifConfigOk() (*WebsockNotifConfig, bool) {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		return nil, false
	}
	return o.WebsockNotifConfig, true
}

// HasWebsockNotifConfig returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasWebsockNotifConfig() bool {
	if o != nil && !IsNil(o.WebsockNotifConfig) {
		return true
	}

	return false
}

// SetWebsockNotifConfig gets a reference to the given WebsockNotifConfig and assigns it to the WebsockNotifConfig field.
func (o *GMDViaMBMSByMb2) SetWebsockNotifConfig(v WebsockNotifConfig) {
	o.WebsockNotifConfig = &v
}

// GetExternalGroupId returns the ExternalGroupId field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetExternalGroupId() string {
	if o == nil || IsNil(o.ExternalGroupId) {
		var ret string
		return ret
	}
	return *o.ExternalGroupId
}

// GetExternalGroupIdOk returns a tuple with the ExternalGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetExternalGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalGroupId) {
		return nil, false
	}
	return o.ExternalGroupId, true
}

// HasExternalGroupId returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasExternalGroupId() bool {
	if o != nil && !IsNil(o.ExternalGroupId) {
		return true
	}

	return false
}

// SetExternalGroupId gets a reference to the given string and assigns it to the ExternalGroupId field.
func (o *GMDViaMBMSByMb2) SetExternalGroupId(v string) {
	o.ExternalGroupId = &v
}

// GetMbmsLocArea returns the MbmsLocArea field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetMbmsLocArea() MbmsLocArea {
	if o == nil || IsNil(o.MbmsLocArea) {
		var ret MbmsLocArea
		return ret
	}
	return *o.MbmsLocArea
}

// GetMbmsLocAreaOk returns a tuple with the MbmsLocArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetMbmsLocAreaOk() (*MbmsLocArea, bool) {
	if o == nil || IsNil(o.MbmsLocArea) {
		return nil, false
	}
	return o.MbmsLocArea, true
}

// HasMbmsLocArea returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasMbmsLocArea() bool {
	if o != nil && !IsNil(o.MbmsLocArea) {
		return true
	}

	return false
}

// SetMbmsLocArea gets a reference to the given MbmsLocArea and assigns it to the MbmsLocArea field.
func (o *GMDViaMBMSByMb2) SetMbmsLocArea(v MbmsLocArea) {
	o.MbmsLocArea = &v
}

// GetMessageDeliveryStartTime returns the MessageDeliveryStartTime field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetMessageDeliveryStartTime() time.Time {
	if o == nil || IsNil(o.MessageDeliveryStartTime) {
		var ret time.Time
		return ret
	}
	return *o.MessageDeliveryStartTime
}

// GetMessageDeliveryStartTimeOk returns a tuple with the MessageDeliveryStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetMessageDeliveryStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.MessageDeliveryStartTime) {
		return nil, false
	}
	return o.MessageDeliveryStartTime, true
}

// HasMessageDeliveryStartTime returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasMessageDeliveryStartTime() bool {
	if o != nil && !IsNil(o.MessageDeliveryStartTime) {
		return true
	}

	return false
}

// SetMessageDeliveryStartTime gets a reference to the given time.Time and assigns it to the MessageDeliveryStartTime field.
func (o *GMDViaMBMSByMb2) SetMessageDeliveryStartTime(v time.Time) {
	o.MessageDeliveryStartTime = &v
}

// GetGroupMessagePayload returns the GroupMessagePayload field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetGroupMessagePayload() string {
	if o == nil || IsNil(o.GroupMessagePayload) {
		var ret string
		return ret
	}
	return *o.GroupMessagePayload
}

// GetGroupMessagePayloadOk returns a tuple with the GroupMessagePayload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetGroupMessagePayloadOk() (*string, bool) {
	if o == nil || IsNil(o.GroupMessagePayload) {
		return nil, false
	}
	return o.GroupMessagePayload, true
}

// HasGroupMessagePayload returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasGroupMessagePayload() bool {
	if o != nil && !IsNil(o.GroupMessagePayload) {
		return true
	}

	return false
}

// SetGroupMessagePayload gets a reference to the given string and assigns it to the GroupMessagePayload field.
func (o *GMDViaMBMSByMb2) SetGroupMessagePayload(v string) {
	o.GroupMessagePayload = &v
}

// GetScefMessageDeliveryIPv4 returns the ScefMessageDeliveryIPv4 field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryIPv4() string {
	if o == nil || IsNil(o.ScefMessageDeliveryIPv4) {
		var ret string
		return ret
	}
	return *o.ScefMessageDeliveryIPv4
}

// GetScefMessageDeliveryIPv4Ok returns a tuple with the ScefMessageDeliveryIPv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryIPv4Ok() (*string, bool) {
	if o == nil || IsNil(o.ScefMessageDeliveryIPv4) {
		return nil, false
	}
	return o.ScefMessageDeliveryIPv4, true
}

// HasScefMessageDeliveryIPv4 returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasScefMessageDeliveryIPv4() bool {
	if o != nil && !IsNil(o.ScefMessageDeliveryIPv4) {
		return true
	}

	return false
}

// SetScefMessageDeliveryIPv4 gets a reference to the given string and assigns it to the ScefMessageDeliveryIPv4 field.
func (o *GMDViaMBMSByMb2) SetScefMessageDeliveryIPv4(v string) {
	o.ScefMessageDeliveryIPv4 = &v
}

// GetScefMessageDeliveryIPv6 returns the ScefMessageDeliveryIPv6 field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryIPv6() string {
	if o == nil || IsNil(o.ScefMessageDeliveryIPv6) {
		var ret string
		return ret
	}
	return *o.ScefMessageDeliveryIPv6
}

// GetScefMessageDeliveryIPv6Ok returns a tuple with the ScefMessageDeliveryIPv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryIPv6Ok() (*string, bool) {
	if o == nil || IsNil(o.ScefMessageDeliveryIPv6) {
		return nil, false
	}
	return o.ScefMessageDeliveryIPv6, true
}

// HasScefMessageDeliveryIPv6 returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasScefMessageDeliveryIPv6() bool {
	if o != nil && !IsNil(o.ScefMessageDeliveryIPv6) {
		return true
	}

	return false
}

// SetScefMessageDeliveryIPv6 gets a reference to the given string and assigns it to the ScefMessageDeliveryIPv6 field.
func (o *GMDViaMBMSByMb2) SetScefMessageDeliveryIPv6(v string) {
	o.ScefMessageDeliveryIPv6 = &v
}

// GetScefMessageDeliveryPort returns the ScefMessageDeliveryPort field value if set, zero value otherwise.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryPort() int32 {
	if o == nil || IsNil(o.ScefMessageDeliveryPort) {
		var ret int32
		return ret
	}
	return *o.ScefMessageDeliveryPort
}

// GetScefMessageDeliveryPortOk returns a tuple with the ScefMessageDeliveryPort field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GMDViaMBMSByMb2) GetScefMessageDeliveryPortOk() (*int32, bool) {
	if o == nil || IsNil(o.ScefMessageDeliveryPort) {
		return nil, false
	}
	return o.ScefMessageDeliveryPort, true
}

// HasScefMessageDeliveryPort returns a boolean if a field has been set.
func (o *GMDViaMBMSByMb2) HasScefMessageDeliveryPort() bool {
	if o != nil && !IsNil(o.ScefMessageDeliveryPort) {
		return true
	}

	return false
}

// SetScefMessageDeliveryPort gets a reference to the given int32 and assigns it to the ScefMessageDeliveryPort field.
func (o *GMDViaMBMSByMb2) SetScefMessageDeliveryPort(v int32) {
	o.ScefMessageDeliveryPort = &v
}

func (o GMDViaMBMSByMb2) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GMDViaMBMSByMb2) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	toSerialize["notificationDestination"] = o.NotificationDestination
	if !IsNil(o.RequestTestNotification) {
		toSerialize["requestTestNotification"] = o.RequestTestNotification
	}
	if !IsNil(o.WebsockNotifConfig) {
		toSerialize["websockNotifConfig"] = o.WebsockNotifConfig
	}
	if !IsNil(o.ExternalGroupId) {
		toSerialize["externalGroupId"] = o.ExternalGroupId
	}
	if !IsNil(o.MbmsLocArea) {
		toSerialize["mbmsLocArea"] = o.MbmsLocArea
	}
	if !IsNil(o.MessageDeliveryStartTime) {
		toSerialize["messageDeliveryStartTime"] = o.MessageDeliveryStartTime
	}
	if !IsNil(o.GroupMessagePayload) {
		toSerialize["groupMessagePayload"] = o.GroupMessagePayload
	}
	// skip: scefMessageDeliveryIPv4 is readOnly
	// skip: scefMessageDeliveryIPv6 is readOnly
	// skip: scefMessageDeliveryPort is readOnly
	return toSerialize, nil
}

type NullableGMDViaMBMSByMb2 struct {
	value *GMDViaMBMSByMb2
	isSet bool
}

func (v NullableGMDViaMBMSByMb2) Get() *GMDViaMBMSByMb2 {
	return v.value
}

func (v *NullableGMDViaMBMSByMb2) Set(val *GMDViaMBMSByMb2) {
	v.value = val
	v.isSet = true
}

func (v NullableGMDViaMBMSByMb2) IsSet() bool {
	return v.isSet
}

func (v *NullableGMDViaMBMSByMb2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGMDViaMBMSByMb2(val *GMDViaMBMSByMb2) *NullableGMDViaMBMSByMb2 {
	return &NullableGMDViaMBMSByMb2{value: val, isSet: true}
}

func (v NullableGMDViaMBMSByMb2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGMDViaMBMSByMb2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


