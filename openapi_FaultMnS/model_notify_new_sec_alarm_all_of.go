/*
Fault Supervision MnS

OAS 3.0.1 definition of the Fault Supervision MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_FaultMnS

import (
	"encoding/json"
)

// checks if the NotifyNewSecAlarmAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyNewSecAlarmAllOf{}

// NotifyNewSecAlarmAllOf struct for NotifyNewSecAlarmAllOf
type NotifyNewSecAlarmAllOf struct {
	AlarmId string `json:"alarmId"`
	AlarmType AlarmType `json:"alarmType"`
	ProbableCause ProbableCause `json:"probableCause"`
	PerceivedSeverity PerceivedSeverity `json:"perceivedSeverity"`
	CorrelatedNotifications []CorrelatedNotification `json:"correlatedNotifications,omitempty"`
	AdditionalText *string `json:"additionalText,omitempty"`
	// The key of this map is the attribute name, and the value the attribute value.
	AdditionalInformation map[string]interface{} `json:"additionalInformation,omitempty"`
	RootCauseIndicator *bool `json:"rootCauseIndicator,omitempty"`
	ServiceUser string `json:"serviceUser"`
	ServiceProvider string `json:"serviceProvider"`
	SecurityAlarmDetector string `json:"securityAlarmDetector"`
}

// NewNotifyNewSecAlarmAllOf instantiates a new NotifyNewSecAlarmAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyNewSecAlarmAllOf(alarmId string, alarmType AlarmType, probableCause ProbableCause, perceivedSeverity PerceivedSeverity, serviceUser string, serviceProvider string, securityAlarmDetector string) *NotifyNewSecAlarmAllOf {
	this := NotifyNewSecAlarmAllOf{}
	this.AlarmId = alarmId
	this.AlarmType = alarmType
	this.ProbableCause = probableCause
	this.PerceivedSeverity = perceivedSeverity
	this.ServiceUser = serviceUser
	this.ServiceProvider = serviceProvider
	this.SecurityAlarmDetector = securityAlarmDetector
	return &this
}

// NewNotifyNewSecAlarmAllOfWithDefaults instantiates a new NotifyNewSecAlarmAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyNewSecAlarmAllOfWithDefaults() *NotifyNewSecAlarmAllOf {
	this := NotifyNewSecAlarmAllOf{}
	return &this
}

// GetAlarmId returns the AlarmId field value
func (o *NotifyNewSecAlarmAllOf) GetAlarmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlarmId
}

// GetAlarmIdOk returns a tuple with the AlarmId field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetAlarmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmId, true
}

// SetAlarmId sets field value
func (o *NotifyNewSecAlarmAllOf) SetAlarmId(v string) {
	o.AlarmId = v
}

// GetAlarmType returns the AlarmType field value
func (o *NotifyNewSecAlarmAllOf) GetAlarmType() AlarmType {
	if o == nil {
		var ret AlarmType
		return ret
	}

	return o.AlarmType
}

// GetAlarmTypeOk returns a tuple with the AlarmType field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetAlarmTypeOk() (*AlarmType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmType, true
}

// SetAlarmType sets field value
func (o *NotifyNewSecAlarmAllOf) SetAlarmType(v AlarmType) {
	o.AlarmType = v
}

// GetProbableCause returns the ProbableCause field value
func (o *NotifyNewSecAlarmAllOf) GetProbableCause() ProbableCause {
	if o == nil {
		var ret ProbableCause
		return ret
	}

	return o.ProbableCause
}

// GetProbableCauseOk returns a tuple with the ProbableCause field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetProbableCauseOk() (*ProbableCause, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProbableCause, true
}

// SetProbableCause sets field value
func (o *NotifyNewSecAlarmAllOf) SetProbableCause(v ProbableCause) {
	o.ProbableCause = v
}

// GetPerceivedSeverity returns the PerceivedSeverity field value
func (o *NotifyNewSecAlarmAllOf) GetPerceivedSeverity() PerceivedSeverity {
	if o == nil {
		var ret PerceivedSeverity
		return ret
	}

	return o.PerceivedSeverity
}

// GetPerceivedSeverityOk returns a tuple with the PerceivedSeverity field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetPerceivedSeverityOk() (*PerceivedSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PerceivedSeverity, true
}

// SetPerceivedSeverity sets field value
func (o *NotifyNewSecAlarmAllOf) SetPerceivedSeverity(v PerceivedSeverity) {
	o.PerceivedSeverity = v
}

// GetCorrelatedNotifications returns the CorrelatedNotifications field value if set, zero value otherwise.
func (o *NotifyNewSecAlarmAllOf) GetCorrelatedNotifications() []CorrelatedNotification {
	if o == nil || IsNil(o.CorrelatedNotifications) {
		var ret []CorrelatedNotification
		return ret
	}
	return o.CorrelatedNotifications
}

// GetCorrelatedNotificationsOk returns a tuple with the CorrelatedNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetCorrelatedNotificationsOk() ([]CorrelatedNotification, bool) {
	if o == nil || IsNil(o.CorrelatedNotifications) {
		return nil, false
	}
	return o.CorrelatedNotifications, true
}

// HasCorrelatedNotifications returns a boolean if a field has been set.
func (o *NotifyNewSecAlarmAllOf) HasCorrelatedNotifications() bool {
	if o != nil && !IsNil(o.CorrelatedNotifications) {
		return true
	}

	return false
}

// SetCorrelatedNotifications gets a reference to the given []CorrelatedNotification and assigns it to the CorrelatedNotifications field.
func (o *NotifyNewSecAlarmAllOf) SetCorrelatedNotifications(v []CorrelatedNotification) {
	o.CorrelatedNotifications = v
}

// GetAdditionalText returns the AdditionalText field value if set, zero value otherwise.
func (o *NotifyNewSecAlarmAllOf) GetAdditionalText() string {
	if o == nil || IsNil(o.AdditionalText) {
		var ret string
		return ret
	}
	return *o.AdditionalText
}

// GetAdditionalTextOk returns a tuple with the AdditionalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetAdditionalTextOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalText) {
		return nil, false
	}
	return o.AdditionalText, true
}

// HasAdditionalText returns a boolean if a field has been set.
func (o *NotifyNewSecAlarmAllOf) HasAdditionalText() bool {
	if o != nil && !IsNil(o.AdditionalText) {
		return true
	}

	return false
}

// SetAdditionalText gets a reference to the given string and assigns it to the AdditionalText field.
func (o *NotifyNewSecAlarmAllOf) SetAdditionalText(v string) {
	o.AdditionalText = &v
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *NotifyNewSecAlarmAllOf) GetAdditionalInformation() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalInformation) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetAdditionalInformationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalInformation) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *NotifyNewSecAlarmAllOf) HasAdditionalInformation() bool {
	if o != nil && !IsNil(o.AdditionalInformation) {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given map[string]interface{} and assigns it to the AdditionalInformation field.
func (o *NotifyNewSecAlarmAllOf) SetAdditionalInformation(v map[string]interface{}) {
	o.AdditionalInformation = v
}

// GetRootCauseIndicator returns the RootCauseIndicator field value if set, zero value otherwise.
func (o *NotifyNewSecAlarmAllOf) GetRootCauseIndicator() bool {
	if o == nil || IsNil(o.RootCauseIndicator) {
		var ret bool
		return ret
	}
	return *o.RootCauseIndicator
}

// GetRootCauseIndicatorOk returns a tuple with the RootCauseIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetRootCauseIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.RootCauseIndicator) {
		return nil, false
	}
	return o.RootCauseIndicator, true
}

// HasRootCauseIndicator returns a boolean if a field has been set.
func (o *NotifyNewSecAlarmAllOf) HasRootCauseIndicator() bool {
	if o != nil && !IsNil(o.RootCauseIndicator) {
		return true
	}

	return false
}

// SetRootCauseIndicator gets a reference to the given bool and assigns it to the RootCauseIndicator field.
func (o *NotifyNewSecAlarmAllOf) SetRootCauseIndicator(v bool) {
	o.RootCauseIndicator = &v
}

// GetServiceUser returns the ServiceUser field value
func (o *NotifyNewSecAlarmAllOf) GetServiceUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceUser
}

// GetServiceUserOk returns a tuple with the ServiceUser field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetServiceUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceUser, true
}

// SetServiceUser sets field value
func (o *NotifyNewSecAlarmAllOf) SetServiceUser(v string) {
	o.ServiceUser = v
}

// GetServiceProvider returns the ServiceProvider field value
func (o *NotifyNewSecAlarmAllOf) GetServiceProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceProvider
}

// GetServiceProviderOk returns a tuple with the ServiceProvider field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetServiceProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceProvider, true
}

// SetServiceProvider sets field value
func (o *NotifyNewSecAlarmAllOf) SetServiceProvider(v string) {
	o.ServiceProvider = v
}

// GetSecurityAlarmDetector returns the SecurityAlarmDetector field value
func (o *NotifyNewSecAlarmAllOf) GetSecurityAlarmDetector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityAlarmDetector
}

// GetSecurityAlarmDetectorOk returns a tuple with the SecurityAlarmDetector field value
// and a boolean to check if the value has been set.
func (o *NotifyNewSecAlarmAllOf) GetSecurityAlarmDetectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityAlarmDetector, true
}

// SetSecurityAlarmDetector sets field value
func (o *NotifyNewSecAlarmAllOf) SetSecurityAlarmDetector(v string) {
	o.SecurityAlarmDetector = v
}

func (o NotifyNewSecAlarmAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyNewSecAlarmAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alarmId"] = o.AlarmId
	toSerialize["alarmType"] = o.AlarmType
	toSerialize["probableCause"] = o.ProbableCause
	toSerialize["perceivedSeverity"] = o.PerceivedSeverity
	if !IsNil(o.CorrelatedNotifications) {
		toSerialize["correlatedNotifications"] = o.CorrelatedNotifications
	}
	if !IsNil(o.AdditionalText) {
		toSerialize["additionalText"] = o.AdditionalText
	}
	if !IsNil(o.AdditionalInformation) {
		toSerialize["additionalInformation"] = o.AdditionalInformation
	}
	if !IsNil(o.RootCauseIndicator) {
		toSerialize["rootCauseIndicator"] = o.RootCauseIndicator
	}
	toSerialize["serviceUser"] = o.ServiceUser
	toSerialize["serviceProvider"] = o.ServiceProvider
	toSerialize["securityAlarmDetector"] = o.SecurityAlarmDetector
	return toSerialize, nil
}

type NullableNotifyNewSecAlarmAllOf struct {
	value *NotifyNewSecAlarmAllOf
	isSet bool
}

func (v NullableNotifyNewSecAlarmAllOf) Get() *NotifyNewSecAlarmAllOf {
	return v.value
}

func (v *NullableNotifyNewSecAlarmAllOf) Set(val *NotifyNewSecAlarmAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyNewSecAlarmAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyNewSecAlarmAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyNewSecAlarmAllOf(val *NotifyNewSecAlarmAllOf) *NullableNotifyNewSecAlarmAllOf {
	return &NullableNotifyNewSecAlarmAllOf{value: val, isSet: true}
}

func (v NullableNotifyNewSecAlarmAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyNewSecAlarmAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


