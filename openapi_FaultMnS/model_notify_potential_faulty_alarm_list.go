/*
Fault Supervision MnS

OAS 3.0.1 definition of the Fault Supervision MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_FaultMnS

import (
	"encoding/json"
	"time"
)

// checks if the NotifyPotentialFaultyAlarmList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyPotentialFaultyAlarmList{}

// NotifyPotentialFaultyAlarmList struct for NotifyPotentialFaultyAlarmList
type NotifyPotentialFaultyAlarmList struct {
	Href string `json:"href"`
	NotificationId int32 `json:"notificationId"`
	NotificationType NotificationType `json:"notificationType"`
	EventTime time.Time `json:"eventTime"`
	SystemDN string `json:"systemDN"`
	Reason string `json:"reason"`
}

// NewNotifyPotentialFaultyAlarmList instantiates a new NotifyPotentialFaultyAlarmList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyPotentialFaultyAlarmList(href string, notificationId int32, notificationType NotificationType, eventTime time.Time, systemDN string, reason string) *NotifyPotentialFaultyAlarmList {
	this := NotifyPotentialFaultyAlarmList{}
	this.Href = href
	this.NotificationId = notificationId
	this.NotificationType = notificationType
	this.EventTime = eventTime
	this.SystemDN = systemDN
	this.Reason = reason
	return &this
}

// NewNotifyPotentialFaultyAlarmListWithDefaults instantiates a new NotifyPotentialFaultyAlarmList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyPotentialFaultyAlarmListWithDefaults() *NotifyPotentialFaultyAlarmList {
	this := NotifyPotentialFaultyAlarmList{}
	return &this
}

// GetHref returns the Href field value
func (o *NotifyPotentialFaultyAlarmList) GetHref() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Href
}

// GetHrefOk returns a tuple with the Href field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetHrefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Href, true
}

// SetHref sets field value
func (o *NotifyPotentialFaultyAlarmList) SetHref(v string) {
	o.Href = v
}

// GetNotificationId returns the NotificationId field value
func (o *NotifyPotentialFaultyAlarmList) GetNotificationId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.NotificationId
}

// GetNotificationIdOk returns a tuple with the NotificationId field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetNotificationIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationId, true
}

// SetNotificationId sets field value
func (o *NotifyPotentialFaultyAlarmList) SetNotificationId(v int32) {
	o.NotificationId = v
}

// GetNotificationType returns the NotificationType field value
func (o *NotifyPotentialFaultyAlarmList) GetNotificationType() NotificationType {
	if o == nil {
		var ret NotificationType
		return ret
	}

	return o.NotificationType
}

// GetNotificationTypeOk returns a tuple with the NotificationType field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetNotificationTypeOk() (*NotificationType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationType, true
}

// SetNotificationType sets field value
func (o *NotifyPotentialFaultyAlarmList) SetNotificationType(v NotificationType) {
	o.NotificationType = v
}

// GetEventTime returns the EventTime field value
func (o *NotifyPotentialFaultyAlarmList) GetEventTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.EventTime
}

// GetEventTimeOk returns a tuple with the EventTime field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetEventTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventTime, true
}

// SetEventTime sets field value
func (o *NotifyPotentialFaultyAlarmList) SetEventTime(v time.Time) {
	o.EventTime = v
}

// GetSystemDN returns the SystemDN field value
func (o *NotifyPotentialFaultyAlarmList) GetSystemDN() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SystemDN
}

// GetSystemDNOk returns a tuple with the SystemDN field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetSystemDNOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemDN, true
}

// SetSystemDN sets field value
func (o *NotifyPotentialFaultyAlarmList) SetSystemDN(v string) {
	o.SystemDN = v
}

// GetReason returns the Reason field value
func (o *NotifyPotentialFaultyAlarmList) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *NotifyPotentialFaultyAlarmList) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *NotifyPotentialFaultyAlarmList) SetReason(v string) {
	o.Reason = v
}

func (o NotifyPotentialFaultyAlarmList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyPotentialFaultyAlarmList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["href"] = o.Href
	toSerialize["notificationId"] = o.NotificationId
	toSerialize["notificationType"] = o.NotificationType
	toSerialize["eventTime"] = o.EventTime
	toSerialize["systemDN"] = o.SystemDN
	toSerialize["reason"] = o.Reason
	return toSerialize, nil
}

type NullableNotifyPotentialFaultyAlarmList struct {
	value *NotifyPotentialFaultyAlarmList
	isSet bool
}

func (v NullableNotifyPotentialFaultyAlarmList) Get() *NotifyPotentialFaultyAlarmList {
	return v.value
}

func (v *NullableNotifyPotentialFaultyAlarmList) Set(val *NotifyPotentialFaultyAlarmList) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyPotentialFaultyAlarmList) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyPotentialFaultyAlarmList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyPotentialFaultyAlarmList(val *NotifyPotentialFaultyAlarmList) *NullableNotifyPotentialFaultyAlarmList {
	return &NullableNotifyPotentialFaultyAlarmList{value: val, isSet: true}
}

func (v NullableNotifyPotentialFaultyAlarmList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyPotentialFaultyAlarmList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


