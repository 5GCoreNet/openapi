/*
Fault Supervision MnS

OAS 3.0.1 definition of the Fault Supervision MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_FaultMnS

import (
	"encoding/json"
)

// checks if the NotifyChangedAlarmAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyChangedAlarmAllOf{}

// NotifyChangedAlarmAllOf struct for NotifyChangedAlarmAllOf
type NotifyChangedAlarmAllOf struct {
	AlarmId string `json:"alarmId"`
	AlarmType AlarmType `json:"alarmType"`
	ProbableCause ProbableCause `json:"probableCause"`
	PerceivedSeverity PerceivedSeverity `json:"perceivedSeverity"`
}

// NewNotifyChangedAlarmAllOf instantiates a new NotifyChangedAlarmAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyChangedAlarmAllOf(alarmId string, alarmType AlarmType, probableCause ProbableCause, perceivedSeverity PerceivedSeverity) *NotifyChangedAlarmAllOf {
	this := NotifyChangedAlarmAllOf{}
	this.AlarmId = alarmId
	this.AlarmType = alarmType
	this.ProbableCause = probableCause
	this.PerceivedSeverity = perceivedSeverity
	return &this
}

// NewNotifyChangedAlarmAllOfWithDefaults instantiates a new NotifyChangedAlarmAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyChangedAlarmAllOfWithDefaults() *NotifyChangedAlarmAllOf {
	this := NotifyChangedAlarmAllOf{}
	return &this
}

// GetAlarmId returns the AlarmId field value
func (o *NotifyChangedAlarmAllOf) GetAlarmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlarmId
}

// GetAlarmIdOk returns a tuple with the AlarmId field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedAlarmAllOf) GetAlarmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmId, true
}

// SetAlarmId sets field value
func (o *NotifyChangedAlarmAllOf) SetAlarmId(v string) {
	o.AlarmId = v
}

// GetAlarmType returns the AlarmType field value
func (o *NotifyChangedAlarmAllOf) GetAlarmType() AlarmType {
	if o == nil {
		var ret AlarmType
		return ret
	}

	return o.AlarmType
}

// GetAlarmTypeOk returns a tuple with the AlarmType field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedAlarmAllOf) GetAlarmTypeOk() (*AlarmType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmType, true
}

// SetAlarmType sets field value
func (o *NotifyChangedAlarmAllOf) SetAlarmType(v AlarmType) {
	o.AlarmType = v
}

// GetProbableCause returns the ProbableCause field value
func (o *NotifyChangedAlarmAllOf) GetProbableCause() ProbableCause {
	if o == nil {
		var ret ProbableCause
		return ret
	}

	return o.ProbableCause
}

// GetProbableCauseOk returns a tuple with the ProbableCause field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedAlarmAllOf) GetProbableCauseOk() (*ProbableCause, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProbableCause, true
}

// SetProbableCause sets field value
func (o *NotifyChangedAlarmAllOf) SetProbableCause(v ProbableCause) {
	o.ProbableCause = v
}

// GetPerceivedSeverity returns the PerceivedSeverity field value
func (o *NotifyChangedAlarmAllOf) GetPerceivedSeverity() PerceivedSeverity {
	if o == nil {
		var ret PerceivedSeverity
		return ret
	}

	return o.PerceivedSeverity
}

// GetPerceivedSeverityOk returns a tuple with the PerceivedSeverity field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedAlarmAllOf) GetPerceivedSeverityOk() (*PerceivedSeverity, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PerceivedSeverity, true
}

// SetPerceivedSeverity sets field value
func (o *NotifyChangedAlarmAllOf) SetPerceivedSeverity(v PerceivedSeverity) {
	o.PerceivedSeverity = v
}

func (o NotifyChangedAlarmAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyChangedAlarmAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alarmId"] = o.AlarmId
	toSerialize["alarmType"] = o.AlarmType
	toSerialize["probableCause"] = o.ProbableCause
	toSerialize["perceivedSeverity"] = o.PerceivedSeverity
	return toSerialize, nil
}

type NullableNotifyChangedAlarmAllOf struct {
	value *NotifyChangedAlarmAllOf
	isSet bool
}

func (v NullableNotifyChangedAlarmAllOf) Get() *NotifyChangedAlarmAllOf {
	return v.value
}

func (v *NullableNotifyChangedAlarmAllOf) Set(val *NotifyChangedAlarmAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyChangedAlarmAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyChangedAlarmAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyChangedAlarmAllOf(val *NotifyChangedAlarmAllOf) *NullableNotifyChangedAlarmAllOf {
	return &NullableNotifyChangedAlarmAllOf{value: val, isSet: true}
}

func (v NullableNotifyChangedAlarmAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyChangedAlarmAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


