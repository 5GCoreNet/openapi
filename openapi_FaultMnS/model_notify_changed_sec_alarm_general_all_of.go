/*
Fault Supervision MnS

OAS 3.0.1 definition of the Fault Supervision MnS Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_FaultMnS

import (
	"encoding/json"
)

// checks if the NotifyChangedSecAlarmGeneralAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotifyChangedSecAlarmGeneralAllOf{}

// NotifyChangedSecAlarmGeneralAllOf struct for NotifyChangedSecAlarmGeneralAllOf
type NotifyChangedSecAlarmGeneralAllOf struct {
	AlarmId                 string                   `json:"alarmId"`
	AlarmType               AlarmType                `json:"alarmType"`
	ProbableCause           *ProbableCause           `json:"probableCause,omitempty"`
	PerceivedSeverity       *PerceivedSeverity       `json:"perceivedSeverity,omitempty"`
	CorrelatedNotifications []CorrelatedNotification `json:"correlatedNotifications,omitempty"`
	AdditionalText          *string                  `json:"additionalText,omitempty"`
	// The key of this map is the attribute name, and the value the attribute value.
	AdditionalInformation map[string]interface{} `json:"additionalInformation,omitempty"`
	RootCauseIndicator    *bool                  `json:"rootCauseIndicator,omitempty"`
	ServiceUser           string                 `json:"serviceUser"`
	ServiceProvider       string                 `json:"serviceProvider"`
	SecurityAlarmDetector string                 `json:"securityAlarmDetector"`
	// The key of this map is the attribute name, and the value the attribute value.
	ChangedAlarmAttributes map[string]interface{} `json:"changedAlarmAttributes,omitempty"`
}

// NewNotifyChangedSecAlarmGeneralAllOf instantiates a new NotifyChangedSecAlarmGeneralAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotifyChangedSecAlarmGeneralAllOf(alarmId string, alarmType AlarmType, serviceUser string, serviceProvider string, securityAlarmDetector string) *NotifyChangedSecAlarmGeneralAllOf {
	this := NotifyChangedSecAlarmGeneralAllOf{}
	this.AlarmId = alarmId
	this.AlarmType = alarmType
	this.ServiceUser = serviceUser
	this.ServiceProvider = serviceProvider
	this.SecurityAlarmDetector = securityAlarmDetector
	return &this
}

// NewNotifyChangedSecAlarmGeneralAllOfWithDefaults instantiates a new NotifyChangedSecAlarmGeneralAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotifyChangedSecAlarmGeneralAllOfWithDefaults() *NotifyChangedSecAlarmGeneralAllOf {
	this := NotifyChangedSecAlarmGeneralAllOf{}
	return &this
}

// GetAlarmId returns the AlarmId field value
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAlarmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AlarmId
}

// GetAlarmIdOk returns a tuple with the AlarmId field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAlarmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmId, true
}

// SetAlarmId sets field value
func (o *NotifyChangedSecAlarmGeneralAllOf) SetAlarmId(v string) {
	o.AlarmId = v
}

// GetAlarmType returns the AlarmType field value
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAlarmType() AlarmType {
	if o == nil {
		var ret AlarmType
		return ret
	}

	return o.AlarmType
}

// GetAlarmTypeOk returns a tuple with the AlarmType field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAlarmTypeOk() (*AlarmType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AlarmType, true
}

// SetAlarmType sets field value
func (o *NotifyChangedSecAlarmGeneralAllOf) SetAlarmType(v AlarmType) {
	o.AlarmType = v
}

// GetProbableCause returns the ProbableCause field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetProbableCause() ProbableCause {
	if o == nil || IsNil(o.ProbableCause) {
		var ret ProbableCause
		return ret
	}
	return *o.ProbableCause
}

// GetProbableCauseOk returns a tuple with the ProbableCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetProbableCauseOk() (*ProbableCause, bool) {
	if o == nil || IsNil(o.ProbableCause) {
		return nil, false
	}
	return o.ProbableCause, true
}

// HasProbableCause returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasProbableCause() bool {
	if o != nil && !IsNil(o.ProbableCause) {
		return true
	}

	return false
}

// SetProbableCause gets a reference to the given ProbableCause and assigns it to the ProbableCause field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetProbableCause(v ProbableCause) {
	o.ProbableCause = &v
}

// GetPerceivedSeverity returns the PerceivedSeverity field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetPerceivedSeverity() PerceivedSeverity {
	if o == nil || IsNil(o.PerceivedSeverity) {
		var ret PerceivedSeverity
		return ret
	}
	return *o.PerceivedSeverity
}

// GetPerceivedSeverityOk returns a tuple with the PerceivedSeverity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetPerceivedSeverityOk() (*PerceivedSeverity, bool) {
	if o == nil || IsNil(o.PerceivedSeverity) {
		return nil, false
	}
	return o.PerceivedSeverity, true
}

// HasPerceivedSeverity returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasPerceivedSeverity() bool {
	if o != nil && !IsNil(o.PerceivedSeverity) {
		return true
	}

	return false
}

// SetPerceivedSeverity gets a reference to the given PerceivedSeverity and assigns it to the PerceivedSeverity field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetPerceivedSeverity(v PerceivedSeverity) {
	o.PerceivedSeverity = &v
}

// GetCorrelatedNotifications returns the CorrelatedNotifications field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetCorrelatedNotifications() []CorrelatedNotification {
	if o == nil || IsNil(o.CorrelatedNotifications) {
		var ret []CorrelatedNotification
		return ret
	}
	return o.CorrelatedNotifications
}

// GetCorrelatedNotificationsOk returns a tuple with the CorrelatedNotifications field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetCorrelatedNotificationsOk() ([]CorrelatedNotification, bool) {
	if o == nil || IsNil(o.CorrelatedNotifications) {
		return nil, false
	}
	return o.CorrelatedNotifications, true
}

// HasCorrelatedNotifications returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasCorrelatedNotifications() bool {
	if o != nil && !IsNil(o.CorrelatedNotifications) {
		return true
	}

	return false
}

// SetCorrelatedNotifications gets a reference to the given []CorrelatedNotification and assigns it to the CorrelatedNotifications field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetCorrelatedNotifications(v []CorrelatedNotification) {
	o.CorrelatedNotifications = v
}

// GetAdditionalText returns the AdditionalText field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAdditionalText() string {
	if o == nil || IsNil(o.AdditionalText) {
		var ret string
		return ret
	}
	return *o.AdditionalText
}

// GetAdditionalTextOk returns a tuple with the AdditionalText field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAdditionalTextOk() (*string, bool) {
	if o == nil || IsNil(o.AdditionalText) {
		return nil, false
	}
	return o.AdditionalText, true
}

// HasAdditionalText returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasAdditionalText() bool {
	if o != nil && !IsNil(o.AdditionalText) {
		return true
	}

	return false
}

// SetAdditionalText gets a reference to the given string and assigns it to the AdditionalText field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetAdditionalText(v string) {
	o.AdditionalText = &v
}

// GetAdditionalInformation returns the AdditionalInformation field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAdditionalInformation() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalInformation) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalInformation
}

// GetAdditionalInformationOk returns a tuple with the AdditionalInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetAdditionalInformationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalInformation) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalInformation, true
}

// HasAdditionalInformation returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasAdditionalInformation() bool {
	if o != nil && !IsNil(o.AdditionalInformation) {
		return true
	}

	return false
}

// SetAdditionalInformation gets a reference to the given map[string]interface{} and assigns it to the AdditionalInformation field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetAdditionalInformation(v map[string]interface{}) {
	o.AdditionalInformation = v
}

// GetRootCauseIndicator returns the RootCauseIndicator field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetRootCauseIndicator() bool {
	if o == nil || IsNil(o.RootCauseIndicator) {
		var ret bool
		return ret
	}
	return *o.RootCauseIndicator
}

// GetRootCauseIndicatorOk returns a tuple with the RootCauseIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetRootCauseIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.RootCauseIndicator) {
		return nil, false
	}
	return o.RootCauseIndicator, true
}

// HasRootCauseIndicator returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasRootCauseIndicator() bool {
	if o != nil && !IsNil(o.RootCauseIndicator) {
		return true
	}

	return false
}

// SetRootCauseIndicator gets a reference to the given bool and assigns it to the RootCauseIndicator field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetRootCauseIndicator(v bool) {
	o.RootCauseIndicator = &v
}

// GetServiceUser returns the ServiceUser field value
func (o *NotifyChangedSecAlarmGeneralAllOf) GetServiceUser() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceUser
}

// GetServiceUserOk returns a tuple with the ServiceUser field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetServiceUserOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceUser, true
}

// SetServiceUser sets field value
func (o *NotifyChangedSecAlarmGeneralAllOf) SetServiceUser(v string) {
	o.ServiceUser = v
}

// GetServiceProvider returns the ServiceProvider field value
func (o *NotifyChangedSecAlarmGeneralAllOf) GetServiceProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceProvider
}

// GetServiceProviderOk returns a tuple with the ServiceProvider field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetServiceProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceProvider, true
}

// SetServiceProvider sets field value
func (o *NotifyChangedSecAlarmGeneralAllOf) SetServiceProvider(v string) {
	o.ServiceProvider = v
}

// GetSecurityAlarmDetector returns the SecurityAlarmDetector field value
func (o *NotifyChangedSecAlarmGeneralAllOf) GetSecurityAlarmDetector() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecurityAlarmDetector
}

// GetSecurityAlarmDetectorOk returns a tuple with the SecurityAlarmDetector field value
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetSecurityAlarmDetectorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityAlarmDetector, true
}

// SetSecurityAlarmDetector sets field value
func (o *NotifyChangedSecAlarmGeneralAllOf) SetSecurityAlarmDetector(v string) {
	o.SecurityAlarmDetector = v
}

// GetChangedAlarmAttributes returns the ChangedAlarmAttributes field value if set, zero value otherwise.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetChangedAlarmAttributes() map[string]interface{} {
	if o == nil || IsNil(o.ChangedAlarmAttributes) {
		var ret map[string]interface{}
		return ret
	}
	return o.ChangedAlarmAttributes
}

// GetChangedAlarmAttributesOk returns a tuple with the ChangedAlarmAttributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) GetChangedAlarmAttributesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.ChangedAlarmAttributes) {
		return map[string]interface{}{}, false
	}
	return o.ChangedAlarmAttributes, true
}

// HasChangedAlarmAttributes returns a boolean if a field has been set.
func (o *NotifyChangedSecAlarmGeneralAllOf) HasChangedAlarmAttributes() bool {
	if o != nil && !IsNil(o.ChangedAlarmAttributes) {
		return true
	}

	return false
}

// SetChangedAlarmAttributes gets a reference to the given map[string]interface{} and assigns it to the ChangedAlarmAttributes field.
func (o *NotifyChangedSecAlarmGeneralAllOf) SetChangedAlarmAttributes(v map[string]interface{}) {
	o.ChangedAlarmAttributes = v
}

func (o NotifyChangedSecAlarmGeneralAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotifyChangedSecAlarmGeneralAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alarmId"] = o.AlarmId
	toSerialize["alarmType"] = o.AlarmType
	if !IsNil(o.ProbableCause) {
		toSerialize["probableCause"] = o.ProbableCause
	}
	if !IsNil(o.PerceivedSeverity) {
		toSerialize["perceivedSeverity"] = o.PerceivedSeverity
	}
	if !IsNil(o.CorrelatedNotifications) {
		toSerialize["correlatedNotifications"] = o.CorrelatedNotifications
	}
	if !IsNil(o.AdditionalText) {
		toSerialize["additionalText"] = o.AdditionalText
	}
	if !IsNil(o.AdditionalInformation) {
		toSerialize["additionalInformation"] = o.AdditionalInformation
	}
	if !IsNil(o.RootCauseIndicator) {
		toSerialize["rootCauseIndicator"] = o.RootCauseIndicator
	}
	toSerialize["serviceUser"] = o.ServiceUser
	toSerialize["serviceProvider"] = o.ServiceProvider
	toSerialize["securityAlarmDetector"] = o.SecurityAlarmDetector
	if !IsNil(o.ChangedAlarmAttributes) {
		toSerialize["changedAlarmAttributes"] = o.ChangedAlarmAttributes
	}
	return toSerialize, nil
}

type NullableNotifyChangedSecAlarmGeneralAllOf struct {
	value *NotifyChangedSecAlarmGeneralAllOf
	isSet bool
}

func (v NullableNotifyChangedSecAlarmGeneralAllOf) Get() *NotifyChangedSecAlarmGeneralAllOf {
	return v.value
}

func (v *NullableNotifyChangedSecAlarmGeneralAllOf) Set(val *NotifyChangedSecAlarmGeneralAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNotifyChangedSecAlarmGeneralAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNotifyChangedSecAlarmGeneralAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotifyChangedSecAlarmGeneralAllOf(val *NotifyChangedSecAlarmGeneralAllOf) *NullableNotifyChangedSecAlarmGeneralAllOf {
	return &NullableNotifyChangedSecAlarmGeneralAllOf{value: val, isSet: true}
}

func (v NullableNotifyChangedSecAlarmGeneralAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotifyChangedSecAlarmGeneralAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
