/*
Nudm_SDM

Nudm Subscriber Data Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_SDM

import (
	"encoding/json"
	"fmt"
)

// SorUpdateIndicator struct for SorUpdateIndicator
type SorUpdateIndicator struct {
	SorUpdateIndicatorAnyOf *SorUpdateIndicatorAnyOf
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *SorUpdateIndicator) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into SorUpdateIndicatorAnyOf
	err = json.Unmarshal(data, &dst.SorUpdateIndicatorAnyOf);
	if err == nil {
		jsonSorUpdateIndicatorAnyOf, _ := json.Marshal(dst.SorUpdateIndicatorAnyOf)
		if string(jsonSorUpdateIndicatorAnyOf) == "{}" { // empty struct
			dst.SorUpdateIndicatorAnyOf = nil
		} else {
			return nil // data stored in dst.SorUpdateIndicatorAnyOf, return on the first match
		}
	} else {
		dst.SorUpdateIndicatorAnyOf = nil
	}

	// try to unmarshal JSON data into string
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(SorUpdateIndicator)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *SorUpdateIndicator) MarshalJSON() ([]byte, error) {
	if src.SorUpdateIndicatorAnyOf != nil {
		return json.Marshal(&src.SorUpdateIndicatorAnyOf)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableSorUpdateIndicator struct {
	value *SorUpdateIndicator
	isSet bool
}

func (v NullableSorUpdateIndicator) Get() *SorUpdateIndicator {
	return v.value
}

func (v *NullableSorUpdateIndicator) Set(val *SorUpdateIndicator) {
	v.value = val
	v.isSet = true
}

func (v NullableSorUpdateIndicator) IsSet() bool {
	return v.isSet
}

func (v *NullableSorUpdateIndicator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSorUpdateIndicator(val *SorUpdateIndicator) *NullableSorUpdateIndicator {
	return &NullableSorUpdateIndicator{value: val, isSet: true}
}

func (v NullableSorUpdateIndicator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSorUpdateIndicator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


