/*
Nsmsf_SMService Service API

SMSF SMService.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 2.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmsf_SMService

import (
	"encoding/json"
	"fmt"
)

// SmsDeliveryStatus Represents the Status of an SMS delivery attempt.
type SmsDeliveryStatus string

// List of SmsDeliveryStatus
const (
	PENDING SmsDeliveryStatus = "SMS_DELIVERY_PENDING"
	COMPLETED SmsDeliveryStatus = "SMS_DELIVERY_COMPLETED"
	FAILED SmsDeliveryStatus = "SMS_DELIVERY_FAILED"
	SMSF_ACCEPTED SmsDeliveryStatus = "SMS_DELIVERY_SMSF_ACCEPTED"
)

// All allowed values of SmsDeliveryStatus enum
var AllowedSmsDeliveryStatusEnumValues = []SmsDeliveryStatus{
	"SMS_DELIVERY_PENDING",
	"SMS_DELIVERY_COMPLETED",
	"SMS_DELIVERY_FAILED",
	"SMS_DELIVERY_SMSF_ACCEPTED",
}

func (v *SmsDeliveryStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SmsDeliveryStatus(value)
	for _, existing := range AllowedSmsDeliveryStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SmsDeliveryStatus", value)
}

// NewSmsDeliveryStatusFromValue returns a pointer to a valid SmsDeliveryStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSmsDeliveryStatusFromValue(v string) (*SmsDeliveryStatus, error) {
	ev := SmsDeliveryStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SmsDeliveryStatus: valid values are %v", v, AllowedSmsDeliveryStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SmsDeliveryStatus) IsValid() bool {
	for _, existing := range AllowedSmsDeliveryStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SmsDeliveryStatus value
func (v SmsDeliveryStatus) Ptr() *SmsDeliveryStatus {
	return &v
}

type NullableSmsDeliveryStatus struct {
	value *SmsDeliveryStatus
	isSet bool
}

func (v NullableSmsDeliveryStatus) Get() *SmsDeliveryStatus {
	return v.value
}

func (v *NullableSmsDeliveryStatus) Set(val *SmsDeliveryStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableSmsDeliveryStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableSmsDeliveryStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmsDeliveryStatus(val *SmsDeliveryStatus) *NullableSmsDeliveryStatus {
	return &NullableSmsDeliveryStatus{value: val, isSet: true}
}

func (v NullableSmsDeliveryStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmsDeliveryStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

