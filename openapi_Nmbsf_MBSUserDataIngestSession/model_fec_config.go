/*
nmbsf-mbs-ud-ingest

API for MBS User Data Ingest Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbsf_MBSUserDataIngestSession

import (
	"encoding/json"
)

// checks if the FECConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FECConfig{}

// FECConfig Represents FEC configuration information.
type FECConfig struct {
	// String providing an URI formatted according to RFC 3986.
	FecScheme string `json:"fecScheme"`
	FecOverHead int32 `json:"fecOverHead"`
	AdditionalParams []AddFecParams `json:"additionalParams,omitempty"`
}

// NewFECConfig instantiates a new FECConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFECConfig(fecScheme string, fecOverHead int32) *FECConfig {
	this := FECConfig{}
	this.FecScheme = fecScheme
	this.FecOverHead = fecOverHead
	return &this
}

// NewFECConfigWithDefaults instantiates a new FECConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFECConfigWithDefaults() *FECConfig {
	this := FECConfig{}
	return &this
}

// GetFecScheme returns the FecScheme field value
func (o *FECConfig) GetFecScheme() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FecScheme
}

// GetFecSchemeOk returns a tuple with the FecScheme field value
// and a boolean to check if the value has been set.
func (o *FECConfig) GetFecSchemeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FecScheme, true
}

// SetFecScheme sets field value
func (o *FECConfig) SetFecScheme(v string) {
	o.FecScheme = v
}

// GetFecOverHead returns the FecOverHead field value
func (o *FECConfig) GetFecOverHead() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FecOverHead
}

// GetFecOverHeadOk returns a tuple with the FecOverHead field value
// and a boolean to check if the value has been set.
func (o *FECConfig) GetFecOverHeadOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FecOverHead, true
}

// SetFecOverHead sets field value
func (o *FECConfig) SetFecOverHead(v int32) {
	o.FecOverHead = v
}

// GetAdditionalParams returns the AdditionalParams field value if set, zero value otherwise.
func (o *FECConfig) GetAdditionalParams() []AddFecParams {
	if o == nil || IsNil(o.AdditionalParams) {
		var ret []AddFecParams
		return ret
	}
	return o.AdditionalParams
}

// GetAdditionalParamsOk returns a tuple with the AdditionalParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FECConfig) GetAdditionalParamsOk() ([]AddFecParams, bool) {
	if o == nil || IsNil(o.AdditionalParams) {
		return nil, false
	}
	return o.AdditionalParams, true
}

// HasAdditionalParams returns a boolean if a field has been set.
func (o *FECConfig) HasAdditionalParams() bool {
	if o != nil && !IsNil(o.AdditionalParams) {
		return true
	}

	return false
}

// SetAdditionalParams gets a reference to the given []AddFecParams and assigns it to the AdditionalParams field.
func (o *FECConfig) SetAdditionalParams(v []AddFecParams) {
	o.AdditionalParams = v
}

func (o FECConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FECConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fecScheme"] = o.FecScheme
	toSerialize["fecOverHead"] = o.FecOverHead
	if !IsNil(o.AdditionalParams) {
		toSerialize["additionalParams"] = o.AdditionalParams
	}
	return toSerialize, nil
}

type NullableFECConfig struct {
	value *FECConfig
	isSet bool
}

func (v NullableFECConfig) Get() *FECConfig {
	return v.value
}

func (v *NullableFECConfig) Set(val *FECConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableFECConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableFECConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFECConfig(val *FECConfig) *NullableFECConfig {
	return &NullableFECConfig{value: val, isSet: true}
}

func (v NullableFECConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFECConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


