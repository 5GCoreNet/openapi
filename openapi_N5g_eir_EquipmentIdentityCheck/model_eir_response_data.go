/*
5G-EIR Equipment Identity Check

5G-EIR Equipment Identity Check Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N5g_eir_EquipmentIdentityCheck

import (
	"encoding/json"
)

// checks if the EirResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EirResponseData{}

// EirResponseData Represents equipment status data provided in an EIR response message.
type EirResponseData struct {
	Status EquipmentStatus `json:"status"`
}

// NewEirResponseData instantiates a new EirResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEirResponseData(status EquipmentStatus) *EirResponseData {
	this := EirResponseData{}
	this.Status = status
	return &this
}

// NewEirResponseDataWithDefaults instantiates a new EirResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEirResponseDataWithDefaults() *EirResponseData {
	this := EirResponseData{}
	return &this
}

// GetStatus returns the Status field value
func (o *EirResponseData) GetStatus() EquipmentStatus {
	if o == nil {
		var ret EquipmentStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *EirResponseData) GetStatusOk() (*EquipmentStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *EirResponseData) SetStatus(v EquipmentStatus) {
	o.Status = v
}

func (o EirResponseData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EirResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

type NullableEirResponseData struct {
	value *EirResponseData
	isSet bool
}

func (v NullableEirResponseData) Get() *EirResponseData {
	return v.value
}

func (v *NullableEirResponseData) Set(val *EirResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEirResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEirResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEirResponseData(val *EirResponseData) *NullableEirResponseData {
	return &NullableEirResponseData{value: val, isSet: true}
}

func (v NullableEirResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEirResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
