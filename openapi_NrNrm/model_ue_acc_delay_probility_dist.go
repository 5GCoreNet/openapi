/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the UeAccDelayProbilityDist type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UeAccDelayProbilityDist{}

// UeAccDelayProbilityDist struct for UeAccDelayProbilityDist
type UeAccDelayProbilityDist struct {
	TargetProbability *int32 `json:"targetProbability,omitempty"`
	Accessdelay *int32 `json:"accessdelay,omitempty"`
}

// NewUeAccDelayProbilityDist instantiates a new UeAccDelayProbilityDist object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUeAccDelayProbilityDist() *UeAccDelayProbilityDist {
	this := UeAccDelayProbilityDist{}
	return &this
}

// NewUeAccDelayProbilityDistWithDefaults instantiates a new UeAccDelayProbilityDist object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUeAccDelayProbilityDistWithDefaults() *UeAccDelayProbilityDist {
	this := UeAccDelayProbilityDist{}
	return &this
}

// GetTargetProbability returns the TargetProbability field value if set, zero value otherwise.
func (o *UeAccDelayProbilityDist) GetTargetProbability() int32 {
	if o == nil || IsNil(o.TargetProbability) {
		var ret int32
		return ret
	}
	return *o.TargetProbability
}

// GetTargetProbabilityOk returns a tuple with the TargetProbability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeAccDelayProbilityDist) GetTargetProbabilityOk() (*int32, bool) {
	if o == nil || IsNil(o.TargetProbability) {
		return nil, false
	}
	return o.TargetProbability, true
}

// HasTargetProbability returns a boolean if a field has been set.
func (o *UeAccDelayProbilityDist) HasTargetProbability() bool {
	if o != nil && !IsNil(o.TargetProbability) {
		return true
	}

	return false
}

// SetTargetProbability gets a reference to the given int32 and assigns it to the TargetProbability field.
func (o *UeAccDelayProbilityDist) SetTargetProbability(v int32) {
	o.TargetProbability = &v
}

// GetAccessdelay returns the Accessdelay field value if set, zero value otherwise.
func (o *UeAccDelayProbilityDist) GetAccessdelay() int32 {
	if o == nil || IsNil(o.Accessdelay) {
		var ret int32
		return ret
	}
	return *o.Accessdelay
}

// GetAccessdelayOk returns a tuple with the Accessdelay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UeAccDelayProbilityDist) GetAccessdelayOk() (*int32, bool) {
	if o == nil || IsNil(o.Accessdelay) {
		return nil, false
	}
	return o.Accessdelay, true
}

// HasAccessdelay returns a boolean if a field has been set.
func (o *UeAccDelayProbilityDist) HasAccessdelay() bool {
	if o != nil && !IsNil(o.Accessdelay) {
		return true
	}

	return false
}

// SetAccessdelay gets a reference to the given int32 and assigns it to the Accessdelay field.
func (o *UeAccDelayProbilityDist) SetAccessdelay(v int32) {
	o.Accessdelay = &v
}

func (o UeAccDelayProbilityDist) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UeAccDelayProbilityDist) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TargetProbability) {
		toSerialize["targetProbability"] = o.TargetProbability
	}
	if !IsNil(o.Accessdelay) {
		toSerialize["accessdelay"] = o.Accessdelay
	}
	return toSerialize, nil
}

type NullableUeAccDelayProbilityDist struct {
	value *UeAccDelayProbilityDist
	isSet bool
}

func (v NullableUeAccDelayProbilityDist) Get() *UeAccDelayProbilityDist {
	return v.value
}

func (v *NullableUeAccDelayProbilityDist) Set(val *UeAccDelayProbilityDist) {
	v.value = val
	v.isSet = true
}

func (v NullableUeAccDelayProbilityDist) IsSet() bool {
	return v.isSet
}

func (v *NullableUeAccDelayProbilityDist) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeAccDelayProbilityDist(val *UeAccDelayProbilityDist) *NullableUeAccDelayProbilityDist {
	return &NullableUeAccDelayProbilityDist{value: val, isSet: true}
}

func (v NullableUeAccDelayProbilityDist) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeAccDelayProbilityDist) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


