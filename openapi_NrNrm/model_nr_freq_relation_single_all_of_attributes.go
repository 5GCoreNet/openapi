/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the NRFreqRelationSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NRFreqRelationSingleAllOfAttributes{}

// NRFreqRelationSingleAllOfAttributes struct for NRFreqRelationSingleAllOfAttributes
type NRFreqRelationSingleAllOfAttributes struct {
	OffsetMO *QOffsetRangeList `json:"offsetMO,omitempty"`
	BlockListEntry []int32 `json:"blockListEntry,omitempty"`
	BlockListEntryIdleMode *int32 `json:"blockListEntryIdleMode,omitempty"`
	CellReselectionPriority *int32 `json:"cellReselectionPriority,omitempty"`
	CellReselectionSubPriority *float32 `json:"cellReselectionSubPriority,omitempty"`
	PMax *int32 `json:"pMax,omitempty"`
	QOffsetFreq *float32 `json:"qOffsetFreq,omitempty"`
	QQualMin *float32 `json:"qQualMin,omitempty"`
	QRxLevMin *int32 `json:"qRxLevMin,omitempty"`
	ThreshXHighP *int32 `json:"threshXHighP,omitempty"`
	ThreshXHighQ *int32 `json:"threshXHighQ,omitempty"`
	ThreshXLowP *int32 `json:"threshXLowP,omitempty"`
	ThreshXLowQ *int32 `json:"threshXLowQ,omitempty"`
	TReselectionNr *int32 `json:"tReselectionNr,omitempty"`
	TReselectionNRSfHigh *TReselectionNRSf `json:"tReselectionNRSfHigh,omitempty"`
	TReselectionNRSfMedium *TReselectionNRSf `json:"tReselectionNRSfMedium,omitempty"`
	NRFrequencyRef *string `json:"nRFrequencyRef,omitempty"`
}

// NewNRFreqRelationSingleAllOfAttributes instantiates a new NRFreqRelationSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNRFreqRelationSingleAllOfAttributes() *NRFreqRelationSingleAllOfAttributes {
	this := NRFreqRelationSingleAllOfAttributes{}
	return &this
}

// NewNRFreqRelationSingleAllOfAttributesWithDefaults instantiates a new NRFreqRelationSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNRFreqRelationSingleAllOfAttributesWithDefaults() *NRFreqRelationSingleAllOfAttributes {
	this := NRFreqRelationSingleAllOfAttributes{}
	return &this
}

// GetOffsetMO returns the OffsetMO field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetOffsetMO() QOffsetRangeList {
	if o == nil || IsNil(o.OffsetMO) {
		var ret QOffsetRangeList
		return ret
	}
	return *o.OffsetMO
}

// GetOffsetMOOk returns a tuple with the OffsetMO field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetOffsetMOOk() (*QOffsetRangeList, bool) {
	if o == nil || IsNil(o.OffsetMO) {
		return nil, false
	}
	return o.OffsetMO, true
}

// HasOffsetMO returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasOffsetMO() bool {
	if o != nil && !IsNil(o.OffsetMO) {
		return true
	}

	return false
}

// SetOffsetMO gets a reference to the given QOffsetRangeList and assigns it to the OffsetMO field.
func (o *NRFreqRelationSingleAllOfAttributes) SetOffsetMO(v QOffsetRangeList) {
	o.OffsetMO = &v
}

// GetBlockListEntry returns the BlockListEntry field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetBlockListEntry() []int32 {
	if o == nil || IsNil(o.BlockListEntry) {
		var ret []int32
		return ret
	}
	return o.BlockListEntry
}

// GetBlockListEntryOk returns a tuple with the BlockListEntry field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetBlockListEntryOk() ([]int32, bool) {
	if o == nil || IsNil(o.BlockListEntry) {
		return nil, false
	}
	return o.BlockListEntry, true
}

// HasBlockListEntry returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasBlockListEntry() bool {
	if o != nil && !IsNil(o.BlockListEntry) {
		return true
	}

	return false
}

// SetBlockListEntry gets a reference to the given []int32 and assigns it to the BlockListEntry field.
func (o *NRFreqRelationSingleAllOfAttributes) SetBlockListEntry(v []int32) {
	o.BlockListEntry = v
}

// GetBlockListEntryIdleMode returns the BlockListEntryIdleMode field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetBlockListEntryIdleMode() int32 {
	if o == nil || IsNil(o.BlockListEntryIdleMode) {
		var ret int32
		return ret
	}
	return *o.BlockListEntryIdleMode
}

// GetBlockListEntryIdleModeOk returns a tuple with the BlockListEntryIdleMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetBlockListEntryIdleModeOk() (*int32, bool) {
	if o == nil || IsNil(o.BlockListEntryIdleMode) {
		return nil, false
	}
	return o.BlockListEntryIdleMode, true
}

// HasBlockListEntryIdleMode returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasBlockListEntryIdleMode() bool {
	if o != nil && !IsNil(o.BlockListEntryIdleMode) {
		return true
	}

	return false
}

// SetBlockListEntryIdleMode gets a reference to the given int32 and assigns it to the BlockListEntryIdleMode field.
func (o *NRFreqRelationSingleAllOfAttributes) SetBlockListEntryIdleMode(v int32) {
	o.BlockListEntryIdleMode = &v
}

// GetCellReselectionPriority returns the CellReselectionPriority field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetCellReselectionPriority() int32 {
	if o == nil || IsNil(o.CellReselectionPriority) {
		var ret int32
		return ret
	}
	return *o.CellReselectionPriority
}

// GetCellReselectionPriorityOk returns a tuple with the CellReselectionPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetCellReselectionPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.CellReselectionPriority) {
		return nil, false
	}
	return o.CellReselectionPriority, true
}

// HasCellReselectionPriority returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasCellReselectionPriority() bool {
	if o != nil && !IsNil(o.CellReselectionPriority) {
		return true
	}

	return false
}

// SetCellReselectionPriority gets a reference to the given int32 and assigns it to the CellReselectionPriority field.
func (o *NRFreqRelationSingleAllOfAttributes) SetCellReselectionPriority(v int32) {
	o.CellReselectionPriority = &v
}

// GetCellReselectionSubPriority returns the CellReselectionSubPriority field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetCellReselectionSubPriority() float32 {
	if o == nil || IsNil(o.CellReselectionSubPriority) {
		var ret float32
		return ret
	}
	return *o.CellReselectionSubPriority
}

// GetCellReselectionSubPriorityOk returns a tuple with the CellReselectionSubPriority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetCellReselectionSubPriorityOk() (*float32, bool) {
	if o == nil || IsNil(o.CellReselectionSubPriority) {
		return nil, false
	}
	return o.CellReselectionSubPriority, true
}

// HasCellReselectionSubPriority returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasCellReselectionSubPriority() bool {
	if o != nil && !IsNil(o.CellReselectionSubPriority) {
		return true
	}

	return false
}

// SetCellReselectionSubPriority gets a reference to the given float32 and assigns it to the CellReselectionSubPriority field.
func (o *NRFreqRelationSingleAllOfAttributes) SetCellReselectionSubPriority(v float32) {
	o.CellReselectionSubPriority = &v
}

// GetPMax returns the PMax field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetPMax() int32 {
	if o == nil || IsNil(o.PMax) {
		var ret int32
		return ret
	}
	return *o.PMax
}

// GetPMaxOk returns a tuple with the PMax field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetPMaxOk() (*int32, bool) {
	if o == nil || IsNil(o.PMax) {
		return nil, false
	}
	return o.PMax, true
}

// HasPMax returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasPMax() bool {
	if o != nil && !IsNil(o.PMax) {
		return true
	}

	return false
}

// SetPMax gets a reference to the given int32 and assigns it to the PMax field.
func (o *NRFreqRelationSingleAllOfAttributes) SetPMax(v int32) {
	o.PMax = &v
}

// GetQOffsetFreq returns the QOffsetFreq field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetQOffsetFreq() float32 {
	if o == nil || IsNil(o.QOffsetFreq) {
		var ret float32
		return ret
	}
	return *o.QOffsetFreq
}

// GetQOffsetFreqOk returns a tuple with the QOffsetFreq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetQOffsetFreqOk() (*float32, bool) {
	if o == nil || IsNil(o.QOffsetFreq) {
		return nil, false
	}
	return o.QOffsetFreq, true
}

// HasQOffsetFreq returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasQOffsetFreq() bool {
	if o != nil && !IsNil(o.QOffsetFreq) {
		return true
	}

	return false
}

// SetQOffsetFreq gets a reference to the given float32 and assigns it to the QOffsetFreq field.
func (o *NRFreqRelationSingleAllOfAttributes) SetQOffsetFreq(v float32) {
	o.QOffsetFreq = &v
}

// GetQQualMin returns the QQualMin field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetQQualMin() float32 {
	if o == nil || IsNil(o.QQualMin) {
		var ret float32
		return ret
	}
	return *o.QQualMin
}

// GetQQualMinOk returns a tuple with the QQualMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetQQualMinOk() (*float32, bool) {
	if o == nil || IsNil(o.QQualMin) {
		return nil, false
	}
	return o.QQualMin, true
}

// HasQQualMin returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasQQualMin() bool {
	if o != nil && !IsNil(o.QQualMin) {
		return true
	}

	return false
}

// SetQQualMin gets a reference to the given float32 and assigns it to the QQualMin field.
func (o *NRFreqRelationSingleAllOfAttributes) SetQQualMin(v float32) {
	o.QQualMin = &v
}

// GetQRxLevMin returns the QRxLevMin field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetQRxLevMin() int32 {
	if o == nil || IsNil(o.QRxLevMin) {
		var ret int32
		return ret
	}
	return *o.QRxLevMin
}

// GetQRxLevMinOk returns a tuple with the QRxLevMin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetQRxLevMinOk() (*int32, bool) {
	if o == nil || IsNil(o.QRxLevMin) {
		return nil, false
	}
	return o.QRxLevMin, true
}

// HasQRxLevMin returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasQRxLevMin() bool {
	if o != nil && !IsNil(o.QRxLevMin) {
		return true
	}

	return false
}

// SetQRxLevMin gets a reference to the given int32 and assigns it to the QRxLevMin field.
func (o *NRFreqRelationSingleAllOfAttributes) SetQRxLevMin(v int32) {
	o.QRxLevMin = &v
}

// GetThreshXHighP returns the ThreshXHighP field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXHighP() int32 {
	if o == nil || IsNil(o.ThreshXHighP) {
		var ret int32
		return ret
	}
	return *o.ThreshXHighP
}

// GetThreshXHighPOk returns a tuple with the ThreshXHighP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXHighPOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreshXHighP) {
		return nil, false
	}
	return o.ThreshXHighP, true
}

// HasThreshXHighP returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasThreshXHighP() bool {
	if o != nil && !IsNil(o.ThreshXHighP) {
		return true
	}

	return false
}

// SetThreshXHighP gets a reference to the given int32 and assigns it to the ThreshXHighP field.
func (o *NRFreqRelationSingleAllOfAttributes) SetThreshXHighP(v int32) {
	o.ThreshXHighP = &v
}

// GetThreshXHighQ returns the ThreshXHighQ field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXHighQ() int32 {
	if o == nil || IsNil(o.ThreshXHighQ) {
		var ret int32
		return ret
	}
	return *o.ThreshXHighQ
}

// GetThreshXHighQOk returns a tuple with the ThreshXHighQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXHighQOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreshXHighQ) {
		return nil, false
	}
	return o.ThreshXHighQ, true
}

// HasThreshXHighQ returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasThreshXHighQ() bool {
	if o != nil && !IsNil(o.ThreshXHighQ) {
		return true
	}

	return false
}

// SetThreshXHighQ gets a reference to the given int32 and assigns it to the ThreshXHighQ field.
func (o *NRFreqRelationSingleAllOfAttributes) SetThreshXHighQ(v int32) {
	o.ThreshXHighQ = &v
}

// GetThreshXLowP returns the ThreshXLowP field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXLowP() int32 {
	if o == nil || IsNil(o.ThreshXLowP) {
		var ret int32
		return ret
	}
	return *o.ThreshXLowP
}

// GetThreshXLowPOk returns a tuple with the ThreshXLowP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXLowPOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreshXLowP) {
		return nil, false
	}
	return o.ThreshXLowP, true
}

// HasThreshXLowP returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasThreshXLowP() bool {
	if o != nil && !IsNil(o.ThreshXLowP) {
		return true
	}

	return false
}

// SetThreshXLowP gets a reference to the given int32 and assigns it to the ThreshXLowP field.
func (o *NRFreqRelationSingleAllOfAttributes) SetThreshXLowP(v int32) {
	o.ThreshXLowP = &v
}

// GetThreshXLowQ returns the ThreshXLowQ field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXLowQ() int32 {
	if o == nil || IsNil(o.ThreshXLowQ) {
		var ret int32
		return ret
	}
	return *o.ThreshXLowQ
}

// GetThreshXLowQOk returns a tuple with the ThreshXLowQ field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetThreshXLowQOk() (*int32, bool) {
	if o == nil || IsNil(o.ThreshXLowQ) {
		return nil, false
	}
	return o.ThreshXLowQ, true
}

// HasThreshXLowQ returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasThreshXLowQ() bool {
	if o != nil && !IsNil(o.ThreshXLowQ) {
		return true
	}

	return false
}

// SetThreshXLowQ gets a reference to the given int32 and assigns it to the ThreshXLowQ field.
func (o *NRFreqRelationSingleAllOfAttributes) SetThreshXLowQ(v int32) {
	o.ThreshXLowQ = &v
}

// GetTReselectionNr returns the TReselectionNr field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNr() int32 {
	if o == nil || IsNil(o.TReselectionNr) {
		var ret int32
		return ret
	}
	return *o.TReselectionNr
}

// GetTReselectionNrOk returns a tuple with the TReselectionNr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNrOk() (*int32, bool) {
	if o == nil || IsNil(o.TReselectionNr) {
		return nil, false
	}
	return o.TReselectionNr, true
}

// HasTReselectionNr returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasTReselectionNr() bool {
	if o != nil && !IsNil(o.TReselectionNr) {
		return true
	}

	return false
}

// SetTReselectionNr gets a reference to the given int32 and assigns it to the TReselectionNr field.
func (o *NRFreqRelationSingleAllOfAttributes) SetTReselectionNr(v int32) {
	o.TReselectionNr = &v
}

// GetTReselectionNRSfHigh returns the TReselectionNRSfHigh field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNRSfHigh() TReselectionNRSf {
	if o == nil || IsNil(o.TReselectionNRSfHigh) {
		var ret TReselectionNRSf
		return ret
	}
	return *o.TReselectionNRSfHigh
}

// GetTReselectionNRSfHighOk returns a tuple with the TReselectionNRSfHigh field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNRSfHighOk() (*TReselectionNRSf, bool) {
	if o == nil || IsNil(o.TReselectionNRSfHigh) {
		return nil, false
	}
	return o.TReselectionNRSfHigh, true
}

// HasTReselectionNRSfHigh returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasTReselectionNRSfHigh() bool {
	if o != nil && !IsNil(o.TReselectionNRSfHigh) {
		return true
	}

	return false
}

// SetTReselectionNRSfHigh gets a reference to the given TReselectionNRSf and assigns it to the TReselectionNRSfHigh field.
func (o *NRFreqRelationSingleAllOfAttributes) SetTReselectionNRSfHigh(v TReselectionNRSf) {
	o.TReselectionNRSfHigh = &v
}

// GetTReselectionNRSfMedium returns the TReselectionNRSfMedium field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNRSfMedium() TReselectionNRSf {
	if o == nil || IsNil(o.TReselectionNRSfMedium) {
		var ret TReselectionNRSf
		return ret
	}
	return *o.TReselectionNRSfMedium
}

// GetTReselectionNRSfMediumOk returns a tuple with the TReselectionNRSfMedium field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetTReselectionNRSfMediumOk() (*TReselectionNRSf, bool) {
	if o == nil || IsNil(o.TReselectionNRSfMedium) {
		return nil, false
	}
	return o.TReselectionNRSfMedium, true
}

// HasTReselectionNRSfMedium returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasTReselectionNRSfMedium() bool {
	if o != nil && !IsNil(o.TReselectionNRSfMedium) {
		return true
	}

	return false
}

// SetTReselectionNRSfMedium gets a reference to the given TReselectionNRSf and assigns it to the TReselectionNRSfMedium field.
func (o *NRFreqRelationSingleAllOfAttributes) SetTReselectionNRSfMedium(v TReselectionNRSf) {
	o.TReselectionNRSfMedium = &v
}

// GetNRFrequencyRef returns the NRFrequencyRef field value if set, zero value otherwise.
func (o *NRFreqRelationSingleAllOfAttributes) GetNRFrequencyRef() string {
	if o == nil || IsNil(o.NRFrequencyRef) {
		var ret string
		return ret
	}
	return *o.NRFrequencyRef
}

// GetNRFrequencyRefOk returns a tuple with the NRFrequencyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRFreqRelationSingleAllOfAttributes) GetNRFrequencyRefOk() (*string, bool) {
	if o == nil || IsNil(o.NRFrequencyRef) {
		return nil, false
	}
	return o.NRFrequencyRef, true
}

// HasNRFrequencyRef returns a boolean if a field has been set.
func (o *NRFreqRelationSingleAllOfAttributes) HasNRFrequencyRef() bool {
	if o != nil && !IsNil(o.NRFrequencyRef) {
		return true
	}

	return false
}

// SetNRFrequencyRef gets a reference to the given string and assigns it to the NRFrequencyRef field.
func (o *NRFreqRelationSingleAllOfAttributes) SetNRFrequencyRef(v string) {
	o.NRFrequencyRef = &v
}

func (o NRFreqRelationSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NRFreqRelationSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OffsetMO) {
		toSerialize["offsetMO"] = o.OffsetMO
	}
	if !IsNil(o.BlockListEntry) {
		toSerialize["blockListEntry"] = o.BlockListEntry
	}
	if !IsNil(o.BlockListEntryIdleMode) {
		toSerialize["blockListEntryIdleMode"] = o.BlockListEntryIdleMode
	}
	if !IsNil(o.CellReselectionPriority) {
		toSerialize["cellReselectionPriority"] = o.CellReselectionPriority
	}
	if !IsNil(o.CellReselectionSubPriority) {
		toSerialize["cellReselectionSubPriority"] = o.CellReselectionSubPriority
	}
	if !IsNil(o.PMax) {
		toSerialize["pMax"] = o.PMax
	}
	if !IsNil(o.QOffsetFreq) {
		toSerialize["qOffsetFreq"] = o.QOffsetFreq
	}
	if !IsNil(o.QQualMin) {
		toSerialize["qQualMin"] = o.QQualMin
	}
	if !IsNil(o.QRxLevMin) {
		toSerialize["qRxLevMin"] = o.QRxLevMin
	}
	if !IsNil(o.ThreshXHighP) {
		toSerialize["threshXHighP"] = o.ThreshXHighP
	}
	if !IsNil(o.ThreshXHighQ) {
		toSerialize["threshXHighQ"] = o.ThreshXHighQ
	}
	if !IsNil(o.ThreshXLowP) {
		toSerialize["threshXLowP"] = o.ThreshXLowP
	}
	if !IsNil(o.ThreshXLowQ) {
		toSerialize["threshXLowQ"] = o.ThreshXLowQ
	}
	if !IsNil(o.TReselectionNr) {
		toSerialize["tReselectionNr"] = o.TReselectionNr
	}
	if !IsNil(o.TReselectionNRSfHigh) {
		toSerialize["tReselectionNRSfHigh"] = o.TReselectionNRSfHigh
	}
	if !IsNil(o.TReselectionNRSfMedium) {
		toSerialize["tReselectionNRSfMedium"] = o.TReselectionNRSfMedium
	}
	if !IsNil(o.NRFrequencyRef) {
		toSerialize["nRFrequencyRef"] = o.NRFrequencyRef
	}
	return toSerialize, nil
}

type NullableNRFreqRelationSingleAllOfAttributes struct {
	value *NRFreqRelationSingleAllOfAttributes
	isSet bool
}

func (v NullableNRFreqRelationSingleAllOfAttributes) Get() *NRFreqRelationSingleAllOfAttributes {
	return v.value
}

func (v *NullableNRFreqRelationSingleAllOfAttributes) Set(val *NRFreqRelationSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableNRFreqRelationSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableNRFreqRelationSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNRFreqRelationSingleAllOfAttributes(val *NRFreqRelationSingleAllOfAttributes) *NullableNRFreqRelationSingleAllOfAttributes {
	return &NullableNRFreqRelationSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableNRFreqRelationSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNRFreqRelationSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


