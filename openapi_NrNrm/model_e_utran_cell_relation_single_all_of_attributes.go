/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the EUtranCellRelationSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EUtranCellRelationSingleAllOfAttributes{}

// EUtranCellRelationSingleAllOfAttributes struct for EUtranCellRelationSingleAllOfAttributes
type EUtranCellRelationSingleAllOfAttributes struct {
	ManagedFunctionAttr
	AdjacentEUtranCellRef *string `json:"adjacentEUtranCellRef,omitempty"`
}

// NewEUtranCellRelationSingleAllOfAttributes instantiates a new EUtranCellRelationSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEUtranCellRelationSingleAllOfAttributes() *EUtranCellRelationSingleAllOfAttributes {
	this := EUtranCellRelationSingleAllOfAttributes{}
	return &this
}

// NewEUtranCellRelationSingleAllOfAttributesWithDefaults instantiates a new EUtranCellRelationSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEUtranCellRelationSingleAllOfAttributesWithDefaults() *EUtranCellRelationSingleAllOfAttributes {
	this := EUtranCellRelationSingleAllOfAttributes{}
	return &this
}

// GetAdjacentEUtranCellRef returns the AdjacentEUtranCellRef field value if set, zero value otherwise.
func (o *EUtranCellRelationSingleAllOfAttributes) GetAdjacentEUtranCellRef() string {
	if o == nil || IsNil(o.AdjacentEUtranCellRef) {
		var ret string
		return ret
	}
	return *o.AdjacentEUtranCellRef
}

// GetAdjacentEUtranCellRefOk returns a tuple with the AdjacentEUtranCellRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EUtranCellRelationSingleAllOfAttributes) GetAdjacentEUtranCellRefOk() (*string, bool) {
	if o == nil || IsNil(o.AdjacentEUtranCellRef) {
		return nil, false
	}
	return o.AdjacentEUtranCellRef, true
}

// HasAdjacentEUtranCellRef returns a boolean if a field has been set.
func (o *EUtranCellRelationSingleAllOfAttributes) HasAdjacentEUtranCellRef() bool {
	if o != nil && !IsNil(o.AdjacentEUtranCellRef) {
		return true
	}

	return false
}

// SetAdjacentEUtranCellRef gets a reference to the given string and assigns it to the AdjacentEUtranCellRef field.
func (o *EUtranCellRelationSingleAllOfAttributes) SetAdjacentEUtranCellRef(v string) {
	o.AdjacentEUtranCellRef = &v
}

func (o EUtranCellRelationSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EUtranCellRelationSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedManagedFunctionAttr, errManagedFunctionAttr := json.Marshal(o.ManagedFunctionAttr)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	errManagedFunctionAttr = json.Unmarshal([]byte(serializedManagedFunctionAttr), &toSerialize)
	if errManagedFunctionAttr != nil {
		return map[string]interface{}{}, errManagedFunctionAttr
	}
	if !IsNil(o.AdjacentEUtranCellRef) {
		toSerialize["adjacentEUtranCellRef"] = o.AdjacentEUtranCellRef
	}
	return toSerialize, nil
}

type NullableEUtranCellRelationSingleAllOfAttributes struct {
	value *EUtranCellRelationSingleAllOfAttributes
	isSet bool
}

func (v NullableEUtranCellRelationSingleAllOfAttributes) Get() *EUtranCellRelationSingleAllOfAttributes {
	return v.value
}

func (v *NullableEUtranCellRelationSingleAllOfAttributes) Set(val *EUtranCellRelationSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableEUtranCellRelationSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableEUtranCellRelationSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEUtranCellRelationSingleAllOfAttributes(val *EUtranCellRelationSingleAllOfAttributes) *NullableEUtranCellRelationSingleAllOfAttributes {
	return &NullableEUtranCellRelationSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableEUtranCellRelationSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEUtranCellRelationSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
