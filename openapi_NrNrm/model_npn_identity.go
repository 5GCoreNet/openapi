/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the NpnIdentity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpnIdentity{}

// NpnIdentity struct for NpnIdentity
type NpnIdentity struct {
	PlmnId *PlmnId `json:"plmnId,omitempty"`
	CagidList *string `json:"cagidList,omitempty"`
	NidList *string `json:"nidList,omitempty"`
}

// NewNpnIdentity instantiates a new NpnIdentity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpnIdentity() *NpnIdentity {
	this := NpnIdentity{}
	return &this
}

// NewNpnIdentityWithDefaults instantiates a new NpnIdentity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpnIdentityWithDefaults() *NpnIdentity {
	this := NpnIdentity{}
	return &this
}

// GetPlmnId returns the PlmnId field value if set, zero value otherwise.
func (o *NpnIdentity) GetPlmnId() PlmnId {
	if o == nil || isNil(o.PlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpnIdentity) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil || isNil(o.PlmnId) {
		return nil, false
	}
	return o.PlmnId, true
}

// HasPlmnId returns a boolean if a field has been set.
func (o *NpnIdentity) HasPlmnId() bool {
	if o != nil && !isNil(o.PlmnId) {
		return true
	}

	return false
}

// SetPlmnId gets a reference to the given PlmnId and assigns it to the PlmnId field.
func (o *NpnIdentity) SetPlmnId(v PlmnId) {
	o.PlmnId = &v
}

// GetCagidList returns the CagidList field value if set, zero value otherwise.
func (o *NpnIdentity) GetCagidList() string {
	if o == nil || isNil(o.CagidList) {
		var ret string
		return ret
	}
	return *o.CagidList
}

// GetCagidListOk returns a tuple with the CagidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpnIdentity) GetCagidListOk() (*string, bool) {
	if o == nil || isNil(o.CagidList) {
		return nil, false
	}
	return o.CagidList, true
}

// HasCagidList returns a boolean if a field has been set.
func (o *NpnIdentity) HasCagidList() bool {
	if o != nil && !isNil(o.CagidList) {
		return true
	}

	return false
}

// SetCagidList gets a reference to the given string and assigns it to the CagidList field.
func (o *NpnIdentity) SetCagidList(v string) {
	o.CagidList = &v
}

// GetNidList returns the NidList field value if set, zero value otherwise.
func (o *NpnIdentity) GetNidList() string {
	if o == nil || isNil(o.NidList) {
		var ret string
		return ret
	}
	return *o.NidList
}

// GetNidListOk returns a tuple with the NidList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpnIdentity) GetNidListOk() (*string, bool) {
	if o == nil || isNil(o.NidList) {
		return nil, false
	}
	return o.NidList, true
}

// HasNidList returns a boolean if a field has been set.
func (o *NpnIdentity) HasNidList() bool {
	if o != nil && !isNil(o.NidList) {
		return true
	}

	return false
}

// SetNidList gets a reference to the given string and assigns it to the NidList field.
func (o *NpnIdentity) SetNidList(v string) {
	o.NidList = &v
}

func (o NpnIdentity) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpnIdentity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.PlmnId) {
		toSerialize["plmnId"] = o.PlmnId
	}
	if !isNil(o.CagidList) {
		toSerialize["cagidList"] = o.CagidList
	}
	if !isNil(o.NidList) {
		toSerialize["nidList"] = o.NidList
	}
	return toSerialize, nil
}

type NullableNpnIdentity struct {
	value *NpnIdentity
	isSet bool
}

func (v NullableNpnIdentity) Get() *NpnIdentity {
	return v.value
}

func (v *NullableNpnIdentity) Set(val *NpnIdentity) {
	v.value = val
	v.isSet = true
}

func (v NullableNpnIdentity) IsSet() bool {
	return v.isSet
}

func (v *NullableNpnIdentity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpnIdentity(val *NpnIdentity) *NullableNpnIdentity {
	return &NullableNpnIdentity{value: val, isSet: true}
}

func (v NullableNpnIdentity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpnIdentity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


