/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the NrCellCuSingleAllOfAttributesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NrCellCuSingleAllOfAttributesAllOf{}

// NrCellCuSingleAllOfAttributesAllOf struct for NrCellCuSingleAllOfAttributesAllOf
type NrCellCuSingleAllOfAttributesAllOf struct {
	CellLocalId *int32 `json:"cellLocalId,omitempty"`
	PlmnInfoList []PlmnInfo `json:"plmnInfoList,omitempty"`
	NRFrequencyRef *string `json:"nRFrequencyRef,omitempty"`
}

// NewNrCellCuSingleAllOfAttributesAllOf instantiates a new NrCellCuSingleAllOfAttributesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNrCellCuSingleAllOfAttributesAllOf() *NrCellCuSingleAllOfAttributesAllOf {
	this := NrCellCuSingleAllOfAttributesAllOf{}
	return &this
}

// NewNrCellCuSingleAllOfAttributesAllOfWithDefaults instantiates a new NrCellCuSingleAllOfAttributesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNrCellCuSingleAllOfAttributesAllOfWithDefaults() *NrCellCuSingleAllOfAttributesAllOf {
	this := NrCellCuSingleAllOfAttributesAllOf{}
	return &this
}

// GetCellLocalId returns the CellLocalId field value if set, zero value otherwise.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetCellLocalId() int32 {
	if o == nil || IsNil(o.CellLocalId) {
		var ret int32
		return ret
	}
	return *o.CellLocalId
}

// GetCellLocalIdOk returns a tuple with the CellLocalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetCellLocalIdOk() (*int32, bool) {
	if o == nil || IsNil(o.CellLocalId) {
		return nil, false
	}
	return o.CellLocalId, true
}

// HasCellLocalId returns a boolean if a field has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) HasCellLocalId() bool {
	if o != nil && !IsNil(o.CellLocalId) {
		return true
	}

	return false
}

// SetCellLocalId gets a reference to the given int32 and assigns it to the CellLocalId field.
func (o *NrCellCuSingleAllOfAttributesAllOf) SetCellLocalId(v int32) {
	o.CellLocalId = &v
}

// GetPlmnInfoList returns the PlmnInfoList field value if set, zero value otherwise.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetPlmnInfoList() []PlmnInfo {
	if o == nil || IsNil(o.PlmnInfoList) {
		var ret []PlmnInfo
		return ret
	}
	return o.PlmnInfoList
}

// GetPlmnInfoListOk returns a tuple with the PlmnInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetPlmnInfoListOk() ([]PlmnInfo, bool) {
	if o == nil || IsNil(o.PlmnInfoList) {
		return nil, false
	}
	return o.PlmnInfoList, true
}

// HasPlmnInfoList returns a boolean if a field has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) HasPlmnInfoList() bool {
	if o != nil && !IsNil(o.PlmnInfoList) {
		return true
	}

	return false
}

// SetPlmnInfoList gets a reference to the given []PlmnInfo and assigns it to the PlmnInfoList field.
func (o *NrCellCuSingleAllOfAttributesAllOf) SetPlmnInfoList(v []PlmnInfo) {
	o.PlmnInfoList = v
}

// GetNRFrequencyRef returns the NRFrequencyRef field value if set, zero value otherwise.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetNRFrequencyRef() string {
	if o == nil || IsNil(o.NRFrequencyRef) {
		var ret string
		return ret
	}
	return *o.NRFrequencyRef
}

// GetNRFrequencyRefOk returns a tuple with the NRFrequencyRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) GetNRFrequencyRefOk() (*string, bool) {
	if o == nil || IsNil(o.NRFrequencyRef) {
		return nil, false
	}
	return o.NRFrequencyRef, true
}

// HasNRFrequencyRef returns a boolean if a field has been set.
func (o *NrCellCuSingleAllOfAttributesAllOf) HasNRFrequencyRef() bool {
	if o != nil && !IsNil(o.NRFrequencyRef) {
		return true
	}

	return false
}

// SetNRFrequencyRef gets a reference to the given string and assigns it to the NRFrequencyRef field.
func (o *NrCellCuSingleAllOfAttributesAllOf) SetNRFrequencyRef(v string) {
	o.NRFrequencyRef = &v
}

func (o NrCellCuSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NrCellCuSingleAllOfAttributesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CellLocalId) {
		toSerialize["cellLocalId"] = o.CellLocalId
	}
	if !IsNil(o.PlmnInfoList) {
		toSerialize["plmnInfoList"] = o.PlmnInfoList
	}
	if !IsNil(o.NRFrequencyRef) {
		toSerialize["nRFrequencyRef"] = o.NRFrequencyRef
	}
	return toSerialize, nil
}

type NullableNrCellCuSingleAllOfAttributesAllOf struct {
	value *NrCellCuSingleAllOfAttributesAllOf
	isSet bool
}

func (v NullableNrCellCuSingleAllOfAttributesAllOf) Get() *NrCellCuSingleAllOfAttributesAllOf {
	return v.value
}

func (v *NullableNrCellCuSingleAllOfAttributesAllOf) Set(val *NrCellCuSingleAllOfAttributesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNrCellCuSingleAllOfAttributesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNrCellCuSingleAllOfAttributesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNrCellCuSingleAllOfAttributesAllOf(val *NrCellCuSingleAllOfAttributesAllOf) *NullableNrCellCuSingleAllOfAttributesAllOf {
	return &NullableNrCellCuSingleAllOfAttributesAllOf{value: val, isSet: true}
}

func (v NullableNrCellCuSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNrCellCuSingleAllOfAttributesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


