/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the GnbDuFunctionSingleAllOf1 type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GnbDuFunctionSingleAllOf1{}

// GnbDuFunctionSingleAllOf1 struct for GnbDuFunctionSingleAllOf1
type GnbDuFunctionSingleAllOf1 struct {
	RRMPolicyRatio            []RRMPolicyRatioSingle           `json:"RRMPolicyRatio,omitempty"`
	NrCellDu                  []NrCellDuSingle                 `json:"NrCellDu,omitempty"`
	BwpMultiple               []BwpSingle                      `json:"Bwp-Multiple,omitempty"`
	NrSectorCarrierMultiple   []NrSectorCarrierSingle          `json:"NrSectorCarrier-Multiple,omitempty"`
	EPF1C                     *EPF1CSingle                     `json:"EP_F1C,omitempty"`
	EPF1U                     []EPF1USingle                    `json:"EP_F1U,omitempty"`
	DRACHOptimizationFunction *DRACHOptimizationFunctionSingle `json:"DRACHOptimizationFunction,omitempty"`
	OperatorDU                []OperatorDuSingle               `json:"OperatorDU,omitempty"`
	BWPSet                    []BWPSetSingle                   `json:"BWPSet,omitempty"`
}

// NewGnbDuFunctionSingleAllOf1 instantiates a new GnbDuFunctionSingleAllOf1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGnbDuFunctionSingleAllOf1() *GnbDuFunctionSingleAllOf1 {
	this := GnbDuFunctionSingleAllOf1{}
	return &this
}

// NewGnbDuFunctionSingleAllOf1WithDefaults instantiates a new GnbDuFunctionSingleAllOf1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGnbDuFunctionSingleAllOf1WithDefaults() *GnbDuFunctionSingleAllOf1 {
	this := GnbDuFunctionSingleAllOf1{}
	return &this
}

// GetRRMPolicyRatio returns the RRMPolicyRatio field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetRRMPolicyRatio() []RRMPolicyRatioSingle {
	if o == nil || IsNil(o.RRMPolicyRatio) {
		var ret []RRMPolicyRatioSingle
		return ret
	}
	return o.RRMPolicyRatio
}

// GetRRMPolicyRatioOk returns a tuple with the RRMPolicyRatio field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetRRMPolicyRatioOk() ([]RRMPolicyRatioSingle, bool) {
	if o == nil || IsNil(o.RRMPolicyRatio) {
		return nil, false
	}
	return o.RRMPolicyRatio, true
}

// HasRRMPolicyRatio returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasRRMPolicyRatio() bool {
	if o != nil && !IsNil(o.RRMPolicyRatio) {
		return true
	}

	return false
}

// SetRRMPolicyRatio gets a reference to the given []RRMPolicyRatioSingle and assigns it to the RRMPolicyRatio field.
func (o *GnbDuFunctionSingleAllOf1) SetRRMPolicyRatio(v []RRMPolicyRatioSingle) {
	o.RRMPolicyRatio = v
}

// GetNrCellDu returns the NrCellDu field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetNrCellDu() []NrCellDuSingle {
	if o == nil || IsNil(o.NrCellDu) {
		var ret []NrCellDuSingle
		return ret
	}
	return o.NrCellDu
}

// GetNrCellDuOk returns a tuple with the NrCellDu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetNrCellDuOk() ([]NrCellDuSingle, bool) {
	if o == nil || IsNil(o.NrCellDu) {
		return nil, false
	}
	return o.NrCellDu, true
}

// HasNrCellDu returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasNrCellDu() bool {
	if o != nil && !IsNil(o.NrCellDu) {
		return true
	}

	return false
}

// SetNrCellDu gets a reference to the given []NrCellDuSingle and assigns it to the NrCellDu field.
func (o *GnbDuFunctionSingleAllOf1) SetNrCellDu(v []NrCellDuSingle) {
	o.NrCellDu = v
}

// GetBwpMultiple returns the BwpMultiple field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetBwpMultiple() []BwpSingle {
	if o == nil || IsNil(o.BwpMultiple) {
		var ret []BwpSingle
		return ret
	}
	return o.BwpMultiple
}

// GetBwpMultipleOk returns a tuple with the BwpMultiple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetBwpMultipleOk() ([]BwpSingle, bool) {
	if o == nil || IsNil(o.BwpMultiple) {
		return nil, false
	}
	return o.BwpMultiple, true
}

// HasBwpMultiple returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasBwpMultiple() bool {
	if o != nil && !IsNil(o.BwpMultiple) {
		return true
	}

	return false
}

// SetBwpMultiple gets a reference to the given []BwpSingle and assigns it to the BwpMultiple field.
func (o *GnbDuFunctionSingleAllOf1) SetBwpMultiple(v []BwpSingle) {
	o.BwpMultiple = v
}

// GetNrSectorCarrierMultiple returns the NrSectorCarrierMultiple field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetNrSectorCarrierMultiple() []NrSectorCarrierSingle {
	if o == nil || IsNil(o.NrSectorCarrierMultiple) {
		var ret []NrSectorCarrierSingle
		return ret
	}
	return o.NrSectorCarrierMultiple
}

// GetNrSectorCarrierMultipleOk returns a tuple with the NrSectorCarrierMultiple field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetNrSectorCarrierMultipleOk() ([]NrSectorCarrierSingle, bool) {
	if o == nil || IsNil(o.NrSectorCarrierMultiple) {
		return nil, false
	}
	return o.NrSectorCarrierMultiple, true
}

// HasNrSectorCarrierMultiple returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasNrSectorCarrierMultiple() bool {
	if o != nil && !IsNil(o.NrSectorCarrierMultiple) {
		return true
	}

	return false
}

// SetNrSectorCarrierMultiple gets a reference to the given []NrSectorCarrierSingle and assigns it to the NrSectorCarrierMultiple field.
func (o *GnbDuFunctionSingleAllOf1) SetNrSectorCarrierMultiple(v []NrSectorCarrierSingle) {
	o.NrSectorCarrierMultiple = v
}

// GetEPF1C returns the EPF1C field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetEPF1C() EPF1CSingle {
	if o == nil || IsNil(o.EPF1C) {
		var ret EPF1CSingle
		return ret
	}
	return *o.EPF1C
}

// GetEPF1COk returns a tuple with the EPF1C field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetEPF1COk() (*EPF1CSingle, bool) {
	if o == nil || IsNil(o.EPF1C) {
		return nil, false
	}
	return o.EPF1C, true
}

// HasEPF1C returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasEPF1C() bool {
	if o != nil && !IsNil(o.EPF1C) {
		return true
	}

	return false
}

// SetEPF1C gets a reference to the given EPF1CSingle and assigns it to the EPF1C field.
func (o *GnbDuFunctionSingleAllOf1) SetEPF1C(v EPF1CSingle) {
	o.EPF1C = &v
}

// GetEPF1U returns the EPF1U field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetEPF1U() []EPF1USingle {
	if o == nil || IsNil(o.EPF1U) {
		var ret []EPF1USingle
		return ret
	}
	return o.EPF1U
}

// GetEPF1UOk returns a tuple with the EPF1U field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetEPF1UOk() ([]EPF1USingle, bool) {
	if o == nil || IsNil(o.EPF1U) {
		return nil, false
	}
	return o.EPF1U, true
}

// HasEPF1U returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasEPF1U() bool {
	if o != nil && !IsNil(o.EPF1U) {
		return true
	}

	return false
}

// SetEPF1U gets a reference to the given []EPF1USingle and assigns it to the EPF1U field.
func (o *GnbDuFunctionSingleAllOf1) SetEPF1U(v []EPF1USingle) {
	o.EPF1U = v
}

// GetDRACHOptimizationFunction returns the DRACHOptimizationFunction field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetDRACHOptimizationFunction() DRACHOptimizationFunctionSingle {
	if o == nil || IsNil(o.DRACHOptimizationFunction) {
		var ret DRACHOptimizationFunctionSingle
		return ret
	}
	return *o.DRACHOptimizationFunction
}

// GetDRACHOptimizationFunctionOk returns a tuple with the DRACHOptimizationFunction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetDRACHOptimizationFunctionOk() (*DRACHOptimizationFunctionSingle, bool) {
	if o == nil || IsNil(o.DRACHOptimizationFunction) {
		return nil, false
	}
	return o.DRACHOptimizationFunction, true
}

// HasDRACHOptimizationFunction returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasDRACHOptimizationFunction() bool {
	if o != nil && !IsNil(o.DRACHOptimizationFunction) {
		return true
	}

	return false
}

// SetDRACHOptimizationFunction gets a reference to the given DRACHOptimizationFunctionSingle and assigns it to the DRACHOptimizationFunction field.
func (o *GnbDuFunctionSingleAllOf1) SetDRACHOptimizationFunction(v DRACHOptimizationFunctionSingle) {
	o.DRACHOptimizationFunction = &v
}

// GetOperatorDU returns the OperatorDU field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetOperatorDU() []OperatorDuSingle {
	if o == nil || IsNil(o.OperatorDU) {
		var ret []OperatorDuSingle
		return ret
	}
	return o.OperatorDU
}

// GetOperatorDUOk returns a tuple with the OperatorDU field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetOperatorDUOk() ([]OperatorDuSingle, bool) {
	if o == nil || IsNil(o.OperatorDU) {
		return nil, false
	}
	return o.OperatorDU, true
}

// HasOperatorDU returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasOperatorDU() bool {
	if o != nil && !IsNil(o.OperatorDU) {
		return true
	}

	return false
}

// SetOperatorDU gets a reference to the given []OperatorDuSingle and assigns it to the OperatorDU field.
func (o *GnbDuFunctionSingleAllOf1) SetOperatorDU(v []OperatorDuSingle) {
	o.OperatorDU = v
}

// GetBWPSet returns the BWPSet field value if set, zero value otherwise.
func (o *GnbDuFunctionSingleAllOf1) GetBWPSet() []BWPSetSingle {
	if o == nil || IsNil(o.BWPSet) {
		var ret []BWPSetSingle
		return ret
	}
	return o.BWPSet
}

// GetBWPSetOk returns a tuple with the BWPSet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbDuFunctionSingleAllOf1) GetBWPSetOk() ([]BWPSetSingle, bool) {
	if o == nil || IsNil(o.BWPSet) {
		return nil, false
	}
	return o.BWPSet, true
}

// HasBWPSet returns a boolean if a field has been set.
func (o *GnbDuFunctionSingleAllOf1) HasBWPSet() bool {
	if o != nil && !IsNil(o.BWPSet) {
		return true
	}

	return false
}

// SetBWPSet gets a reference to the given []BWPSetSingle and assigns it to the BWPSet field.
func (o *GnbDuFunctionSingleAllOf1) SetBWPSet(v []BWPSetSingle) {
	o.BWPSet = v
}

func (o GnbDuFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GnbDuFunctionSingleAllOf1) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RRMPolicyRatio) {
		toSerialize["RRMPolicyRatio"] = o.RRMPolicyRatio
	}
	if !IsNil(o.NrCellDu) {
		toSerialize["NrCellDu"] = o.NrCellDu
	}
	if !IsNil(o.BwpMultiple) {
		toSerialize["Bwp-Multiple"] = o.BwpMultiple
	}
	if !IsNil(o.NrSectorCarrierMultiple) {
		toSerialize["NrSectorCarrier-Multiple"] = o.NrSectorCarrierMultiple
	}
	if !IsNil(o.EPF1C) {
		toSerialize["EP_F1C"] = o.EPF1C
	}
	if !IsNil(o.EPF1U) {
		toSerialize["EP_F1U"] = o.EPF1U
	}
	if !IsNil(o.DRACHOptimizationFunction) {
		toSerialize["DRACHOptimizationFunction"] = o.DRACHOptimizationFunction
	}
	if !IsNil(o.OperatorDU) {
		toSerialize["OperatorDU"] = o.OperatorDU
	}
	if !IsNil(o.BWPSet) {
		toSerialize["BWPSet"] = o.BWPSet
	}
	return toSerialize, nil
}

type NullableGnbDuFunctionSingleAllOf1 struct {
	value *GnbDuFunctionSingleAllOf1
	isSet bool
}

func (v NullableGnbDuFunctionSingleAllOf1) Get() *GnbDuFunctionSingleAllOf1 {
	return v.value
}

func (v *NullableGnbDuFunctionSingleAllOf1) Set(val *GnbDuFunctionSingleAllOf1) {
	v.value = val
	v.isSet = true
}

func (v NullableGnbDuFunctionSingleAllOf1) IsSet() bool {
	return v.isSet
}

func (v *NullableGnbDuFunctionSingleAllOf1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGnbDuFunctionSingleAllOf1(val *GnbDuFunctionSingleAllOf1) *NullableGnbDuFunctionSingleAllOf1 {
	return &NullableGnbDuFunctionSingleAllOf1{value: val, isSet: true}
}

func (v NullableGnbDuFunctionSingleAllOf1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGnbDuFunctionSingleAllOf1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
