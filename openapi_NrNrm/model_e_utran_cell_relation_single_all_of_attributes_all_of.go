/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the EUtranCellRelationSingleAllOfAttributesAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EUtranCellRelationSingleAllOfAttributesAllOf{}

// EUtranCellRelationSingleAllOfAttributesAllOf struct for EUtranCellRelationSingleAllOfAttributesAllOf
type EUtranCellRelationSingleAllOfAttributesAllOf struct {
	AdjacentEUtranCellRef *string `json:"adjacentEUtranCellRef,omitempty"`
}

// NewEUtranCellRelationSingleAllOfAttributesAllOf instantiates a new EUtranCellRelationSingleAllOfAttributesAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEUtranCellRelationSingleAllOfAttributesAllOf() *EUtranCellRelationSingleAllOfAttributesAllOf {
	this := EUtranCellRelationSingleAllOfAttributesAllOf{}
	return &this
}

// NewEUtranCellRelationSingleAllOfAttributesAllOfWithDefaults instantiates a new EUtranCellRelationSingleAllOfAttributesAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEUtranCellRelationSingleAllOfAttributesAllOfWithDefaults() *EUtranCellRelationSingleAllOfAttributesAllOf {
	this := EUtranCellRelationSingleAllOfAttributesAllOf{}
	return &this
}

// GetAdjacentEUtranCellRef returns the AdjacentEUtranCellRef field value if set, zero value otherwise.
func (o *EUtranCellRelationSingleAllOfAttributesAllOf) GetAdjacentEUtranCellRef() string {
	if o == nil || IsNil(o.AdjacentEUtranCellRef) {
		var ret string
		return ret
	}
	return *o.AdjacentEUtranCellRef
}

// GetAdjacentEUtranCellRefOk returns a tuple with the AdjacentEUtranCellRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EUtranCellRelationSingleAllOfAttributesAllOf) GetAdjacentEUtranCellRefOk() (*string, bool) {
	if o == nil || IsNil(o.AdjacentEUtranCellRef) {
		return nil, false
	}
	return o.AdjacentEUtranCellRef, true
}

// HasAdjacentEUtranCellRef returns a boolean if a field has been set.
func (o *EUtranCellRelationSingleAllOfAttributesAllOf) HasAdjacentEUtranCellRef() bool {
	if o != nil && !IsNil(o.AdjacentEUtranCellRef) {
		return true
	}

	return false
}

// SetAdjacentEUtranCellRef gets a reference to the given string and assigns it to the AdjacentEUtranCellRef field.
func (o *EUtranCellRelationSingleAllOfAttributesAllOf) SetAdjacentEUtranCellRef(v string) {
	o.AdjacentEUtranCellRef = &v
}

func (o EUtranCellRelationSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EUtranCellRelationSingleAllOfAttributesAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdjacentEUtranCellRef) {
		toSerialize["adjacentEUtranCellRef"] = o.AdjacentEUtranCellRef
	}
	return toSerialize, nil
}

type NullableEUtranCellRelationSingleAllOfAttributesAllOf struct {
	value *EUtranCellRelationSingleAllOfAttributesAllOf
	isSet bool
}

func (v NullableEUtranCellRelationSingleAllOfAttributesAllOf) Get() *EUtranCellRelationSingleAllOfAttributesAllOf {
	return v.value
}

func (v *NullableEUtranCellRelationSingleAllOfAttributesAllOf) Set(val *EUtranCellRelationSingleAllOfAttributesAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEUtranCellRelationSingleAllOfAttributesAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEUtranCellRelationSingleAllOfAttributesAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEUtranCellRelationSingleAllOfAttributesAllOf(val *EUtranCellRelationSingleAllOfAttributesAllOf) *NullableEUtranCellRelationSingleAllOfAttributesAllOf {
	return &NullableEUtranCellRelationSingleAllOfAttributesAllOf{value: val, isSet: true}
}

func (v NullableEUtranCellRelationSingleAllOfAttributesAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEUtranCellRelationSingleAllOfAttributesAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
