/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the NRCellRelationSingleAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NRCellRelationSingleAllOf{}

// NRCellRelationSingleAllOf struct for NRCellRelationSingleAllOf
type NRCellRelationSingleAllOf struct {
	Attributes *NRCellRelationSingleAllOfAttributes `json:"attributes,omitempty"`
}

// NewNRCellRelationSingleAllOf instantiates a new NRCellRelationSingleAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNRCellRelationSingleAllOf() *NRCellRelationSingleAllOf {
	this := NRCellRelationSingleAllOf{}
	return &this
}

// NewNRCellRelationSingleAllOfWithDefaults instantiates a new NRCellRelationSingleAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNRCellRelationSingleAllOfWithDefaults() *NRCellRelationSingleAllOf {
	this := NRCellRelationSingleAllOf{}
	return &this
}

// GetAttributes returns the Attributes field value if set, zero value otherwise.
func (o *NRCellRelationSingleAllOf) GetAttributes() NRCellRelationSingleAllOfAttributes {
	if o == nil || IsNil(o.Attributes) {
		var ret NRCellRelationSingleAllOfAttributes
		return ret
	}
	return *o.Attributes
}

// GetAttributesOk returns a tuple with the Attributes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NRCellRelationSingleAllOf) GetAttributesOk() (*NRCellRelationSingleAllOfAttributes, bool) {
	if o == nil || IsNil(o.Attributes) {
		return nil, false
	}
	return o.Attributes, true
}

// HasAttributes returns a boolean if a field has been set.
func (o *NRCellRelationSingleAllOf) HasAttributes() bool {
	if o != nil && !IsNil(o.Attributes) {
		return true
	}

	return false
}

// SetAttributes gets a reference to the given NRCellRelationSingleAllOfAttributes and assigns it to the Attributes field.
func (o *NRCellRelationSingleAllOf) SetAttributes(v NRCellRelationSingleAllOfAttributes) {
	o.Attributes = &v
}

func (o NRCellRelationSingleAllOf) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NRCellRelationSingleAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Attributes) {
		toSerialize["attributes"] = o.Attributes
	}
	return toSerialize, nil
}

type NullableNRCellRelationSingleAllOf struct {
	value *NRCellRelationSingleAllOf
	isSet bool
}

func (v NullableNRCellRelationSingleAllOf) Get() *NRCellRelationSingleAllOf {
	return v.value
}

func (v *NullableNRCellRelationSingleAllOf) Set(val *NRCellRelationSingleAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableNRCellRelationSingleAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableNRCellRelationSingleAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNRCellRelationSingleAllOf(val *NRCellRelationSingleAllOf) *NullableNRCellRelationSingleAllOf {
	return &NullableNRCellRelationSingleAllOf{value: val, isSet: true}
}

func (v NullableNRCellRelationSingleAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNRCellRelationSingleAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


