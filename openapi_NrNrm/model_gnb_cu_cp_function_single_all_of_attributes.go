/*
NR NRM

OAS 3.0.1 specification of the NR NRM Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 18.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NrNrm

import (
	"encoding/json"
)

// checks if the GnbCuCpFunctionSingleAllOfAttributes type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GnbCuCpFunctionSingleAllOfAttributes{}

// GnbCuCpFunctionSingleAllOfAttributes struct for GnbCuCpFunctionSingleAllOfAttributes
type GnbCuCpFunctionSingleAllOfAttributes struct {
	UserLabel *string `json:"userLabel,omitempty"`
	VnfParametersList []VnfParameter `json:"vnfParametersList,omitempty"`
	PeeParametersList []PeeParameter `json:"peeParametersList,omitempty"`
	PriorityLabel *int32 `json:"priorityLabel,omitempty"`
	SupportedPerfMetricGroups []SupportedPerfMetricGroup `json:"supportedPerfMetricGroups,omitempty"`
	SupportedTraceMetrics []string `json:"supportedTraceMetrics,omitempty"`
	GnbId *string `json:"gnbId,omitempty"`
	GnbIdLength *int32 `json:"gnbIdLength,omitempty"`
	GnbCuName *string `json:"gnbCuName,omitempty"`
	PlmnId *PlmnId `json:"plmnId,omitempty"`
	X2BlockList []string `json:"x2BlockList,omitempty"`
	XnBlockList []string `json:"xnBlockList,omitempty"`
	X2AllowList []string `json:"x2AllowList,omitempty"`
	XnAllowList []string `json:"xnAllowList,omitempty"`
	X2HOBlockList []string `json:"x2HOBlockList,omitempty"`
	XnHOBlackList []string `json:"xnHOBlackList,omitempty"`
	MappingSetIDBackhaulAddress *MappingSetIDBackhaulAddress `json:"mappingSetIDBackhaulAddress,omitempty"`
	TceMappingInfoList []TceMappingInfo `json:"tceMappingInfoList,omitempty"`
	Configurable5QISetRef *string `json:"configurable5QISetRef,omitempty"`
	Dynamic5QISetRef *string `json:"dynamic5QISetRef,omitempty"`
	DCHOControl *bool `json:"dCHOControl,omitempty"`
	DDAPSHOControl *bool `json:"dDAPSHOControl,omitempty"`
}

// NewGnbCuCpFunctionSingleAllOfAttributes instantiates a new GnbCuCpFunctionSingleAllOfAttributes object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGnbCuCpFunctionSingleAllOfAttributes() *GnbCuCpFunctionSingleAllOfAttributes {
	this := GnbCuCpFunctionSingleAllOfAttributes{}
	return &this
}

// NewGnbCuCpFunctionSingleAllOfAttributesWithDefaults instantiates a new GnbCuCpFunctionSingleAllOfAttributes object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGnbCuCpFunctionSingleAllOfAttributesWithDefaults() *GnbCuCpFunctionSingleAllOfAttributes {
	this := GnbCuCpFunctionSingleAllOfAttributes{}
	return &this
}

// GetUserLabel returns the UserLabel field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetUserLabel() string {
	if o == nil || IsNil(o.UserLabel) {
		var ret string
		return ret
	}
	return *o.UserLabel
}

// GetUserLabelOk returns a tuple with the UserLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetUserLabelOk() (*string, bool) {
	if o == nil || IsNil(o.UserLabel) {
		return nil, false
	}
	return o.UserLabel, true
}

// HasUserLabel returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasUserLabel() bool {
	if o != nil && !IsNil(o.UserLabel) {
		return true
	}

	return false
}

// SetUserLabel gets a reference to the given string and assigns it to the UserLabel field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetUserLabel(v string) {
	o.UserLabel = &v
}

// GetVnfParametersList returns the VnfParametersList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetVnfParametersList() []VnfParameter {
	if o == nil || IsNil(o.VnfParametersList) {
		var ret []VnfParameter
		return ret
	}
	return o.VnfParametersList
}

// GetVnfParametersListOk returns a tuple with the VnfParametersList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetVnfParametersListOk() ([]VnfParameter, bool) {
	if o == nil || IsNil(o.VnfParametersList) {
		return nil, false
	}
	return o.VnfParametersList, true
}

// HasVnfParametersList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasVnfParametersList() bool {
	if o != nil && !IsNil(o.VnfParametersList) {
		return true
	}

	return false
}

// SetVnfParametersList gets a reference to the given []VnfParameter and assigns it to the VnfParametersList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetVnfParametersList(v []VnfParameter) {
	o.VnfParametersList = v
}

// GetPeeParametersList returns the PeeParametersList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPeeParametersList() []PeeParameter {
	if o == nil || IsNil(o.PeeParametersList) {
		var ret []PeeParameter
		return ret
	}
	return o.PeeParametersList
}

// GetPeeParametersListOk returns a tuple with the PeeParametersList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPeeParametersListOk() ([]PeeParameter, bool) {
	if o == nil || IsNil(o.PeeParametersList) {
		return nil, false
	}
	return o.PeeParametersList, true
}

// HasPeeParametersList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasPeeParametersList() bool {
	if o != nil && !IsNil(o.PeeParametersList) {
		return true
	}

	return false
}

// SetPeeParametersList gets a reference to the given []PeeParameter and assigns it to the PeeParametersList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetPeeParametersList(v []PeeParameter) {
	o.PeeParametersList = v
}

// GetPriorityLabel returns the PriorityLabel field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPriorityLabel() int32 {
	if o == nil || IsNil(o.PriorityLabel) {
		var ret int32
		return ret
	}
	return *o.PriorityLabel
}

// GetPriorityLabelOk returns a tuple with the PriorityLabel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPriorityLabelOk() (*int32, bool) {
	if o == nil || IsNil(o.PriorityLabel) {
		return nil, false
	}
	return o.PriorityLabel, true
}

// HasPriorityLabel returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasPriorityLabel() bool {
	if o != nil && !IsNil(o.PriorityLabel) {
		return true
	}

	return false
}

// SetPriorityLabel gets a reference to the given int32 and assigns it to the PriorityLabel field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetPriorityLabel(v int32) {
	o.PriorityLabel = &v
}

// GetSupportedPerfMetricGroups returns the SupportedPerfMetricGroups field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetSupportedPerfMetricGroups() []SupportedPerfMetricGroup {
	if o == nil || IsNil(o.SupportedPerfMetricGroups) {
		var ret []SupportedPerfMetricGroup
		return ret
	}
	return o.SupportedPerfMetricGroups
}

// GetSupportedPerfMetricGroupsOk returns a tuple with the SupportedPerfMetricGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetSupportedPerfMetricGroupsOk() ([]SupportedPerfMetricGroup, bool) {
	if o == nil || IsNil(o.SupportedPerfMetricGroups) {
		return nil, false
	}
	return o.SupportedPerfMetricGroups, true
}

// HasSupportedPerfMetricGroups returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasSupportedPerfMetricGroups() bool {
	if o != nil && !IsNil(o.SupportedPerfMetricGroups) {
		return true
	}

	return false
}

// SetSupportedPerfMetricGroups gets a reference to the given []SupportedPerfMetricGroup and assigns it to the SupportedPerfMetricGroups field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetSupportedPerfMetricGroups(v []SupportedPerfMetricGroup) {
	o.SupportedPerfMetricGroups = v
}

// GetSupportedTraceMetrics returns the SupportedTraceMetrics field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetSupportedTraceMetrics() []string {
	if o == nil || IsNil(o.SupportedTraceMetrics) {
		var ret []string
		return ret
	}
	return o.SupportedTraceMetrics
}

// GetSupportedTraceMetricsOk returns a tuple with the SupportedTraceMetrics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetSupportedTraceMetricsOk() ([]string, bool) {
	if o == nil || IsNil(o.SupportedTraceMetrics) {
		return nil, false
	}
	return o.SupportedTraceMetrics, true
}

// HasSupportedTraceMetrics returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasSupportedTraceMetrics() bool {
	if o != nil && !IsNil(o.SupportedTraceMetrics) {
		return true
	}

	return false
}

// SetSupportedTraceMetrics gets a reference to the given []string and assigns it to the SupportedTraceMetrics field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetSupportedTraceMetrics(v []string) {
	o.SupportedTraceMetrics = v
}

// GetGnbId returns the GnbId field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbId() string {
	if o == nil || IsNil(o.GnbId) {
		var ret string
		return ret
	}
	return *o.GnbId
}

// GetGnbIdOk returns a tuple with the GnbId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbIdOk() (*string, bool) {
	if o == nil || IsNil(o.GnbId) {
		return nil, false
	}
	return o.GnbId, true
}

// HasGnbId returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasGnbId() bool {
	if o != nil && !IsNil(o.GnbId) {
		return true
	}

	return false
}

// SetGnbId gets a reference to the given string and assigns it to the GnbId field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetGnbId(v string) {
	o.GnbId = &v
}

// GetGnbIdLength returns the GnbIdLength field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbIdLength() int32 {
	if o == nil || IsNil(o.GnbIdLength) {
		var ret int32
		return ret
	}
	return *o.GnbIdLength
}

// GetGnbIdLengthOk returns a tuple with the GnbIdLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbIdLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.GnbIdLength) {
		return nil, false
	}
	return o.GnbIdLength, true
}

// HasGnbIdLength returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasGnbIdLength() bool {
	if o != nil && !IsNil(o.GnbIdLength) {
		return true
	}

	return false
}

// SetGnbIdLength gets a reference to the given int32 and assigns it to the GnbIdLength field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetGnbIdLength(v int32) {
	o.GnbIdLength = &v
}

// GetGnbCuName returns the GnbCuName field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbCuName() string {
	if o == nil || IsNil(o.GnbCuName) {
		var ret string
		return ret
	}
	return *o.GnbCuName
}

// GetGnbCuNameOk returns a tuple with the GnbCuName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetGnbCuNameOk() (*string, bool) {
	if o == nil || IsNil(o.GnbCuName) {
		return nil, false
	}
	return o.GnbCuName, true
}

// HasGnbCuName returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasGnbCuName() bool {
	if o != nil && !IsNil(o.GnbCuName) {
		return true
	}

	return false
}

// SetGnbCuName gets a reference to the given string and assigns it to the GnbCuName field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetGnbCuName(v string) {
	o.GnbCuName = &v
}

// GetPlmnId returns the PlmnId field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPlmnId() PlmnId {
	if o == nil || IsNil(o.PlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.PlmnId) {
		return nil, false
	}
	return o.PlmnId, true
}

// HasPlmnId returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasPlmnId() bool {
	if o != nil && !IsNil(o.PlmnId) {
		return true
	}

	return false
}

// SetPlmnId gets a reference to the given PlmnId and assigns it to the PlmnId field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetPlmnId(v PlmnId) {
	o.PlmnId = &v
}

// GetX2BlockList returns the X2BlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2BlockList() []string {
	if o == nil || IsNil(o.X2BlockList) {
		var ret []string
		return ret
	}
	return o.X2BlockList
}

// GetX2BlockListOk returns a tuple with the X2BlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2BlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2BlockList) {
		return nil, false
	}
	return o.X2BlockList, true
}

// HasX2BlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasX2BlockList() bool {
	if o != nil && !IsNil(o.X2BlockList) {
		return true
	}

	return false
}

// SetX2BlockList gets a reference to the given []string and assigns it to the X2BlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetX2BlockList(v []string) {
	o.X2BlockList = v
}

// GetXnBlockList returns the XnBlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnBlockList() []string {
	if o == nil || IsNil(o.XnBlockList) {
		var ret []string
		return ret
	}
	return o.XnBlockList
}

// GetXnBlockListOk returns a tuple with the XnBlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnBlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnBlockList) {
		return nil, false
	}
	return o.XnBlockList, true
}

// HasXnBlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasXnBlockList() bool {
	if o != nil && !IsNil(o.XnBlockList) {
		return true
	}

	return false
}

// SetXnBlockList gets a reference to the given []string and assigns it to the XnBlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetXnBlockList(v []string) {
	o.XnBlockList = v
}

// GetX2AllowList returns the X2AllowList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2AllowList() []string {
	if o == nil || IsNil(o.X2AllowList) {
		var ret []string
		return ret
	}
	return o.X2AllowList
}

// GetX2AllowListOk returns a tuple with the X2AllowList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2AllowListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2AllowList) {
		return nil, false
	}
	return o.X2AllowList, true
}

// HasX2AllowList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasX2AllowList() bool {
	if o != nil && !IsNil(o.X2AllowList) {
		return true
	}

	return false
}

// SetX2AllowList gets a reference to the given []string and assigns it to the X2AllowList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetX2AllowList(v []string) {
	o.X2AllowList = v
}

// GetXnAllowList returns the XnAllowList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnAllowList() []string {
	if o == nil || IsNil(o.XnAllowList) {
		var ret []string
		return ret
	}
	return o.XnAllowList
}

// GetXnAllowListOk returns a tuple with the XnAllowList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnAllowListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnAllowList) {
		return nil, false
	}
	return o.XnAllowList, true
}

// HasXnAllowList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasXnAllowList() bool {
	if o != nil && !IsNil(o.XnAllowList) {
		return true
	}

	return false
}

// SetXnAllowList gets a reference to the given []string and assigns it to the XnAllowList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetXnAllowList(v []string) {
	o.XnAllowList = v
}

// GetX2HOBlockList returns the X2HOBlockList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2HOBlockList() []string {
	if o == nil || IsNil(o.X2HOBlockList) {
		var ret []string
		return ret
	}
	return o.X2HOBlockList
}

// GetX2HOBlockListOk returns a tuple with the X2HOBlockList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetX2HOBlockListOk() ([]string, bool) {
	if o == nil || IsNil(o.X2HOBlockList) {
		return nil, false
	}
	return o.X2HOBlockList, true
}

// HasX2HOBlockList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasX2HOBlockList() bool {
	if o != nil && !IsNil(o.X2HOBlockList) {
		return true
	}

	return false
}

// SetX2HOBlockList gets a reference to the given []string and assigns it to the X2HOBlockList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetX2HOBlockList(v []string) {
	o.X2HOBlockList = v
}

// GetXnHOBlackList returns the XnHOBlackList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnHOBlackList() []string {
	if o == nil || IsNil(o.XnHOBlackList) {
		var ret []string
		return ret
	}
	return o.XnHOBlackList
}

// GetXnHOBlackListOk returns a tuple with the XnHOBlackList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetXnHOBlackListOk() ([]string, bool) {
	if o == nil || IsNil(o.XnHOBlackList) {
		return nil, false
	}
	return o.XnHOBlackList, true
}

// HasXnHOBlackList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasXnHOBlackList() bool {
	if o != nil && !IsNil(o.XnHOBlackList) {
		return true
	}

	return false
}

// SetXnHOBlackList gets a reference to the given []string and assigns it to the XnHOBlackList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetXnHOBlackList(v []string) {
	o.XnHOBlackList = v
}

// GetMappingSetIDBackhaulAddress returns the MappingSetIDBackhaulAddress field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetMappingSetIDBackhaulAddress() MappingSetIDBackhaulAddress {
	if o == nil || IsNil(o.MappingSetIDBackhaulAddress) {
		var ret MappingSetIDBackhaulAddress
		return ret
	}
	return *o.MappingSetIDBackhaulAddress
}

// GetMappingSetIDBackhaulAddressOk returns a tuple with the MappingSetIDBackhaulAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetMappingSetIDBackhaulAddressOk() (*MappingSetIDBackhaulAddress, bool) {
	if o == nil || IsNil(o.MappingSetIDBackhaulAddress) {
		return nil, false
	}
	return o.MappingSetIDBackhaulAddress, true
}

// HasMappingSetIDBackhaulAddress returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasMappingSetIDBackhaulAddress() bool {
	if o != nil && !IsNil(o.MappingSetIDBackhaulAddress) {
		return true
	}

	return false
}

// SetMappingSetIDBackhaulAddress gets a reference to the given MappingSetIDBackhaulAddress and assigns it to the MappingSetIDBackhaulAddress field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetMappingSetIDBackhaulAddress(v MappingSetIDBackhaulAddress) {
	o.MappingSetIDBackhaulAddress = &v
}

// GetTceMappingInfoList returns the TceMappingInfoList field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetTceMappingInfoList() []TceMappingInfo {
	if o == nil || IsNil(o.TceMappingInfoList) {
		var ret []TceMappingInfo
		return ret
	}
	return o.TceMappingInfoList
}

// GetTceMappingInfoListOk returns a tuple with the TceMappingInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetTceMappingInfoListOk() ([]TceMappingInfo, bool) {
	if o == nil || IsNil(o.TceMappingInfoList) {
		return nil, false
	}
	return o.TceMappingInfoList, true
}

// HasTceMappingInfoList returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasTceMappingInfoList() bool {
	if o != nil && !IsNil(o.TceMappingInfoList) {
		return true
	}

	return false
}

// SetTceMappingInfoList gets a reference to the given []TceMappingInfo and assigns it to the TceMappingInfoList field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetTceMappingInfoList(v []TceMappingInfo) {
	o.TceMappingInfoList = v
}

// GetConfigurable5QISetRef returns the Configurable5QISetRef field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetConfigurable5QISetRef() string {
	if o == nil || IsNil(o.Configurable5QISetRef) {
		var ret string
		return ret
	}
	return *o.Configurable5QISetRef
}

// GetConfigurable5QISetRefOk returns a tuple with the Configurable5QISetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetConfigurable5QISetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Configurable5QISetRef) {
		return nil, false
	}
	return o.Configurable5QISetRef, true
}

// HasConfigurable5QISetRef returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasConfigurable5QISetRef() bool {
	if o != nil && !IsNil(o.Configurable5QISetRef) {
		return true
	}

	return false
}

// SetConfigurable5QISetRef gets a reference to the given string and assigns it to the Configurable5QISetRef field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetConfigurable5QISetRef(v string) {
	o.Configurable5QISetRef = &v
}

// GetDynamic5QISetRef returns the Dynamic5QISetRef field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDynamic5QISetRef() string {
	if o == nil || IsNil(o.Dynamic5QISetRef) {
		var ret string
		return ret
	}
	return *o.Dynamic5QISetRef
}

// GetDynamic5QISetRefOk returns a tuple with the Dynamic5QISetRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDynamic5QISetRefOk() (*string, bool) {
	if o == nil || IsNil(o.Dynamic5QISetRef) {
		return nil, false
	}
	return o.Dynamic5QISetRef, true
}

// HasDynamic5QISetRef returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasDynamic5QISetRef() bool {
	if o != nil && !IsNil(o.Dynamic5QISetRef) {
		return true
	}

	return false
}

// SetDynamic5QISetRef gets a reference to the given string and assigns it to the Dynamic5QISetRef field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetDynamic5QISetRef(v string) {
	o.Dynamic5QISetRef = &v
}

// GetDCHOControl returns the DCHOControl field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDCHOControl() bool {
	if o == nil || IsNil(o.DCHOControl) {
		var ret bool
		return ret
	}
	return *o.DCHOControl
}

// GetDCHOControlOk returns a tuple with the DCHOControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDCHOControlOk() (*bool, bool) {
	if o == nil || IsNil(o.DCHOControl) {
		return nil, false
	}
	return o.DCHOControl, true
}

// HasDCHOControl returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasDCHOControl() bool {
	if o != nil && !IsNil(o.DCHOControl) {
		return true
	}

	return false
}

// SetDCHOControl gets a reference to the given bool and assigns it to the DCHOControl field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetDCHOControl(v bool) {
	o.DCHOControl = &v
}

// GetDDAPSHOControl returns the DDAPSHOControl field value if set, zero value otherwise.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDDAPSHOControl() bool {
	if o == nil || IsNil(o.DDAPSHOControl) {
		var ret bool
		return ret
	}
	return *o.DDAPSHOControl
}

// GetDDAPSHOControlOk returns a tuple with the DDAPSHOControl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) GetDDAPSHOControlOk() (*bool, bool) {
	if o == nil || IsNil(o.DDAPSHOControl) {
		return nil, false
	}
	return o.DDAPSHOControl, true
}

// HasDDAPSHOControl returns a boolean if a field has been set.
func (o *GnbCuCpFunctionSingleAllOfAttributes) HasDDAPSHOControl() bool {
	if o != nil && !IsNil(o.DDAPSHOControl) {
		return true
	}

	return false
}

// SetDDAPSHOControl gets a reference to the given bool and assigns it to the DDAPSHOControl field.
func (o *GnbCuCpFunctionSingleAllOfAttributes) SetDDAPSHOControl(v bool) {
	o.DDAPSHOControl = &v
}

func (o GnbCuCpFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GnbCuCpFunctionSingleAllOfAttributes) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UserLabel) {
		toSerialize["userLabel"] = o.UserLabel
	}
	if !IsNil(o.VnfParametersList) {
		toSerialize["vnfParametersList"] = o.VnfParametersList
	}
	if !IsNil(o.PeeParametersList) {
		toSerialize["peeParametersList"] = o.PeeParametersList
	}
	if !IsNil(o.PriorityLabel) {
		toSerialize["priorityLabel"] = o.PriorityLabel
	}
	if !IsNil(o.SupportedPerfMetricGroups) {
		toSerialize["supportedPerfMetricGroups"] = o.SupportedPerfMetricGroups
	}
	if !IsNil(o.SupportedTraceMetrics) {
		toSerialize["supportedTraceMetrics"] = o.SupportedTraceMetrics
	}
	if !IsNil(o.GnbId) {
		toSerialize["gnbId"] = o.GnbId
	}
	if !IsNil(o.GnbIdLength) {
		toSerialize["gnbIdLength"] = o.GnbIdLength
	}
	if !IsNil(o.GnbCuName) {
		toSerialize["gnbCuName"] = o.GnbCuName
	}
	if !IsNil(o.PlmnId) {
		toSerialize["plmnId"] = o.PlmnId
	}
	if !IsNil(o.X2BlockList) {
		toSerialize["x2BlockList"] = o.X2BlockList
	}
	if !IsNil(o.XnBlockList) {
		toSerialize["xnBlockList"] = o.XnBlockList
	}
	if !IsNil(o.X2AllowList) {
		toSerialize["x2AllowList"] = o.X2AllowList
	}
	if !IsNil(o.XnAllowList) {
		toSerialize["xnAllowList"] = o.XnAllowList
	}
	if !IsNil(o.X2HOBlockList) {
		toSerialize["x2HOBlockList"] = o.X2HOBlockList
	}
	if !IsNil(o.XnHOBlackList) {
		toSerialize["xnHOBlackList"] = o.XnHOBlackList
	}
	if !IsNil(o.MappingSetIDBackhaulAddress) {
		toSerialize["mappingSetIDBackhaulAddress"] = o.MappingSetIDBackhaulAddress
	}
	if !IsNil(o.TceMappingInfoList) {
		toSerialize["tceMappingInfoList"] = o.TceMappingInfoList
	}
	if !IsNil(o.Configurable5QISetRef) {
		toSerialize["configurable5QISetRef"] = o.Configurable5QISetRef
	}
	if !IsNil(o.Dynamic5QISetRef) {
		toSerialize["dynamic5QISetRef"] = o.Dynamic5QISetRef
	}
	if !IsNil(o.DCHOControl) {
		toSerialize["dCHOControl"] = o.DCHOControl
	}
	if !IsNil(o.DDAPSHOControl) {
		toSerialize["dDAPSHOControl"] = o.DDAPSHOControl
	}
	return toSerialize, nil
}

type NullableGnbCuCpFunctionSingleAllOfAttributes struct {
	value *GnbCuCpFunctionSingleAllOfAttributes
	isSet bool
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributes) Get() *GnbCuCpFunctionSingleAllOfAttributes {
	return v.value
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributes) Set(val *GnbCuCpFunctionSingleAllOfAttributes) {
	v.value = val
	v.isSet = true
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributes) IsSet() bool {
	return v.isSet
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributes) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGnbCuCpFunctionSingleAllOfAttributes(val *GnbCuCpFunctionSingleAllOfAttributes) *NullableGnbCuCpFunctionSingleAllOfAttributes {
	return &NullableGnbCuCpFunctionSingleAllOfAttributes{value: val, isSet: true}
}

func (v NullableGnbCuCpFunctionSingleAllOfAttributes) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGnbCuCpFunctionSingleAllOfAttributes) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


