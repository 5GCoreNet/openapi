/*
UAE Server C2 Operation Mode Management Service

UAE Server C2 Operation Mode Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_UAE_C2OperationModeManagement

import (
	"encoding/json"
	"fmt"
)

// C2OpModeStatusAnyOf the model 'C2OpModeStatusAnyOf'
type C2OpModeStatusAnyOf string

// List of C2OpModeStatus_anyOf
const (
	SUCCESSFUL C2OpModeStatusAnyOf = "SUCCESSFUL"
	NOT_SUCCESSFUL C2OpModeStatusAnyOf = "NOT_SUCCESSFUL"
)

// All allowed values of C2OpModeStatusAnyOf enum
var AllowedC2OpModeStatusAnyOfEnumValues = []C2OpModeStatusAnyOf{
	"SUCCESSFUL",
	"NOT_SUCCESSFUL",
}

func (v *C2OpModeStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := C2OpModeStatusAnyOf(value)
	for _, existing := range AllowedC2OpModeStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid C2OpModeStatusAnyOf", value)
}

// NewC2OpModeStatusAnyOfFromValue returns a pointer to a valid C2OpModeStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewC2OpModeStatusAnyOfFromValue(v string) (*C2OpModeStatusAnyOf, error) {
	ev := C2OpModeStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for C2OpModeStatusAnyOf: valid values are %v", v, AllowedC2OpModeStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v C2OpModeStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedC2OpModeStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to C2OpModeStatus_anyOf value
func (v C2OpModeStatusAnyOf) Ptr() *C2OpModeStatusAnyOf {
	return &v
}

type NullableC2OpModeStatusAnyOf struct {
	value *C2OpModeStatusAnyOf
	isSet bool
}

func (v NullableC2OpModeStatusAnyOf) Get() *C2OpModeStatusAnyOf {
	return v.value
}

func (v *NullableC2OpModeStatusAnyOf) Set(val *C2OpModeStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableC2OpModeStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableC2OpModeStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC2OpModeStatusAnyOf(val *C2OpModeStatusAnyOf) *NullableC2OpModeStatusAnyOf {
	return &NullableC2OpModeStatusAnyOf{value: val, isSet: true}
}

func (v NullableC2OpModeStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC2OpModeStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

