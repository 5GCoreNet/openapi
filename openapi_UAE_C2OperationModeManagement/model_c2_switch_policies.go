/*
UAE Server C2 Operation Mode Management Service

UAE Server C2 Operation Mode Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_UAE_C2OperationModeManagement

import (
	"encoding/json"
)

// checks if the C2SwitchPolicies type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &C2SwitchPolicies{}

// C2SwitchPolicies Represents the C2 operation mode switching policies.
type C2SwitchPolicies struct {
	DirectC2LinkQualityThrlds *C2LinkQualityThrlds `json:"directC2LinkQualityThrlds,omitempty"`
	UuC2LinkQualityThrlds     *C2LinkQualityThrlds `json:"uuC2LinkQualityThrlds,omitempty"`
}

// NewC2SwitchPolicies instantiates a new C2SwitchPolicies object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewC2SwitchPolicies() *C2SwitchPolicies {
	this := C2SwitchPolicies{}
	return &this
}

// NewC2SwitchPoliciesWithDefaults instantiates a new C2SwitchPolicies object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewC2SwitchPoliciesWithDefaults() *C2SwitchPolicies {
	this := C2SwitchPolicies{}
	return &this
}

// GetDirectC2LinkQualityThrlds returns the DirectC2LinkQualityThrlds field value if set, zero value otherwise.
func (o *C2SwitchPolicies) GetDirectC2LinkQualityThrlds() C2LinkQualityThrlds {
	if o == nil || IsNil(o.DirectC2LinkQualityThrlds) {
		var ret C2LinkQualityThrlds
		return ret
	}
	return *o.DirectC2LinkQualityThrlds
}

// GetDirectC2LinkQualityThrldsOk returns a tuple with the DirectC2LinkQualityThrlds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C2SwitchPolicies) GetDirectC2LinkQualityThrldsOk() (*C2LinkQualityThrlds, bool) {
	if o == nil || IsNil(o.DirectC2LinkQualityThrlds) {
		return nil, false
	}
	return o.DirectC2LinkQualityThrlds, true
}

// HasDirectC2LinkQualityThrlds returns a boolean if a field has been set.
func (o *C2SwitchPolicies) HasDirectC2LinkQualityThrlds() bool {
	if o != nil && !IsNil(o.DirectC2LinkQualityThrlds) {
		return true
	}

	return false
}

// SetDirectC2LinkQualityThrlds gets a reference to the given C2LinkQualityThrlds and assigns it to the DirectC2LinkQualityThrlds field.
func (o *C2SwitchPolicies) SetDirectC2LinkQualityThrlds(v C2LinkQualityThrlds) {
	o.DirectC2LinkQualityThrlds = &v
}

// GetUuC2LinkQualityThrlds returns the UuC2LinkQualityThrlds field value if set, zero value otherwise.
func (o *C2SwitchPolicies) GetUuC2LinkQualityThrlds() C2LinkQualityThrlds {
	if o == nil || IsNil(o.UuC2LinkQualityThrlds) {
		var ret C2LinkQualityThrlds
		return ret
	}
	return *o.UuC2LinkQualityThrlds
}

// GetUuC2LinkQualityThrldsOk returns a tuple with the UuC2LinkQualityThrlds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *C2SwitchPolicies) GetUuC2LinkQualityThrldsOk() (*C2LinkQualityThrlds, bool) {
	if o == nil || IsNil(o.UuC2LinkQualityThrlds) {
		return nil, false
	}
	return o.UuC2LinkQualityThrlds, true
}

// HasUuC2LinkQualityThrlds returns a boolean if a field has been set.
func (o *C2SwitchPolicies) HasUuC2LinkQualityThrlds() bool {
	if o != nil && !IsNil(o.UuC2LinkQualityThrlds) {
		return true
	}

	return false
}

// SetUuC2LinkQualityThrlds gets a reference to the given C2LinkQualityThrlds and assigns it to the UuC2LinkQualityThrlds field.
func (o *C2SwitchPolicies) SetUuC2LinkQualityThrlds(v C2LinkQualityThrlds) {
	o.UuC2LinkQualityThrlds = &v
}

func (o C2SwitchPolicies) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o C2SwitchPolicies) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DirectC2LinkQualityThrlds) {
		toSerialize["directC2LinkQualityThrlds"] = o.DirectC2LinkQualityThrlds
	}
	if !IsNil(o.UuC2LinkQualityThrlds) {
		toSerialize["uuC2LinkQualityThrlds"] = o.UuC2LinkQualityThrlds
	}
	return toSerialize, nil
}

type NullableC2SwitchPolicies struct {
	value *C2SwitchPolicies
	isSet bool
}

func (v NullableC2SwitchPolicies) Get() *C2SwitchPolicies {
	return v.value
}

func (v *NullableC2SwitchPolicies) Set(val *C2SwitchPolicies) {
	v.value = val
	v.isSet = true
}

func (v NullableC2SwitchPolicies) IsSet() bool {
	return v.isSet
}

func (v *NullableC2SwitchPolicies) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableC2SwitchPolicies(val *C2SwitchPolicies) *NullableC2SwitchPolicies {
	return &NullableC2SwitchPolicies{value: val, isSet: true}
}

func (v NullableC2SwitchPolicies) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableC2SwitchPolicies) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
