openapi: 3.0.0
info:
  description: "UAE Server C2 Operation Mode Management Service.  \nÂ© 2022, 3GPP Organizational\
    \ Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  title: UAE Server C2 Operation Mode Management Service
  version: 1.0.0
externalDocs:
  description: |
    3GPP TS 29.257 V17.1.0; Application layer support for Uncrewed Aerial System (UAS); UAS Application Enabler (UAE) Server Services; Stage 3.
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.257/
servers:
- url: "{apiRoot}/uae-c2opmode-mngt/v1"
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in clause 5.2.4 of 3GPP TS 29.122
security:
- {}
- oAuth2ClientCredentials: []
paths:
  /initiate:
    post:
      callbacks:
        C2OpModeMngtCompletionNotification:
          '{$request.body#/notificationUri}/c2mode-mngt-completion':
            post:
              operationId: c2OpModeMngtCompletionNotification_C2modeMngtCompletionPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/C2OpModeMngtCompStatus'
                required: true
              responses:
                "204":
                  description: |
                    No Content. The notification was succesfull and the C2 Operation Mode Management Completion status for the concerned UAS (i.e. pair of UAV and UAV-C) was successfully received and acknowledged by the UASS.
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
        SelectedC2CommunicationModeNotification:
          '{$request.body#/notificationUri}/inform-selec-c2mode':
            post:
              operationId: selectedC2CommunicationModeNotification_InformSelecC2modePost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/SelectedC2CommModeNotif'
                required: true
              responses:
                "204":
                  description: |
                    No Content. The notification was succesfull and the C2 Communication Mode selected by the concerned UAS (i.e. pair of UAV and UAV-C) was successfully received and acknowledged by the UASS.
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
        C2CommunicationModeSwitchingNotification:
          '{$request.body#/notificationUri}/inform-c2mode-switch':
            post:
              operationId: c2CommunicationModeSwitchingNotification_InformC2modeSwitchPost
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/C2CommModeSwitchNotif'
                required: true
              responses:
                "200":
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/C2Result'
                  description: |
                    OK. The targeted C2 Communication Mode switching for the concerned UAS (i.e. pair of UAV and UAV-C) is successfully received. The response body contains the feedback of the UASS on whether this C2 Communication Mode switching is confirmed (i.e. validated) or not.
                "204":
                  description: |
                    No Content. The targeted C2 Communication Mode switching for the concerned UAS (i.e. pair of UAV and UAV-C) is successfully received and acknowledged, and the UASS does not need to confirm (i.e. validate) it.
                "307":
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "308":
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: An alternative URI of the resource.
                      required: true
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      operationId: InitiateC2OpModeConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigureData'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/C2Result'
          description: |
            The communicated C2 Operation Mode configuration information was successfully received. The response body contains the feedback of the UAE Server on whether this C2 Operation Mode configuration request is confirmed (i.e. can be undertaken by the UAE Server) or not.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: Request the provisioning of C2 Operation Mode configuration information
        for a UAS (i.e. pair of UAV and UAV-C).
      tags:
      - Initiate C2 Operation Mode configuration
components:
  responses:
    "307":
      description: Temporary Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "308":
      description: Permanent Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    "411":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Length Required
    "413":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Payload Too Large
    "415":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unsupported Media Type
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Too Many Requests
    "500":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    "503":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    default:
      description: Generic Error
  schemas:
    ConfigureData:
      description: |
        Represents the parameters to request to provision C2 Operation Mode configuration information for a UAS (i.e. pair of UAV and UAV-C).
      example:
        c2CommModeSwitchTypes:
        - null
        - null
        uassId: uassId
        notificationUri: notificationUri
        primaryC2CommMode: null
        secondaryC2CommMode: null
        c2SwitchPolicies:
          directC2LinkQualityThrlds:
            nrRsrpThrldLow: 10
            nrRsrqThrldHigh: 75
            nrRsrqThrldLow: 18
            nrRsrpThrldHigh: 76
            packetLossThrldHigh: 230
            packetLossThrldLow: 563
          uuC2LinkQualityThrlds:
            nrRsrpThrldLow: 10
            nrRsrqThrldHigh: 75
            nrRsrqThrldLow: 18
            nrRsrpThrldHigh: 76
            packetLossThrldHigh: 230
            packetLossThrldLow: 563
        uasId:
          individualUasId:
          - caaId: caaId
            gpsi: gpsi
          - caaId: caaId
            gpsi: gpsi
          groupId: groupId
        c2ServiceArea:
          geographicAreaList:
          - null
          - null
          ncgiList:
          - nid: nid
            plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          - nid: nid
            plmnId:
              mnc: mnc
              mcc: mcc
            nrCellId: nrCellId
          taiList:
          - tac: tac
            nid: nid
            plmnId:
              mnc: mnc
              mcc: mcc
          - tac: tac
            nid: nid
            plmnId:
              mnc: mnc
              mcc: mcc
        suppFeat: suppFeat
        allowedC2CommModes:
        - null
        - null
      properties:
        uassId:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        uasId:
          $ref: '#/components/schemas/UasId'
        allowedC2CommModes:
          items:
            $ref: '#/components/schemas/C2CommMode'
          minItems: 1
          type: array
        c2CommModeSwitchTypes:
          items:
            $ref: '#/components/schemas/C2CommModeSwitching'
          minItems: 1
          type: array
        notificationUri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        primaryC2CommMode:
          $ref: '#/components/schemas/C2CommMode'
        secondaryC2CommMode:
          $ref: '#/components/schemas/C2CommMode'
        c2SwitchPolicies:
          $ref: '#/components/schemas/C2SwitchPolicies'
        c2ServiceArea:
          $ref: '#/components/schemas/C2ServiceArea'
        suppFeat:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - allowedC2CommModes
      - c2CommModeSwitchTypes
      - c2SwitchPolicies
      - notificationUri
      - primaryC2CommMode
      - uasId
      - uassId
      type: object
    SelectedC2CommModeNotif:
      description: |
        Represents information on the C2 Communication Mode selected by a UAS (i.e. pair of UAV and UAV-C).
      example:
        selPrimaryC2CommMode: null
        selSecondaryC2CommMode: null
        uasId:
          individualUasId:
          - caaId: caaId
            gpsi: gpsi
          - caaId: caaId
            gpsi: gpsi
          groupId: groupId
      properties:
        uasId:
          $ref: '#/components/schemas/UasId'
        selPrimaryC2CommMode:
          $ref: '#/components/schemas/C2CommMode'
        selSecondaryC2CommMode:
          $ref: '#/components/schemas/C2CommMode'
      required:
      - selPrimaryC2CommMode
      - uasId
      type: object
    C2CommModeSwitchNotif:
      description: |
        Represents information on the targeted C2 Communication Mode switching for a UAS (i.e. pair of UAV and UAV-C).
      example:
        uaeServerId: uaeServerId
        c2CommModeSwitchType: null
        uasId:
          individualUasId:
          - caaId: caaId
            gpsi: gpsi
          - caaId: caaId
            gpsi: gpsi
          groupId: groupId
        switchingCause: null
      properties:
        uaeServerId:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        uasId:
          $ref: '#/components/schemas/UasId'
        c2CommModeSwitchType:
          $ref: '#/components/schemas/C2CommModeSwitching'
        switchingCause:
          $ref: '#/components/schemas/C2SwitchingCause'
      required:
      - c2CommModeSwitchType
      - uaeServerId
      - uasId
      type: object
    C2Result:
      description: Represents the result of an action related to C2 of a UAS.
      example:
        c2OpConfirmed: true
        suppFeat: suppFeat
      properties:
        c2OpConfirmed:
          type: boolean
        suppFeat:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - c2OpConfirmed
      type: object
    UasId:
      description: Represents the identifier of a UAS (i.e. pair of UAV and UAV-C).
      example:
        individualUasId:
        - caaId: caaId
          gpsi: gpsi
        - caaId: caaId
          gpsi: gpsi
        groupId: groupId
      oneOf:
      - required:
        - groupId
      - required:
        - individualUasId
      properties:
        groupId:
          description: string containing a local identifier followed by "@" and a
            domain identifier. Both the local identifier and the domain identifier
            shall be encoded as strings that do not contain any "@" characters. See
            Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
          type: string
        individualUasId:
          items:
            $ref: '#/components/schemas/UavId'
          minItems: 2
          type: array
      type: object
    UavId:
      anyOf:
      - required:
        - gpsi
      - required:
        - caaId
      description: "Represents the identifier of a UAV (e.g. UAV, UAV-C)."
      example:
        caaId: caaId
        gpsi: gpsi
      properties:
        gpsi:
          description: "String identifying a Gpsi shall contain either an External\
            \ Id or an MSISDN.  It shall be formatted as follows -External Identifier=\
            \ \"extid-'extid', where 'extid'  shall be formatted according to clause\
            \ 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier. \n"
          pattern: "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
          type: string
        caaId:
          type: string
      type: object
    C2ServiceArea:
      description: Represents a C2 service area.
      example:
        geographicAreaList:
        - null
        - null
        ncgiList:
        - nid: nid
          plmnId:
            mnc: mnc
            mcc: mcc
          nrCellId: nrCellId
        - nid: nid
          plmnId:
            mnc: mnc
            mcc: mcc
          nrCellId: nrCellId
        taiList:
        - tac: tac
          nid: nid
          plmnId:
            mnc: mnc
            mcc: mcc
        - tac: tac
          nid: nid
          plmnId:
            mnc: mnc
            mcc: mcc
      oneOf:
      - required:
        - geographicAreaList
      - anyOf:
        - required:
          - ncgiList
        - required:
          - taiList
      properties:
        ncgiList:
          items:
            $ref: '#/components/schemas/Ncgi'
          type: array
        taiList:
          items:
            $ref: '#/components/schemas/Tai'
          type: array
        geographicAreaList:
          items:
            $ref: '#/components/schemas/GeographicArea'
          type: array
      type: object
    C2OpModeMngtCompStatus:
      description: |
        Represents the C2 Operation Mode Management Completion status for a UAV (e.g. UAV, UAV-C).
      example:
        uasId:
          individualUasId:
          - caaId: caaId
            gpsi: gpsi
          - caaId: caaId
            gpsi: gpsi
          groupId: groupId
        status: null
      properties:
        uasId:
          $ref: '#/components/schemas/UasId'
        status:
          $ref: '#/components/schemas/C2OpModeStatus'
      required:
      - status
      - uasId
      type: object
    C2SwitchPolicies:
      description: Represents the C2 operation mode switching policies.
      example:
        directC2LinkQualityThrlds:
          nrRsrpThrldLow: 10
          nrRsrqThrldHigh: 75
          nrRsrqThrldLow: 18
          nrRsrpThrldHigh: 76
          packetLossThrldHigh: 230
          packetLossThrldLow: 563
        uuC2LinkQualityThrlds:
          nrRsrpThrldLow: 10
          nrRsrqThrldHigh: 75
          nrRsrqThrldLow: 18
          nrRsrpThrldHigh: 76
          packetLossThrldHigh: 230
          packetLossThrldLow: 563
      properties:
        directC2LinkQualityThrlds:
          $ref: '#/components/schemas/C2LinkQualityThrlds'
        uuC2LinkQualityThrlds:
          $ref: '#/components/schemas/C2LinkQualityThrlds'
      type: object
    C2LinkQualityThrlds:
      description: Represents the C2 link quality thresholds.
      example:
        nrRsrpThrldLow: 10
        nrRsrqThrldHigh: 75
        nrRsrqThrldLow: 18
        nrRsrpThrldHigh: 76
        packetLossThrldHigh: 230
        packetLossThrldLow: 563
      properties:
        nrRsrpThrldLow:
          maximum: 127
          minimum: 0
          type: integer
        nrRsrpThrldHigh:
          maximum: 127
          minimum: 0
          type: integer
        nrRsrqThrldLow:
          maximum: 127
          minimum: 0
          type: integer
        nrRsrqThrldHigh:
          maximum: 127
          minimum: 0
          type: integer
        packetLossThrldLow:
          description: |
            Unsigned integer indicating Packet Loss Rate (see clauses 5.7.2.8 and 5.7.4 of 3GPP TS 23.501), expressed in tenth of percent.
          maximum: 1000
          minimum: 0
          type: integer
        packetLossThrldHigh:
          description: |
            Unsigned integer indicating Packet Loss Rate (see clauses 5.7.2.8 and 5.7.4 of 3GPP TS 23.501), expressed in tenth of percent.
          maximum: 1000
          minimum: 0
          type: integer
      type: object
    C2CommMode:
      anyOf:
      - enum:
        - DIRECT_C2_COMMUNICATION
        - NETWORK_ASSISTED_C2_COMMUNICATION
        - UTM_NAVIGATED_C2_COMMUNICATION
        type: string
      - description: |
          This string represents the C2 Communication Mode.
        type: string
      description: |
        Possible values are:
        - DIRECT_C2_COMMUNICATION: Indicates Direct C2 Communication mode.
        - NETWORK_ASSISTED_C2_COMMUNICATION: Indicates Network-Assisted C2 Communication mode.
        - UTM_NAVIGATED_C2_COMMUNICATION: Indicates UTM-Navigated C2 communication mode.
    C2CommModeSwitching:
      anyOf:
      - enum:
        - DIRECT_TO_NETWORK_ASSISTED_C2
        - NETWORK_ASSISTED_TO_DIRECT_C2
        - DIRECT_TO_UTM_NAVIGATED_C2
        - NETWORK_ASSISTED_TO_UTM_NAVIGATED_C2
        type: string
      - description: |
          This string represents the C2 Communication Mode Switching type.
        type: string
      description: |
        Possible values are:
        - DIRECT_TO_NETWORK_ASSISTED_C2: Indicates the C2 Communication Mode switching from Direct C2 Communication mode to Network-Assisted C2 Communication mode.
        - NETWORK_ASSISTED_TO_DIRECT_C2: Indicates the C2 Communication Mode switching from Network-Assisted C2 Communication mode to Direct C2 Communication mode.
        - DIRECT_TO_UTM_NAVIGATED_C2: Indicates the C2 Communication Mode switching from Direct C2 Communication mode to UTM-Navigated C2 communication mode.
        - NETWORK_ASSISTED_TO_UTM_NAVIGATED_C2: Indicates the C2 Communication Mode switching from Network-Assisted C2 Communication mode to UTM-Navigated C2 communication mode.
    C2SwitchingCause:
      anyOf:
      - enum:
        - DIRECT_LINK_QUALITY_DEGRADATION
        - DIRECT_LINK_AVAILABLE
        - MOVING_BVLOS
        - LOCATION_CHANGE
        - TRAFFIC_CONTROL_NEEDED
        - SECURITY_REASONS
        - OTHER_REASONS
        type: string
      - description: |
          This string represents the C2 Communication Mode Switching cause.
        type: string
      description: |
        Possible values are:
        - DIRECT_LINK_QUALITY_DEGRADATION: Indicates that the C2 Communication Mode switching was triggered due to a degradation in the direct radio link quality.
        - DIRECT_LINK_AVAILABLE: Indicates that the C2 Communication Mode switching was triggered due to the availability of a direct link, i.e. direct radio link quality enables its usage.
        - MOVING_BVLOS: Indicates that the C2 Communication Mode switching was triggered due to the UAV moving BVLOS.
        - LOCATION_CHANGE: Indicates that the C2 Communication Mode switching was triggered due to an actual or expected location/mobility of the UAV (e.g. which impacts the UAV-to-UAV-C location).
        - TRAFFIC_CONTROL_NEEDED: Indicates that the C2 Communication Mode switching was triggered due to the necessity to have air traffic control.
        - SECURITY_REASONS: Indicates that the C2 Communication Mode switching was triggered due to security reasons.
        - OTHER_REASONS: Indicates that the C2 Communication Mode switching was triggered due to other reasons (e.g. unpredictable event, unknown reason, weather conditions, topography, etc.).
    C2OpModeStatus:
      anyOf:
      - enum:
        - SUCCESSFUL
        - NOT_SUCCESSFUL
        type: string
      - description: |
          This string represents the C2 Operation Mode Management Completion status.
        type: string
      description: |
        Possible values are:
        - SUCCESSFUL: Indicates that the C2 operation mode configuration was successful.
        - NOT_SUCCESSFUL: Indicates that the C2 operation mode configuration was not successful.
    ProblemDetails:
      description: Represents additional information and details on an error response.
      properties:
        type:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        title:
          description: "A short, human-readable summary of the problem type. It should\
            \ not change from occurrence to occurrence of the problem."
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        cause:
          description: "A machine-readable application error cause specific to this\
            \ occurrence of the problem. This IE should be present and provide application-related\
            \ error information, if available."
          type: string
        invalidParams:
          description: "Description of invalid parameters, for a request rejected\
            \ due to invalid parameters."
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      type: object
    Uri:
      description: string providing an URI formatted according to IETF RFC 3986.
      type: string
    InvalidParam:
      description: "Represents the description of invalid parameters, for a request\
        \ rejected due to invalid parameters."
      properties:
        param:
          description: "Attribute's name encoded as a JSON Pointer, or header's name."
          type: string
        reason:
          description: "A human-readable reason, e.g. \"must be a positive integer\"\
            ."
          type: string
      required:
      - param
      type: object
    SupportedFeatures:
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
      pattern: "^[A-Fa-f0-9]*$"
      type: string
    ExternalGroupId:
      description: string containing a local identifier followed by "@" and a domain
        identifier. Both the local identifier and the domain identifier shall be encoded
        as strings that do not contain any "@" characters. See Clauses 4.6.2 and 4.6.3
        of 3GPP TS 23.682 for more information.
      type: string
    Gpsi:
      description: "String identifying a Gpsi shall contain either an External Id\
        \ or an MSISDN.  It shall be formatted as follows -External Identifier= \"\
        extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2\
        \ of 3GPP TS 23.003 that describes an  External Identifier. \n"
      pattern: "^(msisdn-[0-9]{5,15}|extid-[^@]+@[^@]+|.+)$"
      type: string
    Ncgi:
      description: "Contains the NCGI (NR Cell Global Identity), as described in 3GPP\
        \ 23.003"
      example:
        nid: nid
        plmnId:
          mnc: mnc
          mcc: mcc
        nrCellId: nrCellId
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        nrCellId:
          description: "36-bit string identifying an NR Cell Id as specified in clause\
            \ 9.3.1.7 of 3GPP TS 38.413,  in hexadecimal representation. Each character\
            \ in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\"\
            \ or \"A\" to \"F\" and shall represent 4 bits. The most significant character\
            \  representing the 4 most significant bits of the Cell Id shall appear\
            \ first in the string, and  the character representing the 4 least significant\
            \ bit of the Cell Id shall appear last in the  string. \n"
          pattern: "^[A-Fa-f0-9]{9}$"
          type: string
        nid:
          description: "This represents the Network Identifier, which together with\
            \ a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS\
            \ 23.501 clause 5.30.2.1). \n"
          pattern: "^[A-Fa-f0-9]{11}$"
          type: string
      required:
      - nrCellId
      - plmnId
      type: object
    PlmnId:
      description: |
        When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
      example:
        mnc: mnc
        mcc: mcc
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      description: "Mobile Country Code part of the PLMN, comprising 3 digits, as\
        \ defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
      pattern: "^\\d{3}$"
      type: string
    Mnc:
      description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
        \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
      pattern: "^\\d{2,3}$"
      type: string
    NrCellId:
      description: "36-bit string identifying an NR Cell Id as specified in clause\
        \ 9.3.1.7 of 3GPP TS 38.413,  in hexadecimal representation. Each character\
        \ in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"\
        A\" to \"F\" and shall represent 4 bits. The most significant character  representing\
        \ the 4 most significant bits of the Cell Id shall appear first in the string,\
        \ and  the character representing the 4 least significant bit of the Cell\
        \ Id shall appear last in the  string. \n"
      pattern: "^[A-Fa-f0-9]{9}$"
      type: string
    Nid:
      description: "This represents the Network Identifier, which together with a\
        \ PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501\
        \ clause 5.30.2.1). \n"
      pattern: "^[A-Fa-f0-9]{11}$"
      type: string
    Tai:
      description: Contains the tracking area identity as described in 3GPP 23.003
      example:
        tac: tac
        nid: nid
        plmnId:
          mnc: mnc
          mcc: mcc
      properties:
        plmnId:
          $ref: '#/components/schemas/PlmnId'
        tac:
          description: "2 or 3-octet string identifying a tracking area code as specified\
            \ in clause 9.3.3.10  of 3GPP TS 38.413, in hexadecimal representation.\
            \ Each character in the string shall  take a value of \"0\" to \"9\",\
            \ \"a\" to \"f\" or \"A\" to \"F\" and shall represent 4 bits. The most\
            \ significant character representing the 4 most significant bits of the\
            \ TAC shall  appear first in the string, and the character representing\
            \ the 4 least significant bit  of the TAC shall appear last in the string.\
            \ \n"
          pattern: "(^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)"
          type: string
        nid:
          description: "This represents the Network Identifier, which together with\
            \ a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS\
            \ 23.501 clause 5.30.2.1). \n"
          pattern: "^[A-Fa-f0-9]{11}$"
          type: string
      required:
      - plmnId
      - tac
      type: object
    Tac:
      description: "2 or 3-octet string identifying a tracking area code as specified\
        \ in clause 9.3.3.10  of 3GPP TS 38.413, in hexadecimal representation. Each\
        \ character in the string shall  take a value of \"0\" to \"9\", \"a\" to\
        \ \"f\" or \"A\" to \"F\" and shall represent 4 bits. The most significant\
        \ character representing the 4 most significant bits of the TAC shall  appear\
        \ first in the string, and the character representing the 4 least significant\
        \ bit  of the TAC shall appear last in the string. \n"
      pattern: "(^[A-Fa-f0-9]{4}$)|(^[A-Fa-f0-9]{6}$)"
      type: string
    GeographicArea:
      anyOf:
      - $ref: '#/components/schemas/Point'
      - $ref: '#/components/schemas/PointUncertaintyCircle'
      - $ref: '#/components/schemas/PointUncertaintyEllipse'
      - $ref: '#/components/schemas/Polygon'
      - $ref: '#/components/schemas/PointAltitude'
      - $ref: '#/components/schemas/PointAltitudeUncertainty'
      - $ref: '#/components/schemas/EllipsoidArc'
      description: Geographic area specified by different shape.
    Point:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/Point_allOf'
      description: Ellipsoid Point.
    GADShape:
      description: Common base type for GAD shapes.
      discriminator:
        mapping:
          POINT: '#/components/schemas/Point'
          POINT_UNCERTAINTY_CIRCLE: '#/components/schemas/PointUncertaintyCircle'
          POINT_UNCERTAINTY_ELLIPSE: '#/components/schemas/PointUncertaintyEllipse'
          POLYGON: '#/components/schemas/Polygon'
          POINT_ALTITUDE: '#/components/schemas/PointAltitude'
          POINT_ALTITUDE_UNCERTAINTY: '#/components/schemas/PointAltitudeUncertainty'
          ELLIPSOID_ARC: '#/components/schemas/EllipsoidArc'
          LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE: '#/components/schemas/Local2dPointUncertaintyEllipse'
          LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID: '#/components/schemas/Local3dPointUncertaintyEllipsoid'
        propertyName: shape
      properties:
        shape:
          $ref: '#/components/schemas/SupportedGADShapes'
      required:
      - shape
      type: object
      x-parent: true
    SupportedGADShapes:
      anyOf:
      - enum:
        - POINT
        - POINT_UNCERTAINTY_CIRCLE
        - POINT_UNCERTAINTY_ELLIPSE
        - POLYGON
        - POINT_ALTITUDE
        - POINT_ALTITUDE_UNCERTAINTY
        - ELLIPSOID_ARC
        - LOCAL_2D_POINT_UNCERTAINTY_ELLIPSE
        - LOCAL_3D_POINT_UNCERTAINTY_ELLIPSOID
        type: string
      - type: string
      description: Indicates supported GAD shapes.
    PointUncertaintyCircle:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/PointUncertaintyCircle_allOf'
      description: Ellipsoid point with uncertainty circle.
    GeographicalCoordinates:
      description: Geographical coordinates.
      properties:
        lon:
          format: double
          maximum: 180
          minimum: -180
          type: number
        lat:
          format: double
          maximum: 90
          minimum: -90
          type: number
      required:
      - lat
      - lon
      type: object
    Uncertainty:
      description: Indicates value of uncertainty.
      format: float
      minimum: 0
      type: number
    PointUncertaintyEllipse:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/PointUncertaintyEllipse_allOf'
      description: Ellipsoid point with uncertainty ellipse.
    UncertaintyEllipse:
      description: Ellipse with uncertainty.
      properties:
        semiMajor:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        semiMinor:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        orientationMajor:
          description: Indicates value of orientation angle.
          maximum: 180
          minimum: 0
          type: integer
      required:
      - orientationMajor
      - semiMajor
      - semiMinor
      type: object
    Orientation:
      description: Indicates value of orientation angle.
      maximum: 180
      minimum: 0
      type: integer
    Confidence:
      description: Indicates value of confidence.
      maximum: 100
      minimum: 0
      type: integer
    Polygon:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/Polygon_allOf'
      description: Polygon.
    PointList:
      description: List of points.
      items:
        $ref: '#/components/schemas/GeographicalCoordinates'
      maxItems: 15
      minItems: 3
      type: array
    PointAltitude:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/PointAltitude_allOf'
      description: Ellipsoid point with altitude.
    Altitude:
      description: Indicates value of altitude.
      format: double
      maximum: 32767
      minimum: -32767
      type: number
    PointAltitudeUncertainty:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/PointAltitudeUncertainty_allOf'
      description: Ellipsoid point with altitude and uncertainty ellipsoid.
    EllipsoidArc:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/EllipsoidArc_allOf'
      description: Ellipsoid Arc.
    InnerRadius:
      description: Indicates value of the inner radius.
      format: int32
      maximum: 327675
      minimum: 0
      type: integer
    Angle:
      description: Indicates value of angle.
      maximum: 360
      minimum: 0
      type: integer
    Local2dPointUncertaintyEllipse:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/Local2dPointUncertaintyEllipse_allOf'
      description: Local 2D point with uncertainty ellipse
    LocalOrigin:
      description: Indicates a Local origin in a reference system
      properties:
        coordinateId:
          type: string
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
      type: object
    RelativeCartesianLocation:
      description: Relative Cartesian Location
      properties:
        x:
          description: string with format 'float' as defined in OpenAPI.
          format: float
          type: number
        "y":
          description: string with format 'float' as defined in OpenAPI.
          format: float
          type: number
        z:
          description: string with format 'float' as defined in OpenAPI.
          format: float
          type: number
      required:
      - x
      - "y"
      type: object
    Local3dPointUncertaintyEllipsoid:
      allOf:
      - $ref: '#/components/schemas/GADShape'
      - $ref: '#/components/schemas/Local3dPointUncertaintyEllipsoid_allOf'
      description: Local 3D point with uncertainty ellipsoid
    UncertaintyEllipsoid:
      description: Ellipsoid with uncertainty
      properties:
        semiMajor:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        semiMinor:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        vertical:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        orientationMajor:
          description: Indicates value of orientation angle.
          maximum: 180
          minimum: 0
          type: integer
      required:
      - orientationMajor
      - semiMajor
      - semiMinor
      - vertical
      type: object
    PacketLossRate:
      description: |
        Unsigned integer indicating Packet Loss Rate (see clauses 5.7.2.8 and 5.7.4 of 3GPP TS 23.501), expressed in tenth of percent.
      maximum: 1000
      minimum: 0
      type: integer
    Float:
      description: string with format 'float' as defined in OpenAPI.
      format: float
      type: number
    Point_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
      required:
      - point
      type: object
      example: null
    PointUncertaintyCircle_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
        uncertainty:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
      required:
      - point
      - uncertainty
      type: object
      example: null
    PointUncertaintyEllipse_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
        uncertaintyEllipse:
          $ref: '#/components/schemas/UncertaintyEllipse'
        confidence:
          description: Indicates value of confidence.
          maximum: 100
          minimum: 0
          type: integer
      required:
      - confidence
      - point
      - uncertaintyEllipse
      type: object
      example: null
    Polygon_allOf:
      properties:
        pointList:
          description: List of points.
          items:
            $ref: '#/components/schemas/GeographicalCoordinates'
          maxItems: 15
          minItems: 3
          type: array
      required:
      - pointList
      type: object
      example: null
    PointAltitude_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
        altitude:
          description: Indicates value of altitude.
          format: double
          maximum: 32767
          minimum: -32767
          type: number
      required:
      - altitude
      - point
      type: object
      example: null
    PointAltitudeUncertainty_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
        altitude:
          description: Indicates value of altitude.
          format: double
          maximum: 32767
          minimum: -32767
          type: number
        uncertaintyEllipse:
          $ref: '#/components/schemas/UncertaintyEllipse'
        uncertaintyAltitude:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        confidence:
          description: Indicates value of confidence.
          maximum: 100
          minimum: 0
          type: integer
      required:
      - altitude
      - confidence
      - point
      - uncertaintyAltitude
      - uncertaintyEllipse
      type: object
      example: null
    EllipsoidArc_allOf:
      properties:
        point:
          $ref: '#/components/schemas/GeographicalCoordinates'
        innerRadius:
          description: Indicates value of the inner radius.
          format: int32
          maximum: 327675
          minimum: 0
          type: integer
        uncertaintyRadius:
          description: Indicates value of uncertainty.
          format: float
          minimum: 0
          type: number
        offsetAngle:
          description: Indicates value of angle.
          maximum: 360
          minimum: 0
          type: integer
        includedAngle:
          description: Indicates value of angle.
          maximum: 360
          minimum: 0
          type: integer
        confidence:
          description: Indicates value of confidence.
          maximum: 100
          minimum: 0
          type: integer
      required:
      - confidence
      - includedAngle
      - innerRadius
      - offsetAngle
      - point
      - uncertaintyRadius
      type: object
      example: null
    Local2dPointUncertaintyEllipse_allOf:
      properties:
        localOrigin:
          $ref: '#/components/schemas/LocalOrigin'
        point:
          $ref: '#/components/schemas/RelativeCartesianLocation'
        uncertaintyEllipse:
          $ref: '#/components/schemas/UncertaintyEllipse'
        confidence:
          description: Indicates value of confidence.
          maximum: 100
          minimum: 0
          type: integer
      required:
      - confidence
      - localOrigin
      - point
      - uncertaintyEllipse
      type: object
      example: null
    Local3dPointUncertaintyEllipsoid_allOf:
      properties:
        localOrigin:
          $ref: '#/components/schemas/LocalOrigin'
        point:
          $ref: '#/components/schemas/RelativeCartesianLocation'
        uncertaintyEllipsoid:
          $ref: '#/components/schemas/UncertaintyEllipsoid'
        confidence:
          description: Indicates value of confidence.
          maximum: 100
          minimum: 0
          type: integer
      required:
      - confidence
      - localOrigin
      - point
      - uncertaintyEllipsoid
      type: object
      example: null
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: "{tokenUrl}"
      type: oauth2
