/*
Nudm_UECM

Nudm Context Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_UECM

import (
	"encoding/json"
)

// checks if the RegistrationDataSets type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationDataSets{}

// RegistrationDataSets struct for RegistrationDataSets
type RegistrationDataSets struct {
	Amf3Gpp *Amf3GppAccessRegistration `json:"amf3Gpp,omitempty"`
	AmfNon3Gpp *AmfNon3GppAccessRegistration `json:"amfNon3Gpp,omitempty"`
	SmfRegistration *SmfRegistrationInfo `json:"smfRegistration,omitempty"`
	Smsf3Gpp *SmsfRegistration `json:"smsf3Gpp,omitempty"`
	SmsfNon3Gpp *SmsfRegistration `json:"smsfNon3Gpp,omitempty"`
	IpSmGw *IpSmGwRegistration `json:"ipSmGw,omitempty"`
	NwdafRegistration *NwdafRegistrationInfo `json:"nwdafRegistration,omitempty"`
}

// NewRegistrationDataSets instantiates a new RegistrationDataSets object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationDataSets() *RegistrationDataSets {
	this := RegistrationDataSets{}
	return &this
}

// NewRegistrationDataSetsWithDefaults instantiates a new RegistrationDataSets object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationDataSetsWithDefaults() *RegistrationDataSets {
	this := RegistrationDataSets{}
	return &this
}

// GetAmf3Gpp returns the Amf3Gpp field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetAmf3Gpp() Amf3GppAccessRegistration {
	if o == nil || isNil(o.Amf3Gpp) {
		var ret Amf3GppAccessRegistration
		return ret
	}
	return *o.Amf3Gpp
}

// GetAmf3GppOk returns a tuple with the Amf3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetAmf3GppOk() (*Amf3GppAccessRegistration, bool) {
	if o == nil || isNil(o.Amf3Gpp) {
		return nil, false
	}
	return o.Amf3Gpp, true
}

// HasAmf3Gpp returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasAmf3Gpp() bool {
	if o != nil && !isNil(o.Amf3Gpp) {
		return true
	}

	return false
}

// SetAmf3Gpp gets a reference to the given Amf3GppAccessRegistration and assigns it to the Amf3Gpp field.
func (o *RegistrationDataSets) SetAmf3Gpp(v Amf3GppAccessRegistration) {
	o.Amf3Gpp = &v
}

// GetAmfNon3Gpp returns the AmfNon3Gpp field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetAmfNon3Gpp() AmfNon3GppAccessRegistration {
	if o == nil || isNil(o.AmfNon3Gpp) {
		var ret AmfNon3GppAccessRegistration
		return ret
	}
	return *o.AmfNon3Gpp
}

// GetAmfNon3GppOk returns a tuple with the AmfNon3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetAmfNon3GppOk() (*AmfNon3GppAccessRegistration, bool) {
	if o == nil || isNil(o.AmfNon3Gpp) {
		return nil, false
	}
	return o.AmfNon3Gpp, true
}

// HasAmfNon3Gpp returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasAmfNon3Gpp() bool {
	if o != nil && !isNil(o.AmfNon3Gpp) {
		return true
	}

	return false
}

// SetAmfNon3Gpp gets a reference to the given AmfNon3GppAccessRegistration and assigns it to the AmfNon3Gpp field.
func (o *RegistrationDataSets) SetAmfNon3Gpp(v AmfNon3GppAccessRegistration) {
	o.AmfNon3Gpp = &v
}

// GetSmfRegistration returns the SmfRegistration field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetSmfRegistration() SmfRegistrationInfo {
	if o == nil || isNil(o.SmfRegistration) {
		var ret SmfRegistrationInfo
		return ret
	}
	return *o.SmfRegistration
}

// GetSmfRegistrationOk returns a tuple with the SmfRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetSmfRegistrationOk() (*SmfRegistrationInfo, bool) {
	if o == nil || isNil(o.SmfRegistration) {
		return nil, false
	}
	return o.SmfRegistration, true
}

// HasSmfRegistration returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasSmfRegistration() bool {
	if o != nil && !isNil(o.SmfRegistration) {
		return true
	}

	return false
}

// SetSmfRegistration gets a reference to the given SmfRegistrationInfo and assigns it to the SmfRegistration field.
func (o *RegistrationDataSets) SetSmfRegistration(v SmfRegistrationInfo) {
	o.SmfRegistration = &v
}

// GetSmsf3Gpp returns the Smsf3Gpp field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetSmsf3Gpp() SmsfRegistration {
	if o == nil || isNil(o.Smsf3Gpp) {
		var ret SmsfRegistration
		return ret
	}
	return *o.Smsf3Gpp
}

// GetSmsf3GppOk returns a tuple with the Smsf3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetSmsf3GppOk() (*SmsfRegistration, bool) {
	if o == nil || isNil(o.Smsf3Gpp) {
		return nil, false
	}
	return o.Smsf3Gpp, true
}

// HasSmsf3Gpp returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasSmsf3Gpp() bool {
	if o != nil && !isNil(o.Smsf3Gpp) {
		return true
	}

	return false
}

// SetSmsf3Gpp gets a reference to the given SmsfRegistration and assigns it to the Smsf3Gpp field.
func (o *RegistrationDataSets) SetSmsf3Gpp(v SmsfRegistration) {
	o.Smsf3Gpp = &v
}

// GetSmsfNon3Gpp returns the SmsfNon3Gpp field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetSmsfNon3Gpp() SmsfRegistration {
	if o == nil || isNil(o.SmsfNon3Gpp) {
		var ret SmsfRegistration
		return ret
	}
	return *o.SmsfNon3Gpp
}

// GetSmsfNon3GppOk returns a tuple with the SmsfNon3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetSmsfNon3GppOk() (*SmsfRegistration, bool) {
	if o == nil || isNil(o.SmsfNon3Gpp) {
		return nil, false
	}
	return o.SmsfNon3Gpp, true
}

// HasSmsfNon3Gpp returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasSmsfNon3Gpp() bool {
	if o != nil && !isNil(o.SmsfNon3Gpp) {
		return true
	}

	return false
}

// SetSmsfNon3Gpp gets a reference to the given SmsfRegistration and assigns it to the SmsfNon3Gpp field.
func (o *RegistrationDataSets) SetSmsfNon3Gpp(v SmsfRegistration) {
	o.SmsfNon3Gpp = &v
}

// GetIpSmGw returns the IpSmGw field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetIpSmGw() IpSmGwRegistration {
	if o == nil || isNil(o.IpSmGw) {
		var ret IpSmGwRegistration
		return ret
	}
	return *o.IpSmGw
}

// GetIpSmGwOk returns a tuple with the IpSmGw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetIpSmGwOk() (*IpSmGwRegistration, bool) {
	if o == nil || isNil(o.IpSmGw) {
		return nil, false
	}
	return o.IpSmGw, true
}

// HasIpSmGw returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasIpSmGw() bool {
	if o != nil && !isNil(o.IpSmGw) {
		return true
	}

	return false
}

// SetIpSmGw gets a reference to the given IpSmGwRegistration and assigns it to the IpSmGw field.
func (o *RegistrationDataSets) SetIpSmGw(v IpSmGwRegistration) {
	o.IpSmGw = &v
}

// GetNwdafRegistration returns the NwdafRegistration field value if set, zero value otherwise.
func (o *RegistrationDataSets) GetNwdafRegistration() NwdafRegistrationInfo {
	if o == nil || isNil(o.NwdafRegistration) {
		var ret NwdafRegistrationInfo
		return ret
	}
	return *o.NwdafRegistration
}

// GetNwdafRegistrationOk returns a tuple with the NwdafRegistration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationDataSets) GetNwdafRegistrationOk() (*NwdafRegistrationInfo, bool) {
	if o == nil || isNil(o.NwdafRegistration) {
		return nil, false
	}
	return o.NwdafRegistration, true
}

// HasNwdafRegistration returns a boolean if a field has been set.
func (o *RegistrationDataSets) HasNwdafRegistration() bool {
	if o != nil && !isNil(o.NwdafRegistration) {
		return true
	}

	return false
}

// SetNwdafRegistration gets a reference to the given NwdafRegistrationInfo and assigns it to the NwdafRegistration field.
func (o *RegistrationDataSets) SetNwdafRegistration(v NwdafRegistrationInfo) {
	o.NwdafRegistration = &v
}

func (o RegistrationDataSets) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationDataSets) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Amf3Gpp) {
		toSerialize["amf3Gpp"] = o.Amf3Gpp
	}
	if !isNil(o.AmfNon3Gpp) {
		toSerialize["amfNon3Gpp"] = o.AmfNon3Gpp
	}
	if !isNil(o.SmfRegistration) {
		toSerialize["smfRegistration"] = o.SmfRegistration
	}
	if !isNil(o.Smsf3Gpp) {
		toSerialize["smsf3Gpp"] = o.Smsf3Gpp
	}
	if !isNil(o.SmsfNon3Gpp) {
		toSerialize["smsfNon3Gpp"] = o.SmsfNon3Gpp
	}
	if !isNil(o.IpSmGw) {
		toSerialize["ipSmGw"] = o.IpSmGw
	}
	if !isNil(o.NwdafRegistration) {
		toSerialize["nwdafRegistration"] = o.NwdafRegistration
	}
	return toSerialize, nil
}

type NullableRegistrationDataSets struct {
	value *RegistrationDataSets
	isSet bool
}

func (v NullableRegistrationDataSets) Get() *RegistrationDataSets {
	return v.value
}

func (v *NullableRegistrationDataSets) Set(val *RegistrationDataSets) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationDataSets) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationDataSets) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationDataSets(val *RegistrationDataSets) *NullableRegistrationDataSets {
	return &NullableRegistrationDataSets{value: val, isSet: true}
}

func (v NullableRegistrationDataSets) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationDataSets) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


