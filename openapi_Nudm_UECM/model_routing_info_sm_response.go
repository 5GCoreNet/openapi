/*
Nudm_UECM

Nudm Context Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_UECM

import (
	"encoding/json"
)

// checks if the RoutingInfoSmResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RoutingInfoSmResponse{}

// RoutingInfoSmResponse Addressing information of available nodes for SMS delivery
type RoutingInfoSmResponse struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	Supi *string `json:"supi,omitempty"`
	Smsf3Gpp *SmsfRegistration `json:"smsf3Gpp,omitempty"`
	SmsfNon3Gpp *SmsfRegistration `json:"smsfNon3Gpp,omitempty"`
	IpSmGw *IpSmGwInfo `json:"ipSmGw,omitempty"`
	SmsRouter *SmsRouterInfo `json:"smsRouter,omitempty"`
}

// NewRoutingInfoSmResponse instantiates a new RoutingInfoSmResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRoutingInfoSmResponse() *RoutingInfoSmResponse {
	this := RoutingInfoSmResponse{}
	return &this
}

// NewRoutingInfoSmResponseWithDefaults instantiates a new RoutingInfoSmResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRoutingInfoSmResponseWithDefaults() *RoutingInfoSmResponse {
	this := RoutingInfoSmResponse{}
	return &this
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *RoutingInfoSmResponse) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInfoSmResponse) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *RoutingInfoSmResponse) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *RoutingInfoSmResponse) SetSupi(v string) {
	o.Supi = &v
}

// GetSmsf3Gpp returns the Smsf3Gpp field value if set, zero value otherwise.
func (o *RoutingInfoSmResponse) GetSmsf3Gpp() SmsfRegistration {
	if o == nil || IsNil(o.Smsf3Gpp) {
		var ret SmsfRegistration
		return ret
	}
	return *o.Smsf3Gpp
}

// GetSmsf3GppOk returns a tuple with the Smsf3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInfoSmResponse) GetSmsf3GppOk() (*SmsfRegistration, bool) {
	if o == nil || IsNil(o.Smsf3Gpp) {
		return nil, false
	}
	return o.Smsf3Gpp, true
}

// HasSmsf3Gpp returns a boolean if a field has been set.
func (o *RoutingInfoSmResponse) HasSmsf3Gpp() bool {
	if o != nil && !IsNil(o.Smsf3Gpp) {
		return true
	}

	return false
}

// SetSmsf3Gpp gets a reference to the given SmsfRegistration and assigns it to the Smsf3Gpp field.
func (o *RoutingInfoSmResponse) SetSmsf3Gpp(v SmsfRegistration) {
	o.Smsf3Gpp = &v
}

// GetSmsfNon3Gpp returns the SmsfNon3Gpp field value if set, zero value otherwise.
func (o *RoutingInfoSmResponse) GetSmsfNon3Gpp() SmsfRegistration {
	if o == nil || IsNil(o.SmsfNon3Gpp) {
		var ret SmsfRegistration
		return ret
	}
	return *o.SmsfNon3Gpp
}

// GetSmsfNon3GppOk returns a tuple with the SmsfNon3Gpp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInfoSmResponse) GetSmsfNon3GppOk() (*SmsfRegistration, bool) {
	if o == nil || IsNil(o.SmsfNon3Gpp) {
		return nil, false
	}
	return o.SmsfNon3Gpp, true
}

// HasSmsfNon3Gpp returns a boolean if a field has been set.
func (o *RoutingInfoSmResponse) HasSmsfNon3Gpp() bool {
	if o != nil && !IsNil(o.SmsfNon3Gpp) {
		return true
	}

	return false
}

// SetSmsfNon3Gpp gets a reference to the given SmsfRegistration and assigns it to the SmsfNon3Gpp field.
func (o *RoutingInfoSmResponse) SetSmsfNon3Gpp(v SmsfRegistration) {
	o.SmsfNon3Gpp = &v
}

// GetIpSmGw returns the IpSmGw field value if set, zero value otherwise.
func (o *RoutingInfoSmResponse) GetIpSmGw() IpSmGwInfo {
	if o == nil || IsNil(o.IpSmGw) {
		var ret IpSmGwInfo
		return ret
	}
	return *o.IpSmGw
}

// GetIpSmGwOk returns a tuple with the IpSmGw field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInfoSmResponse) GetIpSmGwOk() (*IpSmGwInfo, bool) {
	if o == nil || IsNil(o.IpSmGw) {
		return nil, false
	}
	return o.IpSmGw, true
}

// HasIpSmGw returns a boolean if a field has been set.
func (o *RoutingInfoSmResponse) HasIpSmGw() bool {
	if o != nil && !IsNil(o.IpSmGw) {
		return true
	}

	return false
}

// SetIpSmGw gets a reference to the given IpSmGwInfo and assigns it to the IpSmGw field.
func (o *RoutingInfoSmResponse) SetIpSmGw(v IpSmGwInfo) {
	o.IpSmGw = &v
}

// GetSmsRouter returns the SmsRouter field value if set, zero value otherwise.
func (o *RoutingInfoSmResponse) GetSmsRouter() SmsRouterInfo {
	if o == nil || IsNil(o.SmsRouter) {
		var ret SmsRouterInfo
		return ret
	}
	return *o.SmsRouter
}

// GetSmsRouterOk returns a tuple with the SmsRouter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RoutingInfoSmResponse) GetSmsRouterOk() (*SmsRouterInfo, bool) {
	if o == nil || IsNil(o.SmsRouter) {
		return nil, false
	}
	return o.SmsRouter, true
}

// HasSmsRouter returns a boolean if a field has been set.
func (o *RoutingInfoSmResponse) HasSmsRouter() bool {
	if o != nil && !IsNil(o.SmsRouter) {
		return true
	}

	return false
}

// SetSmsRouter gets a reference to the given SmsRouterInfo and assigns it to the SmsRouter field.
func (o *RoutingInfoSmResponse) SetSmsRouter(v SmsRouterInfo) {
	o.SmsRouter = &v
}

func (o RoutingInfoSmResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RoutingInfoSmResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.Smsf3Gpp) {
		toSerialize["smsf3Gpp"] = o.Smsf3Gpp
	}
	if !IsNil(o.SmsfNon3Gpp) {
		toSerialize["smsfNon3Gpp"] = o.SmsfNon3Gpp
	}
	if !IsNil(o.IpSmGw) {
		toSerialize["ipSmGw"] = o.IpSmGw
	}
	if !IsNil(o.SmsRouter) {
		toSerialize["smsRouter"] = o.SmsRouter
	}
	return toSerialize, nil
}

type NullableRoutingInfoSmResponse struct {
	value *RoutingInfoSmResponse
	isSet bool
}

func (v NullableRoutingInfoSmResponse) Get() *RoutingInfoSmResponse {
	return v.value
}

func (v *NullableRoutingInfoSmResponse) Set(val *RoutingInfoSmResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableRoutingInfoSmResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableRoutingInfoSmResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRoutingInfoSmResponse(val *RoutingInfoSmResponse) *NullableRoutingInfoSmResponse {
	return &NullableRoutingInfoSmResponse{value: val, isSet: true}
}

func (v NullableRoutingInfoSmResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRoutingInfoSmResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


