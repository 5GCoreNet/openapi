/*
Nudm_UECM

Nudm Context Management Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudm_UECM

import (
	"encoding/json"
)

// checks if the VgmlcAddress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VgmlcAddress{}

// VgmlcAddress struct for VgmlcAddress
type VgmlcAddress struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
	VgmlcAddressIpv4 *string `json:"vgmlcAddressIpv4,omitempty"`
	VgmlcAddressIpv6 *Ipv6Addr `json:"vgmlcAddressIpv6,omitempty"`
	// Fully Qualified Domain Name
	VgmlcFqdn *string `json:"vgmlcFqdn,omitempty"`
}

// NewVgmlcAddress instantiates a new VgmlcAddress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVgmlcAddress() *VgmlcAddress {
	this := VgmlcAddress{}
	return &this
}

// NewVgmlcAddressWithDefaults instantiates a new VgmlcAddress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVgmlcAddressWithDefaults() *VgmlcAddress {
	this := VgmlcAddress{}
	return &this
}

// GetVgmlcAddressIpv4 returns the VgmlcAddressIpv4 field value if set, zero value otherwise.
func (o *VgmlcAddress) GetVgmlcAddressIpv4() string {
	if o == nil || isNil(o.VgmlcAddressIpv4) {
		var ret string
		return ret
	}
	return *o.VgmlcAddressIpv4
}

// GetVgmlcAddressIpv4Ok returns a tuple with the VgmlcAddressIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VgmlcAddress) GetVgmlcAddressIpv4Ok() (*string, bool) {
	if o == nil || isNil(o.VgmlcAddressIpv4) {
		return nil, false
	}
	return o.VgmlcAddressIpv4, true
}

// HasVgmlcAddressIpv4 returns a boolean if a field has been set.
func (o *VgmlcAddress) HasVgmlcAddressIpv4() bool {
	if o != nil && !isNil(o.VgmlcAddressIpv4) {
		return true
	}

	return false
}

// SetVgmlcAddressIpv4 gets a reference to the given string and assigns it to the VgmlcAddressIpv4 field.
func (o *VgmlcAddress) SetVgmlcAddressIpv4(v string) {
	o.VgmlcAddressIpv4 = &v
}

// GetVgmlcAddressIpv6 returns the VgmlcAddressIpv6 field value if set, zero value otherwise.
func (o *VgmlcAddress) GetVgmlcAddressIpv6() Ipv6Addr {
	if o == nil || isNil(o.VgmlcAddressIpv6) {
		var ret Ipv6Addr
		return ret
	}
	return *o.VgmlcAddressIpv6
}

// GetVgmlcAddressIpv6Ok returns a tuple with the VgmlcAddressIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VgmlcAddress) GetVgmlcAddressIpv6Ok() (*Ipv6Addr, bool) {
	if o == nil || isNil(o.VgmlcAddressIpv6) {
		return nil, false
	}
	return o.VgmlcAddressIpv6, true
}

// HasVgmlcAddressIpv6 returns a boolean if a field has been set.
func (o *VgmlcAddress) HasVgmlcAddressIpv6() bool {
	if o != nil && !isNil(o.VgmlcAddressIpv6) {
		return true
	}

	return false
}

// SetVgmlcAddressIpv6 gets a reference to the given Ipv6Addr and assigns it to the VgmlcAddressIpv6 field.
func (o *VgmlcAddress) SetVgmlcAddressIpv6(v Ipv6Addr) {
	o.VgmlcAddressIpv6 = &v
}

// GetVgmlcFqdn returns the VgmlcFqdn field value if set, zero value otherwise.
func (o *VgmlcAddress) GetVgmlcFqdn() string {
	if o == nil || isNil(o.VgmlcFqdn) {
		var ret string
		return ret
	}
	return *o.VgmlcFqdn
}

// GetVgmlcFqdnOk returns a tuple with the VgmlcFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VgmlcAddress) GetVgmlcFqdnOk() (*string, bool) {
	if o == nil || isNil(o.VgmlcFqdn) {
		return nil, false
	}
	return o.VgmlcFqdn, true
}

// HasVgmlcFqdn returns a boolean if a field has been set.
func (o *VgmlcAddress) HasVgmlcFqdn() bool {
	if o != nil && !isNil(o.VgmlcFqdn) {
		return true
	}

	return false
}

// SetVgmlcFqdn gets a reference to the given string and assigns it to the VgmlcFqdn field.
func (o *VgmlcAddress) SetVgmlcFqdn(v string) {
	o.VgmlcFqdn = &v
}

func (o VgmlcAddress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VgmlcAddress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.VgmlcAddressIpv4) {
		toSerialize["vgmlcAddressIpv4"] = o.VgmlcAddressIpv4
	}
	if !isNil(o.VgmlcAddressIpv6) {
		toSerialize["vgmlcAddressIpv6"] = o.VgmlcAddressIpv6
	}
	if !isNil(o.VgmlcFqdn) {
		toSerialize["vgmlcFqdn"] = o.VgmlcFqdn
	}
	return toSerialize, nil
}

type NullableVgmlcAddress struct {
	value *VgmlcAddress
	isSet bool
}

func (v NullableVgmlcAddress) Get() *VgmlcAddress {
	return v.value
}

func (v *NullableVgmlcAddress) Set(val *VgmlcAddress) {
	v.value = val
	v.isSet = true
}

func (v NullableVgmlcAddress) IsSet() bool {
	return v.isSet
}

func (v *NullableVgmlcAddress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVgmlcAddress(val *VgmlcAddress) *NullableVgmlcAddress {
	return &NullableVgmlcAddress{value: val, isSet: true}
}

func (v NullableVgmlcAddress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVgmlcAddress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


