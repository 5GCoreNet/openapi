/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the ProseContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProseContext{}

// ProseContext Represents the ProSe services related parameters.
type ProseContext struct {
	DirectDiscovery *UeAuth `json:"directDiscovery,omitempty"`
	DirectComm *UeAuth `json:"directComm,omitempty"`
	L2Relay *UeAuth `json:"l2Relay,omitempty"`
	L3Relay *UeAuth `json:"l3Relay,omitempty"`
	L2Remote *UeAuth `json:"l2Remote,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	NrUePc5Ambr *string `json:"nrUePc5Ambr,omitempty"`
	Pc5QoSPara *Pc5QoSPara `json:"pc5QoSPara,omitempty"`
}

// NewProseContext instantiates a new ProseContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProseContext() *ProseContext {
	this := ProseContext{}
	return &this
}

// NewProseContextWithDefaults instantiates a new ProseContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProseContextWithDefaults() *ProseContext {
	this := ProseContext{}
	return &this
}

// GetDirectDiscovery returns the DirectDiscovery field value if set, zero value otherwise.
func (o *ProseContext) GetDirectDiscovery() UeAuth {
	if o == nil || isNil(o.DirectDiscovery) {
		var ret UeAuth
		return ret
	}
	return *o.DirectDiscovery
}

// GetDirectDiscoveryOk returns a tuple with the DirectDiscovery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetDirectDiscoveryOk() (*UeAuth, bool) {
	if o == nil || isNil(o.DirectDiscovery) {
		return nil, false
	}
	return o.DirectDiscovery, true
}

// HasDirectDiscovery returns a boolean if a field has been set.
func (o *ProseContext) HasDirectDiscovery() bool {
	if o != nil && !isNil(o.DirectDiscovery) {
		return true
	}

	return false
}

// SetDirectDiscovery gets a reference to the given UeAuth and assigns it to the DirectDiscovery field.
func (o *ProseContext) SetDirectDiscovery(v UeAuth) {
	o.DirectDiscovery = &v
}

// GetDirectComm returns the DirectComm field value if set, zero value otherwise.
func (o *ProseContext) GetDirectComm() UeAuth {
	if o == nil || isNil(o.DirectComm) {
		var ret UeAuth
		return ret
	}
	return *o.DirectComm
}

// GetDirectCommOk returns a tuple with the DirectComm field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetDirectCommOk() (*UeAuth, bool) {
	if o == nil || isNil(o.DirectComm) {
		return nil, false
	}
	return o.DirectComm, true
}

// HasDirectComm returns a boolean if a field has been set.
func (o *ProseContext) HasDirectComm() bool {
	if o != nil && !isNil(o.DirectComm) {
		return true
	}

	return false
}

// SetDirectComm gets a reference to the given UeAuth and assigns it to the DirectComm field.
func (o *ProseContext) SetDirectComm(v UeAuth) {
	o.DirectComm = &v
}

// GetL2Relay returns the L2Relay field value if set, zero value otherwise.
func (o *ProseContext) GetL2Relay() UeAuth {
	if o == nil || isNil(o.L2Relay) {
		var ret UeAuth
		return ret
	}
	return *o.L2Relay
}

// GetL2RelayOk returns a tuple with the L2Relay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetL2RelayOk() (*UeAuth, bool) {
	if o == nil || isNil(o.L2Relay) {
		return nil, false
	}
	return o.L2Relay, true
}

// HasL2Relay returns a boolean if a field has been set.
func (o *ProseContext) HasL2Relay() bool {
	if o != nil && !isNil(o.L2Relay) {
		return true
	}

	return false
}

// SetL2Relay gets a reference to the given UeAuth and assigns it to the L2Relay field.
func (o *ProseContext) SetL2Relay(v UeAuth) {
	o.L2Relay = &v
}

// GetL3Relay returns the L3Relay field value if set, zero value otherwise.
func (o *ProseContext) GetL3Relay() UeAuth {
	if o == nil || isNil(o.L3Relay) {
		var ret UeAuth
		return ret
	}
	return *o.L3Relay
}

// GetL3RelayOk returns a tuple with the L3Relay field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetL3RelayOk() (*UeAuth, bool) {
	if o == nil || isNil(o.L3Relay) {
		return nil, false
	}
	return o.L3Relay, true
}

// HasL3Relay returns a boolean if a field has been set.
func (o *ProseContext) HasL3Relay() bool {
	if o != nil && !isNil(o.L3Relay) {
		return true
	}

	return false
}

// SetL3Relay gets a reference to the given UeAuth and assigns it to the L3Relay field.
func (o *ProseContext) SetL3Relay(v UeAuth) {
	o.L3Relay = &v
}

// GetL2Remote returns the L2Remote field value if set, zero value otherwise.
func (o *ProseContext) GetL2Remote() UeAuth {
	if o == nil || isNil(o.L2Remote) {
		var ret UeAuth
		return ret
	}
	return *o.L2Remote
}

// GetL2RemoteOk returns a tuple with the L2Remote field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetL2RemoteOk() (*UeAuth, bool) {
	if o == nil || isNil(o.L2Remote) {
		return nil, false
	}
	return o.L2Remote, true
}

// HasL2Remote returns a boolean if a field has been set.
func (o *ProseContext) HasL2Remote() bool {
	if o != nil && !isNil(o.L2Remote) {
		return true
	}

	return false
}

// SetL2Remote gets a reference to the given UeAuth and assigns it to the L2Remote field.
func (o *ProseContext) SetL2Remote(v UeAuth) {
	o.L2Remote = &v
}

// GetNrUePc5Ambr returns the NrUePc5Ambr field value if set, zero value otherwise.
func (o *ProseContext) GetNrUePc5Ambr() string {
	if o == nil || isNil(o.NrUePc5Ambr) {
		var ret string
		return ret
	}
	return *o.NrUePc5Ambr
}

// GetNrUePc5AmbrOk returns a tuple with the NrUePc5Ambr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetNrUePc5AmbrOk() (*string, bool) {
	if o == nil || isNil(o.NrUePc5Ambr) {
		return nil, false
	}
	return o.NrUePc5Ambr, true
}

// HasNrUePc5Ambr returns a boolean if a field has been set.
func (o *ProseContext) HasNrUePc5Ambr() bool {
	if o != nil && !isNil(o.NrUePc5Ambr) {
		return true
	}

	return false
}

// SetNrUePc5Ambr gets a reference to the given string and assigns it to the NrUePc5Ambr field.
func (o *ProseContext) SetNrUePc5Ambr(v string) {
	o.NrUePc5Ambr = &v
}

// GetPc5QoSPara returns the Pc5QoSPara field value if set, zero value otherwise.
func (o *ProseContext) GetPc5QoSPara() Pc5QoSPara {
	if o == nil || isNil(o.Pc5QoSPara) {
		var ret Pc5QoSPara
		return ret
	}
	return *o.Pc5QoSPara
}

// GetPc5QoSParaOk returns a tuple with the Pc5QoSPara field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProseContext) GetPc5QoSParaOk() (*Pc5QoSPara, bool) {
	if o == nil || isNil(o.Pc5QoSPara) {
		return nil, false
	}
	return o.Pc5QoSPara, true
}

// HasPc5QoSPara returns a boolean if a field has been set.
func (o *ProseContext) HasPc5QoSPara() bool {
	if o != nil && !isNil(o.Pc5QoSPara) {
		return true
	}

	return false
}

// SetPc5QoSPara gets a reference to the given Pc5QoSPara and assigns it to the Pc5QoSPara field.
func (o *ProseContext) SetPc5QoSPara(v Pc5QoSPara) {
	o.Pc5QoSPara = &v
}

func (o ProseContext) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProseContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DirectDiscovery) {
		toSerialize["directDiscovery"] = o.DirectDiscovery
	}
	if !isNil(o.DirectComm) {
		toSerialize["directComm"] = o.DirectComm
	}
	if !isNil(o.L2Relay) {
		toSerialize["l2Relay"] = o.L2Relay
	}
	if !isNil(o.L3Relay) {
		toSerialize["l3Relay"] = o.L3Relay
	}
	if !isNil(o.L2Remote) {
		toSerialize["l2Remote"] = o.L2Remote
	}
	if !isNil(o.NrUePc5Ambr) {
		toSerialize["nrUePc5Ambr"] = o.NrUePc5Ambr
	}
	if !isNil(o.Pc5QoSPara) {
		toSerialize["pc5QoSPara"] = o.Pc5QoSPara
	}
	return toSerialize, nil
}

type NullableProseContext struct {
	value *ProseContext
	isSet bool
}

func (v NullableProseContext) Get() *ProseContext {
	return v.value
}

func (v *NullableProseContext) Set(val *ProseContext) {
	v.value = val
	v.isSet = true
}

func (v NullableProseContext) IsSet() bool {
	return v.isSet
}

func (v *NullableProseContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProseContext(val *ProseContext) *NullableProseContext {
	return &NullableProseContext{value: val, isSet: true}
}

func (v NullableProseContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProseContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


