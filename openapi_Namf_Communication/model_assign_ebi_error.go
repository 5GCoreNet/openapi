/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the AssignEbiError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AssignEbiError{}

// AssignEbiError Data within a failure response to the EBI assignment request
type AssignEbiError struct {
	Error ProblemDetails `json:"error"`
	FailureDetails AssignEbiFailed `json:"failureDetails"`
}

// NewAssignEbiError instantiates a new AssignEbiError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAssignEbiError(error_ ProblemDetails, failureDetails AssignEbiFailed) *AssignEbiError {
	this := AssignEbiError{}
	this.Error = error_
	this.FailureDetails = failureDetails
	return &this
}

// NewAssignEbiErrorWithDefaults instantiates a new AssignEbiError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAssignEbiErrorWithDefaults() *AssignEbiError {
	this := AssignEbiError{}
	return &this
}

// GetError returns the Error field value
func (o *AssignEbiError) GetError() ProblemDetails {
	if o == nil {
		var ret ProblemDetails
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *AssignEbiError) GetErrorOk() (*ProblemDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *AssignEbiError) SetError(v ProblemDetails) {
	o.Error = v
}

// GetFailureDetails returns the FailureDetails field value
func (o *AssignEbiError) GetFailureDetails() AssignEbiFailed {
	if o == nil {
		var ret AssignEbiFailed
		return ret
	}

	return o.FailureDetails
}

// GetFailureDetailsOk returns a tuple with the FailureDetails field value
// and a boolean to check if the value has been set.
func (o *AssignEbiError) GetFailureDetailsOk() (*AssignEbiFailed, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureDetails, true
}

// SetFailureDetails sets field value
func (o *AssignEbiError) SetFailureDetails(v AssignEbiFailed) {
	o.FailureDetails = v
}

func (o AssignEbiError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AssignEbiError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	toSerialize["failureDetails"] = o.FailureDetails
	return toSerialize, nil
}

type NullableAssignEbiError struct {
	value *AssignEbiError
	isSet bool
}

func (v NullableAssignEbiError) Get() *AssignEbiError {
	return v.value
}

func (v *NullableAssignEbiError) Set(val *AssignEbiError) {
	v.value = val
	v.isSet = true
}

func (v NullableAssignEbiError) IsSet() bool {
	return v.isSet
}

func (v *NullableAssignEbiError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAssignEbiError(val *AssignEbiError) *NullableAssignEbiError {
	return &NullableAssignEbiError{value: val, isSet: true}
}

func (v NullableAssignEbiError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAssignEbiError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


