/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the CnAssistedRanPara type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CnAssistedRanPara{}

// CnAssistedRanPara SMF derived CN assisted RAN parameters tuning
type CnAssistedRanPara struct {
	StationaryIndication *StationaryIndication `json:"stationaryIndication,omitempty"`
	// indicating a time in seconds.
	CommunicationDurationTime *int32 `json:"communicationDurationTime,omitempty"`
	// indicating a time in seconds.
	PeriodicTime *int32 `json:"periodicTime,omitempty"`
	ScheduledCommunicationTime *ScheduledCommunicationTime `json:"scheduledCommunicationTime,omitempty"`
	ScheduledCommunicationType *ScheduledCommunicationType `json:"scheduledCommunicationType,omitempty"`
	TrafficProfile *TrafficProfile `json:"trafficProfile,omitempty"`
	BatteryIndication *BatteryIndication `json:"batteryIndication,omitempty"`
}

// NewCnAssistedRanPara instantiates a new CnAssistedRanPara object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCnAssistedRanPara() *CnAssistedRanPara {
	this := CnAssistedRanPara{}
	return &this
}

// NewCnAssistedRanParaWithDefaults instantiates a new CnAssistedRanPara object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCnAssistedRanParaWithDefaults() *CnAssistedRanPara {
	this := CnAssistedRanPara{}
	return &this
}

// GetStationaryIndication returns the StationaryIndication field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetStationaryIndication() StationaryIndication {
	if o == nil || isNil(o.StationaryIndication) {
		var ret StationaryIndication
		return ret
	}
	return *o.StationaryIndication
}

// GetStationaryIndicationOk returns a tuple with the StationaryIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetStationaryIndicationOk() (*StationaryIndication, bool) {
	if o == nil || isNil(o.StationaryIndication) {
		return nil, false
	}
	return o.StationaryIndication, true
}

// HasStationaryIndication returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasStationaryIndication() bool {
	if o != nil && !isNil(o.StationaryIndication) {
		return true
	}

	return false
}

// SetStationaryIndication gets a reference to the given StationaryIndication and assigns it to the StationaryIndication field.
func (o *CnAssistedRanPara) SetStationaryIndication(v StationaryIndication) {
	o.StationaryIndication = &v
}

// GetCommunicationDurationTime returns the CommunicationDurationTime field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetCommunicationDurationTime() int32 {
	if o == nil || isNil(o.CommunicationDurationTime) {
		var ret int32
		return ret
	}
	return *o.CommunicationDurationTime
}

// GetCommunicationDurationTimeOk returns a tuple with the CommunicationDurationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetCommunicationDurationTimeOk() (*int32, bool) {
	if o == nil || isNil(o.CommunicationDurationTime) {
		return nil, false
	}
	return o.CommunicationDurationTime, true
}

// HasCommunicationDurationTime returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasCommunicationDurationTime() bool {
	if o != nil && !isNil(o.CommunicationDurationTime) {
		return true
	}

	return false
}

// SetCommunicationDurationTime gets a reference to the given int32 and assigns it to the CommunicationDurationTime field.
func (o *CnAssistedRanPara) SetCommunicationDurationTime(v int32) {
	o.CommunicationDurationTime = &v
}

// GetPeriodicTime returns the PeriodicTime field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetPeriodicTime() int32 {
	if o == nil || isNil(o.PeriodicTime) {
		var ret int32
		return ret
	}
	return *o.PeriodicTime
}

// GetPeriodicTimeOk returns a tuple with the PeriodicTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetPeriodicTimeOk() (*int32, bool) {
	if o == nil || isNil(o.PeriodicTime) {
		return nil, false
	}
	return o.PeriodicTime, true
}

// HasPeriodicTime returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasPeriodicTime() bool {
	if o != nil && !isNil(o.PeriodicTime) {
		return true
	}

	return false
}

// SetPeriodicTime gets a reference to the given int32 and assigns it to the PeriodicTime field.
func (o *CnAssistedRanPara) SetPeriodicTime(v int32) {
	o.PeriodicTime = &v
}

// GetScheduledCommunicationTime returns the ScheduledCommunicationTime field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetScheduledCommunicationTime() ScheduledCommunicationTime {
	if o == nil || isNil(o.ScheduledCommunicationTime) {
		var ret ScheduledCommunicationTime
		return ret
	}
	return *o.ScheduledCommunicationTime
}

// GetScheduledCommunicationTimeOk returns a tuple with the ScheduledCommunicationTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetScheduledCommunicationTimeOk() (*ScheduledCommunicationTime, bool) {
	if o == nil || isNil(o.ScheduledCommunicationTime) {
		return nil, false
	}
	return o.ScheduledCommunicationTime, true
}

// HasScheduledCommunicationTime returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasScheduledCommunicationTime() bool {
	if o != nil && !isNil(o.ScheduledCommunicationTime) {
		return true
	}

	return false
}

// SetScheduledCommunicationTime gets a reference to the given ScheduledCommunicationTime and assigns it to the ScheduledCommunicationTime field.
func (o *CnAssistedRanPara) SetScheduledCommunicationTime(v ScheduledCommunicationTime) {
	o.ScheduledCommunicationTime = &v
}

// GetScheduledCommunicationType returns the ScheduledCommunicationType field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetScheduledCommunicationType() ScheduledCommunicationType {
	if o == nil || isNil(o.ScheduledCommunicationType) {
		var ret ScheduledCommunicationType
		return ret
	}
	return *o.ScheduledCommunicationType
}

// GetScheduledCommunicationTypeOk returns a tuple with the ScheduledCommunicationType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetScheduledCommunicationTypeOk() (*ScheduledCommunicationType, bool) {
	if o == nil || isNil(o.ScheduledCommunicationType) {
		return nil, false
	}
	return o.ScheduledCommunicationType, true
}

// HasScheduledCommunicationType returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasScheduledCommunicationType() bool {
	if o != nil && !isNil(o.ScheduledCommunicationType) {
		return true
	}

	return false
}

// SetScheduledCommunicationType gets a reference to the given ScheduledCommunicationType and assigns it to the ScheduledCommunicationType field.
func (o *CnAssistedRanPara) SetScheduledCommunicationType(v ScheduledCommunicationType) {
	o.ScheduledCommunicationType = &v
}

// GetTrafficProfile returns the TrafficProfile field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetTrafficProfile() TrafficProfile {
	if o == nil || isNil(o.TrafficProfile) {
		var ret TrafficProfile
		return ret
	}
	return *o.TrafficProfile
}

// GetTrafficProfileOk returns a tuple with the TrafficProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetTrafficProfileOk() (*TrafficProfile, bool) {
	if o == nil || isNil(o.TrafficProfile) {
		return nil, false
	}
	return o.TrafficProfile, true
}

// HasTrafficProfile returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasTrafficProfile() bool {
	if o != nil && !isNil(o.TrafficProfile) {
		return true
	}

	return false
}

// SetTrafficProfile gets a reference to the given TrafficProfile and assigns it to the TrafficProfile field.
func (o *CnAssistedRanPara) SetTrafficProfile(v TrafficProfile) {
	o.TrafficProfile = &v
}

// GetBatteryIndication returns the BatteryIndication field value if set, zero value otherwise.
func (o *CnAssistedRanPara) GetBatteryIndication() BatteryIndication {
	if o == nil || isNil(o.BatteryIndication) {
		var ret BatteryIndication
		return ret
	}
	return *o.BatteryIndication
}

// GetBatteryIndicationOk returns a tuple with the BatteryIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CnAssistedRanPara) GetBatteryIndicationOk() (*BatteryIndication, bool) {
	if o == nil || isNil(o.BatteryIndication) {
		return nil, false
	}
	return o.BatteryIndication, true
}

// HasBatteryIndication returns a boolean if a field has been set.
func (o *CnAssistedRanPara) HasBatteryIndication() bool {
	if o != nil && !isNil(o.BatteryIndication) {
		return true
	}

	return false
}

// SetBatteryIndication gets a reference to the given BatteryIndication and assigns it to the BatteryIndication field.
func (o *CnAssistedRanPara) SetBatteryIndication(v BatteryIndication) {
	o.BatteryIndication = &v
}

func (o CnAssistedRanPara) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CnAssistedRanPara) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.StationaryIndication) {
		toSerialize["stationaryIndication"] = o.StationaryIndication
	}
	if !isNil(o.CommunicationDurationTime) {
		toSerialize["communicationDurationTime"] = o.CommunicationDurationTime
	}
	if !isNil(o.PeriodicTime) {
		toSerialize["periodicTime"] = o.PeriodicTime
	}
	if !isNil(o.ScheduledCommunicationTime) {
		toSerialize["scheduledCommunicationTime"] = o.ScheduledCommunicationTime
	}
	if !isNil(o.ScheduledCommunicationType) {
		toSerialize["scheduledCommunicationType"] = o.ScheduledCommunicationType
	}
	if !isNil(o.TrafficProfile) {
		toSerialize["trafficProfile"] = o.TrafficProfile
	}
	if !isNil(o.BatteryIndication) {
		toSerialize["batteryIndication"] = o.BatteryIndication
	}
	return toSerialize, nil
}

type NullableCnAssistedRanPara struct {
	value *CnAssistedRanPara
	isSet bool
}

func (v NullableCnAssistedRanPara) Get() *CnAssistedRanPara {
	return v.value
}

func (v *NullableCnAssistedRanPara) Set(val *CnAssistedRanPara) {
	v.value = val
	v.isSet = true
}

func (v NullableCnAssistedRanPara) IsSet() bool {
	return v.isSet
}

func (v *NullableCnAssistedRanPara) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCnAssistedRanPara(val *CnAssistedRanPara) *NullableCnAssistedRanPara {
	return &NullableCnAssistedRanPara{value: val, isSet: true}
}

func (v NullableCnAssistedRanPara) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCnAssistedRanPara) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


