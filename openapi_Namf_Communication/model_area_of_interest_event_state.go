/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the AreaOfInterestEventState type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AreaOfInterestEventState{}

// AreaOfInterestEventState Event State of AoI event in old AMF
type AreaOfInterestEventState struct {
	Presence PresenceState `json:"presence"`
	IndividualPraIdList []string `json:"individualPraIdList,omitempty"`
}

// NewAreaOfInterestEventState instantiates a new AreaOfInterestEventState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAreaOfInterestEventState(presence PresenceState) *AreaOfInterestEventState {
	this := AreaOfInterestEventState{}
	this.Presence = presence
	return &this
}

// NewAreaOfInterestEventStateWithDefaults instantiates a new AreaOfInterestEventState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAreaOfInterestEventStateWithDefaults() *AreaOfInterestEventState {
	this := AreaOfInterestEventState{}
	return &this
}

// GetPresence returns the Presence field value
func (o *AreaOfInterestEventState) GetPresence() PresenceState {
	if o == nil {
		var ret PresenceState
		return ret
	}

	return o.Presence
}

// GetPresenceOk returns a tuple with the Presence field value
// and a boolean to check if the value has been set.
func (o *AreaOfInterestEventState) GetPresenceOk() (*PresenceState, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Presence, true
}

// SetPresence sets field value
func (o *AreaOfInterestEventState) SetPresence(v PresenceState) {
	o.Presence = v
}

// GetIndividualPraIdList returns the IndividualPraIdList field value if set, zero value otherwise.
func (o *AreaOfInterestEventState) GetIndividualPraIdList() []string {
	if o == nil || IsNil(o.IndividualPraIdList) {
		var ret []string
		return ret
	}
	return o.IndividualPraIdList
}

// GetIndividualPraIdListOk returns a tuple with the IndividualPraIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AreaOfInterestEventState) GetIndividualPraIdListOk() ([]string, bool) {
	if o == nil || IsNil(o.IndividualPraIdList) {
		return nil, false
	}
	return o.IndividualPraIdList, true
}

// HasIndividualPraIdList returns a boolean if a field has been set.
func (o *AreaOfInterestEventState) HasIndividualPraIdList() bool {
	if o != nil && !IsNil(o.IndividualPraIdList) {
		return true
	}

	return false
}

// SetIndividualPraIdList gets a reference to the given []string and assigns it to the IndividualPraIdList field.
func (o *AreaOfInterestEventState) SetIndividualPraIdList(v []string) {
	o.IndividualPraIdList = v
}

func (o AreaOfInterestEventState) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AreaOfInterestEventState) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["presence"] = o.Presence
	if !IsNil(o.IndividualPraIdList) {
		toSerialize["individualPraIdList"] = o.IndividualPraIdList
	}
	return toSerialize, nil
}

type NullableAreaOfInterestEventState struct {
	value *AreaOfInterestEventState
	isSet bool
}

func (v NullableAreaOfInterestEventState) Get() *AreaOfInterestEventState {
	return v.value
}

func (v *NullableAreaOfInterestEventState) Set(val *AreaOfInterestEventState) {
	v.value = val
	v.isSet = true
}

func (v NullableAreaOfInterestEventState) IsSet() bool {
	return v.isSet
}

func (v *NullableAreaOfInterestEventState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAreaOfInterestEventState(val *AreaOfInterestEventState) *NullableAreaOfInterestEventState {
	return &NullableAreaOfInterestEventState{value: val, isSet: true}
}

func (v NullableAreaOfInterestEventState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAreaOfInterestEventState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


