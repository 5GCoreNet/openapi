/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the SmallDataRateStatusInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmallDataRateStatusInfo{}

// SmallDataRateStatusInfo Represents the small data rate status
type SmallDataRateStatusInfo struct {
	Snssai Snssai `json:"Snssai"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	Dnn                 string              `json:"Dnn"`
	SmallDataRateStatus SmallDataRateStatus `json:"SmallDataRateStatus"`
}

// NewSmallDataRateStatusInfo instantiates a new SmallDataRateStatusInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmallDataRateStatusInfo(snssai Snssai, dnn string, smallDataRateStatus SmallDataRateStatus) *SmallDataRateStatusInfo {
	this := SmallDataRateStatusInfo{}
	this.Snssai = snssai
	this.Dnn = dnn
	this.SmallDataRateStatus = smallDataRateStatus
	return &this
}

// NewSmallDataRateStatusInfoWithDefaults instantiates a new SmallDataRateStatusInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmallDataRateStatusInfoWithDefaults() *SmallDataRateStatusInfo {
	this := SmallDataRateStatusInfo{}
	return &this
}

// GetSnssai returns the Snssai field value
func (o *SmallDataRateStatusInfo) GetSnssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value
// and a boolean to check if the value has been set.
func (o *SmallDataRateStatusInfo) GetSnssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Snssai, true
}

// SetSnssai sets field value
func (o *SmallDataRateStatusInfo) SetSnssai(v Snssai) {
	o.Snssai = v
}

// GetDnn returns the Dnn field value
func (o *SmallDataRateStatusInfo) GetDnn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value
// and a boolean to check if the value has been set.
func (o *SmallDataRateStatusInfo) GetDnnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dnn, true
}

// SetDnn sets field value
func (o *SmallDataRateStatusInfo) SetDnn(v string) {
	o.Dnn = v
}

// GetSmallDataRateStatus returns the SmallDataRateStatus field value
func (o *SmallDataRateStatusInfo) GetSmallDataRateStatus() SmallDataRateStatus {
	if o == nil {
		var ret SmallDataRateStatus
		return ret
	}

	return o.SmallDataRateStatus
}

// GetSmallDataRateStatusOk returns a tuple with the SmallDataRateStatus field value
// and a boolean to check if the value has been set.
func (o *SmallDataRateStatusInfo) GetSmallDataRateStatusOk() (*SmallDataRateStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmallDataRateStatus, true
}

// SetSmallDataRateStatus sets field value
func (o *SmallDataRateStatusInfo) SetSmallDataRateStatus(v SmallDataRateStatus) {
	o.SmallDataRateStatus = v
}

func (o SmallDataRateStatusInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmallDataRateStatusInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Snssai"] = o.Snssai
	toSerialize["Dnn"] = o.Dnn
	toSerialize["SmallDataRateStatus"] = o.SmallDataRateStatus
	return toSerialize, nil
}

type NullableSmallDataRateStatusInfo struct {
	value *SmallDataRateStatusInfo
	isSet bool
}

func (v NullableSmallDataRateStatusInfo) Get() *SmallDataRateStatusInfo {
	return v.value
}

func (v *NullableSmallDataRateStatusInfo) Set(val *SmallDataRateStatusInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableSmallDataRateStatusInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableSmallDataRateStatusInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmallDataRateStatusInfo(val *SmallDataRateStatusInfo) *NullableSmallDataRateStatusInfo {
	return &NullableSmallDataRateStatusInfo{value: val, isSet: true}
}

func (v NullableSmallDataRateStatusInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmallDataRateStatusInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
