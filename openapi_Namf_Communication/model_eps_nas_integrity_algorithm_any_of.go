/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// EpsNasIntegrityAlgorithmAnyOf the model 'EpsNasIntegrityAlgorithmAnyOf'
type EpsNasIntegrityAlgorithmAnyOf string

// List of EpsNasIntegrityAlgorithm_anyOf
const (
	EIA0 EpsNasIntegrityAlgorithmAnyOf = "EIA0"
	EIA1 EpsNasIntegrityAlgorithmAnyOf = "EIA1"
	EIA2 EpsNasIntegrityAlgorithmAnyOf = "EIA2"
	EIA3 EpsNasIntegrityAlgorithmAnyOf = "EIA3"
)

// All allowed values of EpsNasIntegrityAlgorithmAnyOf enum
var AllowedEpsNasIntegrityAlgorithmAnyOfEnumValues = []EpsNasIntegrityAlgorithmAnyOf{
	"EIA0",
	"EIA1",
	"EIA2",
	"EIA3",
}

func (v *EpsNasIntegrityAlgorithmAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := EpsNasIntegrityAlgorithmAnyOf(value)
	for _, existing := range AllowedEpsNasIntegrityAlgorithmAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid EpsNasIntegrityAlgorithmAnyOf", value)
}

// NewEpsNasIntegrityAlgorithmAnyOfFromValue returns a pointer to a valid EpsNasIntegrityAlgorithmAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewEpsNasIntegrityAlgorithmAnyOfFromValue(v string) (*EpsNasIntegrityAlgorithmAnyOf, error) {
	ev := EpsNasIntegrityAlgorithmAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for EpsNasIntegrityAlgorithmAnyOf: valid values are %v", v, AllowedEpsNasIntegrityAlgorithmAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v EpsNasIntegrityAlgorithmAnyOf) IsValid() bool {
	for _, existing := range AllowedEpsNasIntegrityAlgorithmAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to EpsNasIntegrityAlgorithm_anyOf value
func (v EpsNasIntegrityAlgorithmAnyOf) Ptr() *EpsNasIntegrityAlgorithmAnyOf {
	return &v
}

type NullableEpsNasIntegrityAlgorithmAnyOf struct {
	value *EpsNasIntegrityAlgorithmAnyOf
	isSet bool
}

func (v NullableEpsNasIntegrityAlgorithmAnyOf) Get() *EpsNasIntegrityAlgorithmAnyOf {
	return v.value
}

func (v *NullableEpsNasIntegrityAlgorithmAnyOf) Set(val *EpsNasIntegrityAlgorithmAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableEpsNasIntegrityAlgorithmAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableEpsNasIntegrityAlgorithmAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEpsNasIntegrityAlgorithmAnyOf(val *EpsNasIntegrityAlgorithmAnyOf) *NullableEpsNasIntegrityAlgorithmAnyOf {
	return &NullableEpsNasIntegrityAlgorithmAnyOf{value: val, isSet: true}
}

func (v NullableEpsNasIntegrityAlgorithmAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEpsNasIntegrityAlgorithmAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

