/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// PolicyReqTriggerAnyOf the model 'PolicyReqTriggerAnyOf'
type PolicyReqTriggerAnyOf string

// List of PolicyReqTrigger_anyOf
const (
	LOCATION_CHANGE PolicyReqTriggerAnyOf = "LOCATION_CHANGE"
	PRA_CHANGE PolicyReqTriggerAnyOf = "PRA_CHANGE"
	ALLOWED_NSSAI_CHANGE PolicyReqTriggerAnyOf = "ALLOWED_NSSAI_CHANGE"
	NWDAF_DATA_CHANGE PolicyReqTriggerAnyOf = "NWDAF_DATA_CHANGE"
	PLMN_CHANGE PolicyReqTriggerAnyOf = "PLMN_CHANGE"
	CON_STATE_CHANGE PolicyReqTriggerAnyOf = "CON_STATE_CHANGE"
	SMF_SELECT_CHANGE PolicyReqTriggerAnyOf = "SMF_SELECT_CHANGE"
	ACCESS_TYPE_CHANGE PolicyReqTriggerAnyOf = "ACCESS_TYPE_CHANGE"
)

// All allowed values of PolicyReqTriggerAnyOf enum
var AllowedPolicyReqTriggerAnyOfEnumValues = []PolicyReqTriggerAnyOf{
	"LOCATION_CHANGE",
	"PRA_CHANGE",
	"ALLOWED_NSSAI_CHANGE",
	"NWDAF_DATA_CHANGE",
	"PLMN_CHANGE",
	"CON_STATE_CHANGE",
	"SMF_SELECT_CHANGE",
	"ACCESS_TYPE_CHANGE",
}

func (v *PolicyReqTriggerAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PolicyReqTriggerAnyOf(value)
	for _, existing := range AllowedPolicyReqTriggerAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PolicyReqTriggerAnyOf", value)
}

// NewPolicyReqTriggerAnyOfFromValue returns a pointer to a valid PolicyReqTriggerAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPolicyReqTriggerAnyOfFromValue(v string) (*PolicyReqTriggerAnyOf, error) {
	ev := PolicyReqTriggerAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PolicyReqTriggerAnyOf: valid values are %v", v, AllowedPolicyReqTriggerAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PolicyReqTriggerAnyOf) IsValid() bool {
	for _, existing := range AllowedPolicyReqTriggerAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PolicyReqTrigger_anyOf value
func (v PolicyReqTriggerAnyOf) Ptr() *PolicyReqTriggerAnyOf {
	return &v
}

type NullablePolicyReqTriggerAnyOf struct {
	value *PolicyReqTriggerAnyOf
	isSet bool
}

func (v NullablePolicyReqTriggerAnyOf) Get() *PolicyReqTriggerAnyOf {
	return v.value
}

func (v *NullablePolicyReqTriggerAnyOf) Set(val *PolicyReqTriggerAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePolicyReqTriggerAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePolicyReqTriggerAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePolicyReqTriggerAnyOf(val *PolicyReqTriggerAnyOf) *NullablePolicyReqTriggerAnyOf {
	return &NullablePolicyReqTriggerAnyOf{value: val, isSet: true}
}

func (v NullablePolicyReqTriggerAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePolicyReqTriggerAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

