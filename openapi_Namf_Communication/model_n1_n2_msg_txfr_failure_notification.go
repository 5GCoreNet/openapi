/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the N1N2MsgTxfrFailureNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N1N2MsgTxfrFailureNotification{}

// N1N2MsgTxfrFailureNotification Data within a N1/N2 Message Transfer Failure Notification request
type N1N2MsgTxfrFailureNotification struct {
	Cause N1N2MessageTransferCause `json:"cause"`
	// String providing an URI formatted according to RFC 3986.
	N1n2MsgDataUri string `json:"n1n2MsgDataUri"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	RetryAfter *int32 `json:"retryAfter,omitempty"`
}

// NewN1N2MsgTxfrFailureNotification instantiates a new N1N2MsgTxfrFailureNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN1N2MsgTxfrFailureNotification(cause N1N2MessageTransferCause, n1n2MsgDataUri string) *N1N2MsgTxfrFailureNotification {
	this := N1N2MsgTxfrFailureNotification{}
	this.Cause = cause
	this.N1n2MsgDataUri = n1n2MsgDataUri
	return &this
}

// NewN1N2MsgTxfrFailureNotificationWithDefaults instantiates a new N1N2MsgTxfrFailureNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN1N2MsgTxfrFailureNotificationWithDefaults() *N1N2MsgTxfrFailureNotification {
	this := N1N2MsgTxfrFailureNotification{}
	return &this
}

// GetCause returns the Cause field value
func (o *N1N2MsgTxfrFailureNotification) GetCause() N1N2MessageTransferCause {
	if o == nil {
		var ret N1N2MessageTransferCause
		return ret
	}

	return o.Cause
}

// GetCauseOk returns a tuple with the Cause field value
// and a boolean to check if the value has been set.
func (o *N1N2MsgTxfrFailureNotification) GetCauseOk() (*N1N2MessageTransferCause, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cause, true
}

// SetCause sets field value
func (o *N1N2MsgTxfrFailureNotification) SetCause(v N1N2MessageTransferCause) {
	o.Cause = v
}

// GetN1n2MsgDataUri returns the N1n2MsgDataUri field value
func (o *N1N2MsgTxfrFailureNotification) GetN1n2MsgDataUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.N1n2MsgDataUri
}

// GetN1n2MsgDataUriOk returns a tuple with the N1n2MsgDataUri field value
// and a boolean to check if the value has been set.
func (o *N1N2MsgTxfrFailureNotification) GetN1n2MsgDataUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N1n2MsgDataUri, true
}

// SetN1n2MsgDataUri sets field value
func (o *N1N2MsgTxfrFailureNotification) SetN1n2MsgDataUri(v string) {
	o.N1n2MsgDataUri = v
}

// GetRetryAfter returns the RetryAfter field value if set, zero value otherwise.
func (o *N1N2MsgTxfrFailureNotification) GetRetryAfter() int32 {
	if o == nil || isNil(o.RetryAfter) {
		var ret int32
		return ret
	}
	return *o.RetryAfter
}

// GetRetryAfterOk returns a tuple with the RetryAfter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1N2MsgTxfrFailureNotification) GetRetryAfterOk() (*int32, bool) {
	if o == nil || isNil(o.RetryAfter) {
		return nil, false
	}
	return o.RetryAfter, true
}

// HasRetryAfter returns a boolean if a field has been set.
func (o *N1N2MsgTxfrFailureNotification) HasRetryAfter() bool {
	if o != nil && !isNil(o.RetryAfter) {
		return true
	}

	return false
}

// SetRetryAfter gets a reference to the given int32 and assigns it to the RetryAfter field.
func (o *N1N2MsgTxfrFailureNotification) SetRetryAfter(v int32) {
	o.RetryAfter = &v
}

func (o N1N2MsgTxfrFailureNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N1N2MsgTxfrFailureNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cause"] = o.Cause
	toSerialize["n1n2MsgDataUri"] = o.N1n2MsgDataUri
	if !isNil(o.RetryAfter) {
		toSerialize["retryAfter"] = o.RetryAfter
	}
	return toSerialize, nil
}

type NullableN1N2MsgTxfrFailureNotification struct {
	value *N1N2MsgTxfrFailureNotification
	isSet bool
}

func (v NullableN1N2MsgTxfrFailureNotification) Get() *N1N2MsgTxfrFailureNotification {
	return v.value
}

func (v *NullableN1N2MsgTxfrFailureNotification) Set(val *N1N2MsgTxfrFailureNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableN1N2MsgTxfrFailureNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableN1N2MsgTxfrFailureNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN1N2MsgTxfrFailureNotification(val *N1N2MsgTxfrFailureNotification) *NullableN1N2MsgTxfrFailureNotification {
	return &NullableN1N2MsgTxfrFailureNotification{value: val, isSet: true}
}

func (v NullableN1N2MsgTxfrFailureNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN1N2MsgTxfrFailureNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


