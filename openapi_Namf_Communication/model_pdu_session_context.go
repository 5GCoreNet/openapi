/*
Namf_Communication

AMF Communication Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the PduSessionContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PduSessionContext{}

// PduSessionContext Represents a PDU Session Context in UE Context
type PduSessionContext struct {
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	PduSessionId int32 `json:"pduSessionId"`
	// String providing an URI formatted according to RFC 3986.
	SmContextRef string `json:"smContextRef"`
	SNssai       Snssai `json:"sNssai"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	Dnn string `json:"dnn"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	SelectedDnn          *string         `json:"selectedDnn,omitempty"`
	AccessType           AccessType      `json:"accessType"`
	AdditionalAccessType *AccessType     `json:"additionalAccessType,omitempty"`
	AllocatedEbiList     []EbiArpMapping `json:"allocatedEbiList,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	HsmfId *string `json:"hsmfId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	HsmfSetId *string `json:"hsmfSetId,omitempty"`
	// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NID> encoded as defined in clause 5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic    characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end    with either an alphabetic character or a digit.
	HsmfServiceSetId *string          `json:"hsmfServiceSetId,omitempty"`
	SmfBinding       *SbiBindingLevel `json:"smfBinding,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	VsmfId *string `json:"vsmfId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	VsmfSetId *string `json:"vsmfSetId,omitempty"`
	// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NID> encoded as defined in clause 5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic    characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end    with either an alphabetic character or a digit.
	VsmfServiceSetId *string          `json:"vsmfServiceSetId,omitempty"`
	VsmfBinding      *SbiBindingLevel `json:"vsmfBinding,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	IsmfId *string `json:"ismfId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	IsmfSetId *string `json:"ismfSetId,omitempty"`
	// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NID> encoded as defined in clause 5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic    characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end    with either an alphabetic character or a digit.
	IsmfServiceSetId *string          `json:"ismfServiceSetId,omitempty"`
	IsmfBinding      *SbiBindingLevel `json:"ismfBinding,omitempty"`
	// Contains the Identifier of the selected Network Slice instance
	NsInstance           *string            `json:"nsInstance,omitempty"`
	SmfServiceInstanceId *string            `json:"smfServiceInstanceId,omitempty"`
	MaPduSession         *bool              `json:"maPduSession,omitempty"`
	CnAssistedRanPara    *CnAssistedRanPara `json:"cnAssistedRanPara,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfManagementUri *string `json:"nrfManagementUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfDiscoveryUri *string `json:"nrfDiscoveryUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfAccessTokenUri *string `json:"nrfAccessTokenUri,omitempty"`
	SmfBindingInfo    *string `json:"smfBindingInfo,omitempty"`
	VsmfBindingInfo   *string `json:"vsmfBindingInfo,omitempty"`
	IsmfBindingInfo   *string `json:"ismfBindingInfo,omitempty"`
	AdditionalSnssai  *Snssai `json:"additionalSnssai,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot *string `json:"interPlmnApiRoot,omitempty"`
	// Fully Qualified Domain Name
	PgwFqdn   *string    `json:"pgwFqdn,omitempty"`
	PgwIpAddr *IpAddress `json:"pgwIpAddr,omitempty"`
	PlmnId    *PlmnId    `json:"plmnId,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	AnchorSmfSupportedFeatures *string `json:"anchorSmfSupportedFeatures,omitempty"`
	AnchorSmfOauth2Required    *bool   `json:"anchorSmfOauth2Required,omitempty"`
}

// NewPduSessionContext instantiates a new PduSessionContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPduSessionContext(pduSessionId int32, smContextRef string, sNssai Snssai, dnn string, accessType AccessType) *PduSessionContext {
	this := PduSessionContext{}
	this.PduSessionId = pduSessionId
	this.SmContextRef = smContextRef
	this.SNssai = sNssai
	this.Dnn = dnn
	this.AccessType = accessType
	var maPduSession bool = false
	this.MaPduSession = &maPduSession
	return &this
}

// NewPduSessionContextWithDefaults instantiates a new PduSessionContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPduSessionContextWithDefaults() *PduSessionContext {
	this := PduSessionContext{}
	var maPduSession bool = false
	this.MaPduSession = &maPduSession
	return &this
}

// GetPduSessionId returns the PduSessionId field value
func (o *PduSessionContext) GetPduSessionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PduSessionId
}

// GetPduSessionIdOk returns a tuple with the PduSessionId field value
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetPduSessionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PduSessionId, true
}

// SetPduSessionId sets field value
func (o *PduSessionContext) SetPduSessionId(v int32) {
	o.PduSessionId = v
}

// GetSmContextRef returns the SmContextRef field value
func (o *PduSessionContext) GetSmContextRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SmContextRef
}

// GetSmContextRefOk returns a tuple with the SmContextRef field value
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSmContextRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmContextRef, true
}

// SetSmContextRef sets field value
func (o *PduSessionContext) SetSmContextRef(v string) {
	o.SmContextRef = v
}

// GetSNssai returns the SNssai field value
func (o *PduSessionContext) GetSNssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSNssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SNssai, true
}

// SetSNssai sets field value
func (o *PduSessionContext) SetSNssai(v Snssai) {
	o.SNssai = v
}

// GetDnn returns the Dnn field value
func (o *PduSessionContext) GetDnn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetDnnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dnn, true
}

// SetDnn sets field value
func (o *PduSessionContext) SetDnn(v string) {
	o.Dnn = v
}

// GetSelectedDnn returns the SelectedDnn field value if set, zero value otherwise.
func (o *PduSessionContext) GetSelectedDnn() string {
	if o == nil || IsNil(o.SelectedDnn) {
		var ret string
		return ret
	}
	return *o.SelectedDnn
}

// GetSelectedDnnOk returns a tuple with the SelectedDnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSelectedDnnOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedDnn) {
		return nil, false
	}
	return o.SelectedDnn, true
}

// HasSelectedDnn returns a boolean if a field has been set.
func (o *PduSessionContext) HasSelectedDnn() bool {
	if o != nil && !IsNil(o.SelectedDnn) {
		return true
	}

	return false
}

// SetSelectedDnn gets a reference to the given string and assigns it to the SelectedDnn field.
func (o *PduSessionContext) SetSelectedDnn(v string) {
	o.SelectedDnn = &v
}

// GetAccessType returns the AccessType field value
func (o *PduSessionContext) GetAccessType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAccessTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *PduSessionContext) SetAccessType(v AccessType) {
	o.AccessType = v
}

// GetAdditionalAccessType returns the AdditionalAccessType field value if set, zero value otherwise.
func (o *PduSessionContext) GetAdditionalAccessType() AccessType {
	if o == nil || IsNil(o.AdditionalAccessType) {
		var ret AccessType
		return ret
	}
	return *o.AdditionalAccessType
}

// GetAdditionalAccessTypeOk returns a tuple with the AdditionalAccessType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAdditionalAccessTypeOk() (*AccessType, bool) {
	if o == nil || IsNil(o.AdditionalAccessType) {
		return nil, false
	}
	return o.AdditionalAccessType, true
}

// HasAdditionalAccessType returns a boolean if a field has been set.
func (o *PduSessionContext) HasAdditionalAccessType() bool {
	if o != nil && !IsNil(o.AdditionalAccessType) {
		return true
	}

	return false
}

// SetAdditionalAccessType gets a reference to the given AccessType and assigns it to the AdditionalAccessType field.
func (o *PduSessionContext) SetAdditionalAccessType(v AccessType) {
	o.AdditionalAccessType = &v
}

// GetAllocatedEbiList returns the AllocatedEbiList field value if set, zero value otherwise.
func (o *PduSessionContext) GetAllocatedEbiList() []EbiArpMapping {
	if o == nil || IsNil(o.AllocatedEbiList) {
		var ret []EbiArpMapping
		return ret
	}
	return o.AllocatedEbiList
}

// GetAllocatedEbiListOk returns a tuple with the AllocatedEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAllocatedEbiListOk() ([]EbiArpMapping, bool) {
	if o == nil || IsNil(o.AllocatedEbiList) {
		return nil, false
	}
	return o.AllocatedEbiList, true
}

// HasAllocatedEbiList returns a boolean if a field has been set.
func (o *PduSessionContext) HasAllocatedEbiList() bool {
	if o != nil && !IsNil(o.AllocatedEbiList) {
		return true
	}

	return false
}

// SetAllocatedEbiList gets a reference to the given []EbiArpMapping and assigns it to the AllocatedEbiList field.
func (o *PduSessionContext) SetAllocatedEbiList(v []EbiArpMapping) {
	o.AllocatedEbiList = v
}

// GetHsmfId returns the HsmfId field value if set, zero value otherwise.
func (o *PduSessionContext) GetHsmfId() string {
	if o == nil || IsNil(o.HsmfId) {
		var ret string
		return ret
	}
	return *o.HsmfId
}

// GetHsmfIdOk returns a tuple with the HsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetHsmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.HsmfId) {
		return nil, false
	}
	return o.HsmfId, true
}

// HasHsmfId returns a boolean if a field has been set.
func (o *PduSessionContext) HasHsmfId() bool {
	if o != nil && !IsNil(o.HsmfId) {
		return true
	}

	return false
}

// SetHsmfId gets a reference to the given string and assigns it to the HsmfId field.
func (o *PduSessionContext) SetHsmfId(v string) {
	o.HsmfId = &v
}

// GetHsmfSetId returns the HsmfSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetHsmfSetId() string {
	if o == nil || IsNil(o.HsmfSetId) {
		var ret string
		return ret
	}
	return *o.HsmfSetId
}

// GetHsmfSetIdOk returns a tuple with the HsmfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetHsmfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.HsmfSetId) {
		return nil, false
	}
	return o.HsmfSetId, true
}

// HasHsmfSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasHsmfSetId() bool {
	if o != nil && !IsNil(o.HsmfSetId) {
		return true
	}

	return false
}

// SetHsmfSetId gets a reference to the given string and assigns it to the HsmfSetId field.
func (o *PduSessionContext) SetHsmfSetId(v string) {
	o.HsmfSetId = &v
}

// GetHsmfServiceSetId returns the HsmfServiceSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetHsmfServiceSetId() string {
	if o == nil || IsNil(o.HsmfServiceSetId) {
		var ret string
		return ret
	}
	return *o.HsmfServiceSetId
}

// GetHsmfServiceSetIdOk returns a tuple with the HsmfServiceSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetHsmfServiceSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.HsmfServiceSetId) {
		return nil, false
	}
	return o.HsmfServiceSetId, true
}

// HasHsmfServiceSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasHsmfServiceSetId() bool {
	if o != nil && !IsNil(o.HsmfServiceSetId) {
		return true
	}

	return false
}

// SetHsmfServiceSetId gets a reference to the given string and assigns it to the HsmfServiceSetId field.
func (o *PduSessionContext) SetHsmfServiceSetId(v string) {
	o.HsmfServiceSetId = &v
}

// GetSmfBinding returns the SmfBinding field value if set, zero value otherwise.
func (o *PduSessionContext) GetSmfBinding() SbiBindingLevel {
	if o == nil || IsNil(o.SmfBinding) {
		var ret SbiBindingLevel
		return ret
	}
	return *o.SmfBinding
}

// GetSmfBindingOk returns a tuple with the SmfBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSmfBindingOk() (*SbiBindingLevel, bool) {
	if o == nil || IsNil(o.SmfBinding) {
		return nil, false
	}
	return o.SmfBinding, true
}

// HasSmfBinding returns a boolean if a field has been set.
func (o *PduSessionContext) HasSmfBinding() bool {
	if o != nil && !IsNil(o.SmfBinding) {
		return true
	}

	return false
}

// SetSmfBinding gets a reference to the given SbiBindingLevel and assigns it to the SmfBinding field.
func (o *PduSessionContext) SetSmfBinding(v SbiBindingLevel) {
	o.SmfBinding = &v
}

// GetVsmfId returns the VsmfId field value if set, zero value otherwise.
func (o *PduSessionContext) GetVsmfId() string {
	if o == nil || IsNil(o.VsmfId) {
		var ret string
		return ret
	}
	return *o.VsmfId
}

// GetVsmfIdOk returns a tuple with the VsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetVsmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.VsmfId) {
		return nil, false
	}
	return o.VsmfId, true
}

// HasVsmfId returns a boolean if a field has been set.
func (o *PduSessionContext) HasVsmfId() bool {
	if o != nil && !IsNil(o.VsmfId) {
		return true
	}

	return false
}

// SetVsmfId gets a reference to the given string and assigns it to the VsmfId field.
func (o *PduSessionContext) SetVsmfId(v string) {
	o.VsmfId = &v
}

// GetVsmfSetId returns the VsmfSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetVsmfSetId() string {
	if o == nil || IsNil(o.VsmfSetId) {
		var ret string
		return ret
	}
	return *o.VsmfSetId
}

// GetVsmfSetIdOk returns a tuple with the VsmfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetVsmfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.VsmfSetId) {
		return nil, false
	}
	return o.VsmfSetId, true
}

// HasVsmfSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasVsmfSetId() bool {
	if o != nil && !IsNil(o.VsmfSetId) {
		return true
	}

	return false
}

// SetVsmfSetId gets a reference to the given string and assigns it to the VsmfSetId field.
func (o *PduSessionContext) SetVsmfSetId(v string) {
	o.VsmfSetId = &v
}

// GetVsmfServiceSetId returns the VsmfServiceSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetVsmfServiceSetId() string {
	if o == nil || IsNil(o.VsmfServiceSetId) {
		var ret string
		return ret
	}
	return *o.VsmfServiceSetId
}

// GetVsmfServiceSetIdOk returns a tuple with the VsmfServiceSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetVsmfServiceSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.VsmfServiceSetId) {
		return nil, false
	}
	return o.VsmfServiceSetId, true
}

// HasVsmfServiceSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasVsmfServiceSetId() bool {
	if o != nil && !IsNil(o.VsmfServiceSetId) {
		return true
	}

	return false
}

// SetVsmfServiceSetId gets a reference to the given string and assigns it to the VsmfServiceSetId field.
func (o *PduSessionContext) SetVsmfServiceSetId(v string) {
	o.VsmfServiceSetId = &v
}

// GetVsmfBinding returns the VsmfBinding field value if set, zero value otherwise.
func (o *PduSessionContext) GetVsmfBinding() SbiBindingLevel {
	if o == nil || IsNil(o.VsmfBinding) {
		var ret SbiBindingLevel
		return ret
	}
	return *o.VsmfBinding
}

// GetVsmfBindingOk returns a tuple with the VsmfBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetVsmfBindingOk() (*SbiBindingLevel, bool) {
	if o == nil || IsNil(o.VsmfBinding) {
		return nil, false
	}
	return o.VsmfBinding, true
}

// HasVsmfBinding returns a boolean if a field has been set.
func (o *PduSessionContext) HasVsmfBinding() bool {
	if o != nil && !IsNil(o.VsmfBinding) {
		return true
	}

	return false
}

// SetVsmfBinding gets a reference to the given SbiBindingLevel and assigns it to the VsmfBinding field.
func (o *PduSessionContext) SetVsmfBinding(v SbiBindingLevel) {
	o.VsmfBinding = &v
}

// GetIsmfId returns the IsmfId field value if set, zero value otherwise.
func (o *PduSessionContext) GetIsmfId() string {
	if o == nil || IsNil(o.IsmfId) {
		var ret string
		return ret
	}
	return *o.IsmfId
}

// GetIsmfIdOk returns a tuple with the IsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetIsmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.IsmfId) {
		return nil, false
	}
	return o.IsmfId, true
}

// HasIsmfId returns a boolean if a field has been set.
func (o *PduSessionContext) HasIsmfId() bool {
	if o != nil && !IsNil(o.IsmfId) {
		return true
	}

	return false
}

// SetIsmfId gets a reference to the given string and assigns it to the IsmfId field.
func (o *PduSessionContext) SetIsmfId(v string) {
	o.IsmfId = &v
}

// GetIsmfSetId returns the IsmfSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetIsmfSetId() string {
	if o == nil || IsNil(o.IsmfSetId) {
		var ret string
		return ret
	}
	return *o.IsmfSetId
}

// GetIsmfSetIdOk returns a tuple with the IsmfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetIsmfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.IsmfSetId) {
		return nil, false
	}
	return o.IsmfSetId, true
}

// HasIsmfSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasIsmfSetId() bool {
	if o != nil && !IsNil(o.IsmfSetId) {
		return true
	}

	return false
}

// SetIsmfSetId gets a reference to the given string and assigns it to the IsmfSetId field.
func (o *PduSessionContext) SetIsmfSetId(v string) {
	o.IsmfSetId = &v
}

// GetIsmfServiceSetId returns the IsmfServiceSetId field value if set, zero value otherwise.
func (o *PduSessionContext) GetIsmfServiceSetId() string {
	if o == nil || IsNil(o.IsmfServiceSetId) {
		var ret string
		return ret
	}
	return *o.IsmfServiceSetId
}

// GetIsmfServiceSetIdOk returns a tuple with the IsmfServiceSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetIsmfServiceSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.IsmfServiceSetId) {
		return nil, false
	}
	return o.IsmfServiceSetId, true
}

// HasIsmfServiceSetId returns a boolean if a field has been set.
func (o *PduSessionContext) HasIsmfServiceSetId() bool {
	if o != nil && !IsNil(o.IsmfServiceSetId) {
		return true
	}

	return false
}

// SetIsmfServiceSetId gets a reference to the given string and assigns it to the IsmfServiceSetId field.
func (o *PduSessionContext) SetIsmfServiceSetId(v string) {
	o.IsmfServiceSetId = &v
}

// GetIsmfBinding returns the IsmfBinding field value if set, zero value otherwise.
func (o *PduSessionContext) GetIsmfBinding() SbiBindingLevel {
	if o == nil || IsNil(o.IsmfBinding) {
		var ret SbiBindingLevel
		return ret
	}
	return *o.IsmfBinding
}

// GetIsmfBindingOk returns a tuple with the IsmfBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetIsmfBindingOk() (*SbiBindingLevel, bool) {
	if o == nil || IsNil(o.IsmfBinding) {
		return nil, false
	}
	return o.IsmfBinding, true
}

// HasIsmfBinding returns a boolean if a field has been set.
func (o *PduSessionContext) HasIsmfBinding() bool {
	if o != nil && !IsNil(o.IsmfBinding) {
		return true
	}

	return false
}

// SetIsmfBinding gets a reference to the given SbiBindingLevel and assigns it to the IsmfBinding field.
func (o *PduSessionContext) SetIsmfBinding(v SbiBindingLevel) {
	o.IsmfBinding = &v
}

// GetNsInstance returns the NsInstance field value if set, zero value otherwise.
func (o *PduSessionContext) GetNsInstance() string {
	if o == nil || IsNil(o.NsInstance) {
		var ret string
		return ret
	}
	return *o.NsInstance
}

// GetNsInstanceOk returns a tuple with the NsInstance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetNsInstanceOk() (*string, bool) {
	if o == nil || IsNil(o.NsInstance) {
		return nil, false
	}
	return o.NsInstance, true
}

// HasNsInstance returns a boolean if a field has been set.
func (o *PduSessionContext) HasNsInstance() bool {
	if o != nil && !IsNil(o.NsInstance) {
		return true
	}

	return false
}

// SetNsInstance gets a reference to the given string and assigns it to the NsInstance field.
func (o *PduSessionContext) SetNsInstance(v string) {
	o.NsInstance = &v
}

// GetSmfServiceInstanceId returns the SmfServiceInstanceId field value if set, zero value otherwise.
func (o *PduSessionContext) GetSmfServiceInstanceId() string {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.SmfServiceInstanceId
}

// GetSmfServiceInstanceIdOk returns a tuple with the SmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		return nil, false
	}
	return o.SmfServiceInstanceId, true
}

// HasSmfServiceInstanceId returns a boolean if a field has been set.
func (o *PduSessionContext) HasSmfServiceInstanceId() bool {
	if o != nil && !IsNil(o.SmfServiceInstanceId) {
		return true
	}

	return false
}

// SetSmfServiceInstanceId gets a reference to the given string and assigns it to the SmfServiceInstanceId field.
func (o *PduSessionContext) SetSmfServiceInstanceId(v string) {
	o.SmfServiceInstanceId = &v
}

// GetMaPduSession returns the MaPduSession field value if set, zero value otherwise.
func (o *PduSessionContext) GetMaPduSession() bool {
	if o == nil || IsNil(o.MaPduSession) {
		var ret bool
		return ret
	}
	return *o.MaPduSession
}

// GetMaPduSessionOk returns a tuple with the MaPduSession field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetMaPduSessionOk() (*bool, bool) {
	if o == nil || IsNil(o.MaPduSession) {
		return nil, false
	}
	return o.MaPduSession, true
}

// HasMaPduSession returns a boolean if a field has been set.
func (o *PduSessionContext) HasMaPduSession() bool {
	if o != nil && !IsNil(o.MaPduSession) {
		return true
	}

	return false
}

// SetMaPduSession gets a reference to the given bool and assigns it to the MaPduSession field.
func (o *PduSessionContext) SetMaPduSession(v bool) {
	o.MaPduSession = &v
}

// GetCnAssistedRanPara returns the CnAssistedRanPara field value if set, zero value otherwise.
func (o *PduSessionContext) GetCnAssistedRanPara() CnAssistedRanPara {
	if o == nil || IsNil(o.CnAssistedRanPara) {
		var ret CnAssistedRanPara
		return ret
	}
	return *o.CnAssistedRanPara
}

// GetCnAssistedRanParaOk returns a tuple with the CnAssistedRanPara field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetCnAssistedRanParaOk() (*CnAssistedRanPara, bool) {
	if o == nil || IsNil(o.CnAssistedRanPara) {
		return nil, false
	}
	return o.CnAssistedRanPara, true
}

// HasCnAssistedRanPara returns a boolean if a field has been set.
func (o *PduSessionContext) HasCnAssistedRanPara() bool {
	if o != nil && !IsNil(o.CnAssistedRanPara) {
		return true
	}

	return false
}

// SetCnAssistedRanPara gets a reference to the given CnAssistedRanPara and assigns it to the CnAssistedRanPara field.
func (o *PduSessionContext) SetCnAssistedRanPara(v CnAssistedRanPara) {
	o.CnAssistedRanPara = &v
}

// GetNrfManagementUri returns the NrfManagementUri field value if set, zero value otherwise.
func (o *PduSessionContext) GetNrfManagementUri() string {
	if o == nil || IsNil(o.NrfManagementUri) {
		var ret string
		return ret
	}
	return *o.NrfManagementUri
}

// GetNrfManagementUriOk returns a tuple with the NrfManagementUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetNrfManagementUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfManagementUri) {
		return nil, false
	}
	return o.NrfManagementUri, true
}

// HasNrfManagementUri returns a boolean if a field has been set.
func (o *PduSessionContext) HasNrfManagementUri() bool {
	if o != nil && !IsNil(o.NrfManagementUri) {
		return true
	}

	return false
}

// SetNrfManagementUri gets a reference to the given string and assigns it to the NrfManagementUri field.
func (o *PduSessionContext) SetNrfManagementUri(v string) {
	o.NrfManagementUri = &v
}

// GetNrfDiscoveryUri returns the NrfDiscoveryUri field value if set, zero value otherwise.
func (o *PduSessionContext) GetNrfDiscoveryUri() string {
	if o == nil || IsNil(o.NrfDiscoveryUri) {
		var ret string
		return ret
	}
	return *o.NrfDiscoveryUri
}

// GetNrfDiscoveryUriOk returns a tuple with the NrfDiscoveryUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetNrfDiscoveryUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfDiscoveryUri) {
		return nil, false
	}
	return o.NrfDiscoveryUri, true
}

// HasNrfDiscoveryUri returns a boolean if a field has been set.
func (o *PduSessionContext) HasNrfDiscoveryUri() bool {
	if o != nil && !IsNil(o.NrfDiscoveryUri) {
		return true
	}

	return false
}

// SetNrfDiscoveryUri gets a reference to the given string and assigns it to the NrfDiscoveryUri field.
func (o *PduSessionContext) SetNrfDiscoveryUri(v string) {
	o.NrfDiscoveryUri = &v
}

// GetNrfAccessTokenUri returns the NrfAccessTokenUri field value if set, zero value otherwise.
func (o *PduSessionContext) GetNrfAccessTokenUri() string {
	if o == nil || IsNil(o.NrfAccessTokenUri) {
		var ret string
		return ret
	}
	return *o.NrfAccessTokenUri
}

// GetNrfAccessTokenUriOk returns a tuple with the NrfAccessTokenUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetNrfAccessTokenUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfAccessTokenUri) {
		return nil, false
	}
	return o.NrfAccessTokenUri, true
}

// HasNrfAccessTokenUri returns a boolean if a field has been set.
func (o *PduSessionContext) HasNrfAccessTokenUri() bool {
	if o != nil && !IsNil(o.NrfAccessTokenUri) {
		return true
	}

	return false
}

// SetNrfAccessTokenUri gets a reference to the given string and assigns it to the NrfAccessTokenUri field.
func (o *PduSessionContext) SetNrfAccessTokenUri(v string) {
	o.NrfAccessTokenUri = &v
}

// GetSmfBindingInfo returns the SmfBindingInfo field value if set, zero value otherwise.
func (o *PduSessionContext) GetSmfBindingInfo() string {
	if o == nil || IsNil(o.SmfBindingInfo) {
		var ret string
		return ret
	}
	return *o.SmfBindingInfo
}

// GetSmfBindingInfoOk returns a tuple with the SmfBindingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetSmfBindingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.SmfBindingInfo) {
		return nil, false
	}
	return o.SmfBindingInfo, true
}

// HasSmfBindingInfo returns a boolean if a field has been set.
func (o *PduSessionContext) HasSmfBindingInfo() bool {
	if o != nil && !IsNil(o.SmfBindingInfo) {
		return true
	}

	return false
}

// SetSmfBindingInfo gets a reference to the given string and assigns it to the SmfBindingInfo field.
func (o *PduSessionContext) SetSmfBindingInfo(v string) {
	o.SmfBindingInfo = &v
}

// GetVsmfBindingInfo returns the VsmfBindingInfo field value if set, zero value otherwise.
func (o *PduSessionContext) GetVsmfBindingInfo() string {
	if o == nil || IsNil(o.VsmfBindingInfo) {
		var ret string
		return ret
	}
	return *o.VsmfBindingInfo
}

// GetVsmfBindingInfoOk returns a tuple with the VsmfBindingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetVsmfBindingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.VsmfBindingInfo) {
		return nil, false
	}
	return o.VsmfBindingInfo, true
}

// HasVsmfBindingInfo returns a boolean if a field has been set.
func (o *PduSessionContext) HasVsmfBindingInfo() bool {
	if o != nil && !IsNil(o.VsmfBindingInfo) {
		return true
	}

	return false
}

// SetVsmfBindingInfo gets a reference to the given string and assigns it to the VsmfBindingInfo field.
func (o *PduSessionContext) SetVsmfBindingInfo(v string) {
	o.VsmfBindingInfo = &v
}

// GetIsmfBindingInfo returns the IsmfBindingInfo field value if set, zero value otherwise.
func (o *PduSessionContext) GetIsmfBindingInfo() string {
	if o == nil || IsNil(o.IsmfBindingInfo) {
		var ret string
		return ret
	}
	return *o.IsmfBindingInfo
}

// GetIsmfBindingInfoOk returns a tuple with the IsmfBindingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetIsmfBindingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.IsmfBindingInfo) {
		return nil, false
	}
	return o.IsmfBindingInfo, true
}

// HasIsmfBindingInfo returns a boolean if a field has been set.
func (o *PduSessionContext) HasIsmfBindingInfo() bool {
	if o != nil && !IsNil(o.IsmfBindingInfo) {
		return true
	}

	return false
}

// SetIsmfBindingInfo gets a reference to the given string and assigns it to the IsmfBindingInfo field.
func (o *PduSessionContext) SetIsmfBindingInfo(v string) {
	o.IsmfBindingInfo = &v
}

// GetAdditionalSnssai returns the AdditionalSnssai field value if set, zero value otherwise.
func (o *PduSessionContext) GetAdditionalSnssai() Snssai {
	if o == nil || IsNil(o.AdditionalSnssai) {
		var ret Snssai
		return ret
	}
	return *o.AdditionalSnssai
}

// GetAdditionalSnssaiOk returns a tuple with the AdditionalSnssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAdditionalSnssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.AdditionalSnssai) {
		return nil, false
	}
	return o.AdditionalSnssai, true
}

// HasAdditionalSnssai returns a boolean if a field has been set.
func (o *PduSessionContext) HasAdditionalSnssai() bool {
	if o != nil && !IsNil(o.AdditionalSnssai) {
		return true
	}

	return false
}

// SetAdditionalSnssai gets a reference to the given Snssai and assigns it to the AdditionalSnssai field.
func (o *PduSessionContext) SetAdditionalSnssai(v Snssai) {
	o.AdditionalSnssai = &v
}

// GetInterPlmnApiRoot returns the InterPlmnApiRoot field value if set, zero value otherwise.
func (o *PduSessionContext) GetInterPlmnApiRoot() string {
	if o == nil || IsNil(o.InterPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.InterPlmnApiRoot
}

// GetInterPlmnApiRootOk returns a tuple with the InterPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetInterPlmnApiRootOk() (*string, bool) {
	if o == nil || IsNil(o.InterPlmnApiRoot) {
		return nil, false
	}
	return o.InterPlmnApiRoot, true
}

// HasInterPlmnApiRoot returns a boolean if a field has been set.
func (o *PduSessionContext) HasInterPlmnApiRoot() bool {
	if o != nil && !IsNil(o.InterPlmnApiRoot) {
		return true
	}

	return false
}

// SetInterPlmnApiRoot gets a reference to the given string and assigns it to the InterPlmnApiRoot field.
func (o *PduSessionContext) SetInterPlmnApiRoot(v string) {
	o.InterPlmnApiRoot = &v
}

// GetPgwFqdn returns the PgwFqdn field value if set, zero value otherwise.
func (o *PduSessionContext) GetPgwFqdn() string {
	if o == nil || IsNil(o.PgwFqdn) {
		var ret string
		return ret
	}
	return *o.PgwFqdn
}

// GetPgwFqdnOk returns a tuple with the PgwFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetPgwFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.PgwFqdn) {
		return nil, false
	}
	return o.PgwFqdn, true
}

// HasPgwFqdn returns a boolean if a field has been set.
func (o *PduSessionContext) HasPgwFqdn() bool {
	if o != nil && !IsNil(o.PgwFqdn) {
		return true
	}

	return false
}

// SetPgwFqdn gets a reference to the given string and assigns it to the PgwFqdn field.
func (o *PduSessionContext) SetPgwFqdn(v string) {
	o.PgwFqdn = &v
}

// GetPgwIpAddr returns the PgwIpAddr field value if set, zero value otherwise.
func (o *PduSessionContext) GetPgwIpAddr() IpAddress {
	if o == nil || IsNil(o.PgwIpAddr) {
		var ret IpAddress
		return ret
	}
	return *o.PgwIpAddr
}

// GetPgwIpAddrOk returns a tuple with the PgwIpAddr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetPgwIpAddrOk() (*IpAddress, bool) {
	if o == nil || IsNil(o.PgwIpAddr) {
		return nil, false
	}
	return o.PgwIpAddr, true
}

// HasPgwIpAddr returns a boolean if a field has been set.
func (o *PduSessionContext) HasPgwIpAddr() bool {
	if o != nil && !IsNil(o.PgwIpAddr) {
		return true
	}

	return false
}

// SetPgwIpAddr gets a reference to the given IpAddress and assigns it to the PgwIpAddr field.
func (o *PduSessionContext) SetPgwIpAddr(v IpAddress) {
	o.PgwIpAddr = &v
}

// GetPlmnId returns the PlmnId field value if set, zero value otherwise.
func (o *PduSessionContext) GetPlmnId() PlmnId {
	if o == nil || IsNil(o.PlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.PlmnId) {
		return nil, false
	}
	return o.PlmnId, true
}

// HasPlmnId returns a boolean if a field has been set.
func (o *PduSessionContext) HasPlmnId() bool {
	if o != nil && !IsNil(o.PlmnId) {
		return true
	}

	return false
}

// SetPlmnId gets a reference to the given PlmnId and assigns it to the PlmnId field.
func (o *PduSessionContext) SetPlmnId(v PlmnId) {
	o.PlmnId = &v
}

// GetAnchorSmfSupportedFeatures returns the AnchorSmfSupportedFeatures field value if set, zero value otherwise.
func (o *PduSessionContext) GetAnchorSmfSupportedFeatures() string {
	if o == nil || IsNil(o.AnchorSmfSupportedFeatures) {
		var ret string
		return ret
	}
	return *o.AnchorSmfSupportedFeatures
}

// GetAnchorSmfSupportedFeaturesOk returns a tuple with the AnchorSmfSupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAnchorSmfSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.AnchorSmfSupportedFeatures) {
		return nil, false
	}
	return o.AnchorSmfSupportedFeatures, true
}

// HasAnchorSmfSupportedFeatures returns a boolean if a field has been set.
func (o *PduSessionContext) HasAnchorSmfSupportedFeatures() bool {
	if o != nil && !IsNil(o.AnchorSmfSupportedFeatures) {
		return true
	}

	return false
}

// SetAnchorSmfSupportedFeatures gets a reference to the given string and assigns it to the AnchorSmfSupportedFeatures field.
func (o *PduSessionContext) SetAnchorSmfSupportedFeatures(v string) {
	o.AnchorSmfSupportedFeatures = &v
}

// GetAnchorSmfOauth2Required returns the AnchorSmfOauth2Required field value if set, zero value otherwise.
func (o *PduSessionContext) GetAnchorSmfOauth2Required() bool {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		var ret bool
		return ret
	}
	return *o.AnchorSmfOauth2Required
}

// GetAnchorSmfOauth2RequiredOk returns a tuple with the AnchorSmfOauth2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PduSessionContext) GetAnchorSmfOauth2RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		return nil, false
	}
	return o.AnchorSmfOauth2Required, true
}

// HasAnchorSmfOauth2Required returns a boolean if a field has been set.
func (o *PduSessionContext) HasAnchorSmfOauth2Required() bool {
	if o != nil && !IsNil(o.AnchorSmfOauth2Required) {
		return true
	}

	return false
}

// SetAnchorSmfOauth2Required gets a reference to the given bool and assigns it to the AnchorSmfOauth2Required field.
func (o *PduSessionContext) SetAnchorSmfOauth2Required(v bool) {
	o.AnchorSmfOauth2Required = &v
}

func (o PduSessionContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PduSessionContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pduSessionId"] = o.PduSessionId
	toSerialize["smContextRef"] = o.SmContextRef
	toSerialize["sNssai"] = o.SNssai
	toSerialize["dnn"] = o.Dnn
	if !IsNil(o.SelectedDnn) {
		toSerialize["selectedDnn"] = o.SelectedDnn
	}
	toSerialize["accessType"] = o.AccessType
	if !IsNil(o.AdditionalAccessType) {
		toSerialize["additionalAccessType"] = o.AdditionalAccessType
	}
	if !IsNil(o.AllocatedEbiList) {
		toSerialize["allocatedEbiList"] = o.AllocatedEbiList
	}
	if !IsNil(o.HsmfId) {
		toSerialize["hsmfId"] = o.HsmfId
	}
	if !IsNil(o.HsmfSetId) {
		toSerialize["hsmfSetId"] = o.HsmfSetId
	}
	if !IsNil(o.HsmfServiceSetId) {
		toSerialize["hsmfServiceSetId"] = o.HsmfServiceSetId
	}
	if !IsNil(o.SmfBinding) {
		toSerialize["smfBinding"] = o.SmfBinding
	}
	if !IsNil(o.VsmfId) {
		toSerialize["vsmfId"] = o.VsmfId
	}
	if !IsNil(o.VsmfSetId) {
		toSerialize["vsmfSetId"] = o.VsmfSetId
	}
	if !IsNil(o.VsmfServiceSetId) {
		toSerialize["vsmfServiceSetId"] = o.VsmfServiceSetId
	}
	if !IsNil(o.VsmfBinding) {
		toSerialize["vsmfBinding"] = o.VsmfBinding
	}
	if !IsNil(o.IsmfId) {
		toSerialize["ismfId"] = o.IsmfId
	}
	if !IsNil(o.IsmfSetId) {
		toSerialize["ismfSetId"] = o.IsmfSetId
	}
	if !IsNil(o.IsmfServiceSetId) {
		toSerialize["ismfServiceSetId"] = o.IsmfServiceSetId
	}
	if !IsNil(o.IsmfBinding) {
		toSerialize["ismfBinding"] = o.IsmfBinding
	}
	if !IsNil(o.NsInstance) {
		toSerialize["nsInstance"] = o.NsInstance
	}
	if !IsNil(o.SmfServiceInstanceId) {
		toSerialize["smfServiceInstanceId"] = o.SmfServiceInstanceId
	}
	if !IsNil(o.MaPduSession) {
		toSerialize["maPduSession"] = o.MaPduSession
	}
	if !IsNil(o.CnAssistedRanPara) {
		toSerialize["cnAssistedRanPara"] = o.CnAssistedRanPara
	}
	if !IsNil(o.NrfManagementUri) {
		toSerialize["nrfManagementUri"] = o.NrfManagementUri
	}
	if !IsNil(o.NrfDiscoveryUri) {
		toSerialize["nrfDiscoveryUri"] = o.NrfDiscoveryUri
	}
	if !IsNil(o.NrfAccessTokenUri) {
		toSerialize["nrfAccessTokenUri"] = o.NrfAccessTokenUri
	}
	if !IsNil(o.SmfBindingInfo) {
		toSerialize["smfBindingInfo"] = o.SmfBindingInfo
	}
	if !IsNil(o.VsmfBindingInfo) {
		toSerialize["vsmfBindingInfo"] = o.VsmfBindingInfo
	}
	if !IsNil(o.IsmfBindingInfo) {
		toSerialize["ismfBindingInfo"] = o.IsmfBindingInfo
	}
	if !IsNil(o.AdditionalSnssai) {
		toSerialize["additionalSnssai"] = o.AdditionalSnssai
	}
	if !IsNil(o.InterPlmnApiRoot) {
		toSerialize["interPlmnApiRoot"] = o.InterPlmnApiRoot
	}
	if !IsNil(o.PgwFqdn) {
		toSerialize["pgwFqdn"] = o.PgwFqdn
	}
	if !IsNil(o.PgwIpAddr) {
		toSerialize["pgwIpAddr"] = o.PgwIpAddr
	}
	if !IsNil(o.PlmnId) {
		toSerialize["plmnId"] = o.PlmnId
	}
	if !IsNil(o.AnchorSmfSupportedFeatures) {
		toSerialize["anchorSmfSupportedFeatures"] = o.AnchorSmfSupportedFeatures
	}
	if !IsNil(o.AnchorSmfOauth2Required) {
		toSerialize["anchorSmfOauth2Required"] = o.AnchorSmfOauth2Required
	}
	return toSerialize, nil
}

type NullablePduSessionContext struct {
	value *PduSessionContext
	isSet bool
}

func (v NullablePduSessionContext) Get() *PduSessionContext {
	return v.value
}

func (v *NullablePduSessionContext) Set(val *PduSessionContext) {
	v.value = val
	v.isSet = true
}

func (v NullablePduSessionContext) IsSet() bool {
	return v.isSet
}

func (v *NullablePduSessionContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePduSessionContext(val *PduSessionContext) *NullablePduSessionContext {
	return &NullablePduSessionContext{value: val, isSet: true}
}

func (v NullablePduSessionContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePduSessionContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
