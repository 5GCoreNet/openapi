/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the N2RanInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N2RanInformation{}

// N2RanInformation Represents the RAN related N2 information data part
type N2RanInformation struct {
	N2InfoContent N2InfoContent `json:"n2InfoContent"`
}

// NewN2RanInformation instantiates a new N2RanInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN2RanInformation(n2InfoContent N2InfoContent) *N2RanInformation {
	this := N2RanInformation{}
	this.N2InfoContent = n2InfoContent
	return &this
}

// NewN2RanInformationWithDefaults instantiates a new N2RanInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN2RanInformationWithDefaults() *N2RanInformation {
	this := N2RanInformation{}
	return &this
}

// GetN2InfoContent returns the N2InfoContent field value
func (o *N2RanInformation) GetN2InfoContent() N2InfoContent {
	if o == nil {
		var ret N2InfoContent
		return ret
	}

	return o.N2InfoContent
}

// GetN2InfoContentOk returns a tuple with the N2InfoContent field value
// and a boolean to check if the value has been set.
func (o *N2RanInformation) GetN2InfoContentOk() (*N2InfoContent, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N2InfoContent, true
}

// SetN2InfoContent sets field value
func (o *N2RanInformation) SetN2InfoContent(v N2InfoContent) {
	o.N2InfoContent = v
}

func (o N2RanInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N2RanInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["n2InfoContent"] = o.N2InfoContent
	return toSerialize, nil
}

type NullableN2RanInformation struct {
	value *N2RanInformation
	isSet bool
}

func (v NullableN2RanInformation) Get() *N2RanInformation {
	return v.value
}

func (v *NullableN2RanInformation) Set(val *N2RanInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableN2RanInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableN2RanInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN2RanInformation(val *N2RanInformation) *NullableN2RanInformation {
	return &NullableN2RanInformation{value: val, isSet: true}
}

func (v NullableN2RanInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN2RanInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


