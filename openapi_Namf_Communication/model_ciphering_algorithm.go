/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// CipheringAlgorithm Indicates the supported Ciphering Algorithm
type CipheringAlgorithm struct {
	CipheringAlgorithmAnyOf *CipheringAlgorithmAnyOf
	String *string
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *CipheringAlgorithm) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into CipheringAlgorithmAnyOf
	err = json.Unmarshal(data, &dst.CipheringAlgorithmAnyOf);
	if err == nil {
		jsonCipheringAlgorithmAnyOf, _ := json.Marshal(dst.CipheringAlgorithmAnyOf)
		if string(jsonCipheringAlgorithmAnyOf) == "{}" { // empty struct
			dst.CipheringAlgorithmAnyOf = nil
		} else {
			return nil // data stored in dst.CipheringAlgorithmAnyOf, return on the first match
		}
	} else {
		dst.CipheringAlgorithmAnyOf = nil
	}

	// try to unmarshal JSON data into string
	err = json.Unmarshal(data, &dst.String);
	if err == nil {
		jsonString, _ := json.Marshal(dst.String)
		if string(jsonString) == "{}" { // empty struct
			dst.String = nil
		} else {
			return nil // data stored in dst.String, return on the first match
		}
	} else {
		dst.String = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(CipheringAlgorithm)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *CipheringAlgorithm) MarshalJSON() ([]byte, error) {
	if src.CipheringAlgorithmAnyOf != nil {
		return json.Marshal(&src.CipheringAlgorithmAnyOf)
	}

	if src.String != nil {
		return json.Marshal(&src.String)
	}

	return nil, nil // no data in anyOf schemas
}

type NullableCipheringAlgorithm struct {
	value *CipheringAlgorithm
	isSet bool
}

func (v NullableCipheringAlgorithm) Get() *CipheringAlgorithm {
	return v.value
}

func (v *NullableCipheringAlgorithm) Set(val *CipheringAlgorithm) {
	v.value = val
	v.isSet = true
}

func (v NullableCipheringAlgorithm) IsSet() bool {
	return v.isSet
}

func (v *NullableCipheringAlgorithm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCipheringAlgorithm(val *CipheringAlgorithm) *NullableCipheringAlgorithm {
	return &NullableCipheringAlgorithm{value: val, isSet: true}
}

func (v NullableCipheringAlgorithm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCipheringAlgorithm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


