/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the N1N2MessageTransferError type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N1N2MessageTransferError{}

// N1N2MessageTransferError Data within a N1/N2 Message Transfer Error response
type N1N2MessageTransferError struct {
	Error ProblemDetails `json:"error"`
	ErrInfo *N1N2MsgTxfrErrDetail `json:"errInfo,omitempty"`
}

// NewN1N2MessageTransferError instantiates a new N1N2MessageTransferError object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN1N2MessageTransferError(error_ ProblemDetails) *N1N2MessageTransferError {
	this := N1N2MessageTransferError{}
	this.Error = error_
	return &this
}

// NewN1N2MessageTransferErrorWithDefaults instantiates a new N1N2MessageTransferError object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN1N2MessageTransferErrorWithDefaults() *N1N2MessageTransferError {
	this := N1N2MessageTransferError{}
	return &this
}

// GetError returns the Error field value
func (o *N1N2MessageTransferError) GetError() ProblemDetails {
	if o == nil {
		var ret ProblemDetails
		return ret
	}

	return o.Error
}

// GetErrorOk returns a tuple with the Error field value
// and a boolean to check if the value has been set.
func (o *N1N2MessageTransferError) GetErrorOk() (*ProblemDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Error, true
}

// SetError sets field value
func (o *N1N2MessageTransferError) SetError(v ProblemDetails) {
	o.Error = v
}

// GetErrInfo returns the ErrInfo field value if set, zero value otherwise.
func (o *N1N2MessageTransferError) GetErrInfo() N1N2MsgTxfrErrDetail {
	if o == nil || isNil(o.ErrInfo) {
		var ret N1N2MsgTxfrErrDetail
		return ret
	}
	return *o.ErrInfo
}

// GetErrInfoOk returns a tuple with the ErrInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1N2MessageTransferError) GetErrInfoOk() (*N1N2MsgTxfrErrDetail, bool) {
	if o == nil || isNil(o.ErrInfo) {
		return nil, false
	}
	return o.ErrInfo, true
}

// HasErrInfo returns a boolean if a field has been set.
func (o *N1N2MessageTransferError) HasErrInfo() bool {
	if o != nil && !isNil(o.ErrInfo) {
		return true
	}

	return false
}

// SetErrInfo gets a reference to the given N1N2MsgTxfrErrDetail and assigns it to the ErrInfo field.
func (o *N1N2MessageTransferError) SetErrInfo(v N1N2MsgTxfrErrDetail) {
	o.ErrInfo = &v
}

func (o N1N2MessageTransferError) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N1N2MessageTransferError) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["error"] = o.Error
	if !isNil(o.ErrInfo) {
		toSerialize["errInfo"] = o.ErrInfo
	}
	return toSerialize, nil
}

type NullableN1N2MessageTransferError struct {
	value *N1N2MessageTransferError
	isSet bool
}

func (v NullableN1N2MessageTransferError) Get() *N1N2MessageTransferError {
	return v.value
}

func (v *NullableN1N2MessageTransferError) Set(val *N1N2MessageTransferError) {
	v.value = val
	v.isSet = true
}

func (v NullableN1N2MessageTransferError) IsSet() bool {
	return v.isSet
}

func (v *NullableN1N2MessageTransferError) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN1N2MessageTransferError(val *N1N2MessageTransferError) *NullableN1N2MessageTransferError {
	return &NullableN1N2MessageTransferError{value: val, isSet: true}
}

func (v NullableN1N2MessageTransferError) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN1N2MessageTransferError) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


