/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the NpnAccessInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NpnAccessInfo{}

// NpnAccessInfo NPN Access Information.
type NpnAccessInfo struct {
	CellCagInfo []string `json:"cellCagInfo,omitempty"`
}

// NewNpnAccessInfo instantiates a new NpnAccessInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNpnAccessInfo() *NpnAccessInfo {
	this := NpnAccessInfo{}
	return &this
}

// NewNpnAccessInfoWithDefaults instantiates a new NpnAccessInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNpnAccessInfoWithDefaults() *NpnAccessInfo {
	this := NpnAccessInfo{}
	return &this
}

// GetCellCagInfo returns the CellCagInfo field value if set, zero value otherwise.
func (o *NpnAccessInfo) GetCellCagInfo() []string {
	if o == nil || IsNil(o.CellCagInfo) {
		var ret []string
		return ret
	}
	return o.CellCagInfo
}

// GetCellCagInfoOk returns a tuple with the CellCagInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NpnAccessInfo) GetCellCagInfoOk() ([]string, bool) {
	if o == nil || IsNil(o.CellCagInfo) {
		return nil, false
	}
	return o.CellCagInfo, true
}

// HasCellCagInfo returns a boolean if a field has been set.
func (o *NpnAccessInfo) HasCellCagInfo() bool {
	if o != nil && !IsNil(o.CellCagInfo) {
		return true
	}

	return false
}

// SetCellCagInfo gets a reference to the given []string and assigns it to the CellCagInfo field.
func (o *NpnAccessInfo) SetCellCagInfo(v []string) {
	o.CellCagInfo = v
}

func (o NpnAccessInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NpnAccessInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CellCagInfo) {
		toSerialize["cellCagInfo"] = o.CellCagInfo
	}
	return toSerialize, nil
}

type NullableNpnAccessInfo struct {
	value *NpnAccessInfo
	isSet bool
}

func (v NullableNpnAccessInfo) Get() *NpnAccessInfo {
	return v.value
}

func (v *NullableNpnAccessInfo) Set(val *NpnAccessInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableNpnAccessInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableNpnAccessInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNpnAccessInfo(val *NpnAccessInfo) *NullableNpnAccessInfo {
	return &NullableNpnAccessInfo{value: val, isSet: true}
}

func (v NullableNpnAccessInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNpnAccessInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


