/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the EbiArpMapping type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EbiArpMapping{}

// EbiArpMapping EBI to ARP mapping
type EbiArpMapping struct {
	// EPS Bearer Identifier
	EpsBearerId int32 `json:"epsBearerId"`
	Arp Arp `json:"arp"`
}

// NewEbiArpMapping instantiates a new EbiArpMapping object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEbiArpMapping(epsBearerId int32, arp Arp) *EbiArpMapping {
	this := EbiArpMapping{}
	this.EpsBearerId = epsBearerId
	this.Arp = arp
	return &this
}

// NewEbiArpMappingWithDefaults instantiates a new EbiArpMapping object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEbiArpMappingWithDefaults() *EbiArpMapping {
	this := EbiArpMapping{}
	return &this
}

// GetEpsBearerId returns the EpsBearerId field value
func (o *EbiArpMapping) GetEpsBearerId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.EpsBearerId
}

// GetEpsBearerIdOk returns a tuple with the EpsBearerId field value
// and a boolean to check if the value has been set.
func (o *EbiArpMapping) GetEpsBearerIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EpsBearerId, true
}

// SetEpsBearerId sets field value
func (o *EbiArpMapping) SetEpsBearerId(v int32) {
	o.EpsBearerId = v
}

// GetArp returns the Arp field value
func (o *EbiArpMapping) GetArp() Arp {
	if o == nil {
		var ret Arp
		return ret
	}

	return o.Arp
}

// GetArpOk returns a tuple with the Arp field value
// and a boolean to check if the value has been set.
func (o *EbiArpMapping) GetArpOk() (*Arp, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Arp, true
}

// SetArp sets field value
func (o *EbiArpMapping) SetArp(v Arp) {
	o.Arp = v
}

func (o EbiArpMapping) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EbiArpMapping) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["epsBearerId"] = o.EpsBearerId
	toSerialize["arp"] = o.Arp
	return toSerialize, nil
}

type NullableEbiArpMapping struct {
	value *EbiArpMapping
	isSet bool
}

func (v NullableEbiArpMapping) Get() *EbiArpMapping {
	return v.value
}

func (v *NullableEbiArpMapping) Set(val *EbiArpMapping) {
	v.value = val
	v.isSet = true
}

func (v NullableEbiArpMapping) IsSet() bool {
	return v.isSet
}

func (v *NullableEbiArpMapping) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEbiArpMapping(val *EbiArpMapping) *NullableEbiArpMapping {
	return &NullableEbiArpMapping{value: val, isSet: true}
}

func (v NullableEbiArpMapping) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEbiArpMapping) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


