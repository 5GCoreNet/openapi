/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the N2InfoNotificationRspData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N2InfoNotificationRspData{}

// N2InfoNotificationRspData Data within a N2 information notification response
type N2InfoNotificationRspData struct {
	SecRatDataUsageList []N2SmInformation `json:"secRatDataUsageList,omitempty"`
}

// NewN2InfoNotificationRspData instantiates a new N2InfoNotificationRspData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN2InfoNotificationRspData() *N2InfoNotificationRspData {
	this := N2InfoNotificationRspData{}
	return &this
}

// NewN2InfoNotificationRspDataWithDefaults instantiates a new N2InfoNotificationRspData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN2InfoNotificationRspDataWithDefaults() *N2InfoNotificationRspData {
	this := N2InfoNotificationRspData{}
	return &this
}

// GetSecRatDataUsageList returns the SecRatDataUsageList field value if set, zero value otherwise.
func (o *N2InfoNotificationRspData) GetSecRatDataUsageList() []N2SmInformation {
	if o == nil || isNil(o.SecRatDataUsageList) {
		var ret []N2SmInformation
		return ret
	}
	return o.SecRatDataUsageList
}

// GetSecRatDataUsageListOk returns a tuple with the SecRatDataUsageList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N2InfoNotificationRspData) GetSecRatDataUsageListOk() ([]N2SmInformation, bool) {
	if o == nil || isNil(o.SecRatDataUsageList) {
		return nil, false
	}
	return o.SecRatDataUsageList, true
}

// HasSecRatDataUsageList returns a boolean if a field has been set.
func (o *N2InfoNotificationRspData) HasSecRatDataUsageList() bool {
	if o != nil && !isNil(o.SecRatDataUsageList) {
		return true
	}

	return false
}

// SetSecRatDataUsageList gets a reference to the given []N2SmInformation and assigns it to the SecRatDataUsageList field.
func (o *N2InfoNotificationRspData) SetSecRatDataUsageList(v []N2SmInformation) {
	o.SecRatDataUsageList = v
}

func (o N2InfoNotificationRspData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N2InfoNotificationRspData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SecRatDataUsageList) {
		toSerialize["secRatDataUsageList"] = o.SecRatDataUsageList
	}
	return toSerialize, nil
}

type NullableN2InfoNotificationRspData struct {
	value *N2InfoNotificationRspData
	isSet bool
}

func (v NullableN2InfoNotificationRspData) Get() *N2InfoNotificationRspData {
	return v.value
}

func (v *NullableN2InfoNotificationRspData) Set(val *N2InfoNotificationRspData) {
	v.value = val
	v.isSet = true
}

func (v NullableN2InfoNotificationRspData) IsSet() bool {
	return v.isSet
}

func (v *NullableN2InfoNotificationRspData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN2InfoNotificationRspData(val *N2InfoNotificationRspData) *NullableN2InfoNotificationRspData {
	return &NullableN2InfoNotificationRspData{value: val, isSet: true}
}

func (v NullableN2InfoNotificationRspData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN2InfoNotificationRspData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


