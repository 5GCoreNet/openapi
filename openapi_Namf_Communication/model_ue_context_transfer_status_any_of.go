/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// UeContextTransferStatusAnyOf the model 'UeContextTransferStatusAnyOf'
type UeContextTransferStatusAnyOf string

// List of UeContextTransferStatus_anyOf
const (
	TRANSFERRED UeContextTransferStatusAnyOf = "TRANSFERRED"
	NOT_TRANSFERRED UeContextTransferStatusAnyOf = "NOT_TRANSFERRED"
)

// All allowed values of UeContextTransferStatusAnyOf enum
var AllowedUeContextTransferStatusAnyOfEnumValues = []UeContextTransferStatusAnyOf{
	"TRANSFERRED",
	"NOT_TRANSFERRED",
}

func (v *UeContextTransferStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UeContextTransferStatusAnyOf(value)
	for _, existing := range AllowedUeContextTransferStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UeContextTransferStatusAnyOf", value)
}

// NewUeContextTransferStatusAnyOfFromValue returns a pointer to a valid UeContextTransferStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUeContextTransferStatusAnyOfFromValue(v string) (*UeContextTransferStatusAnyOf, error) {
	ev := UeContextTransferStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for UeContextTransferStatusAnyOf: valid values are %v", v, AllowedUeContextTransferStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UeContextTransferStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedUeContextTransferStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to UeContextTransferStatus_anyOf value
func (v UeContextTransferStatusAnyOf) Ptr() *UeContextTransferStatusAnyOf {
	return &v
}

type NullableUeContextTransferStatusAnyOf struct {
	value *UeContextTransferStatusAnyOf
	isSet bool
}

func (v NullableUeContextTransferStatusAnyOf) Get() *UeContextTransferStatusAnyOf {
	return v.value
}

func (v *NullableUeContextTransferStatusAnyOf) Set(val *UeContextTransferStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUeContextTransferStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUeContextTransferStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeContextTransferStatusAnyOf(val *UeContextTransferStatusAnyOf) *NullableUeContextTransferStatusAnyOf {
	return &NullableUeContextTransferStatusAnyOf{value: val, isSet: true}
}

func (v NullableUeContextTransferStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeContextTransferStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

