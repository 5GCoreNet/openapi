/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the AllowedNssai type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AllowedNssai{}

// AllowedNssai Contains an array of allowed S-NSSAI that constitute the allowed NSSAI information for the authorized network slice information
type AllowedNssai struct {
	AllowedSnssaiList []AllowedSnssai `json:"allowedSnssaiList"`
	AccessType        AccessType      `json:"accessType"`
}

// NewAllowedNssai instantiates a new AllowedNssai object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAllowedNssai(allowedSnssaiList []AllowedSnssai, accessType AccessType) *AllowedNssai {
	this := AllowedNssai{}
	this.AllowedSnssaiList = allowedSnssaiList
	this.AccessType = accessType
	return &this
}

// NewAllowedNssaiWithDefaults instantiates a new AllowedNssai object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAllowedNssaiWithDefaults() *AllowedNssai {
	this := AllowedNssai{}
	return &this
}

// GetAllowedSnssaiList returns the AllowedSnssaiList field value
func (o *AllowedNssai) GetAllowedSnssaiList() []AllowedSnssai {
	if o == nil {
		var ret []AllowedSnssai
		return ret
	}

	return o.AllowedSnssaiList
}

// GetAllowedSnssaiListOk returns a tuple with the AllowedSnssaiList field value
// and a boolean to check if the value has been set.
func (o *AllowedNssai) GetAllowedSnssaiListOk() ([]AllowedSnssai, bool) {
	if o == nil {
		return nil, false
	}
	return o.AllowedSnssaiList, true
}

// SetAllowedSnssaiList sets field value
func (o *AllowedNssai) SetAllowedSnssaiList(v []AllowedSnssai) {
	o.AllowedSnssaiList = v
}

// GetAccessType returns the AccessType field value
func (o *AllowedNssai) GetAccessType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AccessType
}

// GetAccessTypeOk returns a tuple with the AccessType field value
// and a boolean to check if the value has been set.
func (o *AllowedNssai) GetAccessTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessType, true
}

// SetAccessType sets field value
func (o *AllowedNssai) SetAccessType(v AccessType) {
	o.AccessType = v
}

func (o AllowedNssai) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AllowedNssai) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allowedSnssaiList"] = o.AllowedSnssaiList
	toSerialize["accessType"] = o.AccessType
	return toSerialize, nil
}

type NullableAllowedNssai struct {
	value *AllowedNssai
	isSet bool
}

func (v NullableAllowedNssai) Get() *AllowedNssai {
	return v.value
}

func (v *NullableAllowedNssai) Set(val *AllowedNssai) {
	v.value = val
	v.isSet = true
}

func (v NullableAllowedNssai) IsSet() bool {
	return v.isSet
}

func (v *NullableAllowedNssai) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAllowedNssai(val *AllowedNssai) *NullableAllowedNssai {
	return &NullableAllowedNssai{value: val, isSet: true}
}

func (v NullableAllowedNssai) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAllowedNssai) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
