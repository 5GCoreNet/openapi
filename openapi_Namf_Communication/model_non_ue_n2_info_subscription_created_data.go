/*
Namf_Communication

AMF Communication Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
)

// checks if the NonUeN2InfoSubscriptionCreatedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NonUeN2InfoSubscriptionCreatedData{}

// NonUeN2InfoSubscriptionCreatedData Data for the created subscription for non-UE specific N2 information notification
type NonUeN2InfoSubscriptionCreatedData struct {
	N2NotifySubscriptionId string `json:"n2NotifySubscriptionId"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures  *string             `json:"supportedFeatures,omitempty"`
	N2InformationClass *N2InformationClass `json:"n2InformationClass,omitempty"`
}

// NewNonUeN2InfoSubscriptionCreatedData instantiates a new NonUeN2InfoSubscriptionCreatedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNonUeN2InfoSubscriptionCreatedData(n2NotifySubscriptionId string) *NonUeN2InfoSubscriptionCreatedData {
	this := NonUeN2InfoSubscriptionCreatedData{}
	this.N2NotifySubscriptionId = n2NotifySubscriptionId
	return &this
}

// NewNonUeN2InfoSubscriptionCreatedDataWithDefaults instantiates a new NonUeN2InfoSubscriptionCreatedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNonUeN2InfoSubscriptionCreatedDataWithDefaults() *NonUeN2InfoSubscriptionCreatedData {
	this := NonUeN2InfoSubscriptionCreatedData{}
	return &this
}

// GetN2NotifySubscriptionId returns the N2NotifySubscriptionId field value
func (o *NonUeN2InfoSubscriptionCreatedData) GetN2NotifySubscriptionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.N2NotifySubscriptionId
}

// GetN2NotifySubscriptionIdOk returns a tuple with the N2NotifySubscriptionId field value
// and a boolean to check if the value has been set.
func (o *NonUeN2InfoSubscriptionCreatedData) GetN2NotifySubscriptionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.N2NotifySubscriptionId, true
}

// SetN2NotifySubscriptionId sets field value
func (o *NonUeN2InfoSubscriptionCreatedData) SetN2NotifySubscriptionId(v string) {
	o.N2NotifySubscriptionId = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *NonUeN2InfoSubscriptionCreatedData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonUeN2InfoSubscriptionCreatedData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *NonUeN2InfoSubscriptionCreatedData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *NonUeN2InfoSubscriptionCreatedData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetN2InformationClass returns the N2InformationClass field value if set, zero value otherwise.
func (o *NonUeN2InfoSubscriptionCreatedData) GetN2InformationClass() N2InformationClass {
	if o == nil || IsNil(o.N2InformationClass) {
		var ret N2InformationClass
		return ret
	}
	return *o.N2InformationClass
}

// GetN2InformationClassOk returns a tuple with the N2InformationClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NonUeN2InfoSubscriptionCreatedData) GetN2InformationClassOk() (*N2InformationClass, bool) {
	if o == nil || IsNil(o.N2InformationClass) {
		return nil, false
	}
	return o.N2InformationClass, true
}

// HasN2InformationClass returns a boolean if a field has been set.
func (o *NonUeN2InfoSubscriptionCreatedData) HasN2InformationClass() bool {
	if o != nil && !IsNil(o.N2InformationClass) {
		return true
	}

	return false
}

// SetN2InformationClass gets a reference to the given N2InformationClass and assigns it to the N2InformationClass field.
func (o *NonUeN2InfoSubscriptionCreatedData) SetN2InformationClass(v N2InformationClass) {
	o.N2InformationClass = &v
}

func (o NonUeN2InfoSubscriptionCreatedData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NonUeN2InfoSubscriptionCreatedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["n2NotifySubscriptionId"] = o.N2NotifySubscriptionId
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.N2InformationClass) {
		toSerialize["n2InformationClass"] = o.N2InformationClass
	}
	return toSerialize, nil
}

type NullableNonUeN2InfoSubscriptionCreatedData struct {
	value *NonUeN2InfoSubscriptionCreatedData
	isSet bool
}

func (v NullableNonUeN2InfoSubscriptionCreatedData) Get() *NonUeN2InfoSubscriptionCreatedData {
	return v.value
}

func (v *NullableNonUeN2InfoSubscriptionCreatedData) Set(val *NonUeN2InfoSubscriptionCreatedData) {
	v.value = val
	v.isSet = true
}

func (v NullableNonUeN2InfoSubscriptionCreatedData) IsSet() bool {
	return v.isSet
}

func (v *NullableNonUeN2InfoSubscriptionCreatedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNonUeN2InfoSubscriptionCreatedData(val *NonUeN2InfoSubscriptionCreatedData) *NullableNonUeN2InfoSubscriptionCreatedData {
	return &NullableNonUeN2InfoSubscriptionCreatedData{value: val, isSet: true}
}

func (v NullableNonUeN2InfoSubscriptionCreatedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNonUeN2InfoSubscriptionCreatedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
