/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// SbiBindingLevelAnyOf the model 'SbiBindingLevelAnyOf'
type SbiBindingLevelAnyOf string

// List of SbiBindingLevel_anyOf
const (
	INSTANCE_BINDING SbiBindingLevelAnyOf = "NF_INSTANCE_BINDING"
	SET_BINDING SbiBindingLevelAnyOf = "NF_SET_BINDING"
	SERVICE_SET_BINDING SbiBindingLevelAnyOf = "NF_SERVICE_SET_BINDING"
	SERVICE_INSTANCE_BINDING SbiBindingLevelAnyOf = "NF_SERVICE_INSTANCE_BINDING"
)

// All allowed values of SbiBindingLevelAnyOf enum
var AllowedSbiBindingLevelAnyOfEnumValues = []SbiBindingLevelAnyOf{
	"NF_INSTANCE_BINDING",
	"NF_SET_BINDING",
	"NF_SERVICE_SET_BINDING",
	"NF_SERVICE_INSTANCE_BINDING",
}

func (v *SbiBindingLevelAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SbiBindingLevelAnyOf(value)
	for _, existing := range AllowedSbiBindingLevelAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SbiBindingLevelAnyOf", value)
}

// NewSbiBindingLevelAnyOfFromValue returns a pointer to a valid SbiBindingLevelAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSbiBindingLevelAnyOfFromValue(v string) (*SbiBindingLevelAnyOf, error) {
	ev := SbiBindingLevelAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SbiBindingLevelAnyOf: valid values are %v", v, AllowedSbiBindingLevelAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SbiBindingLevelAnyOf) IsValid() bool {
	for _, existing := range AllowedSbiBindingLevelAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SbiBindingLevel_anyOf value
func (v SbiBindingLevelAnyOf) Ptr() *SbiBindingLevelAnyOf {
	return &v
}

type NullableSbiBindingLevelAnyOf struct {
	value *SbiBindingLevelAnyOf
	isSet bool
}

func (v NullableSbiBindingLevelAnyOf) Get() *SbiBindingLevelAnyOf {
	return v.value
}

func (v *NullableSbiBindingLevelAnyOf) Set(val *SbiBindingLevelAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSbiBindingLevelAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSbiBindingLevelAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSbiBindingLevelAnyOf(val *SbiBindingLevelAnyOf) *NullableSbiBindingLevelAnyOf {
	return &NullableSbiBindingLevelAnyOf{value: val, isSet: true}
}

func (v NullableSbiBindingLevelAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSbiBindingLevelAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

