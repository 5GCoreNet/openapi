/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"os"
)

// checks if the N1MessageNotifyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &N1MessageNotifyRequest{}

// N1MessageNotifyRequest struct for N1MessageNotifyRequest
type N1MessageNotifyRequest struct {
	JsonData *N1MessageNotification `json:"jsonData,omitempty"`
	BinaryDataN1Message *os.File `json:"binaryDataN1Message,omitempty"`
}

// NewN1MessageNotifyRequest instantiates a new N1MessageNotifyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewN1MessageNotifyRequest() *N1MessageNotifyRequest {
	this := N1MessageNotifyRequest{}
	return &this
}

// NewN1MessageNotifyRequestWithDefaults instantiates a new N1MessageNotifyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewN1MessageNotifyRequestWithDefaults() *N1MessageNotifyRequest {
	this := N1MessageNotifyRequest{}
	return &this
}

// GetJsonData returns the JsonData field value if set, zero value otherwise.
func (o *N1MessageNotifyRequest) GetJsonData() N1MessageNotification {
	if o == nil || isNil(o.JsonData) {
		var ret N1MessageNotification
		return ret
	}
	return *o.JsonData
}

// GetJsonDataOk returns a tuple with the JsonData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1MessageNotifyRequest) GetJsonDataOk() (*N1MessageNotification, bool) {
	if o == nil || isNil(o.JsonData) {
		return nil, false
	}
	return o.JsonData, true
}

// HasJsonData returns a boolean if a field has been set.
func (o *N1MessageNotifyRequest) HasJsonData() bool {
	if o != nil && !isNil(o.JsonData) {
		return true
	}

	return false
}

// SetJsonData gets a reference to the given N1MessageNotification and assigns it to the JsonData field.
func (o *N1MessageNotifyRequest) SetJsonData(v N1MessageNotification) {
	o.JsonData = &v
}

// GetBinaryDataN1Message returns the BinaryDataN1Message field value if set, zero value otherwise.
func (o *N1MessageNotifyRequest) GetBinaryDataN1Message() os.File {
	if o == nil || isNil(o.BinaryDataN1Message) {
		var ret os.File
		return ret
	}
	return *o.BinaryDataN1Message
}

// GetBinaryDataN1MessageOk returns a tuple with the BinaryDataN1Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *N1MessageNotifyRequest) GetBinaryDataN1MessageOk() (*os.File, bool) {
	if o == nil || isNil(o.BinaryDataN1Message) {
		return nil, false
	}
	return o.BinaryDataN1Message, true
}

// HasBinaryDataN1Message returns a boolean if a field has been set.
func (o *N1MessageNotifyRequest) HasBinaryDataN1Message() bool {
	if o != nil && !isNil(o.BinaryDataN1Message) {
		return true
	}

	return false
}

// SetBinaryDataN1Message gets a reference to the given os.File and assigns it to the BinaryDataN1Message field.
func (o *N1MessageNotifyRequest) SetBinaryDataN1Message(v os.File) {
	o.BinaryDataN1Message = &v
}

func (o N1MessageNotifyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o N1MessageNotifyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.JsonData) {
		toSerialize["jsonData"] = o.JsonData
	}
	if !isNil(o.BinaryDataN1Message) {
		toSerialize["binaryDataN1Message"] = o.BinaryDataN1Message
	}
	return toSerialize, nil
}

type NullableN1MessageNotifyRequest struct {
	value *N1MessageNotifyRequest
	isSet bool
}

func (v NullableN1MessageNotifyRequest) Get() *N1MessageNotifyRequest {
	return v.value
}

func (v *NullableN1MessageNotifyRequest) Set(val *N1MessageNotifyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableN1MessageNotifyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableN1MessageNotifyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableN1MessageNotifyRequest(val *N1MessageNotifyRequest) *NullableN1MessageNotifyRequest {
	return &NullableN1MessageNotifyRequest{value: val, isSet: true}
}

func (v NullableN1MessageNotifyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableN1MessageNotifyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


