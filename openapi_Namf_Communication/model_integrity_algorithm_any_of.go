/*
Namf_Communication

AMF Communication Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_Communication

import (
	"encoding/json"
	"fmt"
)

// IntegrityAlgorithmAnyOf the model 'IntegrityAlgorithmAnyOf'
type IntegrityAlgorithmAnyOf string

// List of IntegrityAlgorithm_anyOf
const (
	NIA0 IntegrityAlgorithmAnyOf = "NIA0"
	NIA1 IntegrityAlgorithmAnyOf = "NIA1"
	NIA2 IntegrityAlgorithmAnyOf = "NIA2"
	NIA3 IntegrityAlgorithmAnyOf = "NIA3"
)

// All allowed values of IntegrityAlgorithmAnyOf enum
var AllowedIntegrityAlgorithmAnyOfEnumValues = []IntegrityAlgorithmAnyOf{
	"NIA0",
	"NIA1",
	"NIA2",
	"NIA3",
}

func (v *IntegrityAlgorithmAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := IntegrityAlgorithmAnyOf(value)
	for _, existing := range AllowedIntegrityAlgorithmAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid IntegrityAlgorithmAnyOf", value)
}

// NewIntegrityAlgorithmAnyOfFromValue returns a pointer to a valid IntegrityAlgorithmAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewIntegrityAlgorithmAnyOfFromValue(v string) (*IntegrityAlgorithmAnyOf, error) {
	ev := IntegrityAlgorithmAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for IntegrityAlgorithmAnyOf: valid values are %v", v, AllowedIntegrityAlgorithmAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v IntegrityAlgorithmAnyOf) IsValid() bool {
	for _, existing := range AllowedIntegrityAlgorithmAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to IntegrityAlgorithm_anyOf value
func (v IntegrityAlgorithmAnyOf) Ptr() *IntegrityAlgorithmAnyOf {
	return &v
}

type NullableIntegrityAlgorithmAnyOf struct {
	value *IntegrityAlgorithmAnyOf
	isSet bool
}

func (v NullableIntegrityAlgorithmAnyOf) Get() *IntegrityAlgorithmAnyOf {
	return v.value
}

func (v *NullableIntegrityAlgorithmAnyOf) Set(val *IntegrityAlgorithmAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableIntegrityAlgorithmAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableIntegrityAlgorithmAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIntegrityAlgorithmAnyOf(val *IntegrityAlgorithmAnyOf) *NullableIntegrityAlgorithmAnyOf {
	return &NullableIntegrityAlgorithmAnyOf{value: val, isSet: true}
}

func (v NullableIntegrityAlgorithmAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIntegrityAlgorithmAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

