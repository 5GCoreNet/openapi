/*
Nbsf_Management

Binding Support Management Service API.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.4.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nbsf_Management

import (
	"encoding/json"
)

// checks if the PcfForUeBindingPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PcfForUeBindingPatch{}

// PcfForUeBindingPatch Identifies the updates of an Individual PCF for a UE binding.
type PcfForUeBindingPatch struct {
	// Fully Qualified Domain Name
	PcfForUeFqdn *string `json:"pcfForUeFqdn,omitempty"`
	// IP end points of the PCF hosting the Npcf_AmPolicyAuthorization service.
	PcfForUeIpEndPoints []IpEndPoint `json:"pcfForUeIpEndPoints,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	PcfId *string `json:"pcfId,omitempty"`
}

// NewPcfForUeBindingPatch instantiates a new PcfForUeBindingPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPcfForUeBindingPatch() *PcfForUeBindingPatch {
	this := PcfForUeBindingPatch{}
	return &this
}

// NewPcfForUeBindingPatchWithDefaults instantiates a new PcfForUeBindingPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPcfForUeBindingPatchWithDefaults() *PcfForUeBindingPatch {
	this := PcfForUeBindingPatch{}
	return &this
}

// GetPcfForUeFqdn returns the PcfForUeFqdn field value if set, zero value otherwise.
func (o *PcfForUeBindingPatch) GetPcfForUeFqdn() string {
	if o == nil || IsNil(o.PcfForUeFqdn) {
		var ret string
		return ret
	}
	return *o.PcfForUeFqdn
}

// GetPcfForUeFqdnOk returns a tuple with the PcfForUeFqdn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PcfForUeBindingPatch) GetPcfForUeFqdnOk() (*string, bool) {
	if o == nil || IsNil(o.PcfForUeFqdn) {
		return nil, false
	}
	return o.PcfForUeFqdn, true
}

// HasPcfForUeFqdn returns a boolean if a field has been set.
func (o *PcfForUeBindingPatch) HasPcfForUeFqdn() bool {
	if o != nil && !IsNil(o.PcfForUeFqdn) {
		return true
	}

	return false
}

// SetPcfForUeFqdn gets a reference to the given string and assigns it to the PcfForUeFqdn field.
func (o *PcfForUeBindingPatch) SetPcfForUeFqdn(v string) {
	o.PcfForUeFqdn = &v
}

// GetPcfForUeIpEndPoints returns the PcfForUeIpEndPoints field value if set, zero value otherwise.
func (o *PcfForUeBindingPatch) GetPcfForUeIpEndPoints() []IpEndPoint {
	if o == nil || IsNil(o.PcfForUeIpEndPoints) {
		var ret []IpEndPoint
		return ret
	}
	return o.PcfForUeIpEndPoints
}

// GetPcfForUeIpEndPointsOk returns a tuple with the PcfForUeIpEndPoints field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PcfForUeBindingPatch) GetPcfForUeIpEndPointsOk() ([]IpEndPoint, bool) {
	if o == nil || IsNil(o.PcfForUeIpEndPoints) {
		return nil, false
	}
	return o.PcfForUeIpEndPoints, true
}

// HasPcfForUeIpEndPoints returns a boolean if a field has been set.
func (o *PcfForUeBindingPatch) HasPcfForUeIpEndPoints() bool {
	if o != nil && !IsNil(o.PcfForUeIpEndPoints) {
		return true
	}

	return false
}

// SetPcfForUeIpEndPoints gets a reference to the given []IpEndPoint and assigns it to the PcfForUeIpEndPoints field.
func (o *PcfForUeBindingPatch) SetPcfForUeIpEndPoints(v []IpEndPoint) {
	o.PcfForUeIpEndPoints = v
}

// GetPcfId returns the PcfId field value if set, zero value otherwise.
func (o *PcfForUeBindingPatch) GetPcfId() string {
	if o == nil || IsNil(o.PcfId) {
		var ret string
		return ret
	}
	return *o.PcfId
}

// GetPcfIdOk returns a tuple with the PcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PcfForUeBindingPatch) GetPcfIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfId) {
		return nil, false
	}
	return o.PcfId, true
}

// HasPcfId returns a boolean if a field has been set.
func (o *PcfForUeBindingPatch) HasPcfId() bool {
	if o != nil && !IsNil(o.PcfId) {
		return true
	}

	return false
}

// SetPcfId gets a reference to the given string and assigns it to the PcfId field.
func (o *PcfForUeBindingPatch) SetPcfId(v string) {
	o.PcfId = &v
}

func (o PcfForUeBindingPatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PcfForUeBindingPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PcfForUeFqdn) {
		toSerialize["pcfForUeFqdn"] = o.PcfForUeFqdn
	}
	if !IsNil(o.PcfForUeIpEndPoints) {
		toSerialize["pcfForUeIpEndPoints"] = o.PcfForUeIpEndPoints
	}
	if !IsNil(o.PcfId) {
		toSerialize["pcfId"] = o.PcfId
	}
	return toSerialize, nil
}

type NullablePcfForUeBindingPatch struct {
	value *PcfForUeBindingPatch
	isSet bool
}

func (v NullablePcfForUeBindingPatch) Get() *PcfForUeBindingPatch {
	return v.value
}

func (v *NullablePcfForUeBindingPatch) Set(val *PcfForUeBindingPatch) {
	v.value = val
	v.isSet = true
}

func (v NullablePcfForUeBindingPatch) IsSet() bool {
	return v.isSet
}

func (v *NullablePcfForUeBindingPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePcfForUeBindingPatch(val *PcfForUeBindingPatch) *NullablePcfForUeBindingPatch {
	return &NullablePcfForUeBindingPatch{value: val, isSet: true}
}

func (v NullablePcfForUeBindingPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePcfForUeBindingPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
