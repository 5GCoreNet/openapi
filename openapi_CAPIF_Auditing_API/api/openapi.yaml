openapi: 3.0.0
info:
  description: "API for auditing.  \nÂ© 2022, 3GPP Organizational Partners (ARIB, ATIS,\
    \ CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  title: CAPIF_Auditing_API
  version: 1.3.0-alpha.1
externalDocs:
  description: 3GPP TS 29.222 V18.0.0 Common API Framework for 3GPP Northbound APIs
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.222/
servers:
- url: "{apiRoot}/logs/v1"
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in clause 7.5 of 3GPP TS 29.222.
paths:
  /apiInvocationLogs:
    get:
      description: Query and retrieve service API invocation logs stored on the CAPIF
        core function.
      parameters:
      - description: String identifying the API exposing function.
        explode: true
        in: query
        name: aef-id
        required: false
        schema:
          type: string
        style: form
      - description: String identifying the API invoker which invoked the service
          API.
        explode: true
        in: query
        name: api-invoker-id
        required: false
        schema:
          type: string
        style: form
      - description: Start time of the invocation time range.
        explode: true
        in: query
        name: time-range-start
        required: false
        schema:
          $ref: '#/components/schemas/DateTime'
        style: form
      - description: End time of the invocation time range.
        explode: true
        in: query
        name: time-range-end
        required: false
        schema:
          $ref: '#/components/schemas/DateTime'
        style: form
      - description: String identifying the API invoked.
        explode: true
        in: query
        name: api-id
        required: false
        schema:
          type: string
        style: form
      - description: |
          API name, it is set as {apiName} part of the URI structure as defined in clause 5.2.4 of 3GPP TS 29.122.
        explode: true
        in: query
        name: api-name
        required: false
        schema:
          type: string
        style: form
      - description: Version of the API which was invoked.
        explode: true
        in: query
        name: api-version
        required: false
        schema:
          type: string
        style: form
      - description: Protocol invoked.
        explode: true
        in: query
        name: protocol
        required: false
        schema:
          $ref: '#/components/schemas/Protocol'
        style: form
      - description: Operation that was invoked on the API.
        explode: true
        in: query
        name: operation
        required: false
        schema:
          $ref: '#/components/schemas/Operation'
        style: form
      - description: Result or output of the invocation.
        explode: true
        in: query
        name: result
        required: false
        schema:
          type: string
        style: form
      - description: Name of the specific resource invoked.
        explode: true
        in: query
        name: resource-name
        required: false
        schema:
          type: string
        style: form
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceDescription'
        description: Interface description of the API invoker.
        in: query
        name: src-interface
        required: false
      - content:
          application/json:
            schema:
              $ref: '#/components/schemas/InterfaceDescription'
        description: Interface description of the API invoked.
        in: query
        name: dest-interface
        required: false
      - description: To filter irrelevant responses related to unsupported features
        explode: true
        in: query
        name: supported-features
        required: false
        schema:
          $ref: '#/components/schemas/SupportedFeatures'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvocationLog'
          description: |
            Result of the query operation along with fetched service API invocation log data.
        "307":
          description: Temporary Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "308":
          description: Permanent Redirect
          headers:
            Location:
              description: An alternative URI of the resource.
              required: true
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Acceptable
        "414":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: URI Too Long
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
components:
  responses:
    "307":
      description: Temporary Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "308":
      description: Permanent Redirect
      headers:
        Location:
          description: An alternative URI of the resource.
          required: true
          schema:
            type: string
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    "406":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Acceptable
    "414":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: URI Too Long
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Too Many Requests
    "500":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    "503":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    default:
      description: Generic Error
  schemas:
    DateTime:
      description: string with format "date-time" as defined in OpenAPI.
      format: date-time
      type: string
    Protocol:
      anyOf:
      - $ref: '#/components/schemas/Protocol_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are:
        - HTTP_1_1: HTTP version 1.1
        - HTTP_2: HTTP version 2
    Operation:
      anyOf:
      - $ref: '#/components/schemas/Operation_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are:
        - GET: HTTP GET method
        - POST: HTTP POST method
        - PUT: HTTP PUT method
        - PATCH: HTTP PATCH method
        - DELETE: HTTP DELETE method
    InterfaceDescription:
      description: Represents the description of an API's interface.
      example:
        ipv6Addr: ipv6Addr
        securityMethods:
        - null
        - null
        fqdn: fqdn
        port: 39500
        apiPrefix: apiPrefix
        ipv4Addr: ipv4Addr
      oneOf:
      - required:
        - ipv4Addr
      - required:
        - ipv6Addr
      - required:
        - fqdn
      properties:
        ipv4Addr:
          description: string identifying a Ipv4 address formatted in the "dotted
            decimal" notation as defined in IETF RFC 1166.
          type: string
        ipv6Addr:
          description: string identifying a Ipv6 address formatted according to clause
            4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5
            of IETF RFC 5952 shall not be used.
          type: string
        fqdn:
          description: Fully Qualified Domain Name
          maxLength: 253
          minLength: 4
          pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
            .?$"
          type: string
        port:
          description: Unsigned integer with valid values between 0 and 65535.
          maximum: 65535
          minimum: 0
          type: integer
        apiPrefix:
          description: |
            A string representing a sequence of path segments that starts with the slash character.
          type: string
        securityMethods:
          description: |
            Security methods supported by the interface, it take precedence over the security methods provided in AefProfile, for this specific interface.
          items:
            $ref: '#/components/schemas/SecurityMethod'
          minItems: 1
          type: array
      type: object
    SecurityMethod:
      anyOf:
      - $ref: '#/components/schemas/SecurityMethod_anyOf'
      - description: |
          This string provides forward-compatibility with future extensions to the enumeration but is not used to encode content defined in the present version of this API.
        type: string
      description: |
        Possible values are:
        - PSK: Security method 1 (Using TLS-PSK) as described in 3GPP TS 33.122
        - PKI: Security method 2 (Using PKI) as described in 3GPP TS 33.122
        - OAUTH: Security method 3 (TLS with OAuth token) as described in 3GPP TS 33.122
    SupportedFeatures:
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
      pattern: "^[A-Fa-f0-9]*$"
      type: string
    InvocationLog:
      description: |
        Represents a set of Service API invocation logs to be stored in a CAPIF core function.
      example:
        supportedFeatures: supportedFeatures
        apiInvokerId: apiInvokerId
        aefId: aefId
        logs:
        - apiName: apiName
          invocationTime: 2000-01-23T04:56:07.000+00:00
          srcInterface:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            fqdn: fqdn
            port: 39500
            apiPrefix: apiPrefix
            ipv4Addr: ipv4Addr
          fwdInterface: fwdInterface
          resourceName: resourceName
          uri: uri
          inputParameters: ""
          invocationLatency: 0
          result: result
          protocol: null
          apiVersion: apiVersion
          destInterface:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            fqdn: fqdn
            port: 39500
            apiPrefix: apiPrefix
            ipv4Addr: ipv4Addr
          operation: null
          apiId: apiId
          outputParameters: ""
        - apiName: apiName
          invocationTime: 2000-01-23T04:56:07.000+00:00
          srcInterface:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            fqdn: fqdn
            port: 39500
            apiPrefix: apiPrefix
            ipv4Addr: ipv4Addr
          fwdInterface: fwdInterface
          resourceName: resourceName
          uri: uri
          inputParameters: ""
          invocationLatency: 0
          result: result
          protocol: null
          apiVersion: apiVersion
          destInterface:
            ipv6Addr: ipv6Addr
            securityMethods:
            - null
            - null
            fqdn: fqdn
            port: 39500
            apiPrefix: apiPrefix
            ipv4Addr: ipv4Addr
          operation: null
          apiId: apiId
          outputParameters: ""
      properties:
        aefId:
          description: |
            Identity information of the API exposing function requesting logging of service API invocations
          type: string
        apiInvokerId:
          description: Identity of the API invoker which invoked the service API
          type: string
        logs:
          description: Service API invocation log
          items:
            $ref: '#/components/schemas/Log'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      required:
      - aefId
      - apiInvokerId
      - logs
      type: object
    Log:
      description: Represents an individual service API invocation log entry.
      example:
        apiName: apiName
        invocationTime: 2000-01-23T04:56:07.000+00:00
        srcInterface:
          ipv6Addr: ipv6Addr
          securityMethods:
          - null
          - null
          fqdn: fqdn
          port: 39500
          apiPrefix: apiPrefix
          ipv4Addr: ipv4Addr
        fwdInterface: fwdInterface
        resourceName: resourceName
        uri: uri
        inputParameters: ""
        invocationLatency: 0
        result: result
        protocol: null
        apiVersion: apiVersion
        destInterface:
          ipv6Addr: ipv6Addr
          securityMethods:
          - null
          - null
          fqdn: fqdn
          port: 39500
          apiPrefix: apiPrefix
          ipv4Addr: ipv4Addr
        operation: null
        apiId: apiId
        outputParameters: ""
      properties:
        apiId:
          description: String identifying the API invoked.
          type: string
        apiName:
          description: |
            Name of the API which was invoked, it is set as {apiName} part of the URI structure as defined in clause 5.2.4 of 3GPP TS 29.122.
          type: string
        apiVersion:
          description: Version of the API which was invoked
          type: string
        resourceName:
          description: Name of the specific resource invoked
          type: string
        uri:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        protocol:
          $ref: '#/components/schemas/Protocol'
        operation:
          $ref: '#/components/schemas/Operation'
        result:
          description: "For HTTP protocol, it contains HTTP status code of the invocation"
          type: string
        invocationTime:
          description: string with format "date-time" as defined in OpenAPI.
          format: date-time
          type: string
        invocationLatency:
          description: Represents a period of time in units of milliseconds.
          minimum: 0
          type: integer
        inputParameters:
          description: |
            List of input parameters. Can be any value - string, number, boolean, array or object.
        outputParameters:
          description: |
            List of output parameters. Can be any value - string, number, boolean, array or object.
        srcInterface:
          $ref: '#/components/schemas/InterfaceDescription'
        destInterface:
          $ref: '#/components/schemas/InterfaceDescription'
        fwdInterface:
          description: |
            It includes the node identifier (as defined in IETF RFC 7239 of all forwarding entities between the API invoker and the AEF, concatenated with comma and space, e.g. 192.0.2.43:80, unknown:_OBFport, 203.0.113.60
          type: string
      required:
      - apiId
      - apiName
      - apiVersion
      - protocol
      - resourceName
      - result
      type: object
    DurationMs:
      description: Represents a period of time in units of milliseconds.
      minimum: 0
      type: integer
    ProblemDetails:
      description: Represents additional information and details on an error response.
      properties:
        type:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        title:
          description: "A short, human-readable summary of the problem type. It should\
            \ not change from occurrence to occurrence of the problem."
          type: string
        status:
          description: The HTTP status code for this occurrence of the problem.
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: string providing an URI formatted according to IETF RFC 3986.
          type: string
        cause:
          description: "A machine-readable application error cause specific to this\
            \ occurrence of the problem. This IE should be present and provide application-related\
            \ error information, if available."
          type: string
        invalidParams:
          description: "Description of invalid parameters, for a request rejected\
            \ due to invalid parameters."
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
      type: object
    Uri:
      description: string providing an URI formatted according to IETF RFC 3986.
      type: string
    InvalidParam:
      description: "Represents the description of invalid parameters, for a request\
        \ rejected due to invalid parameters."
      properties:
        param:
          description: "Attribute's name encoded as a JSON Pointer, or header's name."
          type: string
        reason:
          description: "A human-readable reason, e.g. \"must be a positive integer\"\
            ."
          type: string
      required:
      - param
      type: object
    Ipv4Addr:
      description: string identifying a Ipv4 address formatted in the "dotted decimal"
        notation as defined in IETF RFC 1166.
      type: string
    Ipv6Addr:
      description: string identifying a Ipv6 address formatted according to clause
        4 in IETF RFC 5952. The mixed Ipv4 Ipv6 notation according to clause 5 of
        IETF RFC 5952 shall not be used.
      type: string
    Fqdn:
      description: Fully Qualified Domain Name
      maxLength: 253
      minLength: 4
      pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
        .?$"
      type: string
    Port:
      description: Unsigned integer with valid values between 0 and 65535.
      maximum: 65535
      minimum: 0
      type: integer
    Protocol_anyOf:
      enum:
      - HTTP_1_1
      - HTTP_2
      type: string
      example: null
    Operation_anyOf:
      enum:
      - GET
      - POST
      - PUT
      - PATCH
      - DELETE
      type: string
      example: null
    SecurityMethod_anyOf:
      enum:
      - PSK
      - PKI
      - OAUTH
      type: string
      example: null
