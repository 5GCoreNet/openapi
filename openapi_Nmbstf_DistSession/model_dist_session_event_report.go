/*
Nmbstf-distsession

MBSTF Distribution Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbstf_DistSession

import (
	"encoding/json"
	"time"
)

// checks if the DistSessionEventReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DistSessionEventReport{}

// DistSessionEventReport Data related to a specific event
type DistSessionEventReport struct {
	EventType DistSessionEventType `json:"eventType"`
	// string with format 'date-time' as defined in OpenAPI.
	TimeStamp          *time.Time          `json:"timeStamp,omitempty"`
	MbsSecurityContext *MbsSecurityContext `json:"mbsSecurityContext,omitempty"`
}

// NewDistSessionEventReport instantiates a new DistSessionEventReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDistSessionEventReport(eventType DistSessionEventType) *DistSessionEventReport {
	this := DistSessionEventReport{}
	this.EventType = eventType
	return &this
}

// NewDistSessionEventReportWithDefaults instantiates a new DistSessionEventReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDistSessionEventReportWithDefaults() *DistSessionEventReport {
	this := DistSessionEventReport{}
	return &this
}

// GetEventType returns the EventType field value
func (o *DistSessionEventReport) GetEventType() DistSessionEventType {
	if o == nil {
		var ret DistSessionEventType
		return ret
	}

	return o.EventType
}

// GetEventTypeOk returns a tuple with the EventType field value
// and a boolean to check if the value has been set.
func (o *DistSessionEventReport) GetEventTypeOk() (*DistSessionEventType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EventType, true
}

// SetEventType sets field value
func (o *DistSessionEventReport) SetEventType(v DistSessionEventType) {
	o.EventType = v
}

// GetTimeStamp returns the TimeStamp field value if set, zero value otherwise.
func (o *DistSessionEventReport) GetTimeStamp() time.Time {
	if o == nil || IsNil(o.TimeStamp) {
		var ret time.Time
		return ret
	}
	return *o.TimeStamp
}

// GetTimeStampOk returns a tuple with the TimeStamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistSessionEventReport) GetTimeStampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeStamp) {
		return nil, false
	}
	return o.TimeStamp, true
}

// HasTimeStamp returns a boolean if a field has been set.
func (o *DistSessionEventReport) HasTimeStamp() bool {
	if o != nil && !IsNil(o.TimeStamp) {
		return true
	}

	return false
}

// SetTimeStamp gets a reference to the given time.Time and assigns it to the TimeStamp field.
func (o *DistSessionEventReport) SetTimeStamp(v time.Time) {
	o.TimeStamp = &v
}

// GetMbsSecurityContext returns the MbsSecurityContext field value if set, zero value otherwise.
func (o *DistSessionEventReport) GetMbsSecurityContext() MbsSecurityContext {
	if o == nil || IsNil(o.MbsSecurityContext) {
		var ret MbsSecurityContext
		return ret
	}
	return *o.MbsSecurityContext
}

// GetMbsSecurityContextOk returns a tuple with the MbsSecurityContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DistSessionEventReport) GetMbsSecurityContextOk() (*MbsSecurityContext, bool) {
	if o == nil || IsNil(o.MbsSecurityContext) {
		return nil, false
	}
	return o.MbsSecurityContext, true
}

// HasMbsSecurityContext returns a boolean if a field has been set.
func (o *DistSessionEventReport) HasMbsSecurityContext() bool {
	if o != nil && !IsNil(o.MbsSecurityContext) {
		return true
	}

	return false
}

// SetMbsSecurityContext gets a reference to the given MbsSecurityContext and assigns it to the MbsSecurityContext field.
func (o *DistSessionEventReport) SetMbsSecurityContext(v MbsSecurityContext) {
	o.MbsSecurityContext = &v
}

func (o DistSessionEventReport) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DistSessionEventReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["eventType"] = o.EventType
	if !IsNil(o.TimeStamp) {
		toSerialize["timeStamp"] = o.TimeStamp
	}
	if !IsNil(o.MbsSecurityContext) {
		toSerialize["mbsSecurityContext"] = o.MbsSecurityContext
	}
	return toSerialize, nil
}

type NullableDistSessionEventReport struct {
	value *DistSessionEventReport
	isSet bool
}

func (v NullableDistSessionEventReport) Get() *DistSessionEventReport {
	return v.value
}

func (v *NullableDistSessionEventReport) Set(val *DistSessionEventReport) {
	v.value = val
	v.isSet = true
}

func (v NullableDistSessionEventReport) IsSet() bool {
	return v.isSet
}

func (v *NullableDistSessionEventReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDistSessionEventReport(val *DistSessionEventReport) *NullableDistSessionEventReport {
	return &NullableDistSessionEventReport{value: val, isSet: true}
}

func (v NullableDistSessionEventReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDistSessionEventReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
