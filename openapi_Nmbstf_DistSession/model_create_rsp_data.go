/*
Nmbstf-distsession

MBSTF Distribution Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nmbstf_DistSession

import (
	"encoding/json"
)

// checks if the CreateRspData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateRspData{}

// CreateRspData Data within Create Response
type CreateRspData struct {
	DistSession DistSession `json:"distSession"`
}

// NewCreateRspData instantiates a new CreateRspData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateRspData(distSession DistSession) *CreateRspData {
	this := CreateRspData{}
	this.DistSession = distSession
	return &this
}

// NewCreateRspDataWithDefaults instantiates a new CreateRspData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateRspDataWithDefaults() *CreateRspData {
	this := CreateRspData{}
	return &this
}

// GetDistSession returns the DistSession field value
func (o *CreateRspData) GetDistSession() DistSession {
	if o == nil {
		var ret DistSession
		return ret
	}

	return o.DistSession
}

// GetDistSessionOk returns a tuple with the DistSession field value
// and a boolean to check if the value has been set.
func (o *CreateRspData) GetDistSessionOk() (*DistSession, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DistSession, true
}

// SetDistSession sets field value
func (o *CreateRspData) SetDistSession(v DistSession) {
	o.DistSession = v
}

func (o CreateRspData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateRspData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["distSession"] = o.DistSession
	return toSerialize, nil
}

type NullableCreateRspData struct {
	value *CreateRspData
	isSet bool
}

func (v NullableCreateRspData) Get() *CreateRspData {
	return v.value
}

func (v *NullableCreateRspData) Set(val *CreateRspData) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateRspData) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateRspData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateRspData(val *CreateRspData) *NullableCreateRspData {
	return &NullableCreateRspData{value: val, isSet: true}
}

func (v NullableCreateRspData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateRspData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


