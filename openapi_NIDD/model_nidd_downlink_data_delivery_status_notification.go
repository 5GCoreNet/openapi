/*
3gpp-nidd

API for non IP data delivery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NIDD

import (
	"encoding/json"
	"time"
)

// checks if the NiddDownlinkDataDeliveryStatusNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NiddDownlinkDataDeliveryStatusNotification{}

// NiddDownlinkDataDeliveryStatusNotification Represents the delivery status of a specific NIDD downlink data delivery.
type NiddDownlinkDataDeliveryStatusNotification struct {
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	NiddDownlinkDataTransfer string         `json:"niddDownlinkDataTransfer"`
	DeliveryStatus           DeliveryStatus `json:"deliveryStatus"`
	// string with format \"date-time\" as defined in OpenAPI.
	RequestedRetransmissionTime *time.Time `json:"requestedRetransmissionTime,omitempty"`
}

// NewNiddDownlinkDataDeliveryStatusNotification instantiates a new NiddDownlinkDataDeliveryStatusNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNiddDownlinkDataDeliveryStatusNotification(niddDownlinkDataTransfer string, deliveryStatus DeliveryStatus) *NiddDownlinkDataDeliveryStatusNotification {
	this := NiddDownlinkDataDeliveryStatusNotification{}
	this.NiddDownlinkDataTransfer = niddDownlinkDataTransfer
	this.DeliveryStatus = deliveryStatus
	return &this
}

// NewNiddDownlinkDataDeliveryStatusNotificationWithDefaults instantiates a new NiddDownlinkDataDeliveryStatusNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNiddDownlinkDataDeliveryStatusNotificationWithDefaults() *NiddDownlinkDataDeliveryStatusNotification {
	this := NiddDownlinkDataDeliveryStatusNotification{}
	return &this
}

// GetNiddDownlinkDataTransfer returns the NiddDownlinkDataTransfer field value
func (o *NiddDownlinkDataDeliveryStatusNotification) GetNiddDownlinkDataTransfer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NiddDownlinkDataTransfer
}

// GetNiddDownlinkDataTransferOk returns a tuple with the NiddDownlinkDataTransfer field value
// and a boolean to check if the value has been set.
func (o *NiddDownlinkDataDeliveryStatusNotification) GetNiddDownlinkDataTransferOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NiddDownlinkDataTransfer, true
}

// SetNiddDownlinkDataTransfer sets field value
func (o *NiddDownlinkDataDeliveryStatusNotification) SetNiddDownlinkDataTransfer(v string) {
	o.NiddDownlinkDataTransfer = v
}

// GetDeliveryStatus returns the DeliveryStatus field value
func (o *NiddDownlinkDataDeliveryStatusNotification) GetDeliveryStatus() DeliveryStatus {
	if o == nil {
		var ret DeliveryStatus
		return ret
	}

	return o.DeliveryStatus
}

// GetDeliveryStatusOk returns a tuple with the DeliveryStatus field value
// and a boolean to check if the value has been set.
func (o *NiddDownlinkDataDeliveryStatusNotification) GetDeliveryStatusOk() (*DeliveryStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryStatus, true
}

// SetDeliveryStatus sets field value
func (o *NiddDownlinkDataDeliveryStatusNotification) SetDeliveryStatus(v DeliveryStatus) {
	o.DeliveryStatus = v
}

// GetRequestedRetransmissionTime returns the RequestedRetransmissionTime field value if set, zero value otherwise.
func (o *NiddDownlinkDataDeliveryStatusNotification) GetRequestedRetransmissionTime() time.Time {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestedRetransmissionTime
}

// GetRequestedRetransmissionTimeOk returns a tuple with the RequestedRetransmissionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NiddDownlinkDataDeliveryStatusNotification) GetRequestedRetransmissionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		return nil, false
	}
	return o.RequestedRetransmissionTime, true
}

// HasRequestedRetransmissionTime returns a boolean if a field has been set.
func (o *NiddDownlinkDataDeliveryStatusNotification) HasRequestedRetransmissionTime() bool {
	if o != nil && !IsNil(o.RequestedRetransmissionTime) {
		return true
	}

	return false
}

// SetRequestedRetransmissionTime gets a reference to the given time.Time and assigns it to the RequestedRetransmissionTime field.
func (o *NiddDownlinkDataDeliveryStatusNotification) SetRequestedRetransmissionTime(v time.Time) {
	o.RequestedRetransmissionTime = &v
}

func (o NiddDownlinkDataDeliveryStatusNotification) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NiddDownlinkDataDeliveryStatusNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["niddDownlinkDataTransfer"] = o.NiddDownlinkDataTransfer
	toSerialize["deliveryStatus"] = o.DeliveryStatus
	if !IsNil(o.RequestedRetransmissionTime) {
		toSerialize["requestedRetransmissionTime"] = o.RequestedRetransmissionTime
	}
	return toSerialize, nil
}

type NullableNiddDownlinkDataDeliveryStatusNotification struct {
	value *NiddDownlinkDataDeliveryStatusNotification
	isSet bool
}

func (v NullableNiddDownlinkDataDeliveryStatusNotification) Get() *NiddDownlinkDataDeliveryStatusNotification {
	return v.value
}

func (v *NullableNiddDownlinkDataDeliveryStatusNotification) Set(val *NiddDownlinkDataDeliveryStatusNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableNiddDownlinkDataDeliveryStatusNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableNiddDownlinkDataDeliveryStatusNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNiddDownlinkDataDeliveryStatusNotification(val *NiddDownlinkDataDeliveryStatusNotification) *NullableNiddDownlinkDataDeliveryStatusNotification {
	return &NullableNiddDownlinkDataDeliveryStatusNotification{value: val, isSet: true}
}

func (v NullableNiddDownlinkDataDeliveryStatusNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNiddDownlinkDataDeliveryStatusNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
