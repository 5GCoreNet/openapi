/*
3gpp-nidd

API for non IP data delivery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NIDD

import (
	"encoding/json"
	"fmt"
)

// PdnEstablishmentOptionsRm Represents the same information as the PdnEstablishmentOptions data type with the difference that it allows also the null value.
type PdnEstablishmentOptionsRm struct {
	NullValue               *NullValue
	PdnEstablishmentOptions *PdnEstablishmentOptions
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *PdnEstablishmentOptionsRm) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into NullValue
	err = json.Unmarshal(data, &dst.NullValue)
	if err == nil {
		jsonNullValue, _ := json.Marshal(dst.NullValue)
		if string(jsonNullValue) == "{}" { // empty struct
			dst.NullValue = nil
		} else {
			return nil // data stored in dst.NullValue, return on the first match
		}
	} else {
		dst.NullValue = nil
	}

	// try to unmarshal JSON data into PdnEstablishmentOptions
	err = json.Unmarshal(data, &dst.PdnEstablishmentOptions)
	if err == nil {
		jsonPdnEstablishmentOptions, _ := json.Marshal(dst.PdnEstablishmentOptions)
		if string(jsonPdnEstablishmentOptions) == "{}" { // empty struct
			dst.PdnEstablishmentOptions = nil
		} else {
			return nil // data stored in dst.PdnEstablishmentOptions, return on the first match
		}
	} else {
		dst.PdnEstablishmentOptions = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(PdnEstablishmentOptionsRm)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src *PdnEstablishmentOptionsRm) MarshalJSON() ([]byte, error) {
	if src.NullValue != nil {
		return json.Marshal(&src.NullValue)
	}

	if src.PdnEstablishmentOptions != nil {
		return json.Marshal(&src.PdnEstablishmentOptions)
	}

	return nil, nil // no data in anyOf schemas
}

type NullablePdnEstablishmentOptionsRm struct {
	value *PdnEstablishmentOptionsRm
	isSet bool
}

func (v NullablePdnEstablishmentOptionsRm) Get() *PdnEstablishmentOptionsRm {
	return v.value
}

func (v *NullablePdnEstablishmentOptionsRm) Set(val *PdnEstablishmentOptionsRm) {
	v.value = val
	v.isSet = true
}

func (v NullablePdnEstablishmentOptionsRm) IsSet() bool {
	return v.isSet
}

func (v *NullablePdnEstablishmentOptionsRm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePdnEstablishmentOptionsRm(val *PdnEstablishmentOptionsRm) *NullablePdnEstablishmentOptionsRm {
	return &NullablePdnEstablishmentOptionsRm{value: val, isSet: true}
}

func (v NullablePdnEstablishmentOptionsRm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePdnEstablishmentOptionsRm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
