/*
3gpp-nidd

API for non IP data delivery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NIDD

import (
	"encoding/json"
)

// checks if the RdsPort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RdsPort{}

// RdsPort Represents the port configuration for Reliable Data Transfer.
type RdsPort struct {
	// Unsigned integer with valid values between 0 and 65535.
	PortUE int32 `json:"portUE"`
	// Unsigned integer with valid values between 0 and 65535.
	PortSCEF int32 `json:"portSCEF"`
}

// NewRdsPort instantiates a new RdsPort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRdsPort(portUE int32, portSCEF int32) *RdsPort {
	this := RdsPort{}
	this.PortUE = portUE
	this.PortSCEF = portSCEF
	return &this
}

// NewRdsPortWithDefaults instantiates a new RdsPort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRdsPortWithDefaults() *RdsPort {
	this := RdsPort{}
	return &this
}

// GetPortUE returns the PortUE field value
func (o *RdsPort) GetPortUE() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortUE
}

// GetPortUEOk returns a tuple with the PortUE field value
// and a boolean to check if the value has been set.
func (o *RdsPort) GetPortUEOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortUE, true
}

// SetPortUE sets field value
func (o *RdsPort) SetPortUE(v int32) {
	o.PortUE = v
}

// GetPortSCEF returns the PortSCEF field value
func (o *RdsPort) GetPortSCEF() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortSCEF
}

// GetPortSCEFOk returns a tuple with the PortSCEF field value
// and a boolean to check if the value has been set.
func (o *RdsPort) GetPortSCEFOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortSCEF, true
}

// SetPortSCEF sets field value
func (o *RdsPort) SetPortSCEF(v int32) {
	o.PortSCEF = v
}

func (o RdsPort) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RdsPort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["portUE"] = o.PortUE
	toSerialize["portSCEF"] = o.PortSCEF
	return toSerialize, nil
}

type NullableRdsPort struct {
	value *RdsPort
	isSet bool
}

func (v NullableRdsPort) Get() *RdsPort {
	return v.value
}

func (v *NullableRdsPort) Set(val *RdsPort) {
	v.value = val
	v.isSet = true
}

func (v NullableRdsPort) IsSet() bool {
	return v.isSet
}

func (v *NullableRdsPort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRdsPort(val *RdsPort) *NullableRdsPort {
	return &NullableRdsPort{value: val, isSet: true}
}

func (v NullableRdsPort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRdsPort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
