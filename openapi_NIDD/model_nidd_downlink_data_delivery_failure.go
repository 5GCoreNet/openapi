/*
3gpp-nidd

API for non IP data delivery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NIDD

import (
	"encoding/json"
	"time"
)

// checks if the NiddDownlinkDataDeliveryFailure type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NiddDownlinkDataDeliveryFailure{}

// NiddDownlinkDataDeliveryFailure Represents information related to a failure delivery result.
type NiddDownlinkDataDeliveryFailure struct {
	ProblemDetail ProblemDetails `json:"problemDetail"`
	// string with format \"date-time\" as defined in OpenAPI.
	RequestedRetransmissionTime *time.Time `json:"requestedRetransmissionTime,omitempty"`
}

// NewNiddDownlinkDataDeliveryFailure instantiates a new NiddDownlinkDataDeliveryFailure object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNiddDownlinkDataDeliveryFailure(problemDetail ProblemDetails) *NiddDownlinkDataDeliveryFailure {
	this := NiddDownlinkDataDeliveryFailure{}
	this.ProblemDetail = problemDetail
	return &this
}

// NewNiddDownlinkDataDeliveryFailureWithDefaults instantiates a new NiddDownlinkDataDeliveryFailure object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNiddDownlinkDataDeliveryFailureWithDefaults() *NiddDownlinkDataDeliveryFailure {
	this := NiddDownlinkDataDeliveryFailure{}
	return &this
}

// GetProblemDetail returns the ProblemDetail field value
func (o *NiddDownlinkDataDeliveryFailure) GetProblemDetail() ProblemDetails {
	if o == nil {
		var ret ProblemDetails
		return ret
	}

	return o.ProblemDetail
}

// GetProblemDetailOk returns a tuple with the ProblemDetail field value
// and a boolean to check if the value has been set.
func (o *NiddDownlinkDataDeliveryFailure) GetProblemDetailOk() (*ProblemDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProblemDetail, true
}

// SetProblemDetail sets field value
func (o *NiddDownlinkDataDeliveryFailure) SetProblemDetail(v ProblemDetails) {
	o.ProblemDetail = v
}

// GetRequestedRetransmissionTime returns the RequestedRetransmissionTime field value if set, zero value otherwise.
func (o *NiddDownlinkDataDeliveryFailure) GetRequestedRetransmissionTime() time.Time {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestedRetransmissionTime
}

// GetRequestedRetransmissionTimeOk returns a tuple with the RequestedRetransmissionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NiddDownlinkDataDeliveryFailure) GetRequestedRetransmissionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		return nil, false
	}
	return o.RequestedRetransmissionTime, true
}

// HasRequestedRetransmissionTime returns a boolean if a field has been set.
func (o *NiddDownlinkDataDeliveryFailure) HasRequestedRetransmissionTime() bool {
	if o != nil && !IsNil(o.RequestedRetransmissionTime) {
		return true
	}

	return false
}

// SetRequestedRetransmissionTime gets a reference to the given time.Time and assigns it to the RequestedRetransmissionTime field.
func (o *NiddDownlinkDataDeliveryFailure) SetRequestedRetransmissionTime(v time.Time) {
	o.RequestedRetransmissionTime = &v
}

func (o NiddDownlinkDataDeliveryFailure) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NiddDownlinkDataDeliveryFailure) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["problemDetail"] = o.ProblemDetail
	if !IsNil(o.RequestedRetransmissionTime) {
		toSerialize["requestedRetransmissionTime"] = o.RequestedRetransmissionTime
	}
	return toSerialize, nil
}

type NullableNiddDownlinkDataDeliveryFailure struct {
	value *NiddDownlinkDataDeliveryFailure
	isSet bool
}

func (v NullableNiddDownlinkDataDeliveryFailure) Get() *NiddDownlinkDataDeliveryFailure {
	return v.value
}

func (v *NullableNiddDownlinkDataDeliveryFailure) Set(val *NiddDownlinkDataDeliveryFailure) {
	v.value = val
	v.isSet = true
}

func (v NullableNiddDownlinkDataDeliveryFailure) IsSet() bool {
	return v.isSet
}

func (v *NullableNiddDownlinkDataDeliveryFailure) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNiddDownlinkDataDeliveryFailure(val *NiddDownlinkDataDeliveryFailure) *NullableNiddDownlinkDataDeliveryFailure {
	return &NullableNiddDownlinkDataDeliveryFailure{value: val, isSet: true}
}

func (v NullableNiddDownlinkDataDeliveryFailure) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNiddDownlinkDataDeliveryFailure) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


