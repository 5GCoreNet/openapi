/*
3gpp-nidd

API for non IP data delivery.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_NIDD

import (
	"encoding/json"
	"time"
)

// checks if the RdsDownlinkDataDeliveryFailureAllOf type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RdsDownlinkDataDeliveryFailureAllOf{}

// RdsDownlinkDataDeliveryFailureAllOf struct for RdsDownlinkDataDeliveryFailureAllOf
type RdsDownlinkDataDeliveryFailureAllOf struct {
	// string with format \"date-time\" as defined in OpenAPI.
	RequestedRetransmissionTime *time.Time `json:"requestedRetransmissionTime,omitempty"`
	// Indicates the serialization format(s) that are supported by the UE on the associated RDS port.
	SupportedUeFormats []SerializationFormat `json:"supportedUeFormats,omitempty"`
}

// NewRdsDownlinkDataDeliveryFailureAllOf instantiates a new RdsDownlinkDataDeliveryFailureAllOf object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRdsDownlinkDataDeliveryFailureAllOf() *RdsDownlinkDataDeliveryFailureAllOf {
	this := RdsDownlinkDataDeliveryFailureAllOf{}
	return &this
}

// NewRdsDownlinkDataDeliveryFailureAllOfWithDefaults instantiates a new RdsDownlinkDataDeliveryFailureAllOf object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRdsDownlinkDataDeliveryFailureAllOfWithDefaults() *RdsDownlinkDataDeliveryFailureAllOf {
	this := RdsDownlinkDataDeliveryFailureAllOf{}
	return &this
}

// GetRequestedRetransmissionTime returns the RequestedRetransmissionTime field value if set, zero value otherwise.
func (o *RdsDownlinkDataDeliveryFailureAllOf) GetRequestedRetransmissionTime() time.Time {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		var ret time.Time
		return ret
	}
	return *o.RequestedRetransmissionTime
}

// GetRequestedRetransmissionTimeOk returns a tuple with the RequestedRetransmissionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RdsDownlinkDataDeliveryFailureAllOf) GetRequestedRetransmissionTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RequestedRetransmissionTime) {
		return nil, false
	}
	return o.RequestedRetransmissionTime, true
}

// HasRequestedRetransmissionTime returns a boolean if a field has been set.
func (o *RdsDownlinkDataDeliveryFailureAllOf) HasRequestedRetransmissionTime() bool {
	if o != nil && !IsNil(o.RequestedRetransmissionTime) {
		return true
	}

	return false
}

// SetRequestedRetransmissionTime gets a reference to the given time.Time and assigns it to the RequestedRetransmissionTime field.
func (o *RdsDownlinkDataDeliveryFailureAllOf) SetRequestedRetransmissionTime(v time.Time) {
	o.RequestedRetransmissionTime = &v
}

// GetSupportedUeFormats returns the SupportedUeFormats field value if set, zero value otherwise.
func (o *RdsDownlinkDataDeliveryFailureAllOf) GetSupportedUeFormats() []SerializationFormat {
	if o == nil || IsNil(o.SupportedUeFormats) {
		var ret []SerializationFormat
		return ret
	}
	return o.SupportedUeFormats
}

// GetSupportedUeFormatsOk returns a tuple with the SupportedUeFormats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RdsDownlinkDataDeliveryFailureAllOf) GetSupportedUeFormatsOk() ([]SerializationFormat, bool) {
	if o == nil || IsNil(o.SupportedUeFormats) {
		return nil, false
	}
	return o.SupportedUeFormats, true
}

// HasSupportedUeFormats returns a boolean if a field has been set.
func (o *RdsDownlinkDataDeliveryFailureAllOf) HasSupportedUeFormats() bool {
	if o != nil && !IsNil(o.SupportedUeFormats) {
		return true
	}

	return false
}

// SetSupportedUeFormats gets a reference to the given []SerializationFormat and assigns it to the SupportedUeFormats field.
func (o *RdsDownlinkDataDeliveryFailureAllOf) SetSupportedUeFormats(v []SerializationFormat) {
	o.SupportedUeFormats = v
}

func (o RdsDownlinkDataDeliveryFailureAllOf) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RdsDownlinkDataDeliveryFailureAllOf) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RequestedRetransmissionTime) {
		toSerialize["requestedRetransmissionTime"] = o.RequestedRetransmissionTime
	}
	if !IsNil(o.SupportedUeFormats) {
		toSerialize["supportedUeFormats"] = o.SupportedUeFormats
	}
	return toSerialize, nil
}

type NullableRdsDownlinkDataDeliveryFailureAllOf struct {
	value *RdsDownlinkDataDeliveryFailureAllOf
	isSet bool
}

func (v NullableRdsDownlinkDataDeliveryFailureAllOf) Get() *RdsDownlinkDataDeliveryFailureAllOf {
	return v.value
}

func (v *NullableRdsDownlinkDataDeliveryFailureAllOf) Set(val *RdsDownlinkDataDeliveryFailureAllOf) {
	v.value = val
	v.isSet = true
}

func (v NullableRdsDownlinkDataDeliveryFailureAllOf) IsSet() bool {
	return v.isSet
}

func (v *NullableRdsDownlinkDataDeliveryFailureAllOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRdsDownlinkDataDeliveryFailureAllOf(val *RdsDownlinkDataDeliveryFailureAllOf) *NullableRdsDownlinkDataDeliveryFailureAllOf {
	return &NullableRdsDownlinkDataDeliveryFailureAllOf{value: val, isSet: true}
}

func (v NullableRdsDownlinkDataDeliveryFailureAllOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRdsDownlinkDataDeliveryFailureAllOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
