/*
3gpp-eas-deployment

API for AF provisioned EAS Deployment.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_EASDeployment

import (
	"encoding/json"
)

// checks if the DnsServerIdentifier type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsServerIdentifier{}

// DnsServerIdentifier Represents DNS server identifier (consisting of IP address and port).
type DnsServerIdentifier struct {
	DnsServIpAddr IpAddr `json:"dnsServIpAddr"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	PortNumber int32 `json:"portNumber"`
}

// NewDnsServerIdentifier instantiates a new DnsServerIdentifier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsServerIdentifier(dnsServIpAddr IpAddr, portNumber int32) *DnsServerIdentifier {
	this := DnsServerIdentifier{}
	this.DnsServIpAddr = dnsServIpAddr
	this.PortNumber = portNumber
	return &this
}

// NewDnsServerIdentifierWithDefaults instantiates a new DnsServerIdentifier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsServerIdentifierWithDefaults() *DnsServerIdentifier {
	this := DnsServerIdentifier{}
	return &this
}

// GetDnsServIpAddr returns the DnsServIpAddr field value
func (o *DnsServerIdentifier) GetDnsServIpAddr() IpAddr {
	if o == nil {
		var ret IpAddr
		return ret
	}

	return o.DnsServIpAddr
}

// GetDnsServIpAddrOk returns a tuple with the DnsServIpAddr field value
// and a boolean to check if the value has been set.
func (o *DnsServerIdentifier) GetDnsServIpAddrOk() (*IpAddr, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnsServIpAddr, true
}

// SetDnsServIpAddr sets field value
func (o *DnsServerIdentifier) SetDnsServIpAddr(v IpAddr) {
	o.DnsServIpAddr = v
}

// GetPortNumber returns the PortNumber field value
func (o *DnsServerIdentifier) GetPortNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PortNumber
}

// GetPortNumberOk returns a tuple with the PortNumber field value
// and a boolean to check if the value has been set.
func (o *DnsServerIdentifier) GetPortNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PortNumber, true
}

// SetPortNumber sets field value
func (o *DnsServerIdentifier) SetPortNumber(v int32) {
	o.PortNumber = v
}

func (o DnsServerIdentifier) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsServerIdentifier) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["dnsServIpAddr"] = o.DnsServIpAddr
	toSerialize["portNumber"] = o.PortNumber
	return toSerialize, nil
}

type NullableDnsServerIdentifier struct {
	value *DnsServerIdentifier
	isSet bool
}

func (v NullableDnsServerIdentifier) Get() *DnsServerIdentifier {
	return v.value
}

func (v *NullableDnsServerIdentifier) Set(val *DnsServerIdentifier) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsServerIdentifier) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsServerIdentifier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsServerIdentifier(val *DnsServerIdentifier) *NullableDnsServerIdentifier {
	return &NullableDnsServerIdentifier{value: val, isSet: true}
}

func (v NullableDnsServerIdentifier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsServerIdentifier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
