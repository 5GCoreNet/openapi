/*
MSGS_MSGDelivery

API for MSGG MSGin5G Server Message Delivery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MSGS_MSGDelivery

import (
	"encoding/json"
	"fmt"
)

// AddressTypeAnyOf the model 'AddressTypeAnyOf'
type AddressTypeAnyOf string

// List of AddressType_anyOf
const (
	UE AddressTypeAnyOf = "UE"
	AS AddressTypeAnyOf = "AS"
	GROUP AddressTypeAnyOf = "GROUP"
	BC AddressTypeAnyOf = "BC"
	TOPIC AddressTypeAnyOf = "TOPIC"
)

// All allowed values of AddressTypeAnyOf enum
var AllowedAddressTypeAnyOfEnumValues = []AddressTypeAnyOf{
	"UE",
	"AS",
	"GROUP",
	"BC",
	"TOPIC",
}

func (v *AddressTypeAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AddressTypeAnyOf(value)
	for _, existing := range AllowedAddressTypeAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AddressTypeAnyOf", value)
}

// NewAddressTypeAnyOfFromValue returns a pointer to a valid AddressTypeAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAddressTypeAnyOfFromValue(v string) (*AddressTypeAnyOf, error) {
	ev := AddressTypeAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AddressTypeAnyOf: valid values are %v", v, AllowedAddressTypeAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AddressTypeAnyOf) IsValid() bool {
	for _, existing := range AllowedAddressTypeAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AddressType_anyOf value
func (v AddressTypeAnyOf) Ptr() *AddressTypeAnyOf {
	return &v
}

type NullableAddressTypeAnyOf struct {
	value *AddressTypeAnyOf
	isSet bool
}

func (v NullableAddressTypeAnyOf) Get() *AddressTypeAnyOf {
	return v.value
}

func (v *NullableAddressTypeAnyOf) Set(val *AddressTypeAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAddressTypeAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAddressTypeAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddressTypeAnyOf(val *AddressTypeAnyOf) *NullableAddressTypeAnyOf {
	return &NullableAddressTypeAnyOf{value: val, isSet: true}
}

func (v NullableAddressTypeAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddressTypeAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

