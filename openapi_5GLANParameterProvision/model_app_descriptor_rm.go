/*
3gpp-5glan-pp

API for 5G LAN Parameter Provision.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_5GLANParameterProvision

import (
	"encoding/json"
)

// checks if the AppDescriptorRm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AppDescriptorRm{}

// AppDescriptorRm Represents the same as the AppDescriptor data type but with the nullable:true property. 
type AppDescriptorRm struct {
	// Identifies applications that are running on the UE's operating system. Any string value can be used as a key of the map. 
	AppIds *map[string]string `json:"appIds,omitempty"`
}

// NewAppDescriptorRm instantiates a new AppDescriptorRm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAppDescriptorRm() *AppDescriptorRm {
	this := AppDescriptorRm{}
	return &this
}

// NewAppDescriptorRmWithDefaults instantiates a new AppDescriptorRm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAppDescriptorRmWithDefaults() *AppDescriptorRm {
	this := AppDescriptorRm{}
	return &this
}

// GetAppIds returns the AppIds field value if set, zero value otherwise.
func (o *AppDescriptorRm) GetAppIds() map[string]string {
	if o == nil || IsNil(o.AppIds) {
		var ret map[string]string
		return ret
	}
	return *o.AppIds
}

// GetAppIdsOk returns a tuple with the AppIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AppDescriptorRm) GetAppIdsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.AppIds) {
		return nil, false
	}
	return o.AppIds, true
}

// HasAppIds returns a boolean if a field has been set.
func (o *AppDescriptorRm) HasAppIds() bool {
	if o != nil && !IsNil(o.AppIds) {
		return true
	}

	return false
}

// SetAppIds gets a reference to the given map[string]string and assigns it to the AppIds field.
func (o *AppDescriptorRm) SetAppIds(v map[string]string) {
	o.AppIds = &v
}

func (o AppDescriptorRm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AppDescriptorRm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppIds) {
		toSerialize["appIds"] = o.AppIds
	}
	return toSerialize, nil
}

type NullableAppDescriptorRm struct {
	value *AppDescriptorRm
	isSet bool
}

func (v NullableAppDescriptorRm) Get() *AppDescriptorRm {
	return v.value
}

func (v *NullableAppDescriptorRm) Set(val *AppDescriptorRm) {
	v.value = val
	v.isSet = true
}

func (v NullableAppDescriptorRm) IsSet() bool {
	return v.isSet
}

func (v *NullableAppDescriptorRm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAppDescriptorRm(val *AppDescriptorRm) *NullableAppDescriptorRm {
	return &NullableAppDescriptorRm{value: val, isSet: true}
}

func (v NullableAppDescriptorRm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAppDescriptorRm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


