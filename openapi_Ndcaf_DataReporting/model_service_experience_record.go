/*
Ndcaf_DataReporting

Data Collection AF: Data Collection and Reporting Configuration API and Data Reporting API Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 1.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Ndcaf_DataReporting

import (
	"encoding/json"
)

// checks if the ServiceExperienceRecord type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceExperienceRecord{}

// ServiceExperienceRecord struct for ServiceExperienceRecord
type ServiceExperienceRecord struct {
	BaseRecord
	ServiceExperienceInfos PerFlowServiceExperienceInfo `json:"serviceExperienceInfos"`
}

// NewServiceExperienceRecord instantiates a new ServiceExperienceRecord object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceExperienceRecord(serviceExperienceInfos PerFlowServiceExperienceInfo, timestamp time.Time) *ServiceExperienceRecord {
	this := ServiceExperienceRecord{}
	this.Timestamp = timestamp
	this.ServiceExperienceInfos = serviceExperienceInfos
	return &this
}

// NewServiceExperienceRecordWithDefaults instantiates a new ServiceExperienceRecord object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceExperienceRecordWithDefaults() *ServiceExperienceRecord {
	this := ServiceExperienceRecord{}
	return &this
}

// GetServiceExperienceInfos returns the ServiceExperienceInfos field value
func (o *ServiceExperienceRecord) GetServiceExperienceInfos() PerFlowServiceExperienceInfo {
	if o == nil {
		var ret PerFlowServiceExperienceInfo
		return ret
	}

	return o.ServiceExperienceInfos
}

// GetServiceExperienceInfosOk returns a tuple with the ServiceExperienceInfos field value
// and a boolean to check if the value has been set.
func (o *ServiceExperienceRecord) GetServiceExperienceInfosOk() (*PerFlowServiceExperienceInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceExperienceInfos, true
}

// SetServiceExperienceInfos sets field value
func (o *ServiceExperienceRecord) SetServiceExperienceInfos(v PerFlowServiceExperienceInfo) {
	o.ServiceExperienceInfos = v
}

func (o ServiceExperienceRecord) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceExperienceRecord) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedBaseRecord, errBaseRecord := json.Marshal(o.BaseRecord)
	if errBaseRecord != nil {
		return map[string]interface{}{}, errBaseRecord
	}
	errBaseRecord = json.Unmarshal([]byte(serializedBaseRecord), &toSerialize)
	if errBaseRecord != nil {
		return map[string]interface{}{}, errBaseRecord
	}
	toSerialize["serviceExperienceInfos"] = o.ServiceExperienceInfos
	return toSerialize, nil
}

type NullableServiceExperienceRecord struct {
	value *ServiceExperienceRecord
	isSet bool
}

func (v NullableServiceExperienceRecord) Get() *ServiceExperienceRecord {
	return v.value
}

func (v *NullableServiceExperienceRecord) Set(val *ServiceExperienceRecord) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceExperienceRecord) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceExperienceRecord) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceExperienceRecord(val *ServiceExperienceRecord) *NullableServiceExperienceRecord {
	return &NullableServiceExperienceRecord{value: val, isSet: true}
}

func (v NullableServiceExperienceRecord) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceExperienceRecord) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
