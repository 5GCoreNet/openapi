/*
Nudsf_DataRepository

Nudsf Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudsf_DataRepository

import (
	"encoding/json"
)

// checks if the NotificationDescription type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NotificationDescription{}

// NotificationDescription Description of a record notification
type NotificationDescription struct {
	// String providing an URI formatted according to RFC 3986.
	RecordRef      string          `json:"recordRef"`
	OperationType  RecordOperation `json:"operationType"`
	SubscriptionId *string         `json:"subscriptionId,omitempty"`
}

// NewNotificationDescription instantiates a new NotificationDescription object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNotificationDescription(recordRef string, operationType RecordOperation) *NotificationDescription {
	this := NotificationDescription{}
	this.RecordRef = recordRef
	this.OperationType = operationType
	return &this
}

// NewNotificationDescriptionWithDefaults instantiates a new NotificationDescription object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNotificationDescriptionWithDefaults() *NotificationDescription {
	this := NotificationDescription{}
	return &this
}

// GetRecordRef returns the RecordRef field value
func (o *NotificationDescription) GetRecordRef() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RecordRef
}

// GetRecordRefOk returns a tuple with the RecordRef field value
// and a boolean to check if the value has been set.
func (o *NotificationDescription) GetRecordRefOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordRef, true
}

// SetRecordRef sets field value
func (o *NotificationDescription) SetRecordRef(v string) {
	o.RecordRef = v
}

// GetOperationType returns the OperationType field value
func (o *NotificationDescription) GetOperationType() RecordOperation {
	if o == nil {
		var ret RecordOperation
		return ret
	}

	return o.OperationType
}

// GetOperationTypeOk returns a tuple with the OperationType field value
// and a boolean to check if the value has been set.
func (o *NotificationDescription) GetOperationTypeOk() (*RecordOperation, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperationType, true
}

// SetOperationType sets field value
func (o *NotificationDescription) SetOperationType(v RecordOperation) {
	o.OperationType = v
}

// GetSubscriptionId returns the SubscriptionId field value if set, zero value otherwise.
func (o *NotificationDescription) GetSubscriptionId() string {
	if o == nil || IsNil(o.SubscriptionId) {
		var ret string
		return ret
	}
	return *o.SubscriptionId
}

// GetSubscriptionIdOk returns a tuple with the SubscriptionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NotificationDescription) GetSubscriptionIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriptionId) {
		return nil, false
	}
	return o.SubscriptionId, true
}

// HasSubscriptionId returns a boolean if a field has been set.
func (o *NotificationDescription) HasSubscriptionId() bool {
	if o != nil && !IsNil(o.SubscriptionId) {
		return true
	}

	return false
}

// SetSubscriptionId gets a reference to the given string and assigns it to the SubscriptionId field.
func (o *NotificationDescription) SetSubscriptionId(v string) {
	o.SubscriptionId = &v
}

func (o NotificationDescription) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NotificationDescription) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["recordRef"] = o.RecordRef
	toSerialize["operationType"] = o.OperationType
	if !IsNil(o.SubscriptionId) {
		toSerialize["subscriptionId"] = o.SubscriptionId
	}
	return toSerialize, nil
}

type NullableNotificationDescription struct {
	value *NotificationDescription
	isSet bool
}

func (v NullableNotificationDescription) Get() *NotificationDescription {
	return v.value
}

func (v *NullableNotificationDescription) Set(val *NotificationDescription) {
	v.value = val
	v.isSet = true
}

func (v NullableNotificationDescription) IsSet() bool {
	return v.isSet
}

func (v *NullableNotificationDescription) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNotificationDescription(val *NotificationDescription) *NullableNotificationDescription {
	return &NullableNotificationDescription{value: val, isSet: true}
}

func (v NullableNotificationDescription) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNotificationDescription) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
