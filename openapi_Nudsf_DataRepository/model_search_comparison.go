/*
Nudsf_DataRepository

Nudsf Data Repository Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nudsf_DataRepository

import (
	"encoding/json"
)

// checks if the SearchComparison type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchComparison{}

// SearchComparison A comparison to apply on tag/values pairs.
type SearchComparison struct {
	Op ComparisonOperator `json:"op"`
	Tag string `json:"tag"`
	Value string `json:"value"`
}

// NewSearchComparison instantiates a new SearchComparison object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchComparison(op ComparisonOperator, tag string, value string) *SearchComparison {
	this := SearchComparison{}
	this.Op = op
	this.Tag = tag
	this.Value = value
	return &this
}

// NewSearchComparisonWithDefaults instantiates a new SearchComparison object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchComparisonWithDefaults() *SearchComparison {
	this := SearchComparison{}
	return &this
}

// GetOp returns the Op field value
func (o *SearchComparison) GetOp() ComparisonOperator {
	if o == nil {
		var ret ComparisonOperator
		return ret
	}

	return o.Op
}

// GetOpOk returns a tuple with the Op field value
// and a boolean to check if the value has been set.
func (o *SearchComparison) GetOpOk() (*ComparisonOperator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Op, true
}

// SetOp sets field value
func (o *SearchComparison) SetOp(v ComparisonOperator) {
	o.Op = v
}

// GetTag returns the Tag field value
func (o *SearchComparison) GetTag() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Tag
}

// GetTagOk returns a tuple with the Tag field value
// and a boolean to check if the value has been set.
func (o *SearchComparison) GetTagOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tag, true
}

// SetTag sets field value
func (o *SearchComparison) SetTag(v string) {
	o.Tag = v
}

// GetValue returns the Value field value
func (o *SearchComparison) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *SearchComparison) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *SearchComparison) SetValue(v string) {
	o.Value = v
}

func (o SearchComparison) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchComparison) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["op"] = o.Op
	toSerialize["tag"] = o.Tag
	toSerialize["value"] = o.Value
	return toSerialize, nil
}

type NullableSearchComparison struct {
	value *SearchComparison
	isSet bool
}

func (v NullableSearchComparison) Get() *SearchComparison {
	return v.value
}

func (v *NullableSearchComparison) Set(val *SearchComparison) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchComparison) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchComparison) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchComparison(val *SearchComparison) *NullableSearchComparison {
	return &NullableSearchComparison{value: val, isSet: true}
}

func (v NullableSearchComparison) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchComparison) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


