/*
Nsmf_NIDD

SMF NIDD Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_NIDD

import (
	"encoding/json"
)

// checks if the DeliverReqData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliverReqData{}

// DeliverReqData Representation of the payload of a Deliver Request.
type DeliverReqData struct {
	MtData RefToBinaryData `json:"mtData"`
}

// NewDeliverReqData instantiates a new DeliverReqData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliverReqData(mtData RefToBinaryData) *DeliverReqData {
	this := DeliverReqData{}
	this.MtData = mtData
	return &this
}

// NewDeliverReqDataWithDefaults instantiates a new DeliverReqData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliverReqDataWithDefaults() *DeliverReqData {
	this := DeliverReqData{}
	return &this
}

// GetMtData returns the MtData field value
func (o *DeliverReqData) GetMtData() RefToBinaryData {
	if o == nil {
		var ret RefToBinaryData
		return ret
	}

	return o.MtData
}

// GetMtDataOk returns a tuple with the MtData field value
// and a boolean to check if the value has been set.
func (o *DeliverReqData) GetMtDataOk() (*RefToBinaryData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MtData, true
}

// SetMtData sets field value
func (o *DeliverReqData) SetMtData(v RefToBinaryData) {
	o.MtData = v
}

func (o DeliverReqData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliverReqData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mtData"] = o.MtData
	return toSerialize, nil
}

type NullableDeliverReqData struct {
	value *DeliverReqData
	isSet bool
}

func (v NullableDeliverReqData) Get() *DeliverReqData {
	return v.value
}

func (v *NullableDeliverReqData) Set(val *DeliverReqData) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliverReqData) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliverReqData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliverReqData(val *DeliverReqData) *NullableDeliverReqData {
	return &NullableDeliverReqData{value: val, isSet: true}
}

func (v NullableDeliverReqData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliverReqData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
