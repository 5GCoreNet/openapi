/*
TS 28.532 Streaming data reporting service

OAS 3.0.1 specification for the Streaming data reporting service (Streaming MnS) Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 17.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_StreamingDataMnS

import (
	"encoding/json"
)

// checks if the ConnectionRequestType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConnectionRequestType{}

// ConnectionRequestType struct for ConnectionRequestType
type ConnectionRequestType struct {
	Producer *ProducerIdType  `json:"producer,omitempty"`
	Streams  []StreamInfoType `json:"streams,omitempty"`
}

// NewConnectionRequestType instantiates a new ConnectionRequestType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConnectionRequestType() *ConnectionRequestType {
	this := ConnectionRequestType{}
	return &this
}

// NewConnectionRequestTypeWithDefaults instantiates a new ConnectionRequestType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConnectionRequestTypeWithDefaults() *ConnectionRequestType {
	this := ConnectionRequestType{}
	return &this
}

// GetProducer returns the Producer field value if set, zero value otherwise.
func (o *ConnectionRequestType) GetProducer() ProducerIdType {
	if o == nil || IsNil(o.Producer) {
		var ret ProducerIdType
		return ret
	}
	return *o.Producer
}

// GetProducerOk returns a tuple with the Producer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestType) GetProducerOk() (*ProducerIdType, bool) {
	if o == nil || IsNil(o.Producer) {
		return nil, false
	}
	return o.Producer, true
}

// HasProducer returns a boolean if a field has been set.
func (o *ConnectionRequestType) HasProducer() bool {
	if o != nil && !IsNil(o.Producer) {
		return true
	}

	return false
}

// SetProducer gets a reference to the given ProducerIdType and assigns it to the Producer field.
func (o *ConnectionRequestType) SetProducer(v ProducerIdType) {
	o.Producer = &v
}

// GetStreams returns the Streams field value if set, zero value otherwise.
func (o *ConnectionRequestType) GetStreams() []StreamInfoType {
	if o == nil || IsNil(o.Streams) {
		var ret []StreamInfoType
		return ret
	}
	return o.Streams
}

// GetStreamsOk returns a tuple with the Streams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConnectionRequestType) GetStreamsOk() ([]StreamInfoType, bool) {
	if o == nil || IsNil(o.Streams) {
		return nil, false
	}
	return o.Streams, true
}

// HasStreams returns a boolean if a field has been set.
func (o *ConnectionRequestType) HasStreams() bool {
	if o != nil && !IsNil(o.Streams) {
		return true
	}

	return false
}

// SetStreams gets a reference to the given []StreamInfoType and assigns it to the Streams field.
func (o *ConnectionRequestType) SetStreams(v []StreamInfoType) {
	o.Streams = v
}

func (o ConnectionRequestType) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConnectionRequestType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Producer) {
		toSerialize["producer"] = o.Producer
	}
	if !IsNil(o.Streams) {
		toSerialize["streams"] = o.Streams
	}
	return toSerialize, nil
}

type NullableConnectionRequestType struct {
	value *ConnectionRequestType
	isSet bool
}

func (v NullableConnectionRequestType) Get() *ConnectionRequestType {
	return v.value
}

func (v *NullableConnectionRequestType) Set(val *ConnectionRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableConnectionRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableConnectionRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConnectionRequestType(val *ConnectionRequestType) *NullableConnectionRequestType {
	return &NullableConnectionRequestType{value: val, isSet: true}
}

func (v NullableConnectionRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConnectionRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
