/*
Nnef_Authentication

NEF Auth Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nnef_Authentication

import (
	"encoding/json"
)

// checks if the UAVAuthInfoAuthMsg type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UAVAuthInfoAuthMsg{}

// UAVAuthInfoAuthMsg struct for UAVAuthInfoAuthMsg
type UAVAuthInfoAuthMsg struct {
	RefToBinaryData
}

// NewUAVAuthInfoAuthMsg instantiates a new UAVAuthInfoAuthMsg object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUAVAuthInfoAuthMsg(contentId string) *UAVAuthInfoAuthMsg {
	this := UAVAuthInfoAuthMsg{}
	this.ContentId = contentId
	return &this
}

// NewUAVAuthInfoAuthMsgWithDefaults instantiates a new UAVAuthInfoAuthMsg object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUAVAuthInfoAuthMsgWithDefaults() *UAVAuthInfoAuthMsg {
	this := UAVAuthInfoAuthMsg{}
	return &this
}

func (o UAVAuthInfoAuthMsg) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UAVAuthInfoAuthMsg) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	serializedRefToBinaryData, errRefToBinaryData := json.Marshal(o.RefToBinaryData)
	if errRefToBinaryData != nil {
		return map[string]interface{}{}, errRefToBinaryData
	}
	errRefToBinaryData = json.Unmarshal([]byte(serializedRefToBinaryData), &toSerialize)
	if errRefToBinaryData != nil {
		return map[string]interface{}{}, errRefToBinaryData
	}
	return toSerialize, nil
}

type NullableUAVAuthInfoAuthMsg struct {
	value *UAVAuthInfoAuthMsg
	isSet bool
}

func (v NullableUAVAuthInfoAuthMsg) Get() *UAVAuthInfoAuthMsg {
	return v.value
}

func (v *NullableUAVAuthInfoAuthMsg) Set(val *UAVAuthInfoAuthMsg) {
	v.value = val
	v.isSet = true
}

func (v NullableUAVAuthInfoAuthMsg) IsSet() bool {
	return v.isSet
}

func (v *NullableUAVAuthInfoAuthMsg) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUAVAuthInfoAuthMsg(val *UAVAuthInfoAuthMsg) *NullableUAVAuthInfoAuthMsg {
	return &NullableUAVAuthInfoAuthMsg{value: val, isSet: true}
}

func (v NullableUAVAuthInfoAuthMsg) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUAVAuthInfoAuthMsg) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
