/*
Nhss_gbaSDM

Nhss Subscriber Data Management Service for GBA.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_gbaSDM

import (
	"encoding/json"
)

// checks if the Guss type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Guss{}

// Guss GBA User Security Settings of the UE; it includes information about the BSF, and a list of User Security Settings
type Guss struct {
	BsfInfo *BsfInfo      `json:"bsfInfo,omitempty"`
	UssList []UssListItem `json:"ussList,omitempty"`
}

// NewGuss instantiates a new Guss object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGuss() *Guss {
	this := Guss{}
	return &this
}

// NewGussWithDefaults instantiates a new Guss object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGussWithDefaults() *Guss {
	this := Guss{}
	return &this
}

// GetBsfInfo returns the BsfInfo field value if set, zero value otherwise.
func (o *Guss) GetBsfInfo() BsfInfo {
	if o == nil || IsNil(o.BsfInfo) {
		var ret BsfInfo
		return ret
	}
	return *o.BsfInfo
}

// GetBsfInfoOk returns a tuple with the BsfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Guss) GetBsfInfoOk() (*BsfInfo, bool) {
	if o == nil || IsNil(o.BsfInfo) {
		return nil, false
	}
	return o.BsfInfo, true
}

// HasBsfInfo returns a boolean if a field has been set.
func (o *Guss) HasBsfInfo() bool {
	if o != nil && !IsNil(o.BsfInfo) {
		return true
	}

	return false
}

// SetBsfInfo gets a reference to the given BsfInfo and assigns it to the BsfInfo field.
func (o *Guss) SetBsfInfo(v BsfInfo) {
	o.BsfInfo = &v
}

// GetUssList returns the UssList field value if set, zero value otherwise.
func (o *Guss) GetUssList() []UssListItem {
	if o == nil || IsNil(o.UssList) {
		var ret []UssListItem
		return ret
	}
	return o.UssList
}

// GetUssListOk returns a tuple with the UssList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Guss) GetUssListOk() ([]UssListItem, bool) {
	if o == nil || IsNil(o.UssList) {
		return nil, false
	}
	return o.UssList, true
}

// HasUssList returns a boolean if a field has been set.
func (o *Guss) HasUssList() bool {
	if o != nil && !IsNil(o.UssList) {
		return true
	}

	return false
}

// SetUssList gets a reference to the given []UssListItem and assigns it to the UssList field.
func (o *Guss) SetUssList(v []UssListItem) {
	o.UssList = v
}

func (o Guss) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Guss) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BsfInfo) {
		toSerialize["bsfInfo"] = o.BsfInfo
	}
	if !IsNil(o.UssList) {
		toSerialize["ussList"] = o.UssList
	}
	return toSerialize, nil
}

type NullableGuss struct {
	value *Guss
	isSet bool
}

func (v NullableGuss) Get() *Guss {
	return v.value
}

func (v *NullableGuss) Set(val *Guss) {
	v.value = val
	v.isSet = true
}

func (v NullableGuss) IsSet() bool {
	return v.isSet
}

func (v *NullableGuss) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGuss(val *Guss) *NullableGuss {
	return &NullableGuss{value: val, isSet: true}
}

func (v NullableGuss) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGuss) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
