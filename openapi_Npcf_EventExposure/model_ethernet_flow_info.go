/*
Npcf_EventExposure

PCF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_EventExposure

import (
	"encoding/json"
)

// checks if the EthernetFlowInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EthernetFlowInfo{}

// EthernetFlowInfo Identifies an UL/DL ethernet flow.
type EthernetFlowInfo struct {
	EthFlows   []EthFlowDescription `json:"ethFlows,omitempty"`
	FlowNumber int32                `json:"flowNumber"`
}

// NewEthernetFlowInfo instantiates a new EthernetFlowInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEthernetFlowInfo(flowNumber int32) *EthernetFlowInfo {
	this := EthernetFlowInfo{}
	this.FlowNumber = flowNumber
	return &this
}

// NewEthernetFlowInfoWithDefaults instantiates a new EthernetFlowInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEthernetFlowInfoWithDefaults() *EthernetFlowInfo {
	this := EthernetFlowInfo{}
	return &this
}

// GetEthFlows returns the EthFlows field value if set, zero value otherwise.
func (o *EthernetFlowInfo) GetEthFlows() []EthFlowDescription {
	if o == nil || IsNil(o.EthFlows) {
		var ret []EthFlowDescription
		return ret
	}
	return o.EthFlows
}

// GetEthFlowsOk returns a tuple with the EthFlows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EthernetFlowInfo) GetEthFlowsOk() ([]EthFlowDescription, bool) {
	if o == nil || IsNil(o.EthFlows) {
		return nil, false
	}
	return o.EthFlows, true
}

// HasEthFlows returns a boolean if a field has been set.
func (o *EthernetFlowInfo) HasEthFlows() bool {
	if o != nil && !IsNil(o.EthFlows) {
		return true
	}

	return false
}

// SetEthFlows gets a reference to the given []EthFlowDescription and assigns it to the EthFlows field.
func (o *EthernetFlowInfo) SetEthFlows(v []EthFlowDescription) {
	o.EthFlows = v
}

// GetFlowNumber returns the FlowNumber field value
func (o *EthernetFlowInfo) GetFlowNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FlowNumber
}

// GetFlowNumberOk returns a tuple with the FlowNumber field value
// and a boolean to check if the value has been set.
func (o *EthernetFlowInfo) GetFlowNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowNumber, true
}

// SetFlowNumber sets field value
func (o *EthernetFlowInfo) SetFlowNumber(v int32) {
	o.FlowNumber = v
}

func (o EthernetFlowInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EthernetFlowInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EthFlows) {
		toSerialize["ethFlows"] = o.EthFlows
	}
	toSerialize["flowNumber"] = o.FlowNumber
	return toSerialize, nil
}

type NullableEthernetFlowInfo struct {
	value *EthernetFlowInfo
	isSet bool
}

func (v NullableEthernetFlowInfo) Get() *EthernetFlowInfo {
	return v.value
}

func (v *NullableEthernetFlowInfo) Set(val *EthernetFlowInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableEthernetFlowInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableEthernetFlowInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEthernetFlowInfo(val *EthernetFlowInfo) *NullableEthernetFlowInfo {
	return &NullableEthernetFlowInfo{value: val, isSet: true}
}

func (v NullableEthernetFlowInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEthernetFlowInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
