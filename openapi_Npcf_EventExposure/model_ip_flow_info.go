/*
Npcf_EventExposure

PCF Event Exposure Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_EventExposure

import (
	"encoding/json"
)

// checks if the IpFlowInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IpFlowInfo{}

// IpFlowInfo Identifies an UL/DL IP flow.
type IpFlowInfo struct {
	IpFlows    []string `json:"ipFlows,omitempty"`
	FlowNumber int32    `json:"flowNumber"`
}

// NewIpFlowInfo instantiates a new IpFlowInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIpFlowInfo(flowNumber int32) *IpFlowInfo {
	this := IpFlowInfo{}
	this.FlowNumber = flowNumber
	return &this
}

// NewIpFlowInfoWithDefaults instantiates a new IpFlowInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIpFlowInfoWithDefaults() *IpFlowInfo {
	this := IpFlowInfo{}
	return &this
}

// GetIpFlows returns the IpFlows field value if set, zero value otherwise.
func (o *IpFlowInfo) GetIpFlows() []string {
	if o == nil || IsNil(o.IpFlows) {
		var ret []string
		return ret
	}
	return o.IpFlows
}

// GetIpFlowsOk returns a tuple with the IpFlows field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IpFlowInfo) GetIpFlowsOk() ([]string, bool) {
	if o == nil || IsNil(o.IpFlows) {
		return nil, false
	}
	return o.IpFlows, true
}

// HasIpFlows returns a boolean if a field has been set.
func (o *IpFlowInfo) HasIpFlows() bool {
	if o != nil && !IsNil(o.IpFlows) {
		return true
	}

	return false
}

// SetIpFlows gets a reference to the given []string and assigns it to the IpFlows field.
func (o *IpFlowInfo) SetIpFlows(v []string) {
	o.IpFlows = v
}

// GetFlowNumber returns the FlowNumber field value
func (o *IpFlowInfo) GetFlowNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FlowNumber
}

// GetFlowNumberOk returns a tuple with the FlowNumber field value
// and a boolean to check if the value has been set.
func (o *IpFlowInfo) GetFlowNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FlowNumber, true
}

// SetFlowNumber sets field value
func (o *IpFlowInfo) SetFlowNumber(v int32) {
	o.FlowNumber = v
}

func (o IpFlowInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IpFlowInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.IpFlows) {
		toSerialize["ipFlows"] = o.IpFlows
	}
	toSerialize["flowNumber"] = o.FlowNumber
	return toSerialize, nil
}

type NullableIpFlowInfo struct {
	value *IpFlowInfo
	isSet bool
}

func (v NullableIpFlowInfo) Get() *IpFlowInfo {
	return v.value
}

func (v *NullableIpFlowInfo) Set(val *IpFlowInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableIpFlowInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableIpFlowInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIpFlowInfo(val *IpFlowInfo) *NullableIpFlowInfo {
	return &NullableIpFlowInfo{value: val, isSet: true}
}

func (v NullableIpFlowInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIpFlowInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
