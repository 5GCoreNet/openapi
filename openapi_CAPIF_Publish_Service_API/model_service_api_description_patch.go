/*
CAPIF_Publish_Service_API

API for publishing service APIs.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_CAPIF_Publish_Service_API

import (
	"encoding/json"
)

// checks if the ServiceAPIDescriptionPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceAPIDescriptionPatch{}

// ServiceAPIDescriptionPatch Represents the parameters to request the modification of an APF published API resource. 
type ServiceAPIDescriptionPatch struct {
	AefProfiles []AefProfile `json:"aefProfiles,omitempty"`
	// Text description of the API
	Description *string `json:"description,omitempty"`
	ShareableInfo *ShareableInformation `json:"shareableInfo,omitempty"`
	ServiceAPICategory *string `json:"serviceAPICategory,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	ApiSuppFeats *string `json:"apiSuppFeats,omitempty"`
	PubApiPath *PublishedApiPath `json:"pubApiPath,omitempty"`
	// CAPIF core function identifier.
	CcfId *string `json:"ccfId,omitempty"`
}

// NewServiceAPIDescriptionPatch instantiates a new ServiceAPIDescriptionPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceAPIDescriptionPatch() *ServiceAPIDescriptionPatch {
	this := ServiceAPIDescriptionPatch{}
	return &this
}

// NewServiceAPIDescriptionPatchWithDefaults instantiates a new ServiceAPIDescriptionPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceAPIDescriptionPatchWithDefaults() *ServiceAPIDescriptionPatch {
	this := ServiceAPIDescriptionPatch{}
	return &this
}

// GetAefProfiles returns the AefProfiles field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetAefProfiles() []AefProfile {
	if o == nil || isNil(o.AefProfiles) {
		var ret []AefProfile
		return ret
	}
	return o.AefProfiles
}

// GetAefProfilesOk returns a tuple with the AefProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetAefProfilesOk() ([]AefProfile, bool) {
	if o == nil || isNil(o.AefProfiles) {
		return nil, false
	}
	return o.AefProfiles, true
}

// HasAefProfiles returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasAefProfiles() bool {
	if o != nil && !isNil(o.AefProfiles) {
		return true
	}

	return false
}

// SetAefProfiles gets a reference to the given []AefProfile and assigns it to the AefProfiles field.
func (o *ServiceAPIDescriptionPatch) SetAefProfiles(v []AefProfile) {
	o.AefProfiles = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetDescription() string {
	if o == nil || isNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetDescriptionOk() (*string, bool) {
	if o == nil || isNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasDescription() bool {
	if o != nil && !isNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ServiceAPIDescriptionPatch) SetDescription(v string) {
	o.Description = &v
}

// GetShareableInfo returns the ShareableInfo field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetShareableInfo() ShareableInformation {
	if o == nil || isNil(o.ShareableInfo) {
		var ret ShareableInformation
		return ret
	}
	return *o.ShareableInfo
}

// GetShareableInfoOk returns a tuple with the ShareableInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetShareableInfoOk() (*ShareableInformation, bool) {
	if o == nil || isNil(o.ShareableInfo) {
		return nil, false
	}
	return o.ShareableInfo, true
}

// HasShareableInfo returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasShareableInfo() bool {
	if o != nil && !isNil(o.ShareableInfo) {
		return true
	}

	return false
}

// SetShareableInfo gets a reference to the given ShareableInformation and assigns it to the ShareableInfo field.
func (o *ServiceAPIDescriptionPatch) SetShareableInfo(v ShareableInformation) {
	o.ShareableInfo = &v
}

// GetServiceAPICategory returns the ServiceAPICategory field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetServiceAPICategory() string {
	if o == nil || isNil(o.ServiceAPICategory) {
		var ret string
		return ret
	}
	return *o.ServiceAPICategory
}

// GetServiceAPICategoryOk returns a tuple with the ServiceAPICategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetServiceAPICategoryOk() (*string, bool) {
	if o == nil || isNil(o.ServiceAPICategory) {
		return nil, false
	}
	return o.ServiceAPICategory, true
}

// HasServiceAPICategory returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasServiceAPICategory() bool {
	if o != nil && !isNil(o.ServiceAPICategory) {
		return true
	}

	return false
}

// SetServiceAPICategory gets a reference to the given string and assigns it to the ServiceAPICategory field.
func (o *ServiceAPIDescriptionPatch) SetServiceAPICategory(v string) {
	o.ServiceAPICategory = &v
}

// GetApiSuppFeats returns the ApiSuppFeats field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetApiSuppFeats() string {
	if o == nil || isNil(o.ApiSuppFeats) {
		var ret string
		return ret
	}
	return *o.ApiSuppFeats
}

// GetApiSuppFeatsOk returns a tuple with the ApiSuppFeats field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetApiSuppFeatsOk() (*string, bool) {
	if o == nil || isNil(o.ApiSuppFeats) {
		return nil, false
	}
	return o.ApiSuppFeats, true
}

// HasApiSuppFeats returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasApiSuppFeats() bool {
	if o != nil && !isNil(o.ApiSuppFeats) {
		return true
	}

	return false
}

// SetApiSuppFeats gets a reference to the given string and assigns it to the ApiSuppFeats field.
func (o *ServiceAPIDescriptionPatch) SetApiSuppFeats(v string) {
	o.ApiSuppFeats = &v
}

// GetPubApiPath returns the PubApiPath field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetPubApiPath() PublishedApiPath {
	if o == nil || isNil(o.PubApiPath) {
		var ret PublishedApiPath
		return ret
	}
	return *o.PubApiPath
}

// GetPubApiPathOk returns a tuple with the PubApiPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetPubApiPathOk() (*PublishedApiPath, bool) {
	if o == nil || isNil(o.PubApiPath) {
		return nil, false
	}
	return o.PubApiPath, true
}

// HasPubApiPath returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasPubApiPath() bool {
	if o != nil && !isNil(o.PubApiPath) {
		return true
	}

	return false
}

// SetPubApiPath gets a reference to the given PublishedApiPath and assigns it to the PubApiPath field.
func (o *ServiceAPIDescriptionPatch) SetPubApiPath(v PublishedApiPath) {
	o.PubApiPath = &v
}

// GetCcfId returns the CcfId field value if set, zero value otherwise.
func (o *ServiceAPIDescriptionPatch) GetCcfId() string {
	if o == nil || isNil(o.CcfId) {
		var ret string
		return ret
	}
	return *o.CcfId
}

// GetCcfIdOk returns a tuple with the CcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceAPIDescriptionPatch) GetCcfIdOk() (*string, bool) {
	if o == nil || isNil(o.CcfId) {
		return nil, false
	}
	return o.CcfId, true
}

// HasCcfId returns a boolean if a field has been set.
func (o *ServiceAPIDescriptionPatch) HasCcfId() bool {
	if o != nil && !isNil(o.CcfId) {
		return true
	}

	return false
}

// SetCcfId gets a reference to the given string and assigns it to the CcfId field.
func (o *ServiceAPIDescriptionPatch) SetCcfId(v string) {
	o.CcfId = &v
}

func (o ServiceAPIDescriptionPatch) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceAPIDescriptionPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.AefProfiles) {
		toSerialize["aefProfiles"] = o.AefProfiles
	}
	if !isNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !isNil(o.ShareableInfo) {
		toSerialize["shareableInfo"] = o.ShareableInfo
	}
	if !isNil(o.ServiceAPICategory) {
		toSerialize["serviceAPICategory"] = o.ServiceAPICategory
	}
	if !isNil(o.ApiSuppFeats) {
		toSerialize["apiSuppFeats"] = o.ApiSuppFeats
	}
	if !isNil(o.PubApiPath) {
		toSerialize["pubApiPath"] = o.PubApiPath
	}
	if !isNil(o.CcfId) {
		toSerialize["ccfId"] = o.CcfId
	}
	return toSerialize, nil
}

type NullableServiceAPIDescriptionPatch struct {
	value *ServiceAPIDescriptionPatch
	isSet bool
}

func (v NullableServiceAPIDescriptionPatch) Get() *ServiceAPIDescriptionPatch {
	return v.value
}

func (v *NullableServiceAPIDescriptionPatch) Set(val *ServiceAPIDescriptionPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceAPIDescriptionPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceAPIDescriptionPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceAPIDescriptionPatch(val *ServiceAPIDescriptionPatch) *NullableServiceAPIDescriptionPatch {
	return &NullableServiceAPIDescriptionPatch{value: val, isSet: true}
}

func (v NullableServiceAPIDescriptionPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceAPIDescriptionPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


