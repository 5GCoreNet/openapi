openapi: 3.0.0
info:
  description: "NEF EAS Deployment service.  \nÂ© 2022, 3GPP Organizational Partners\
    \ (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).  \nAll rights reserved.\n"
  title: Nnef_EASDeployment
  version: 1.1.0-alpha.1
externalDocs:
  description: |
    3GPP TS 29.591 V18.0.0; 5G System; Network Exposure Function Southbound Services; Stage 3.
  url: https://www.3gpp.org/ftp/Specs/archive/29_series/29.591/
servers:
- url: "{apiRoot}/nnef-eas-deployment/v1"
  variables:
    apiRoot:
      default: https://example.com
      description: apiRoot as defined in clause 4.4 of 3GPP TS 29.501
security:
- {}
- oAuth2ClientCredentials:
  - nnef-eas-deployment
paths:
  /subscriptions:
    post:
      callbacks:
        notifUri:
          '{$request.body#/notifUri}':
            post:
              operationId: notifUri_Post
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/EasDeployInfoNotif'
                required: true
              responses:
                "204":
                  description: "No Content, Notification was succesfull"
                "307":
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                  description: Temporary Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: Identifier of target NF (service) instance towards
                        which the request is redirected
                      schema:
                        type: string
                "308":
                  content:
                    application/json:
                      schema:
                        $ref: '#/components/schemas/RedirectResponse'
                  description: Permanent Redirect
                  headers:
                    Location:
                      description: The URI pointing to the resource located on the
                        redirect target
                      required: true
                      schema:
                        type: string
                    "3gpp-Sbi-Target-Nf-Id":
                      description: |
                        'Identifier of target NF (service) instance towards which the request is redirected'
                      schema:
                        type: string
                "400":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad request
                "401":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unauthorized
                "403":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Forbidden
                "404":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Not Found
                "411":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Length Required
                "413":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Payload Too Large
                "415":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Unsupported Media Type
                "429":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Too Many Requests
                "500":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Internal Server Error
                "502":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Bad Gateway
                "503":
                  content:
                    application/problem+json:
                      schema:
                        $ref: '#/components/schemas/ProblemDetails'
                  description: Service Unavailable
                default:
                  description: Generic Error
              x-callback-request: true
      operationId: CreateIndividualSubcription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EasDeploySubData'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EasDeploySubData'
          description: Success
          headers:
            Location:
              description: |
                Contains the URI of the newly created resource, according to the structure: {apiRoot}/nnef-eas-deployment/<apiVersion>/subscriptions/{subscriptionId}.
              explode: false
              required: true
              schema:
                type: string
              style: simple
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "411":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Length Required
        "413":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Payload Too Large
        "415":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unsupported Media Type
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: subscribe to notifications
      tags:
      - Subscriptions (Collection)
  /subscriptions/{subscriptionId}:
    delete:
      operationId: DeleteIndividualSubcription
      parameters:
      - description: Event Subscription ID
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content. Resource was succesfully deleted
        "307":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectResponse'
          description: Temporary Redirect
          headers:
            Location:
              description: The URI pointing to the resource located on the redirect
                target
              required: true
              schema:
                type: string
            "3gpp-Sbi-Target-Nf-Id":
              description: Identifier of target NF (service) instance towards which
                the request is redirected
              schema:
                type: string
        "308":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectResponse'
          description: Permanent Redirect
          headers:
            Location:
              description: The URI pointing to the resource located on the redirect
                target
              required: true
              schema:
                type: string
            "3gpp-Sbi-Target-Nf-Id":
              description: |
                'Identifier of target NF (service) instance towards which the request is redirected'
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: unsubscribe from notifications
      tags:
      - IndividualSubscription (Document)
    get:
      operationId: GetIndividualSubcription
      parameters:
      - description: Event Subscription ID
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EasDeploySubData'
          description: OK. Resource representation is returned
        "307":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectResponse'
          description: Temporary Redirect
          headers:
            Location:
              description: The URI pointing to the resource located on the redirect
                target
              required: true
              schema:
                type: string
            "3gpp-Sbi-Target-Nf-Id":
              description: Identifier of target NF (service) instance towards which
                the request is redirected
              schema:
                type: string
        "308":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedirectResponse'
          description: Permanent Redirect
          headers:
            Location:
              description: The URI pointing to the resource located on the redirect
                target
              required: true
              schema:
                type: string
            "3gpp-Sbi-Target-Nf-Id":
              description: |
                'Identifier of target NF (service) instance towards which the request is redirected'
              schema:
                type: string
        "400":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad request
        "401":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Unauthorized
        "403":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Forbidden
        "404":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Not Found
        "406":
          description: 406 Not Acceptable
        "429":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Too Many Requests
        "500":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Internal Server Error
        "502":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Bad Gateway
        "503":
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: Service Unavailable
        default:
          description: Generic Error
      summary: retrieve subscription
      tags:
      - IndividualSubscription (Document)
components:
  responses:
    "400":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad request
    "401":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unauthorized
    "403":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Forbidden
    "404":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Not Found
    "411":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Length Required
    "413":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Payload Too Large
    "415":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Unsupported Media Type
    "429":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Too Many Requests
    "500":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Internal Server Error
    "502":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Bad Gateway
    "503":
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: Service Unavailable
    default:
      description: Generic Error
    "307":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RedirectResponse'
      description: Temporary Redirect
      headers:
        Location:
          description: The URI pointing to the resource located on the redirect target
          required: true
          schema:
            type: string
        "3gpp-Sbi-Target-Nf-Id":
          description: Identifier of target NF (service) instance towards which the
            request is redirected
          schema:
            type: string
    "308":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RedirectResponse'
      description: Permanent Redirect
      headers:
        Location:
          description: The URI pointing to the resource located on the redirect target
          required: true
          schema:
            type: string
        "3gpp-Sbi-Target-Nf-Id":
          description: |
            'Identifier of target NF (service) instance towards which the request is redirected'
          schema:
            type: string
    "406":
      description: 406 Not Acceptable
  schemas:
    EasDeploySubData:
      description: Represents an Individual EAS Deployment Event Subscription resource.
      example:
        notifId: notifId
        dnnSnssaiInfos:
        - snssai:
            sd: sd
            sst: 20
          dnn: dnn
        - snssai:
            sd: sd
            sst: 20
          dnn: dnn
        eventId: null
        notifUri: notifUri
        appId: appId
        interGroupId: interGroupId
        immRep: true
        eventsNotifs:
        - snssai:
            sd: sd
            sst: 20
          internalGroupId: internalGroupId
          dnn: dnn
          fqdnPatternList:
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          appId: appId
          dnaiInfos:
            key:
              dnsServIds:
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              easIpAddrs:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              dnai: dnai
        - snssai:
            sd: sd
            sst: 20
          internalGroupId: internalGroupId
          dnn: dnn
          fqdnPatternList:
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          appId: appId
          dnaiInfos:
            key:
              dnsServIds:
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              easIpAddrs:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              dnai: dnai
      properties:
        appId:
          type: string
        dnnSnssaiInfos:
          description: "Each of the element identifies a (DNN, S-NSSAI) combination."
          items:
            $ref: '#/components/schemas/DnnSnssaiInformation'
          minItems: 1
          type: array
        eventId:
          $ref: '#/components/schemas/EasEvent'
        eventsNotifs:
          description: |
            Represents the EAS Deployment Information changes event(s) to be reported. Shall only be present if the "immRep" attribute is included and sets to true, and the current status of EAS Deployment Information is available.
          items:
            $ref: '#/components/schemas/EasDeployInfoData'
          minItems: 1
          type: array
        immRep:
          description: |
            Indication of immediate reporting. Set to true: requires the immediate reporting of the  current status of EAS Deployment Information, if available. Set to false (default): EAS  Deployment Information event report occurs when the event is met.
          type: boolean
        interGroupId:
          description: "String identifying a group of devices network internal globally\
            \ unique ID which identifies a set of IMSIs, as specified in clause 19.9\
            \ of 3GPP TS 23.003. \n"
          pattern: "^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$"
          type: string
        notifId:
          type: string
        notifUri:
          description: String providing an URI formatted according to RFC 3986.
          type: string
      required:
      - eventId
      - notifId
      - notifUri
      type: object
    EasDeployInfoNotif:
      description: |
        Represents notifications on EAS Deployment Information changes event(s) that occurred for an  Individual EAS Deployment Event Subscription resource.
      example:
        notifId: notifId
        easDepNotifs:
        - eventId: null
          easDepInfo:
            snssai:
              sd: sd
              sst: 20
            internalGroupId: internalGroupId
            dnn: dnn
            fqdnPatternList:
            - regex: regex
              stringMatchingRule:
                stringMatchingConditions:
                - matchingString: matchingString
                  matchingOperator: null
                - matchingString: matchingString
                  matchingOperator: null
            - regex: regex
              stringMatchingRule:
                stringMatchingConditions:
                - matchingString: matchingString
                  matchingOperator: null
                - matchingString: matchingString
                  matchingOperator: null
            appId: appId
            dnaiInfos:
              key:
                dnsServIds:
                - dnsServIpAddr:
                    ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                    ipv4Addr: 198.51.100.1
                    ipv6Prefix: 2001:db8:abcd:12::0/64
                  portNumber: 0
                - dnsServIpAddr:
                    ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                    ipv4Addr: 198.51.100.1
                    ipv6Prefix: 2001:db8:abcd:12::0/64
                  portNumber: 0
                easIpAddrs:
                - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                dnai: dnai
        - eventId: null
          easDepInfo:
            snssai:
              sd: sd
              sst: 20
            internalGroupId: internalGroupId
            dnn: dnn
            fqdnPatternList:
            - regex: regex
              stringMatchingRule:
                stringMatchingConditions:
                - matchingString: matchingString
                  matchingOperator: null
                - matchingString: matchingString
                  matchingOperator: null
            - regex: regex
              stringMatchingRule:
                stringMatchingConditions:
                - matchingString: matchingString
                  matchingOperator: null
                - matchingString: matchingString
                  matchingOperator: null
            appId: appId
            dnaiInfos:
              key:
                dnsServIds:
                - dnsServIpAddr:
                    ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                    ipv4Addr: 198.51.100.1
                    ipv6Prefix: 2001:db8:abcd:12::0/64
                  portNumber: 0
                - dnsServIpAddr:
                    ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                    ipv4Addr: 198.51.100.1
                    ipv6Prefix: 2001:db8:abcd:12::0/64
                  portNumber: 0
                easIpAddrs:
                - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                dnai: dnai
      properties:
        easDepNotifs:
          items:
            $ref: '#/components/schemas/EasDepNotification'
          minItems: 1
          type: array
        notifId:
          type: string
      required:
      - easDepNotifs
      - notifId
      type: object
    EasDepNotification:
      description: Represents the EAS Deployment Notifcation.
      example:
        eventId: null
        easDepInfo:
          snssai:
            sd: sd
            sst: 20
          internalGroupId: internalGroupId
          dnn: dnn
          fqdnPatternList:
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          - regex: regex
            stringMatchingRule:
              stringMatchingConditions:
              - matchingString: matchingString
                matchingOperator: null
              - matchingString: matchingString
                matchingOperator: null
          appId: appId
          dnaiInfos:
            key:
              dnsServIds:
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              - dnsServIpAddr:
                  ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                  ipv4Addr: 198.51.100.1
                  ipv6Prefix: 2001:db8:abcd:12::0/64
                portNumber: 0
              easIpAddrs:
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              dnai: dnai
      properties:
        easDepInfo:
          $ref: '#/components/schemas/EasDeployInfoData'
        eventId:
          $ref: '#/components/schemas/EasEvent'
      required:
      - easDepInfo
      - eventId
      type: object
    EasDeployInfoData:
      description: Represents the EAS Deployment Information to be reported.
      example:
        snssai:
          sd: sd
          sst: 20
        internalGroupId: internalGroupId
        dnn: dnn
        fqdnPatternList:
        - regex: regex
          stringMatchingRule:
            stringMatchingConditions:
            - matchingString: matchingString
              matchingOperator: null
            - matchingString: matchingString
              matchingOperator: null
        - regex: regex
          stringMatchingRule:
            stringMatchingConditions:
            - matchingString: matchingString
              matchingOperator: null
            - matchingString: matchingString
              matchingOperator: null
        appId: appId
        dnaiInfos:
          key:
            dnsServIds:
            - dnsServIpAddr:
                ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              portNumber: 0
            - dnsServIpAddr:
                ipv6Addr: 2001:db8:85a3::8a2e:370:7334
                ipv4Addr: 198.51.100.1
                ipv6Prefix: 2001:db8:abcd:12::0/64
              portNumber: 0
            easIpAddrs:
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
            - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
              ipv4Addr: 198.51.100.1
              ipv6Prefix: 2001:db8:abcd:12::0/64
            dnai: dnai
      properties:
        appId:
          type: string
        dnaiInfos:
          additionalProperties:
            $ref: '#/components/schemas/DnaiInformation'
          description: |
            list of DNS server identifier (consisting of IP address and port) and/or IP address(s)  of the EAS in the local DN for each DNAI. The key of map is the DNAI.
          minProperties: 1
          type: object
        dnn:
          description: |
            String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
          type: string
        fqdnPatternList:
          items:
            $ref: '#/components/schemas/FqdnPatternMatchingRule'
          minItems: 1
          type: array
        internalGroupId:
          description: "String identifying a group of devices network internal globally\
            \ unique ID which identifies a set of IMSIs, as specified in clause 19.9\
            \ of 3GPP TS 23.003. \n"
          pattern: "^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$"
          type: string
        snssai:
          $ref: '#/components/schemas/Snssai'
      required:
      - fqdnPatternList
      type: object
    EasEvent:
      anyOf:
      - $ref: '#/components/schemas/EasEvent_anyOf'
      - type: string
      description: |
        Possible values are - EAS_INFO_CHG: Indicates that the EAS Deployment Information is changed.
    ProblemDetails:
      description: Provides additional information in an error response.
      properties:
        type:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        cause:
          description: |
            A machine-readable application error cause specific to this occurrence of the problem.  This IE should be present and provide application-related error information, if available.
          type: string
        invalidParams:
          items:
            $ref: '#/components/schemas/InvalidParam'
          minItems: 1
          type: array
        supportedFeatures:
          description: |
            A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
          pattern: "^[A-Fa-f0-9]*$"
          type: string
        accessTokenError:
          $ref: '#/components/schemas/AccessTokenErr'
        accessTokenRequest:
          $ref: '#/components/schemas/AccessTokenReq'
        nrfId:
          description: Fully Qualified Domain Name
          maxLength: 253
          minLength: 4
          pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
            .?$"
          type: string
        supportedApiVersions:
          items:
            type: string
          minItems: 1
          type: array
      type: object
    Uri:
      description: String providing an URI formatted according to RFC 3986.
      type: string
    InvalidParam:
      description: It contains an invalid parameter and a related description.
      properties:
        param:
          description: |
            If the invalid parameter is an attribute in a JSON body, this IE shall contain the  attribute's name and shall be encoded as a JSON Pointer. If the invalid parameter is  an HTTP header, this IE shall be formatted as the concatenation of the string "header "  plus the name of such header. If the invalid parameter is a query parameter, this IE  shall be formatted as the concatenation of the string "query " plus the name of such  query parameter. If the invalid parameter is a variable part in the path of a resource  URI, this IE shall contain the name of the variable, including the symbols "{" and "}"  used in OpenAPI specification as the notation to represent variable path segments.
          type: string
        reason:
          description: |
            A human-readable reason, e.g. "must be a positive integer". In cases involving failed  operations in a PATCH request, the reason string should identify the operation that  failed using the operation's array index to assist in correlation of the invalid  parameter with the failed operation, e.g." Replacement value invalid for attribute  (failed operation index= 4)"
          type: string
      required:
      - param
      type: object
    SupportedFeatures:
      description: |
        A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of "0" to "9",  "a" to "f" or "A" to "F" and shall represent the support of 4 features as described in  tableÂ 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
      pattern: "^[A-Fa-f0-9]*$"
      type: string
    Fqdn:
      description: Fully Qualified Domain Name
      maxLength: 253
      minLength: 4
      pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
        .?$"
      type: string
    RedirectResponse:
      description: |
        The response shall include a Location header field containing a different URI  (pointing to a different URI of an other service instance), or the same URI if a request  is redirected to the same target resource via a different SCP.
      properties:
        cause:
          type: string
        targetScp:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        targetSepp:
          description: String providing an URI formatted according to RFC 3986.
          type: string
      type: object
    DnnSnssaiInformation:
      description: "Represents a (DNN, SNSSAI) combination."
      example:
        snssai:
          sd: sd
          sst: 20
        dnn: dnn
      properties:
        dnn:
          description: |
            String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
          type: string
        snssai:
          $ref: '#/components/schemas/Snssai'
      type: object
    GroupId:
      description: "String identifying a group of devices network internal globally\
        \ unique ID which identifies a set of IMSIs, as specified in clause 19.9 of\
        \ 3GPP TS 23.003. \n"
      pattern: "^[A-Fa-f0-9]{8}-[0-9]{3}-[0-9]{2,3}-([A-Fa-f0-9][A-Fa-f0-9]){1,10}$"
      type: string
    DnaiInformation:
      anyOf:
      - required:
        - dnsServIds
      - required:
        - easIpAddrs
      description: Represents DNAI information.
      example:
        dnsServIds:
        - dnsServIpAddr:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            ipv6Prefix: 2001:db8:abcd:12::0/64
          portNumber: 0
        - dnsServIpAddr:
            ipv6Addr: 2001:db8:85a3::8a2e:370:7334
            ipv4Addr: 198.51.100.1
            ipv6Prefix: 2001:db8:abcd:12::0/64
          portNumber: 0
        easIpAddrs:
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
        - ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
        dnai: dnai
      properties:
        dnai:
          description: "DNAI (Data network access identifier), see clause 5.6.7 of\
            \ 3GPP TS 23.501."
          type: string
        dnsServIds:
          items:
            $ref: '#/components/schemas/DnsServerIdentifier'
          minItems: 1
          type: array
        easIpAddrs:
          items:
            $ref: '#/components/schemas/IpAddr'
          minItems: 1
          type: array
      required:
      - dnai
      type: object
    DnsServerIdentifier:
      description: Represents DNS server identifier (consisting of IP address and
        port).
      example:
        dnsServIpAddr:
          ipv6Addr: 2001:db8:85a3::8a2e:370:7334
          ipv4Addr: 198.51.100.1
          ipv6Prefix: 2001:db8:abcd:12::0/64
        portNumber: 0
      properties:
        dnsServIpAddr:
          $ref: '#/components/schemas/IpAddr'
        portNumber:
          description: "Unsigned Integer, i.e. only value 0 and integers above 0 are\
            \ permissible."
          minimum: 0
          type: integer
      required:
      - dnsServIpAddr
      - portNumber
      type: object
    Dnn:
      description: |
        String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. "Label1.Label2.Label3").
      type: string
    FqdnPatternMatchingRule:
      description: a matching rule for a FQDN pattern
      example:
        regex: regex
        stringMatchingRule:
          stringMatchingConditions:
          - matchingString: matchingString
            matchingOperator: null
          - matchingString: matchingString
            matchingOperator: null
      oneOf:
      - required:
        - regex
      - required:
        - stringMatchingRule
      properties:
        regex:
          type: string
        stringMatchingRule:
          $ref: '#/components/schemas/StringMatchingRule'
      type: object
    StringMatchingRule:
      description: A list of conditions for string matching
      example:
        stringMatchingConditions:
        - matchingString: matchingString
          matchingOperator: null
        - matchingString: matchingString
          matchingOperator: null
      properties:
        stringMatchingConditions:
          items:
            $ref: '#/components/schemas/StringMatchingCondition'
          minItems: 1
          type: array
      type: object
    StringMatchingCondition:
      description: A String with Matching Operator
      example:
        matchingString: matchingString
        matchingOperator: null
      properties:
        matchingString:
          type: string
        matchingOperator:
          $ref: '#/components/schemas/MatchingOperator'
      required:
      - matchingOperator
      type: object
    MatchingOperator:
      anyOf:
      - $ref: '#/components/schemas/MatchingOperator_anyOf'
      - type: string
      description: the matching operation.
    Snssai:
      description: |
        When Snssai needs to be converted to string (e.g. when used in maps as key), the string shall be composed of one to three digits "sst" optionally followed by "-" and 6 hexadecimal digits "sd".
      example:
        sd: sd
        sst: 20
      properties:
        sst:
          description: "Unsigned integer, within the range 0 to 255, representing\
            \ the Slice/Service Type.  It indicates the expected Network Slice behaviour\
            \ in terms of features and services. Values 0 to 127 correspond to the\
            \ standardized SST range. Values 128 to 255 correspond  to the Operator-specific\
            \ range. See clause 28.4.2 of 3GPP TS 23.003. Standardized values are\
            \ defined in clause 5.15.2.2 of 3GPP TS 23.501. \n"
          maximum: 255
          minimum: 0
          type: integer
        sd:
          description: |
            3-octet string, representing the Slice Differentiator, in hexadecimal representation. Each character in the string shall take a value of "0" to "9", "a" to "f" or "A" to "F" and shall represent 4 bits. The most significant character representing the 4 most significant bits of the SD shall appear first in the string, and the character representing the 4 least significant bit of the SD shall appear last in the string. This is an optional parameter that complements the Slice/Service type(s) to allow to  differentiate amongst multiple Network Slices of the same Slice/Service type. This IE shall be absent if no SD value is associated with the SST.
          pattern: "^[A-Fa-f0-9]{6}$"
          type: string
      required:
      - sst
      type: object
    AccessTokenErr:
      description: Error returned in the access token response message
      properties:
        error:
          enum:
          - invalid_request
          - invalid_client
          - invalid_grant
          - unauthorized_client
          - unsupported_grant_type
          - invalid_scope
          type: string
        error_description:
          type: string
        error_uri:
          type: string
      required:
      - error
      type: object
    AccessTokenReq:
      description: Contains information related to the access token request
      properties:
        grant_type:
          enum:
          - client_credentials
          type: string
        nfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        nfType:
          $ref: '#/components/schemas/NFType'
        targetNfType:
          $ref: '#/components/schemas/NFType'
        scope:
          pattern: "^([a-zA-Z0-9_:-]+)( [a-zA-Z0-9_:-]+)*$"
          type: string
        targetNfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
        requesterPlmn:
          $ref: '#/components/schemas/PlmnId'
        requesterPlmnList:
          items:
            $ref: '#/components/schemas/PlmnId'
          minItems: 2
          type: array
        requesterSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        requesterFqdn:
          description: Fully Qualified Domain Name
          maxLength: 253
          minLength: 4
          pattern: "^([0-9A-Za-z]([-0-9A-Za-z]{0,61}[0-9A-Za-z])?\\.)+[A-Za-z]{2,63}\\\
            .?$"
          type: string
        requesterSnpnList:
          items:
            $ref: '#/components/schemas/PlmnIdNid'
          minItems: 1
          type: array
        targetPlmn:
          $ref: '#/components/schemas/PlmnId'
        targetSnpn:
          $ref: '#/components/schemas/PlmnIdNid'
        targetSnssaiList:
          items:
            $ref: '#/components/schemas/Snssai'
          minItems: 1
          type: array
        targetNsiList:
          items:
            type: string
          minItems: 1
          type: array
        targetNfSetId:
          description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
            \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
            , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with \
            \ <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
            \  <MNC> encoding the Mobile Network Code part of the PLMN, comprising\
            \ 3 digits. \n  If there are only 2 significant digits in the MNC, one\
            \ \"0\" digit shall be inserted \n  at the left side to fill the 3 digits\
            \ coding of MNC.  Pattern: '^[0-9]{3}$'\n<NFType> encoded as a value defined\
            \ in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but \n  with lower case characters\
            \ <Set ID> encoded as a string of characters consisting of \n  alphabetic\
            \ characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that\
            \ \n  shall end with either an alphabetic character or a digit. \n"
          type: string
        targetNfServiceSetId:
          description: "NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003)\
            \ formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF\
            \ Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\"\
            \ with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
            \   <MNC> encoding the Mobile Network Code part of the PLMN, comprising\
            \ 3 digits. \n  If there are only 2 significant digits in the MNC, one\
            \ \"0\" digit shall be inserted \n  at the left side to fill the 3 digits\
            \ coding of MNC.  Pattern: '^[0-9]{3}$'\n<NID> encoded as defined in clause\_\
            5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined\
            \ in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510\
            \  <Set ID> encoded as a string of characters consisting of alphabetic\
            \ \n  characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and\
            \ that shall end \n  with either an alphabetic character or a digit.\n"
          type: string
        hnrfAccessTokenUri:
          description: String providing an URI formatted according to RFC 3986.
          type: string
        sourceNfInstanceId:
          description: "String uniquely identifying a NF instance. The format of the\
            \ NF Instance ID shall be a  Universally Unique Identifier (UUID) version\
            \ 4, as described in IETF RFC 4122. \n"
          format: uuid
          type: string
      required:
      - grant_type
      - nfInstanceId
      - scope
      type: object
    Dnai:
      description: "DNAI (Data network access identifier), see clause 5.6.7 of 3GPP\
        \ TS 23.501."
      type: string
    IpAddr:
      description: Contains an IP adresse.
      example:
        ipv6Addr: 2001:db8:85a3::8a2e:370:7334
        ipv4Addr: 198.51.100.1
        ipv6Prefix: 2001:db8:abcd:12::0/64
      oneOf:
      - required:
        - ipv4Addr
      - required:
        - ipv6Addr
      - required:
        - ipv6Prefix
      properties:
        ipv4Addr:
          description: |
            String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
          example: 198.51.100.1
          pattern: "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
          type: string
        ipv6Addr:
          $ref: '#/components/schemas/Ipv6Addr'
        ipv6Prefix:
          $ref: '#/components/schemas/Ipv6Prefix'
      type: object
    Ipv4Addr:
      description: |
        String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
      example: 198.51.100.1
      pattern: "^(([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9][0-9]|2[0-4][0-9]|25[0-5])$"
      type: string
    Ipv6Addr:
      allOf:
      - pattern: "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))$"
      - pattern: "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))$"
      description: |
        String identifying an IPv6 address formatted according to clause 4 of RFC5952. The mixed IPv4 IPv6 notation according to clause 5 of RFC5952 shall not be used.
      example: 2001:db8:85a3::8a2e:370:7334
      type: string
    Ipv6Prefix:
      allOf:
      - pattern: "^((:|(0?|([1-9a-f][0-9a-f]{0,3}))):)((0?|([1-9a-f][0-9a-f]{0,3})):){0,6}(:|(0?|([1-9a-f][0-9a-f]{0,3})))(\\\
          /(([0-9])|([0-9]{2})|(1[0-1][0-9])|(12[0-8])))$"
      - pattern: "^((([^:]+:){7}([^:]+))|((([^:]+:)*[^:]+)?::(([^:]+:)*[^:]+)?))(\\\
          /.+)$"
      description: |
        String identifying an IPv6 address prefix formatted according to clause 4 of RFC 5952. IPv6Prefix data type may contain an individual /128 IPv6 address.
      example: 2001:db8:abcd:12::0/64
      type: string
    Uinteger:
      description: "Unsigned Integer, i.e. only value 0 and integers above 0 are permissible."
      minimum: 0
      type: integer
    NfInstanceId:
      description: "String uniquely identifying a NF instance. The format of the NF\
        \ Instance ID shall be a  Universally Unique Identifier (UUID) version 4,\
        \ as described in IETF RFC 4122. \n"
      format: uuid
      type: string
    NFType:
      anyOf:
      - $ref: '#/components/schemas/NFType_anyOf'
      - type: string
      description: NF types known to NRF
    PlmnId:
      description: |
        When PlmnId needs to be converted to string (e.g. when used in maps as key), the string  shall be composed of three digits "mcc" followed by "-" and two or three digits "mnc".
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Mcc:
      description: "Mobile Country Code part of the PLMN, comprising 3 digits, as\
        \ defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
      pattern: "^\\d{3}$"
      type: string
    Mnc:
      description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
        \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
      pattern: "^\\d{2,3}$"
      type: string
    PlmnIdNid:
      description: |
        Contains the serving core network operator PLMN ID and, for an SNPN, the NID that together with the PLMN ID identifies the SNPN.
      properties:
        mcc:
          description: "Mobile Country Code part of the PLMN, comprising 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413. \n"
          pattern: "^\\d{3}$"
          type: string
        mnc:
          description: "Mobile Network Code part of the PLMN, comprising 2 or 3 digits,\
            \ as defined in clause 9.3.3.5 of 3GPP TS 38.413."
          pattern: "^\\d{2,3}$"
          type: string
        nid:
          description: "This represents the Network Identifier, which together with\
            \ a PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS\
            \ 23.501 clause 5.30.2.1). \n"
          pattern: "^[A-Fa-f0-9]{11}$"
          type: string
      required:
      - mcc
      - mnc
      type: object
    Nid:
      description: "This represents the Network Identifier, which together with a\
        \ PLMN ID is used to identify an SNPN (see 3GPP TS 23.003 and 3GPP TS 23.501\
        \ clause 5.30.2.1). \n"
      pattern: "^[A-Fa-f0-9]{11}$"
      type: string
    NfSetId:
      description: "NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted\
        \ as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\"\
        , or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC>\
        \ encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC>\
        \ encoding the Mobile Network Code part of the PLMN, comprising 3 digits.\
        \ \n  If there are only 2 significant digits in the MNC, one \"0\" digit shall\
        \ be inserted \n  at the left side to fill the 3 digits coding of MNC.  Pattern:\
        \ '^[0-9]{3}$'\n<NFType> encoded as a value defined in Table 6.1.6.3.3-1 of\
        \ 3GPP TS 29.510 but \n  with lower case characters <Set ID> encoded as a\
        \ string of characters consisting of \n  alphabetic characters (A-Z and a-z),\
        \ digits (0-9) and/or the hyphen (-) and that \n  shall end with either an\
        \ alphabetic character or a digit. \n"
      type: string
    NfServiceSetId:
      description: "NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003)\
        \ formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF\
        \ Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\"\
        \ with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)\
        \   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3\
        \ digits. \n  If there are only 2 significant digits in the MNC, one \"0\"\
        \ digit shall be inserted \n  at the left side to fill the 3 digits coding\
        \ of MNC.  Pattern: '^[0-9]{3}$'\n<NID> encoded as defined in clause\_5.4.2\
        \ (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause\
        \ 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded\
        \ as a string of characters consisting of alphabetic \n  characters (A-Z and\
        \ a-z), digits (0-9) and/or the hyphen (-) and that shall end \n  with either\
        \ an alphabetic character or a digit.\n"
      type: string
    EasEvent_anyOf:
      enum:
      - EAS_INFO_CHG
      type: string
      example: null
    MatchingOperator_anyOf:
      enum:
      - FULL_MATCH
      - MATCH_ALL
      - STARTS_WITH
      - NOT_START_WITH
      - ENDS_WITH
      - NOT_END_WITH
      - CONTAINS
      - NOT_CONTAIN
      type: string
      example: null
    NFType_anyOf:
      enum:
      - NRF
      - UDM
      - AMF
      - SMF
      - AUSF
      - NEF
      - PCF
      - SMSF
      - NSSF
      - UDR
      - LMF
      - GMLC
      - 5G_EIR
      - SEPP
      - UPF
      - N3IWF
      - AF
      - UDSF
      - BSF
      - CHF
      - NWDAF
      - PCSCF
      - CBCF
      - HSS
      - UCMF
      - SOR_AF
      - SPAF
      - MME
      - SCSAS
      - SCEF
      - SCP
      - NSSAAF
      - ICSCF
      - SCSCF
      - DRA
      - IMS_AS
      - AANF
      - 5G_DDNMF
      - NSACF
      - MFAF
      - EASDF
      - DCCF
      - MB_SMF
      - TSCTSF
      - ADRF
      - GBA_BSF
      - CEF
      - MB_UPF
      - NSWOF
      - PKMF
      - MNPF
      - SMS_GMSC
      - SMS_IWMSC
      - MBSF
      - MBSTF
      - PANF
      type: string
      example: null
  securitySchemes:
    oAuth2ClientCredentials:
      flows:
        clientCredentials:
          scopes:
            nnef-eas-deployment: Access to the Nnef_EASDeployment API
          tokenUrl: "{nrfApiRoot}/oauth2/token"
      type: oauth2
