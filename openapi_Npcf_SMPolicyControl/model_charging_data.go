/*
Npcf_SMPolicyControl API

Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_SMPolicyControl

import (
	"encoding/json"
)

// checks if the ChargingData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargingData{}

// ChargingData Contains charging related parameters.
type ChargingData struct {
	// Univocally identifies the charging control policy data within a PDU session.
	ChgId string `json:"chgId"`
	MeteringMethod *MeteringMethod `json:"meteringMethod,omitempty"`
	// Indicates the offline charging is applicable to the PCC rule when it is included and set  to true. 
	Offline *bool `json:"offline,omitempty"`
	// Indicates the online charging is applicable to the PCC rule when it is included and set  to true. 
	Online *bool `json:"online,omitempty"`
	// Indicates whether the service data flow is allowed to start while the SMF is waiting for  the response to the credit request. 
	SdfHandl *bool `json:"sdfHandl,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	RatingGroup *int32 `json:"ratingGroup,omitempty"`
	ReportingLevel *ReportingLevel `json:"reportingLevel,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	ServiceId *int32 `json:"serviceId,omitempty"`
	// Indicates the sponsor identity.
	SponsorId *string `json:"sponsorId,omitempty"`
	// Indicates the application service provider identity.
	AppSvcProvId *string `json:"appSvcProvId,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	// Deprecated
	AfChargingIdentifier *int32 `json:"afChargingIdentifier,omitempty"`
	// Application provided charging identifier allowing correlation of charging information.
	AfChargId *string `json:"afChargId,omitempty"`
}

// NewChargingData instantiates a new ChargingData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargingData(chgId string) *ChargingData {
	this := ChargingData{}
	this.ChgId = chgId
	return &this
}

// NewChargingDataWithDefaults instantiates a new ChargingData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargingDataWithDefaults() *ChargingData {
	this := ChargingData{}
	return &this
}

// GetChgId returns the ChgId field value
func (o *ChargingData) GetChgId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ChgId
}

// GetChgIdOk returns a tuple with the ChgId field value
// and a boolean to check if the value has been set.
func (o *ChargingData) GetChgIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChgId, true
}

// SetChgId sets field value
func (o *ChargingData) SetChgId(v string) {
	o.ChgId = v
}

// GetMeteringMethod returns the MeteringMethod field value if set, zero value otherwise.
func (o *ChargingData) GetMeteringMethod() MeteringMethod {
	if o == nil || IsNil(o.MeteringMethod) {
		var ret MeteringMethod
		return ret
	}
	return *o.MeteringMethod
}

// GetMeteringMethodOk returns a tuple with the MeteringMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetMeteringMethodOk() (*MeteringMethod, bool) {
	if o == nil || IsNil(o.MeteringMethod) {
		return nil, false
	}
	return o.MeteringMethod, true
}

// HasMeteringMethod returns a boolean if a field has been set.
func (o *ChargingData) HasMeteringMethod() bool {
	if o != nil && !IsNil(o.MeteringMethod) {
		return true
	}

	return false
}

// SetMeteringMethod gets a reference to the given MeteringMethod and assigns it to the MeteringMethod field.
func (o *ChargingData) SetMeteringMethod(v MeteringMethod) {
	o.MeteringMethod = &v
}

// GetOffline returns the Offline field value if set, zero value otherwise.
func (o *ChargingData) GetOffline() bool {
	if o == nil || IsNil(o.Offline) {
		var ret bool
		return ret
	}
	return *o.Offline
}

// GetOfflineOk returns a tuple with the Offline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetOfflineOk() (*bool, bool) {
	if o == nil || IsNil(o.Offline) {
		return nil, false
	}
	return o.Offline, true
}

// HasOffline returns a boolean if a field has been set.
func (o *ChargingData) HasOffline() bool {
	if o != nil && !IsNil(o.Offline) {
		return true
	}

	return false
}

// SetOffline gets a reference to the given bool and assigns it to the Offline field.
func (o *ChargingData) SetOffline(v bool) {
	o.Offline = &v
}

// GetOnline returns the Online field value if set, zero value otherwise.
func (o *ChargingData) GetOnline() bool {
	if o == nil || IsNil(o.Online) {
		var ret bool
		return ret
	}
	return *o.Online
}

// GetOnlineOk returns a tuple with the Online field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetOnlineOk() (*bool, bool) {
	if o == nil || IsNil(o.Online) {
		return nil, false
	}
	return o.Online, true
}

// HasOnline returns a boolean if a field has been set.
func (o *ChargingData) HasOnline() bool {
	if o != nil && !IsNil(o.Online) {
		return true
	}

	return false
}

// SetOnline gets a reference to the given bool and assigns it to the Online field.
func (o *ChargingData) SetOnline(v bool) {
	o.Online = &v
}

// GetSdfHandl returns the SdfHandl field value if set, zero value otherwise.
func (o *ChargingData) GetSdfHandl() bool {
	if o == nil || IsNil(o.SdfHandl) {
		var ret bool
		return ret
	}
	return *o.SdfHandl
}

// GetSdfHandlOk returns a tuple with the SdfHandl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetSdfHandlOk() (*bool, bool) {
	if o == nil || IsNil(o.SdfHandl) {
		return nil, false
	}
	return o.SdfHandl, true
}

// HasSdfHandl returns a boolean if a field has been set.
func (o *ChargingData) HasSdfHandl() bool {
	if o != nil && !IsNil(o.SdfHandl) {
		return true
	}

	return false
}

// SetSdfHandl gets a reference to the given bool and assigns it to the SdfHandl field.
func (o *ChargingData) SetSdfHandl(v bool) {
	o.SdfHandl = &v
}

// GetRatingGroup returns the RatingGroup field value if set, zero value otherwise.
func (o *ChargingData) GetRatingGroup() int32 {
	if o == nil || IsNil(o.RatingGroup) {
		var ret int32
		return ret
	}
	return *o.RatingGroup
}

// GetRatingGroupOk returns a tuple with the RatingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetRatingGroupOk() (*int32, bool) {
	if o == nil || IsNil(o.RatingGroup) {
		return nil, false
	}
	return o.RatingGroup, true
}

// HasRatingGroup returns a boolean if a field has been set.
func (o *ChargingData) HasRatingGroup() bool {
	if o != nil && !IsNil(o.RatingGroup) {
		return true
	}

	return false
}

// SetRatingGroup gets a reference to the given int32 and assigns it to the RatingGroup field.
func (o *ChargingData) SetRatingGroup(v int32) {
	o.RatingGroup = &v
}

// GetReportingLevel returns the ReportingLevel field value if set, zero value otherwise.
func (o *ChargingData) GetReportingLevel() ReportingLevel {
	if o == nil || IsNil(o.ReportingLevel) {
		var ret ReportingLevel
		return ret
	}
	return *o.ReportingLevel
}

// GetReportingLevelOk returns a tuple with the ReportingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetReportingLevelOk() (*ReportingLevel, bool) {
	if o == nil || IsNil(o.ReportingLevel) {
		return nil, false
	}
	return o.ReportingLevel, true
}

// HasReportingLevel returns a boolean if a field has been set.
func (o *ChargingData) HasReportingLevel() bool {
	if o != nil && !IsNil(o.ReportingLevel) {
		return true
	}

	return false
}

// SetReportingLevel gets a reference to the given ReportingLevel and assigns it to the ReportingLevel field.
func (o *ChargingData) SetReportingLevel(v ReportingLevel) {
	o.ReportingLevel = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ChargingData) GetServiceId() int32 {
	if o == nil || IsNil(o.ServiceId) {
		var ret int32
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetServiceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ChargingData) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given int32 and assigns it to the ServiceId field.
func (o *ChargingData) SetServiceId(v int32) {
	o.ServiceId = &v
}

// GetSponsorId returns the SponsorId field value if set, zero value otherwise.
func (o *ChargingData) GetSponsorId() string {
	if o == nil || IsNil(o.SponsorId) {
		var ret string
		return ret
	}
	return *o.SponsorId
}

// GetSponsorIdOk returns a tuple with the SponsorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetSponsorIdOk() (*string, bool) {
	if o == nil || IsNil(o.SponsorId) {
		return nil, false
	}
	return o.SponsorId, true
}

// HasSponsorId returns a boolean if a field has been set.
func (o *ChargingData) HasSponsorId() bool {
	if o != nil && !IsNil(o.SponsorId) {
		return true
	}

	return false
}

// SetSponsorId gets a reference to the given string and assigns it to the SponsorId field.
func (o *ChargingData) SetSponsorId(v string) {
	o.SponsorId = &v
}

// GetAppSvcProvId returns the AppSvcProvId field value if set, zero value otherwise.
func (o *ChargingData) GetAppSvcProvId() string {
	if o == nil || IsNil(o.AppSvcProvId) {
		var ret string
		return ret
	}
	return *o.AppSvcProvId
}

// GetAppSvcProvIdOk returns a tuple with the AppSvcProvId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetAppSvcProvIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppSvcProvId) {
		return nil, false
	}
	return o.AppSvcProvId, true
}

// HasAppSvcProvId returns a boolean if a field has been set.
func (o *ChargingData) HasAppSvcProvId() bool {
	if o != nil && !IsNil(o.AppSvcProvId) {
		return true
	}

	return false
}

// SetAppSvcProvId gets a reference to the given string and assigns it to the AppSvcProvId field.
func (o *ChargingData) SetAppSvcProvId(v string) {
	o.AppSvcProvId = &v
}

// GetAfChargingIdentifier returns the AfChargingIdentifier field value if set, zero value otherwise.
// Deprecated
func (o *ChargingData) GetAfChargingIdentifier() int32 {
	if o == nil || IsNil(o.AfChargingIdentifier) {
		var ret int32
		return ret
	}
	return *o.AfChargingIdentifier
}

// GetAfChargingIdentifierOk returns a tuple with the AfChargingIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ChargingData) GetAfChargingIdentifierOk() (*int32, bool) {
	if o == nil || IsNil(o.AfChargingIdentifier) {
		return nil, false
	}
	return o.AfChargingIdentifier, true
}

// HasAfChargingIdentifier returns a boolean if a field has been set.
func (o *ChargingData) HasAfChargingIdentifier() bool {
	if o != nil && !IsNil(o.AfChargingIdentifier) {
		return true
	}

	return false
}

// SetAfChargingIdentifier gets a reference to the given int32 and assigns it to the AfChargingIdentifier field.
// Deprecated
func (o *ChargingData) SetAfChargingIdentifier(v int32) {
	o.AfChargingIdentifier = &v
}

// GetAfChargId returns the AfChargId field value if set, zero value otherwise.
func (o *ChargingData) GetAfChargId() string {
	if o == nil || IsNil(o.AfChargId) {
		var ret string
		return ret
	}
	return *o.AfChargId
}

// GetAfChargIdOk returns a tuple with the AfChargId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingData) GetAfChargIdOk() (*string, bool) {
	if o == nil || IsNil(o.AfChargId) {
		return nil, false
	}
	return o.AfChargId, true
}

// HasAfChargId returns a boolean if a field has been set.
func (o *ChargingData) HasAfChargId() bool {
	if o != nil && !IsNil(o.AfChargId) {
		return true
	}

	return false
}

// SetAfChargId gets a reference to the given string and assigns it to the AfChargId field.
func (o *ChargingData) SetAfChargId(v string) {
	o.AfChargId = &v
}

func (o ChargingData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargingData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["chgId"] = o.ChgId
	if !IsNil(o.MeteringMethod) {
		toSerialize["meteringMethod"] = o.MeteringMethod
	}
	if !IsNil(o.Offline) {
		toSerialize["offline"] = o.Offline
	}
	if !IsNil(o.Online) {
		toSerialize["online"] = o.Online
	}
	if !IsNil(o.SdfHandl) {
		toSerialize["sdfHandl"] = o.SdfHandl
	}
	if !IsNil(o.RatingGroup) {
		toSerialize["ratingGroup"] = o.RatingGroup
	}
	if !IsNil(o.ReportingLevel) {
		toSerialize["reportingLevel"] = o.ReportingLevel
	}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.SponsorId) {
		toSerialize["sponsorId"] = o.SponsorId
	}
	if !IsNil(o.AppSvcProvId) {
		toSerialize["appSvcProvId"] = o.AppSvcProvId
	}
	if !IsNil(o.AfChargingIdentifier) {
		toSerialize["afChargingIdentifier"] = o.AfChargingIdentifier
	}
	if !IsNil(o.AfChargId) {
		toSerialize["afChargId"] = o.AfChargId
	}
	return toSerialize, nil
}

type NullableChargingData struct {
	value *ChargingData
	isSet bool
}

func (v NullableChargingData) Get() *ChargingData {
	return v.value
}

func (v *NullableChargingData) Set(val *ChargingData) {
	v.value = val
	v.isSet = true
}

func (v NullableChargingData) IsSet() bool {
	return v.isSet
}

func (v *NullableChargingData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargingData(val *ChargingData) *NullableChargingData {
	return &NullableChargingData{value: val, isSet: true}
}

func (v NullableChargingData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargingData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


