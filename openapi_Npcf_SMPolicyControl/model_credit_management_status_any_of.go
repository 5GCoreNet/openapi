/*
Npcf_SMPolicyControl API

Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_SMPolicyControl

import (
	"encoding/json"
	"fmt"
)

// CreditManagementStatusAnyOf the model 'CreditManagementStatusAnyOf'
type CreditManagementStatusAnyOf string

// List of CreditManagementStatus_anyOf
const (
	END_USER_SER_DENIED CreditManagementStatusAnyOf = "END_USER_SER_DENIED"
	CREDIT_CTRL_NOT_APP CreditManagementStatusAnyOf = "CREDIT_CTRL_NOT_APP"
	AUTH_REJECTED CreditManagementStatusAnyOf = "AUTH_REJECTED"
	USER_UNKNOWN CreditManagementStatusAnyOf = "USER_UNKNOWN"
	RATING_FAILED CreditManagementStatusAnyOf = "RATING_FAILED"
)

// All allowed values of CreditManagementStatusAnyOf enum
var AllowedCreditManagementStatusAnyOfEnumValues = []CreditManagementStatusAnyOf{
	"END_USER_SER_DENIED",
	"CREDIT_CTRL_NOT_APP",
	"AUTH_REJECTED",
	"USER_UNKNOWN",
	"RATING_FAILED",
}

func (v *CreditManagementStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CreditManagementStatusAnyOf(value)
	for _, existing := range AllowedCreditManagementStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CreditManagementStatusAnyOf", value)
}

// NewCreditManagementStatusAnyOfFromValue returns a pointer to a valid CreditManagementStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCreditManagementStatusAnyOfFromValue(v string) (*CreditManagementStatusAnyOf, error) {
	ev := CreditManagementStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CreditManagementStatusAnyOf: valid values are %v", v, AllowedCreditManagementStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CreditManagementStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedCreditManagementStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CreditManagementStatus_anyOf value
func (v CreditManagementStatusAnyOf) Ptr() *CreditManagementStatusAnyOf {
	return &v
}

type NullableCreditManagementStatusAnyOf struct {
	value *CreditManagementStatusAnyOf
	isSet bool
}

func (v NullableCreditManagementStatusAnyOf) Get() *CreditManagementStatusAnyOf {
	return v.value
}

func (v *NullableCreditManagementStatusAnyOf) Set(val *CreditManagementStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableCreditManagementStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableCreditManagementStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreditManagementStatusAnyOf(val *CreditManagementStatusAnyOf) *NullableCreditManagementStatusAnyOf {
	return &NullableCreditManagementStatusAnyOf{value: val, isSet: true}
}

func (v NullableCreditManagementStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreditManagementStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

