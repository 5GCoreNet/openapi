/*
Npcf_SMPolicyControl API

Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_SMPolicyControl

import (
	"encoding/json"
)

// checks if the QosMonitoringData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QosMonitoringData{}

// QosMonitoringData Contains QoS monitoring related control information.
type QosMonitoringData struct {
	// Univocally identifies the QoS monitoring policy data within a PDU session.
	QmId string `json:"qmId"`
	// indicates the UL packet delay, DL packet delay and/or round trip packet delay between the UE and the UPF is to be monitored when the QoS Monitoring for URLLC is enabled for the service data flow. 
	ReqQosMonParams []RequestedQosMonitoringParameter `json:"reqQosMonParams"`
	RepFreqs []ReportingFrequency `json:"repFreqs"`
	// Indicates the period of time in units of miliiseconds for DL packet delay.
	RepThreshDl NullableInt32 `json:"repThreshDl,omitempty"`
	// Indicates the period of time in units of miliiseconds for UL packet delay.
	RepThreshUl NullableInt32 `json:"repThreshUl,omitempty"`
	// Indicates the period of time in units of miliiseconds for round trip packet delay. 
	RepThreshRp NullableInt32 `json:"repThreshRp,omitempty"`
	// indicating a time in seconds with OpenAPI defined 'nullable: true' property.
	WaitTime NullableInt32 `json:"waitTime,omitempty"`
	// indicating a time in seconds with OpenAPI defined 'nullable: true' property.
	RepPeriod NullableInt32 `json:"repPeriod,omitempty"`
	// String providing an URI formatted according to RFC 3986 with the OpenAPI 'nullable: true' property. 
	NotifyUri NullableString `json:"notifyUri,omitempty"`
	NotifyCorreId NullableString `json:"notifyCorreId,omitempty"`
	// Indicates that the direct event notification sent by UPF to the Local NEF or AF is  requested if it is included and set to true. 
	DirectNotifInd *bool `json:"directNotifInd,omitempty"`
}

// NewQosMonitoringData instantiates a new QosMonitoringData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQosMonitoringData(qmId string, reqQosMonParams []RequestedQosMonitoringParameter, repFreqs []ReportingFrequency) *QosMonitoringData {
	this := QosMonitoringData{}
	this.QmId = qmId
	this.ReqQosMonParams = reqQosMonParams
	this.RepFreqs = repFreqs
	return &this
}

// NewQosMonitoringDataWithDefaults instantiates a new QosMonitoringData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQosMonitoringDataWithDefaults() *QosMonitoringData {
	this := QosMonitoringData{}
	return &this
}

// GetQmId returns the QmId field value
func (o *QosMonitoringData) GetQmId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.QmId
}

// GetQmIdOk returns a tuple with the QmId field value
// and a boolean to check if the value has been set.
func (o *QosMonitoringData) GetQmIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QmId, true
}

// SetQmId sets field value
func (o *QosMonitoringData) SetQmId(v string) {
	o.QmId = v
}

// GetReqQosMonParams returns the ReqQosMonParams field value
func (o *QosMonitoringData) GetReqQosMonParams() []RequestedQosMonitoringParameter {
	if o == nil {
		var ret []RequestedQosMonitoringParameter
		return ret
	}

	return o.ReqQosMonParams
}

// GetReqQosMonParamsOk returns a tuple with the ReqQosMonParams field value
// and a boolean to check if the value has been set.
func (o *QosMonitoringData) GetReqQosMonParamsOk() ([]RequestedQosMonitoringParameter, bool) {
	if o == nil {
		return nil, false
	}
	return o.ReqQosMonParams, true
}

// SetReqQosMonParams sets field value
func (o *QosMonitoringData) SetReqQosMonParams(v []RequestedQosMonitoringParameter) {
	o.ReqQosMonParams = v
}

// GetRepFreqs returns the RepFreqs field value
func (o *QosMonitoringData) GetRepFreqs() []ReportingFrequency {
	if o == nil {
		var ret []ReportingFrequency
		return ret
	}

	return o.RepFreqs
}

// GetRepFreqsOk returns a tuple with the RepFreqs field value
// and a boolean to check if the value has been set.
func (o *QosMonitoringData) GetRepFreqsOk() ([]ReportingFrequency, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepFreqs, true
}

// SetRepFreqs sets field value
func (o *QosMonitoringData) SetRepFreqs(v []ReportingFrequency) {
	o.RepFreqs = v
}

// GetRepThreshDl returns the RepThreshDl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetRepThreshDl() int32 {
	if o == nil || IsNil(o.RepThreshDl.Get()) {
		var ret int32
		return ret
	}
	return *o.RepThreshDl.Get()
}

// GetRepThreshDlOk returns a tuple with the RepThreshDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetRepThreshDlOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepThreshDl.Get(), o.RepThreshDl.IsSet()
}

// HasRepThreshDl returns a boolean if a field has been set.
func (o *QosMonitoringData) HasRepThreshDl() bool {
	if o != nil && o.RepThreshDl.IsSet() {
		return true
	}

	return false
}

// SetRepThreshDl gets a reference to the given NullableInt32 and assigns it to the RepThreshDl field.
func (o *QosMonitoringData) SetRepThreshDl(v int32) {
	o.RepThreshDl.Set(&v)
}
// SetRepThreshDlNil sets the value for RepThreshDl to be an explicit nil
func (o *QosMonitoringData) SetRepThreshDlNil() {
	o.RepThreshDl.Set(nil)
}

// UnsetRepThreshDl ensures that no value is present for RepThreshDl, not even an explicit nil
func (o *QosMonitoringData) UnsetRepThreshDl() {
	o.RepThreshDl.Unset()
}

// GetRepThreshUl returns the RepThreshUl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetRepThreshUl() int32 {
	if o == nil || IsNil(o.RepThreshUl.Get()) {
		var ret int32
		return ret
	}
	return *o.RepThreshUl.Get()
}

// GetRepThreshUlOk returns a tuple with the RepThreshUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetRepThreshUlOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepThreshUl.Get(), o.RepThreshUl.IsSet()
}

// HasRepThreshUl returns a boolean if a field has been set.
func (o *QosMonitoringData) HasRepThreshUl() bool {
	if o != nil && o.RepThreshUl.IsSet() {
		return true
	}

	return false
}

// SetRepThreshUl gets a reference to the given NullableInt32 and assigns it to the RepThreshUl field.
func (o *QosMonitoringData) SetRepThreshUl(v int32) {
	o.RepThreshUl.Set(&v)
}
// SetRepThreshUlNil sets the value for RepThreshUl to be an explicit nil
func (o *QosMonitoringData) SetRepThreshUlNil() {
	o.RepThreshUl.Set(nil)
}

// UnsetRepThreshUl ensures that no value is present for RepThreshUl, not even an explicit nil
func (o *QosMonitoringData) UnsetRepThreshUl() {
	o.RepThreshUl.Unset()
}

// GetRepThreshRp returns the RepThreshRp field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetRepThreshRp() int32 {
	if o == nil || IsNil(o.RepThreshRp.Get()) {
		var ret int32
		return ret
	}
	return *o.RepThreshRp.Get()
}

// GetRepThreshRpOk returns a tuple with the RepThreshRp field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetRepThreshRpOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepThreshRp.Get(), o.RepThreshRp.IsSet()
}

// HasRepThreshRp returns a boolean if a field has been set.
func (o *QosMonitoringData) HasRepThreshRp() bool {
	if o != nil && o.RepThreshRp.IsSet() {
		return true
	}

	return false
}

// SetRepThreshRp gets a reference to the given NullableInt32 and assigns it to the RepThreshRp field.
func (o *QosMonitoringData) SetRepThreshRp(v int32) {
	o.RepThreshRp.Set(&v)
}
// SetRepThreshRpNil sets the value for RepThreshRp to be an explicit nil
func (o *QosMonitoringData) SetRepThreshRpNil() {
	o.RepThreshRp.Set(nil)
}

// UnsetRepThreshRp ensures that no value is present for RepThreshRp, not even an explicit nil
func (o *QosMonitoringData) UnsetRepThreshRp() {
	o.RepThreshRp.Unset()
}

// GetWaitTime returns the WaitTime field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetWaitTime() int32 {
	if o == nil || IsNil(o.WaitTime.Get()) {
		var ret int32
		return ret
	}
	return *o.WaitTime.Get()
}

// GetWaitTimeOk returns a tuple with the WaitTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetWaitTimeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.WaitTime.Get(), o.WaitTime.IsSet()
}

// HasWaitTime returns a boolean if a field has been set.
func (o *QosMonitoringData) HasWaitTime() bool {
	if o != nil && o.WaitTime.IsSet() {
		return true
	}

	return false
}

// SetWaitTime gets a reference to the given NullableInt32 and assigns it to the WaitTime field.
func (o *QosMonitoringData) SetWaitTime(v int32) {
	o.WaitTime.Set(&v)
}
// SetWaitTimeNil sets the value for WaitTime to be an explicit nil
func (o *QosMonitoringData) SetWaitTimeNil() {
	o.WaitTime.Set(nil)
}

// UnsetWaitTime ensures that no value is present for WaitTime, not even an explicit nil
func (o *QosMonitoringData) UnsetWaitTime() {
	o.WaitTime.Unset()
}

// GetRepPeriod returns the RepPeriod field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetRepPeriod() int32 {
	if o == nil || IsNil(o.RepPeriod.Get()) {
		var ret int32
		return ret
	}
	return *o.RepPeriod.Get()
}

// GetRepPeriodOk returns a tuple with the RepPeriod field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetRepPeriodOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RepPeriod.Get(), o.RepPeriod.IsSet()
}

// HasRepPeriod returns a boolean if a field has been set.
func (o *QosMonitoringData) HasRepPeriod() bool {
	if o != nil && o.RepPeriod.IsSet() {
		return true
	}

	return false
}

// SetRepPeriod gets a reference to the given NullableInt32 and assigns it to the RepPeriod field.
func (o *QosMonitoringData) SetRepPeriod(v int32) {
	o.RepPeriod.Set(&v)
}
// SetRepPeriodNil sets the value for RepPeriod to be an explicit nil
func (o *QosMonitoringData) SetRepPeriodNil() {
	o.RepPeriod.Set(nil)
}

// UnsetRepPeriod ensures that no value is present for RepPeriod, not even an explicit nil
func (o *QosMonitoringData) UnsetRepPeriod() {
	o.RepPeriod.Unset()
}

// GetNotifyUri returns the NotifyUri field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetNotifyUri() string {
	if o == nil || IsNil(o.NotifyUri.Get()) {
		var ret string
		return ret
	}
	return *o.NotifyUri.Get()
}

// GetNotifyUriOk returns a tuple with the NotifyUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetNotifyUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyUri.Get(), o.NotifyUri.IsSet()
}

// HasNotifyUri returns a boolean if a field has been set.
func (o *QosMonitoringData) HasNotifyUri() bool {
	if o != nil && o.NotifyUri.IsSet() {
		return true
	}

	return false
}

// SetNotifyUri gets a reference to the given NullableString and assigns it to the NotifyUri field.
func (o *QosMonitoringData) SetNotifyUri(v string) {
	o.NotifyUri.Set(&v)
}
// SetNotifyUriNil sets the value for NotifyUri to be an explicit nil
func (o *QosMonitoringData) SetNotifyUriNil() {
	o.NotifyUri.Set(nil)
}

// UnsetNotifyUri ensures that no value is present for NotifyUri, not even an explicit nil
func (o *QosMonitoringData) UnsetNotifyUri() {
	o.NotifyUri.Unset()
}

// GetNotifyCorreId returns the NotifyCorreId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QosMonitoringData) GetNotifyCorreId() string {
	if o == nil || IsNil(o.NotifyCorreId.Get()) {
		var ret string
		return ret
	}
	return *o.NotifyCorreId.Get()
}

// GetNotifyCorreIdOk returns a tuple with the NotifyCorreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QosMonitoringData) GetNotifyCorreIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.NotifyCorreId.Get(), o.NotifyCorreId.IsSet()
}

// HasNotifyCorreId returns a boolean if a field has been set.
func (o *QosMonitoringData) HasNotifyCorreId() bool {
	if o != nil && o.NotifyCorreId.IsSet() {
		return true
	}

	return false
}

// SetNotifyCorreId gets a reference to the given NullableString and assigns it to the NotifyCorreId field.
func (o *QosMonitoringData) SetNotifyCorreId(v string) {
	o.NotifyCorreId.Set(&v)
}
// SetNotifyCorreIdNil sets the value for NotifyCorreId to be an explicit nil
func (o *QosMonitoringData) SetNotifyCorreIdNil() {
	o.NotifyCorreId.Set(nil)
}

// UnsetNotifyCorreId ensures that no value is present for NotifyCorreId, not even an explicit nil
func (o *QosMonitoringData) UnsetNotifyCorreId() {
	o.NotifyCorreId.Unset()
}

// GetDirectNotifInd returns the DirectNotifInd field value if set, zero value otherwise.
func (o *QosMonitoringData) GetDirectNotifInd() bool {
	if o == nil || IsNil(o.DirectNotifInd) {
		var ret bool
		return ret
	}
	return *o.DirectNotifInd
}

// GetDirectNotifIndOk returns a tuple with the DirectNotifInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QosMonitoringData) GetDirectNotifIndOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectNotifInd) {
		return nil, false
	}
	return o.DirectNotifInd, true
}

// HasDirectNotifInd returns a boolean if a field has been set.
func (o *QosMonitoringData) HasDirectNotifInd() bool {
	if o != nil && !IsNil(o.DirectNotifInd) {
		return true
	}

	return false
}

// SetDirectNotifInd gets a reference to the given bool and assigns it to the DirectNotifInd field.
func (o *QosMonitoringData) SetDirectNotifInd(v bool) {
	o.DirectNotifInd = &v
}

func (o QosMonitoringData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QosMonitoringData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["qmId"] = o.QmId
	toSerialize["reqQosMonParams"] = o.ReqQosMonParams
	toSerialize["repFreqs"] = o.RepFreqs
	if o.RepThreshDl.IsSet() {
		toSerialize["repThreshDl"] = o.RepThreshDl.Get()
	}
	if o.RepThreshUl.IsSet() {
		toSerialize["repThreshUl"] = o.RepThreshUl.Get()
	}
	if o.RepThreshRp.IsSet() {
		toSerialize["repThreshRp"] = o.RepThreshRp.Get()
	}
	if o.WaitTime.IsSet() {
		toSerialize["waitTime"] = o.WaitTime.Get()
	}
	if o.RepPeriod.IsSet() {
		toSerialize["repPeriod"] = o.RepPeriod.Get()
	}
	if o.NotifyUri.IsSet() {
		toSerialize["notifyUri"] = o.NotifyUri.Get()
	}
	if o.NotifyCorreId.IsSet() {
		toSerialize["notifyCorreId"] = o.NotifyCorreId.Get()
	}
	if !IsNil(o.DirectNotifInd) {
		toSerialize["directNotifInd"] = o.DirectNotifInd
	}
	return toSerialize, nil
}

type NullableQosMonitoringData struct {
	value *QosMonitoringData
	isSet bool
}

func (v NullableQosMonitoringData) Get() *QosMonitoringData {
	return v.value
}

func (v *NullableQosMonitoringData) Set(val *QosMonitoringData) {
	v.value = val
	v.isSet = true
}

func (v NullableQosMonitoringData) IsSet() bool {
	return v.isSet
}

func (v *NullableQosMonitoringData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQosMonitoringData(val *QosMonitoringData) *NullableQosMonitoringData {
	return &NullableQosMonitoringData{value: val, isSet: true}
}

func (v NullableQosMonitoringData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQosMonitoringData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


