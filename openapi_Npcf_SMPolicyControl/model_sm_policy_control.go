/*
Npcf_SMPolicyControl API

Session Management Policy Control Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Npcf_SMPolicyControl

import (
	"encoding/json"
)

// checks if the SmPolicyControl type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmPolicyControl{}

// SmPolicyControl Contains the parameters used to request the SM policies and the SM policies authorized by  the PCF.
type SmPolicyControl struct {
	Context SmPolicyContextData `json:"context"`
	Policy  SmPolicyDecision    `json:"policy"`
}

// NewSmPolicyControl instantiates a new SmPolicyControl object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmPolicyControl(context SmPolicyContextData, policy SmPolicyDecision) *SmPolicyControl {
	this := SmPolicyControl{}
	this.Context = context
	this.Policy = policy
	return &this
}

// NewSmPolicyControlWithDefaults instantiates a new SmPolicyControl object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmPolicyControlWithDefaults() *SmPolicyControl {
	this := SmPolicyControl{}
	return &this
}

// GetContext returns the Context field value
func (o *SmPolicyControl) GetContext() SmPolicyContextData {
	if o == nil {
		var ret SmPolicyContextData
		return ret
	}

	return o.Context
}

// GetContextOk returns a tuple with the Context field value
// and a boolean to check if the value has been set.
func (o *SmPolicyControl) GetContextOk() (*SmPolicyContextData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Context, true
}

// SetContext sets field value
func (o *SmPolicyControl) SetContext(v SmPolicyContextData) {
	o.Context = v
}

// GetPolicy returns the Policy field value
func (o *SmPolicyControl) GetPolicy() SmPolicyDecision {
	if o == nil {
		var ret SmPolicyDecision
		return ret
	}

	return o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value
// and a boolean to check if the value has been set.
func (o *SmPolicyControl) GetPolicyOk() (*SmPolicyDecision, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Policy, true
}

// SetPolicy sets field value
func (o *SmPolicyControl) SetPolicy(v SmPolicyDecision) {
	o.Policy = v
}

func (o SmPolicyControl) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmPolicyControl) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["context"] = o.Context
	toSerialize["policy"] = o.Policy
	return toSerialize, nil
}

type NullableSmPolicyControl struct {
	value *SmPolicyControl
	isSet bool
}

func (v NullableSmPolicyControl) Get() *SmPolicyControl {
	return v.value
}

func (v *NullableSmPolicyControl) Set(val *SmPolicyControl) {
	v.value = val
	v.isSet = true
}

func (v NullableSmPolicyControl) IsSet() bool {
	return v.isSet
}

func (v *NullableSmPolicyControl) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmPolicyControl(val *SmPolicyControl) *NullableSmPolicyControl {
	return &NullableSmPolicyControl{value: val, isSet: true}
}

func (v NullableSmPolicyControl) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmPolicyControl) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
