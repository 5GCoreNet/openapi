/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the UlclBpInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UlclBpInformation{}

// UlclBpInformation UL CL or BP Information
type UlclBpInformation struct {
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	UlclBpUpfId *string `json:"ulclBpUpfId,omitempty"`
}

// NewUlclBpInformation instantiates a new UlclBpInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUlclBpInformation() *UlclBpInformation {
	this := UlclBpInformation{}
	return &this
}

// NewUlclBpInformationWithDefaults instantiates a new UlclBpInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUlclBpInformationWithDefaults() *UlclBpInformation {
	this := UlclBpInformation{}
	return &this
}

// GetUlclBpUpfId returns the UlclBpUpfId field value if set, zero value otherwise.
func (o *UlclBpInformation) GetUlclBpUpfId() string {
	if o == nil || IsNil(o.UlclBpUpfId) {
		var ret string
		return ret
	}
	return *o.UlclBpUpfId
}

// GetUlclBpUpfIdOk returns a tuple with the UlclBpUpfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UlclBpInformation) GetUlclBpUpfIdOk() (*string, bool) {
	if o == nil || IsNil(o.UlclBpUpfId) {
		return nil, false
	}
	return o.UlclBpUpfId, true
}

// HasUlclBpUpfId returns a boolean if a field has been set.
func (o *UlclBpInformation) HasUlclBpUpfId() bool {
	if o != nil && !IsNil(o.UlclBpUpfId) {
		return true
	}

	return false
}

// SetUlclBpUpfId gets a reference to the given string and assigns it to the UlclBpUpfId field.
func (o *UlclBpInformation) SetUlclBpUpfId(v string) {
	o.UlclBpUpfId = &v
}

func (o UlclBpInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UlclBpInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.UlclBpUpfId) {
		toSerialize["ulclBpUpfId"] = o.UlclBpUpfId
	}
	return toSerialize, nil
}

type NullableUlclBpInformation struct {
	value *UlclBpInformation
	isSet bool
}

func (v NullableUlclBpInformation) Get() *UlclBpInformation {
	return v.value
}

func (v *NullableUlclBpInformation) Set(val *UlclBpInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUlclBpInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUlclBpInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUlclBpInformation(val *UlclBpInformation) *NullableUlclBpInformation {
	return &NullableUlclBpInformation{value: val, isSet: true}
}

func (v NullableUlclBpInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUlclBpInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


