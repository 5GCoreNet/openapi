/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
	"fmt"
)

// ResourceStatusAnyOf the model 'ResourceStatusAnyOf'
type ResourceStatusAnyOf string

// List of ResourceStatus_anyOf
const (
	RELEASED ResourceStatusAnyOf = "RELEASED"
	UNCHANGED ResourceStatusAnyOf = "UNCHANGED"
	TRANSFERRED ResourceStatusAnyOf = "TRANSFERRED"
	UPDATED ResourceStatusAnyOf = "UPDATED"
	ALT_ANCHOR_SMF ResourceStatusAnyOf = "ALT_ANCHOR_SMF"
)

// All allowed values of ResourceStatusAnyOf enum
var AllowedResourceStatusAnyOfEnumValues = []ResourceStatusAnyOf{
	"RELEASED",
	"UNCHANGED",
	"TRANSFERRED",
	"UPDATED",
	"ALT_ANCHOR_SMF",
}

func (v *ResourceStatusAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ResourceStatusAnyOf(value)
	for _, existing := range AllowedResourceStatusAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ResourceStatusAnyOf", value)
}

// NewResourceStatusAnyOfFromValue returns a pointer to a valid ResourceStatusAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewResourceStatusAnyOfFromValue(v string) (*ResourceStatusAnyOf, error) {
	ev := ResourceStatusAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ResourceStatusAnyOf: valid values are %v", v, AllowedResourceStatusAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ResourceStatusAnyOf) IsValid() bool {
	for _, existing := range AllowedResourceStatusAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ResourceStatus_anyOf value
func (v ResourceStatusAnyOf) Ptr() *ResourceStatusAnyOf {
	return &v
}

type NullableResourceStatusAnyOf struct {
	value *ResourceStatusAnyOf
	isSet bool
}

func (v NullableResourceStatusAnyOf) Get() *ResourceStatusAnyOf {
	return v.value
}

func (v *NullableResourceStatusAnyOf) Set(val *ResourceStatusAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableResourceStatusAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableResourceStatusAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResourceStatusAnyOf(val *ResourceStatusAnyOf) *NullableResourceStatusAnyOf {
	return &NullableResourceStatusAnyOf{value: val, isSet: true}
}

func (v NullableResourceStatusAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResourceStatusAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

