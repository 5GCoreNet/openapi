/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the VplmnQos type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VplmnQos{}

// VplmnQos VPLMN QoS
type VplmnQos struct {
	// Unsigned integer representing a 5G QoS Identifier (see clause 5.7.2.1 of 3GPP TS 23.501, within the range 0 to 255. 
	Var5qi *int32 `json:"5qi,omitempty"`
	Arp *Arp `json:"arp,omitempty"`
	SessionAmbr *Ambr `json:"sessionAmbr,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MaxFbrDl *string `json:"maxFbrDl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	MaxFbrUl *string `json:"maxFbrUl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	GuaFbrDl *string `json:"guaFbrDl,omitempty"`
	// String representing a bit rate; the prefixes follow the standard symbols from The International System of Units, and represent x1000 multipliers, with the exception that prefix \"K\" is used to represent the standard symbol \"k\". 
	GuaFbrUl *string `json:"guaFbrUl,omitempty"`
}

// NewVplmnQos instantiates a new VplmnQos object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVplmnQos() *VplmnQos {
	this := VplmnQos{}
	return &this
}

// NewVplmnQosWithDefaults instantiates a new VplmnQos object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVplmnQosWithDefaults() *VplmnQos {
	this := VplmnQos{}
	return &this
}

// GetVar5qi returns the Var5qi field value if set, zero value otherwise.
func (o *VplmnQos) GetVar5qi() int32 {
	if o == nil || isNil(o.Var5qi) {
		var ret int32
		return ret
	}
	return *o.Var5qi
}

// GetVar5qiOk returns a tuple with the Var5qi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetVar5qiOk() (*int32, bool) {
	if o == nil || isNil(o.Var5qi) {
		return nil, false
	}
	return o.Var5qi, true
}

// HasVar5qi returns a boolean if a field has been set.
func (o *VplmnQos) HasVar5qi() bool {
	if o != nil && !isNil(o.Var5qi) {
		return true
	}

	return false
}

// SetVar5qi gets a reference to the given int32 and assigns it to the Var5qi field.
func (o *VplmnQos) SetVar5qi(v int32) {
	o.Var5qi = &v
}

// GetArp returns the Arp field value if set, zero value otherwise.
func (o *VplmnQos) GetArp() Arp {
	if o == nil || isNil(o.Arp) {
		var ret Arp
		return ret
	}
	return *o.Arp
}

// GetArpOk returns a tuple with the Arp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetArpOk() (*Arp, bool) {
	if o == nil || isNil(o.Arp) {
		return nil, false
	}
	return o.Arp, true
}

// HasArp returns a boolean if a field has been set.
func (o *VplmnQos) HasArp() bool {
	if o != nil && !isNil(o.Arp) {
		return true
	}

	return false
}

// SetArp gets a reference to the given Arp and assigns it to the Arp field.
func (o *VplmnQos) SetArp(v Arp) {
	o.Arp = &v
}

// GetSessionAmbr returns the SessionAmbr field value if set, zero value otherwise.
func (o *VplmnQos) GetSessionAmbr() Ambr {
	if o == nil || isNil(o.SessionAmbr) {
		var ret Ambr
		return ret
	}
	return *o.SessionAmbr
}

// GetSessionAmbrOk returns a tuple with the SessionAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetSessionAmbrOk() (*Ambr, bool) {
	if o == nil || isNil(o.SessionAmbr) {
		return nil, false
	}
	return o.SessionAmbr, true
}

// HasSessionAmbr returns a boolean if a field has been set.
func (o *VplmnQos) HasSessionAmbr() bool {
	if o != nil && !isNil(o.SessionAmbr) {
		return true
	}

	return false
}

// SetSessionAmbr gets a reference to the given Ambr and assigns it to the SessionAmbr field.
func (o *VplmnQos) SetSessionAmbr(v Ambr) {
	o.SessionAmbr = &v
}

// GetMaxFbrDl returns the MaxFbrDl field value if set, zero value otherwise.
func (o *VplmnQos) GetMaxFbrDl() string {
	if o == nil || isNil(o.MaxFbrDl) {
		var ret string
		return ret
	}
	return *o.MaxFbrDl
}

// GetMaxFbrDlOk returns a tuple with the MaxFbrDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetMaxFbrDlOk() (*string, bool) {
	if o == nil || isNil(o.MaxFbrDl) {
		return nil, false
	}
	return o.MaxFbrDl, true
}

// HasMaxFbrDl returns a boolean if a field has been set.
func (o *VplmnQos) HasMaxFbrDl() bool {
	if o != nil && !isNil(o.MaxFbrDl) {
		return true
	}

	return false
}

// SetMaxFbrDl gets a reference to the given string and assigns it to the MaxFbrDl field.
func (o *VplmnQos) SetMaxFbrDl(v string) {
	o.MaxFbrDl = &v
}

// GetMaxFbrUl returns the MaxFbrUl field value if set, zero value otherwise.
func (o *VplmnQos) GetMaxFbrUl() string {
	if o == nil || isNil(o.MaxFbrUl) {
		var ret string
		return ret
	}
	return *o.MaxFbrUl
}

// GetMaxFbrUlOk returns a tuple with the MaxFbrUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetMaxFbrUlOk() (*string, bool) {
	if o == nil || isNil(o.MaxFbrUl) {
		return nil, false
	}
	return o.MaxFbrUl, true
}

// HasMaxFbrUl returns a boolean if a field has been set.
func (o *VplmnQos) HasMaxFbrUl() bool {
	if o != nil && !isNil(o.MaxFbrUl) {
		return true
	}

	return false
}

// SetMaxFbrUl gets a reference to the given string and assigns it to the MaxFbrUl field.
func (o *VplmnQos) SetMaxFbrUl(v string) {
	o.MaxFbrUl = &v
}

// GetGuaFbrDl returns the GuaFbrDl field value if set, zero value otherwise.
func (o *VplmnQos) GetGuaFbrDl() string {
	if o == nil || isNil(o.GuaFbrDl) {
		var ret string
		return ret
	}
	return *o.GuaFbrDl
}

// GetGuaFbrDlOk returns a tuple with the GuaFbrDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetGuaFbrDlOk() (*string, bool) {
	if o == nil || isNil(o.GuaFbrDl) {
		return nil, false
	}
	return o.GuaFbrDl, true
}

// HasGuaFbrDl returns a boolean if a field has been set.
func (o *VplmnQos) HasGuaFbrDl() bool {
	if o != nil && !isNil(o.GuaFbrDl) {
		return true
	}

	return false
}

// SetGuaFbrDl gets a reference to the given string and assigns it to the GuaFbrDl field.
func (o *VplmnQos) SetGuaFbrDl(v string) {
	o.GuaFbrDl = &v
}

// GetGuaFbrUl returns the GuaFbrUl field value if set, zero value otherwise.
func (o *VplmnQos) GetGuaFbrUl() string {
	if o == nil || isNil(o.GuaFbrUl) {
		var ret string
		return ret
	}
	return *o.GuaFbrUl
}

// GetGuaFbrUlOk returns a tuple with the GuaFbrUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VplmnQos) GetGuaFbrUlOk() (*string, bool) {
	if o == nil || isNil(o.GuaFbrUl) {
		return nil, false
	}
	return o.GuaFbrUl, true
}

// HasGuaFbrUl returns a boolean if a field has been set.
func (o *VplmnQos) HasGuaFbrUl() bool {
	if o != nil && !isNil(o.GuaFbrUl) {
		return true
	}

	return false
}

// SetGuaFbrUl gets a reference to the given string and assigns it to the GuaFbrUl field.
func (o *VplmnQos) SetGuaFbrUl(v string) {
	o.GuaFbrUl = &v
}

func (o VplmnQos) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VplmnQos) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Var5qi) {
		toSerialize["5qi"] = o.Var5qi
	}
	if !isNil(o.Arp) {
		toSerialize["arp"] = o.Arp
	}
	if !isNil(o.SessionAmbr) {
		toSerialize["sessionAmbr"] = o.SessionAmbr
	}
	if !isNil(o.MaxFbrDl) {
		toSerialize["maxFbrDl"] = o.MaxFbrDl
	}
	if !isNil(o.MaxFbrUl) {
		toSerialize["maxFbrUl"] = o.MaxFbrUl
	}
	if !isNil(o.GuaFbrDl) {
		toSerialize["guaFbrDl"] = o.GuaFbrDl
	}
	if !isNil(o.GuaFbrUl) {
		toSerialize["guaFbrUl"] = o.GuaFbrUl
	}
	return toSerialize, nil
}

type NullableVplmnQos struct {
	value *VplmnQos
	isSet bool
}

func (v NullableVplmnQos) Get() *VplmnQos {
	return v.value
}

func (v *NullableVplmnQos) Set(val *VplmnQos) {
	v.value = val
	v.isSet = true
}

func (v NullableVplmnQos) IsSet() bool {
	return v.isSet
}

func (v *NullableVplmnQos) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVplmnQos(val *VplmnQos) *NullableVplmnQos {
	return &NullableVplmnQos{value: val, isSet: true}
}

func (v NullableVplmnQos) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVplmnQos) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


