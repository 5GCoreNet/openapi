/*
Nsmf_PDUSession

SMF PDU Session Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the SmContextCreateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmContextCreateData{}

// SmContextCreateData Data within Create SM Context Request
type SmContextCreateData struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501.
	Supi                *string `json:"supi,omitempty"`
	UnauthenticatedSupi *bool   `json:"unauthenticatedSupi,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.
	Pei *string `json:"pei,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	Gpsi *string `json:"gpsi,omitempty"`
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	PduSessionId *int32 `json:"pduSessionId,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	Dnn *string `json:"dnn,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	SelectedDnn *string `json:"selectedDnn,omitempty"`
	SNssai      *Snssai `json:"sNssai,omitempty"`
	HplmnSnssai *Snssai `json:"hplmnSnssai,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	ServingNfId      string           `json:"servingNfId"`
	Guami            *Guami           `json:"guami,omitempty"`
	ServiceName      *ServiceName     `json:"serviceName,omitempty"`
	ServingNetwork   PlmnIdNid        `json:"servingNetwork"`
	RequestType      *RequestType     `json:"requestType,omitempty"`
	N1SmMsg          *RefToBinaryData `json:"n1SmMsg,omitempty"`
	AnType           AccessType       `json:"anType"`
	AdditionalAnType *AccessType      `json:"additionalAnType,omitempty"`
	RatType          *RatType         `json:"ratType,omitempty"`
	PresenceInLadn   *PresenceState   `json:"presenceInLadn,omitempty"`
	UeLocation       *UserLocation    `json:"ueLocation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
	UeTimeZone    *string       `json:"ueTimeZone,omitempty"`
	AddUeLocation *UserLocation `json:"addUeLocation,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SmContextStatusUri string `json:"smContextStatusUri"`
	// String providing an URI formatted according to RFC 3986.
	HSmfUri *string `json:"hSmfUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	HSmfId *string `json:"hSmfId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SmfUri *string `json:"smfUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	SmfId             *string  `json:"smfId,omitempty"`
	AdditionalHsmfUri []string `json:"additionalHsmfUri,omitempty"`
	AdditionalHsmfId  []string `json:"additionalHsmfId,omitempty"`
	AdditionalSmfUri  []string `json:"additionalSmfUri,omitempty"`
	AdditionalSmfId   []string `json:"additionalSmfId,omitempty"`
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	OldPduSessionId         *int32  `json:"oldPduSessionId,omitempty"`
	PduSessionsActivateList []int32 `json:"pduSessionsActivateList,omitempty"`
	// UE EPS PDN Connection container from SMF to AMF
	UeEpsPdnConnection *string  `json:"ueEpsPdnConnection,omitempty"`
	HoState            *HoState `json:"hoState,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	PcfId *string `json:"pcfId,omitempty"`
	// Identifier of a group of NFs.
	PcfGroupId *string `json:"pcfGroupId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	PcfSetId *string `json:"pcfSetId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfUri *string `json:"nrfUri,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string           `json:"supportedFeatures,omitempty"`
	SelMode           *DnnSelectionMode `json:"selMode,omitempty"`
	BackupAmfInfo     []BackupAmfInfo   `json:"backupAmfInfo,omitempty"`
	TraceData         NullableTraceData `json:"traceData,omitempty"`
	// Identifier of a group of NFs.
	UdmGroupId             *string                    `json:"udmGroupId,omitempty"`
	RoutingIndicator       *string                    `json:"routingIndicator,omitempty"`
	HNwPubKeyId            *int32                     `json:"hNwPubKeyId,omitempty"`
	EpsInterworkingInd     *EpsInterworkingIndication `json:"epsInterworkingInd,omitempty"`
	IndirectForwardingFlag *bool                      `json:"indirectForwardingFlag,omitempty"`
	DirectForwardingFlag   *bool                      `json:"directForwardingFlag,omitempty"`
	TargetId               *NgRanTargetId             `json:"targetId,omitempty"`
	// EPS bearer context status
	EpsBearerCtxStatus *string          `json:"epsBearerCtxStatus,omitempty"`
	CpCiotEnabled      *bool            `json:"cpCiotEnabled,omitempty"`
	CpOnlyInd          *bool            `json:"cpOnlyInd,omitempty"`
	InvokeNef          *bool            `json:"invokeNef,omitempty"`
	MaRequestInd       *bool            `json:"maRequestInd,omitempty"`
	MaNwUpgradeInd     *bool            `json:"maNwUpgradeInd,omitempty"`
	N2SmInfo           *RefToBinaryData `json:"n2SmInfo,omitempty"`
	N2SmInfoType       *N2SmInfoType    `json:"n2SmInfoType,omitempty"`
	N2SmInfoExt1       *RefToBinaryData `json:"n2SmInfoExt1,omitempty"`
	N2SmInfoTypeExt1   *N2SmInfoType    `json:"n2SmInfoTypeExt1,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SmContextRef       *string    `json:"smContextRef,omitempty"`
	SmContextSmfPlmnId *PlmnIdNid `json:"smContextSmfPlmnId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	SmContextSmfId *string `json:"smContextSmfId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	SmContextSmfSetId *string `json:"smContextSmfSetId,omitempty"`
	// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NID> encoded as defined in clause 5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic    characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end    with either an alphabetic character or a digit.
	SmContextSmfServiceSetId *string              `json:"smContextSmfServiceSetId,omitempty"`
	SmContextSmfBinding      *SbiBindingLevel     `json:"smContextSmfBinding,omitempty"`
	UpCnxState               *UpCnxState          `json:"upCnxState,omitempty"`
	SmallDataRateStatus      *SmallDataRateStatus `json:"smallDataRateStatus,omitempty"`
	ApnRateStatus            *ApnRateStatus       `json:"apnRateStatus,omitempty"`
	ExtendedNasSmTimerInd    *bool                `json:"extendedNasSmTimerInd,omitempty"`
	DlDataWaitingInd         *bool                `json:"dlDataWaitingInd,omitempty"`
	DdnFailureSubs           *DdnFailureSubs      `json:"ddnFailureSubs,omitempty"`
	SmfTransferInd           *bool                `json:"smfTransferInd,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	OldSmfId *string `json:"oldSmfId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	OldSmContextRef     *string   `json:"oldSmContextRef,omitempty"`
	WAgfInfo            *WAgfInfo `json:"wAgfInfo,omitempty"`
	TngfInfo            *TngfInfo `json:"tngfInfo,omitempty"`
	TwifInfo            *TwifInfo `json:"twifInfo,omitempty"`
	RanUnchangedInd     *bool     `json:"ranUnchangedInd,omitempty"`
	SamePcfSelectionInd *bool     `json:"samePcfSelectionInd,omitempty"`
	// DNAI (Data network access identifier), see clause 5.6.7 of 3GPP TS 23.501.
	TargetDnai *string `json:"targetDnai,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfManagementUri *string `json:"nrfManagementUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfDiscoveryUri *string `json:"nrfDiscoveryUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NrfAccessTokenUri *string `json:"nrfAccessTokenUri,omitempty"`
	// Map indicating whether the NRF requires Oauth2-based authorization for accessing its services. The key of the map shall be the name of an NRF service, e.g. \"nnrf-nfm\" or \"nnrf-disc\"
	NrfOauth2Required *map[string]bool       `json:"nrfOauth2Required,omitempty"`
	SmfBindingInfo    *string                `json:"smfBindingInfo,omitempty"`
	PvsInfo           []ServerAddressingInfo `json:"pvsInfo,omitempty"`
	OnboardingInd     *bool                  `json:"onboardingInd,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	OldPduSessionRef           *string                    `json:"oldPduSessionRef,omitempty"`
	SmPolicyNotifyInd          *bool                      `json:"smPolicyNotifyInd,omitempty"`
	PcfUeCallbackInfo          NullablePcfUeCallbackInfo  `json:"pcfUeCallbackInfo,omitempty"`
	SatelliteBackhaulCat       *SatelliteBackhaulCategory `json:"satelliteBackhaulCat,omitempty"`
	UpipSupported              *bool                      `json:"upipSupported,omitempty"`
	UavAuthenticated           *bool                      `json:"uavAuthenticated,omitempty"`
	DisasterRoamingInd         *bool                      `json:"disasterRoamingInd,omitempty"`
	AnchorSmfOauth2Required    *bool                      `json:"anchorSmfOauth2Required,omitempty"`
	SmContextSmfOauth2Required *bool                      `json:"smContextSmfOauth2Required,omitempty"`
}

// NewSmContextCreateData instantiates a new SmContextCreateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmContextCreateData(servingNfId string, servingNetwork PlmnIdNid, anType AccessType, smContextStatusUri string) *SmContextCreateData {
	this := SmContextCreateData{}
	var unauthenticatedSupi bool = false
	this.UnauthenticatedSupi = &unauthenticatedSupi
	this.ServingNfId = servingNfId
	this.ServingNetwork = servingNetwork
	this.AnType = anType
	this.SmContextStatusUri = smContextStatusUri
	var cpCiotEnabled bool = false
	this.CpCiotEnabled = &cpCiotEnabled
	var cpOnlyInd bool = false
	this.CpOnlyInd = &cpOnlyInd
	var invokeNef bool = false
	this.InvokeNef = &invokeNef
	var maRequestInd bool = false
	this.MaRequestInd = &maRequestInd
	var maNwUpgradeInd bool = false
	this.MaNwUpgradeInd = &maNwUpgradeInd
	var extendedNasSmTimerInd bool = false
	this.ExtendedNasSmTimerInd = &extendedNasSmTimerInd
	var dlDataWaitingInd bool = false
	this.DlDataWaitingInd = &dlDataWaitingInd
	var smfTransferInd bool = false
	this.SmfTransferInd = &smfTransferInd
	var samePcfSelectionInd bool = false
	this.SamePcfSelectionInd = &samePcfSelectionInd
	var onboardingInd bool = false
	this.OnboardingInd = &onboardingInd
	var smPolicyNotifyInd bool = false
	this.SmPolicyNotifyInd = &smPolicyNotifyInd
	var upipSupported bool = false
	this.UpipSupported = &upipSupported
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	return &this
}

// NewSmContextCreateDataWithDefaults instantiates a new SmContextCreateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmContextCreateDataWithDefaults() *SmContextCreateData {
	this := SmContextCreateData{}
	var unauthenticatedSupi bool = false
	this.UnauthenticatedSupi = &unauthenticatedSupi
	var cpCiotEnabled bool = false
	this.CpCiotEnabled = &cpCiotEnabled
	var cpOnlyInd bool = false
	this.CpOnlyInd = &cpOnlyInd
	var invokeNef bool = false
	this.InvokeNef = &invokeNef
	var maRequestInd bool = false
	this.MaRequestInd = &maRequestInd
	var maNwUpgradeInd bool = false
	this.MaNwUpgradeInd = &maNwUpgradeInd
	var extendedNasSmTimerInd bool = false
	this.ExtendedNasSmTimerInd = &extendedNasSmTimerInd
	var dlDataWaitingInd bool = false
	this.DlDataWaitingInd = &dlDataWaitingInd
	var smfTransferInd bool = false
	this.SmfTransferInd = &smfTransferInd
	var samePcfSelectionInd bool = false
	this.SamePcfSelectionInd = &samePcfSelectionInd
	var onboardingInd bool = false
	this.OnboardingInd = &onboardingInd
	var smPolicyNotifyInd bool = false
	this.SmPolicyNotifyInd = &smPolicyNotifyInd
	var upipSupported bool = false
	this.UpipSupported = &upipSupported
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	return &this
}

// GetSupi returns the Supi field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSupi() string {
	if o == nil || IsNil(o.Supi) {
		var ret string
		return ret
	}
	return *o.Supi
}

// GetSupiOk returns a tuple with the Supi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSupiOk() (*string, bool) {
	if o == nil || IsNil(o.Supi) {
		return nil, false
	}
	return o.Supi, true
}

// HasSupi returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSupi() bool {
	if o != nil && !IsNil(o.Supi) {
		return true
	}

	return false
}

// SetSupi gets a reference to the given string and assigns it to the Supi field.
func (o *SmContextCreateData) SetSupi(v string) {
	o.Supi = &v
}

// GetUnauthenticatedSupi returns the UnauthenticatedSupi field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUnauthenticatedSupi() bool {
	if o == nil || IsNil(o.UnauthenticatedSupi) {
		var ret bool
		return ret
	}
	return *o.UnauthenticatedSupi
}

// GetUnauthenticatedSupiOk returns a tuple with the UnauthenticatedSupi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUnauthenticatedSupiOk() (*bool, bool) {
	if o == nil || IsNil(o.UnauthenticatedSupi) {
		return nil, false
	}
	return o.UnauthenticatedSupi, true
}

// HasUnauthenticatedSupi returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUnauthenticatedSupi() bool {
	if o != nil && !IsNil(o.UnauthenticatedSupi) {
		return true
	}

	return false
}

// SetUnauthenticatedSupi gets a reference to the given bool and assigns it to the UnauthenticatedSupi field.
func (o *SmContextCreateData) SetUnauthenticatedSupi(v bool) {
	o.UnauthenticatedSupi = &v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPei() string {
	if o == nil || IsNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPeiOk() (*string, bool) {
	if o == nil || IsNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPei() bool {
	if o != nil && !IsNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *SmContextCreateData) SetPei(v string) {
	o.Pei = &v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *SmContextCreateData) GetGpsi() string {
	if o == nil || IsNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetGpsiOk() (*string, bool) {
	if o == nil || IsNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *SmContextCreateData) HasGpsi() bool {
	if o != nil && !IsNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *SmContextCreateData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetPduSessionId returns the PduSessionId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPduSessionId() int32 {
	if o == nil || IsNil(o.PduSessionId) {
		var ret int32
		return ret
	}
	return *o.PduSessionId
}

// GetPduSessionIdOk returns a tuple with the PduSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPduSessionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.PduSessionId) {
		return nil, false
	}
	return o.PduSessionId, true
}

// HasPduSessionId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPduSessionId() bool {
	if o != nil && !IsNil(o.PduSessionId) {
		return true
	}

	return false
}

// SetPduSessionId gets a reference to the given int32 and assigns it to the PduSessionId field.
func (o *SmContextCreateData) SetPduSessionId(v int32) {
	o.PduSessionId = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *SmContextCreateData) GetDnn() string {
	if o == nil || IsNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetDnnOk() (*string, bool) {
	if o == nil || IsNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *SmContextCreateData) HasDnn() bool {
	if o != nil && !IsNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *SmContextCreateData) SetDnn(v string) {
	o.Dnn = &v
}

// GetSelectedDnn returns the SelectedDnn field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSelectedDnn() string {
	if o == nil || IsNil(o.SelectedDnn) {
		var ret string
		return ret
	}
	return *o.SelectedDnn
}

// GetSelectedDnnOk returns a tuple with the SelectedDnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSelectedDnnOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedDnn) {
		return nil, false
	}
	return o.SelectedDnn, true
}

// HasSelectedDnn returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSelectedDnn() bool {
	if o != nil && !IsNil(o.SelectedDnn) {
		return true
	}

	return false
}

// SetSelectedDnn gets a reference to the given string and assigns it to the SelectedDnn field.
func (o *SmContextCreateData) SetSelectedDnn(v string) {
	o.SelectedDnn = &v
}

// GetSNssai returns the SNssai field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSNssai() Snssai {
	if o == nil || IsNil(o.SNssai) {
		var ret Snssai
		return ret
	}
	return *o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSNssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.SNssai) {
		return nil, false
	}
	return o.SNssai, true
}

// HasSNssai returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSNssai() bool {
	if o != nil && !IsNil(o.SNssai) {
		return true
	}

	return false
}

// SetSNssai gets a reference to the given Snssai and assigns it to the SNssai field.
func (o *SmContextCreateData) SetSNssai(v Snssai) {
	o.SNssai = &v
}

// GetHplmnSnssai returns the HplmnSnssai field value if set, zero value otherwise.
func (o *SmContextCreateData) GetHplmnSnssai() Snssai {
	if o == nil || IsNil(o.HplmnSnssai) {
		var ret Snssai
		return ret
	}
	return *o.HplmnSnssai
}

// GetHplmnSnssaiOk returns a tuple with the HplmnSnssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetHplmnSnssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.HplmnSnssai) {
		return nil, false
	}
	return o.HplmnSnssai, true
}

// HasHplmnSnssai returns a boolean if a field has been set.
func (o *SmContextCreateData) HasHplmnSnssai() bool {
	if o != nil && !IsNil(o.HplmnSnssai) {
		return true
	}

	return false
}

// SetHplmnSnssai gets a reference to the given Snssai and assigns it to the HplmnSnssai field.
func (o *SmContextCreateData) SetHplmnSnssai(v Snssai) {
	o.HplmnSnssai = &v
}

// GetServingNfId returns the ServingNfId field value
func (o *SmContextCreateData) GetServingNfId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServingNfId
}

// GetServingNfIdOk returns a tuple with the ServingNfId field value
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetServingNfIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingNfId, true
}

// SetServingNfId sets field value
func (o *SmContextCreateData) SetServingNfId(v string) {
	o.ServingNfId = v
}

// GetGuami returns the Guami field value if set, zero value otherwise.
func (o *SmContextCreateData) GetGuami() Guami {
	if o == nil || IsNil(o.Guami) {
		var ret Guami
		return ret
	}
	return *o.Guami
}

// GetGuamiOk returns a tuple with the Guami field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetGuamiOk() (*Guami, bool) {
	if o == nil || IsNil(o.Guami) {
		return nil, false
	}
	return o.Guami, true
}

// HasGuami returns a boolean if a field has been set.
func (o *SmContextCreateData) HasGuami() bool {
	if o != nil && !IsNil(o.Guami) {
		return true
	}

	return false
}

// SetGuami gets a reference to the given Guami and assigns it to the Guami field.
func (o *SmContextCreateData) SetGuami(v Guami) {
	o.Guami = &v
}

// GetServiceName returns the ServiceName field value if set, zero value otherwise.
func (o *SmContextCreateData) GetServiceName() ServiceName {
	if o == nil || IsNil(o.ServiceName) {
		var ret ServiceName
		return ret
	}
	return *o.ServiceName
}

// GetServiceNameOk returns a tuple with the ServiceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetServiceNameOk() (*ServiceName, bool) {
	if o == nil || IsNil(o.ServiceName) {
		return nil, false
	}
	return o.ServiceName, true
}

// HasServiceName returns a boolean if a field has been set.
func (o *SmContextCreateData) HasServiceName() bool {
	if o != nil && !IsNil(o.ServiceName) {
		return true
	}

	return false
}

// SetServiceName gets a reference to the given ServiceName and assigns it to the ServiceName field.
func (o *SmContextCreateData) SetServiceName(v ServiceName) {
	o.ServiceName = &v
}

// GetServingNetwork returns the ServingNetwork field value
func (o *SmContextCreateData) GetServingNetwork() PlmnIdNid {
	if o == nil {
		var ret PlmnIdNid
		return ret
	}

	return o.ServingNetwork
}

// GetServingNetworkOk returns a tuple with the ServingNetwork field value
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetServingNetworkOk() (*PlmnIdNid, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingNetwork, true
}

// SetServingNetwork sets field value
func (o *SmContextCreateData) SetServingNetwork(v PlmnIdNid) {
	o.ServingNetwork = v
}

// GetRequestType returns the RequestType field value if set, zero value otherwise.
func (o *SmContextCreateData) GetRequestType() RequestType {
	if o == nil || IsNil(o.RequestType) {
		var ret RequestType
		return ret
	}
	return *o.RequestType
}

// GetRequestTypeOk returns a tuple with the RequestType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetRequestTypeOk() (*RequestType, bool) {
	if o == nil || IsNil(o.RequestType) {
		return nil, false
	}
	return o.RequestType, true
}

// HasRequestType returns a boolean if a field has been set.
func (o *SmContextCreateData) HasRequestType() bool {
	if o != nil && !IsNil(o.RequestType) {
		return true
	}

	return false
}

// SetRequestType gets a reference to the given RequestType and assigns it to the RequestType field.
func (o *SmContextCreateData) SetRequestType(v RequestType) {
	o.RequestType = &v
}

// GetN1SmMsg returns the N1SmMsg field value if set, zero value otherwise.
func (o *SmContextCreateData) GetN1SmMsg() RefToBinaryData {
	if o == nil || IsNil(o.N1SmMsg) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N1SmMsg
}

// GetN1SmMsgOk returns a tuple with the N1SmMsg field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetN1SmMsgOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N1SmMsg) {
		return nil, false
	}
	return o.N1SmMsg, true
}

// HasN1SmMsg returns a boolean if a field has been set.
func (o *SmContextCreateData) HasN1SmMsg() bool {
	if o != nil && !IsNil(o.N1SmMsg) {
		return true
	}

	return false
}

// SetN1SmMsg gets a reference to the given RefToBinaryData and assigns it to the N1SmMsg field.
func (o *SmContextCreateData) SetN1SmMsg(v RefToBinaryData) {
	o.N1SmMsg = &v
}

// GetAnType returns the AnType field value
func (o *SmContextCreateData) GetAnType() AccessType {
	if o == nil {
		var ret AccessType
		return ret
	}

	return o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAnTypeOk() (*AccessType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnType, true
}

// SetAnType sets field value
func (o *SmContextCreateData) SetAnType(v AccessType) {
	o.AnType = v
}

// GetAdditionalAnType returns the AdditionalAnType field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAdditionalAnType() AccessType {
	if o == nil || IsNil(o.AdditionalAnType) {
		var ret AccessType
		return ret
	}
	return *o.AdditionalAnType
}

// GetAdditionalAnTypeOk returns a tuple with the AdditionalAnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAdditionalAnTypeOk() (*AccessType, bool) {
	if o == nil || IsNil(o.AdditionalAnType) {
		return nil, false
	}
	return o.AdditionalAnType, true
}

// HasAdditionalAnType returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAdditionalAnType() bool {
	if o != nil && !IsNil(o.AdditionalAnType) {
		return true
	}

	return false
}

// SetAdditionalAnType gets a reference to the given AccessType and assigns it to the AdditionalAnType field.
func (o *SmContextCreateData) SetAdditionalAnType(v AccessType) {
	o.AdditionalAnType = &v
}

// GetRatType returns the RatType field value if set, zero value otherwise.
func (o *SmContextCreateData) GetRatType() RatType {
	if o == nil || IsNil(o.RatType) {
		var ret RatType
		return ret
	}
	return *o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetRatTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RatType) {
		return nil, false
	}
	return o.RatType, true
}

// HasRatType returns a boolean if a field has been set.
func (o *SmContextCreateData) HasRatType() bool {
	if o != nil && !IsNil(o.RatType) {
		return true
	}

	return false
}

// SetRatType gets a reference to the given RatType and assigns it to the RatType field.
func (o *SmContextCreateData) SetRatType(v RatType) {
	o.RatType = &v
}

// GetPresenceInLadn returns the PresenceInLadn field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPresenceInLadn() PresenceState {
	if o == nil || IsNil(o.PresenceInLadn) {
		var ret PresenceState
		return ret
	}
	return *o.PresenceInLadn
}

// GetPresenceInLadnOk returns a tuple with the PresenceInLadn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPresenceInLadnOk() (*PresenceState, bool) {
	if o == nil || IsNil(o.PresenceInLadn) {
		return nil, false
	}
	return o.PresenceInLadn, true
}

// HasPresenceInLadn returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPresenceInLadn() bool {
	if o != nil && !IsNil(o.PresenceInLadn) {
		return true
	}

	return false
}

// SetPresenceInLadn gets a reference to the given PresenceState and assigns it to the PresenceInLadn field.
func (o *SmContextCreateData) SetPresenceInLadn(v PresenceState) {
	o.PresenceInLadn = &v
}

// GetUeLocation returns the UeLocation field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUeLocation() UserLocation {
	if o == nil || IsNil(o.UeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.UeLocation
}

// GetUeLocationOk returns a tuple with the UeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUeLocationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UeLocation) {
		return nil, false
	}
	return o.UeLocation, true
}

// HasUeLocation returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUeLocation() bool {
	if o != nil && !IsNil(o.UeLocation) {
		return true
	}

	return false
}

// SetUeLocation gets a reference to the given UserLocation and assigns it to the UeLocation field.
func (o *SmContextCreateData) SetUeLocation(v UserLocation) {
	o.UeLocation = &v
}

// GetUeTimeZone returns the UeTimeZone field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUeTimeZone() string {
	if o == nil || IsNil(o.UeTimeZone) {
		var ret string
		return ret
	}
	return *o.UeTimeZone
}

// GetUeTimeZoneOk returns a tuple with the UeTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUeTimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UeTimeZone) {
		return nil, false
	}
	return o.UeTimeZone, true
}

// HasUeTimeZone returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUeTimeZone() bool {
	if o != nil && !IsNil(o.UeTimeZone) {
		return true
	}

	return false
}

// SetUeTimeZone gets a reference to the given string and assigns it to the UeTimeZone field.
func (o *SmContextCreateData) SetUeTimeZone(v string) {
	o.UeTimeZone = &v
}

// GetAddUeLocation returns the AddUeLocation field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAddUeLocation() UserLocation {
	if o == nil || IsNil(o.AddUeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.AddUeLocation
}

// GetAddUeLocationOk returns a tuple with the AddUeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAddUeLocationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.AddUeLocation) {
		return nil, false
	}
	return o.AddUeLocation, true
}

// HasAddUeLocation returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAddUeLocation() bool {
	if o != nil && !IsNil(o.AddUeLocation) {
		return true
	}

	return false
}

// SetAddUeLocation gets a reference to the given UserLocation and assigns it to the AddUeLocation field.
func (o *SmContextCreateData) SetAddUeLocation(v UserLocation) {
	o.AddUeLocation = &v
}

// GetSmContextStatusUri returns the SmContextStatusUri field value
func (o *SmContextCreateData) GetSmContextStatusUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SmContextStatusUri
}

// GetSmContextStatusUriOk returns a tuple with the SmContextStatusUri field value
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextStatusUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SmContextStatusUri, true
}

// SetSmContextStatusUri sets field value
func (o *SmContextCreateData) SetSmContextStatusUri(v string) {
	o.SmContextStatusUri = v
}

// GetHSmfUri returns the HSmfUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetHSmfUri() string {
	if o == nil || IsNil(o.HSmfUri) {
		var ret string
		return ret
	}
	return *o.HSmfUri
}

// GetHSmfUriOk returns a tuple with the HSmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetHSmfUriOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfUri) {
		return nil, false
	}
	return o.HSmfUri, true
}

// HasHSmfUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasHSmfUri() bool {
	if o != nil && !IsNil(o.HSmfUri) {
		return true
	}

	return false
}

// SetHSmfUri gets a reference to the given string and assigns it to the HSmfUri field.
func (o *SmContextCreateData) SetHSmfUri(v string) {
	o.HSmfUri = &v
}

// GetHSmfId returns the HSmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetHSmfId() string {
	if o == nil || IsNil(o.HSmfId) {
		var ret string
		return ret
	}
	return *o.HSmfId
}

// GetHSmfIdOk returns a tuple with the HSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetHSmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfId) {
		return nil, false
	}
	return o.HSmfId, true
}

// HasHSmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasHSmfId() bool {
	if o != nil && !IsNil(o.HSmfId) {
		return true
	}

	return false
}

// SetHSmfId gets a reference to the given string and assigns it to the HSmfId field.
func (o *SmContextCreateData) SetHSmfId(v string) {
	o.HSmfId = &v
}

// GetSmfUri returns the SmfUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmfUri() string {
	if o == nil || IsNil(o.SmfUri) {
		var ret string
		return ret
	}
	return *o.SmfUri
}

// GetSmfUriOk returns a tuple with the SmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmfUriOk() (*string, bool) {
	if o == nil || IsNil(o.SmfUri) {
		return nil, false
	}
	return o.SmfUri, true
}

// HasSmfUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmfUri() bool {
	if o != nil && !IsNil(o.SmfUri) {
		return true
	}

	return false
}

// SetSmfUri gets a reference to the given string and assigns it to the SmfUri field.
func (o *SmContextCreateData) SetSmfUri(v string) {
	o.SmfUri = &v
}

// GetSmfId returns the SmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmfId() string {
	if o == nil || IsNil(o.SmfId) {
		var ret string
		return ret
	}
	return *o.SmfId
}

// GetSmfIdOk returns a tuple with the SmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmfId) {
		return nil, false
	}
	return o.SmfId, true
}

// HasSmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmfId() bool {
	if o != nil && !IsNil(o.SmfId) {
		return true
	}

	return false
}

// SetSmfId gets a reference to the given string and assigns it to the SmfId field.
func (o *SmContextCreateData) SetSmfId(v string) {
	o.SmfId = &v
}

// GetAdditionalHsmfUri returns the AdditionalHsmfUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAdditionalHsmfUri() []string {
	if o == nil || IsNil(o.AdditionalHsmfUri) {
		var ret []string
		return ret
	}
	return o.AdditionalHsmfUri
}

// GetAdditionalHsmfUriOk returns a tuple with the AdditionalHsmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAdditionalHsmfUriOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalHsmfUri) {
		return nil, false
	}
	return o.AdditionalHsmfUri, true
}

// HasAdditionalHsmfUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAdditionalHsmfUri() bool {
	if o != nil && !IsNil(o.AdditionalHsmfUri) {
		return true
	}

	return false
}

// SetAdditionalHsmfUri gets a reference to the given []string and assigns it to the AdditionalHsmfUri field.
func (o *SmContextCreateData) SetAdditionalHsmfUri(v []string) {
	o.AdditionalHsmfUri = v
}

// GetAdditionalHsmfId returns the AdditionalHsmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAdditionalHsmfId() []string {
	if o == nil || IsNil(o.AdditionalHsmfId) {
		var ret []string
		return ret
	}
	return o.AdditionalHsmfId
}

// GetAdditionalHsmfIdOk returns a tuple with the AdditionalHsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAdditionalHsmfIdOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalHsmfId) {
		return nil, false
	}
	return o.AdditionalHsmfId, true
}

// HasAdditionalHsmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAdditionalHsmfId() bool {
	if o != nil && !IsNil(o.AdditionalHsmfId) {
		return true
	}

	return false
}

// SetAdditionalHsmfId gets a reference to the given []string and assigns it to the AdditionalHsmfId field.
func (o *SmContextCreateData) SetAdditionalHsmfId(v []string) {
	o.AdditionalHsmfId = v
}

// GetAdditionalSmfUri returns the AdditionalSmfUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAdditionalSmfUri() []string {
	if o == nil || IsNil(o.AdditionalSmfUri) {
		var ret []string
		return ret
	}
	return o.AdditionalSmfUri
}

// GetAdditionalSmfUriOk returns a tuple with the AdditionalSmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAdditionalSmfUriOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalSmfUri) {
		return nil, false
	}
	return o.AdditionalSmfUri, true
}

// HasAdditionalSmfUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAdditionalSmfUri() bool {
	if o != nil && !IsNil(o.AdditionalSmfUri) {
		return true
	}

	return false
}

// SetAdditionalSmfUri gets a reference to the given []string and assigns it to the AdditionalSmfUri field.
func (o *SmContextCreateData) SetAdditionalSmfUri(v []string) {
	o.AdditionalSmfUri = v
}

// GetAdditionalSmfId returns the AdditionalSmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAdditionalSmfId() []string {
	if o == nil || IsNil(o.AdditionalSmfId) {
		var ret []string
		return ret
	}
	return o.AdditionalSmfId
}

// GetAdditionalSmfIdOk returns a tuple with the AdditionalSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAdditionalSmfIdOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalSmfId) {
		return nil, false
	}
	return o.AdditionalSmfId, true
}

// HasAdditionalSmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAdditionalSmfId() bool {
	if o != nil && !IsNil(o.AdditionalSmfId) {
		return true
	}

	return false
}

// SetAdditionalSmfId gets a reference to the given []string and assigns it to the AdditionalSmfId field.
func (o *SmContextCreateData) SetAdditionalSmfId(v []string) {
	o.AdditionalSmfId = v
}

// GetOldPduSessionId returns the OldPduSessionId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetOldPduSessionId() int32 {
	if o == nil || IsNil(o.OldPduSessionId) {
		var ret int32
		return ret
	}
	return *o.OldPduSessionId
}

// GetOldPduSessionIdOk returns a tuple with the OldPduSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetOldPduSessionIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OldPduSessionId) {
		return nil, false
	}
	return o.OldPduSessionId, true
}

// HasOldPduSessionId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasOldPduSessionId() bool {
	if o != nil && !IsNil(o.OldPduSessionId) {
		return true
	}

	return false
}

// SetOldPduSessionId gets a reference to the given int32 and assigns it to the OldPduSessionId field.
func (o *SmContextCreateData) SetOldPduSessionId(v int32) {
	o.OldPduSessionId = &v
}

// GetPduSessionsActivateList returns the PduSessionsActivateList field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPduSessionsActivateList() []int32 {
	if o == nil || IsNil(o.PduSessionsActivateList) {
		var ret []int32
		return ret
	}
	return o.PduSessionsActivateList
}

// GetPduSessionsActivateListOk returns a tuple with the PduSessionsActivateList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPduSessionsActivateListOk() ([]int32, bool) {
	if o == nil || IsNil(o.PduSessionsActivateList) {
		return nil, false
	}
	return o.PduSessionsActivateList, true
}

// HasPduSessionsActivateList returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPduSessionsActivateList() bool {
	if o != nil && !IsNil(o.PduSessionsActivateList) {
		return true
	}

	return false
}

// SetPduSessionsActivateList gets a reference to the given []int32 and assigns it to the PduSessionsActivateList field.
func (o *SmContextCreateData) SetPduSessionsActivateList(v []int32) {
	o.PduSessionsActivateList = v
}

// GetUeEpsPdnConnection returns the UeEpsPdnConnection field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUeEpsPdnConnection() string {
	if o == nil || IsNil(o.UeEpsPdnConnection) {
		var ret string
		return ret
	}
	return *o.UeEpsPdnConnection
}

// GetUeEpsPdnConnectionOk returns a tuple with the UeEpsPdnConnection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUeEpsPdnConnectionOk() (*string, bool) {
	if o == nil || IsNil(o.UeEpsPdnConnection) {
		return nil, false
	}
	return o.UeEpsPdnConnection, true
}

// HasUeEpsPdnConnection returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUeEpsPdnConnection() bool {
	if o != nil && !IsNil(o.UeEpsPdnConnection) {
		return true
	}

	return false
}

// SetUeEpsPdnConnection gets a reference to the given string and assigns it to the UeEpsPdnConnection field.
func (o *SmContextCreateData) SetUeEpsPdnConnection(v string) {
	o.UeEpsPdnConnection = &v
}

// GetHoState returns the HoState field value if set, zero value otherwise.
func (o *SmContextCreateData) GetHoState() HoState {
	if o == nil || IsNil(o.HoState) {
		var ret HoState
		return ret
	}
	return *o.HoState
}

// GetHoStateOk returns a tuple with the HoState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetHoStateOk() (*HoState, bool) {
	if o == nil || IsNil(o.HoState) {
		return nil, false
	}
	return o.HoState, true
}

// HasHoState returns a boolean if a field has been set.
func (o *SmContextCreateData) HasHoState() bool {
	if o != nil && !IsNil(o.HoState) {
		return true
	}

	return false
}

// SetHoState gets a reference to the given HoState and assigns it to the HoState field.
func (o *SmContextCreateData) SetHoState(v HoState) {
	o.HoState = &v
}

// GetPcfId returns the PcfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPcfId() string {
	if o == nil || IsNil(o.PcfId) {
		var ret string
		return ret
	}
	return *o.PcfId
}

// GetPcfIdOk returns a tuple with the PcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPcfIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfId) {
		return nil, false
	}
	return o.PcfId, true
}

// HasPcfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPcfId() bool {
	if o != nil && !IsNil(o.PcfId) {
		return true
	}

	return false
}

// SetPcfId gets a reference to the given string and assigns it to the PcfId field.
func (o *SmContextCreateData) SetPcfId(v string) {
	o.PcfId = &v
}

// GetPcfGroupId returns the PcfGroupId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPcfGroupId() string {
	if o == nil || IsNil(o.PcfGroupId) {
		var ret string
		return ret
	}
	return *o.PcfGroupId
}

// GetPcfGroupIdOk returns a tuple with the PcfGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPcfGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfGroupId) {
		return nil, false
	}
	return o.PcfGroupId, true
}

// HasPcfGroupId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPcfGroupId() bool {
	if o != nil && !IsNil(o.PcfGroupId) {
		return true
	}

	return false
}

// SetPcfGroupId gets a reference to the given string and assigns it to the PcfGroupId field.
func (o *SmContextCreateData) SetPcfGroupId(v string) {
	o.PcfGroupId = &v
}

// GetPcfSetId returns the PcfSetId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPcfSetId() string {
	if o == nil || IsNil(o.PcfSetId) {
		var ret string
		return ret
	}
	return *o.PcfSetId
}

// GetPcfSetIdOk returns a tuple with the PcfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPcfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfSetId) {
		return nil, false
	}
	return o.PcfSetId, true
}

// HasPcfSetId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPcfSetId() bool {
	if o != nil && !IsNil(o.PcfSetId) {
		return true
	}

	return false
}

// SetPcfSetId gets a reference to the given string and assigns it to the PcfSetId field.
func (o *SmContextCreateData) SetPcfSetId(v string) {
	o.PcfSetId = &v
}

// GetNrfUri returns the NrfUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetNrfUri() string {
	if o == nil || IsNil(o.NrfUri) {
		var ret string
		return ret
	}
	return *o.NrfUri
}

// GetNrfUriOk returns a tuple with the NrfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetNrfUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfUri) {
		return nil, false
	}
	return o.NrfUri, true
}

// HasNrfUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasNrfUri() bool {
	if o != nil && !IsNil(o.NrfUri) {
		return true
	}

	return false
}

// SetNrfUri gets a reference to the given string and assigns it to the NrfUri field.
func (o *SmContextCreateData) SetNrfUri(v string) {
	o.NrfUri = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *SmContextCreateData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetSelMode returns the SelMode field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSelMode() DnnSelectionMode {
	if o == nil || IsNil(o.SelMode) {
		var ret DnnSelectionMode
		return ret
	}
	return *o.SelMode
}

// GetSelModeOk returns a tuple with the SelMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSelModeOk() (*DnnSelectionMode, bool) {
	if o == nil || IsNil(o.SelMode) {
		return nil, false
	}
	return o.SelMode, true
}

// HasSelMode returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSelMode() bool {
	if o != nil && !IsNil(o.SelMode) {
		return true
	}

	return false
}

// SetSelMode gets a reference to the given DnnSelectionMode and assigns it to the SelMode field.
func (o *SmContextCreateData) SetSelMode(v DnnSelectionMode) {
	o.SelMode = &v
}

// GetBackupAmfInfo returns the BackupAmfInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetBackupAmfInfo() []BackupAmfInfo {
	if o == nil || IsNil(o.BackupAmfInfo) {
		var ret []BackupAmfInfo
		return ret
	}
	return o.BackupAmfInfo
}

// GetBackupAmfInfoOk returns a tuple with the BackupAmfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetBackupAmfInfoOk() ([]BackupAmfInfo, bool) {
	if o == nil || IsNil(o.BackupAmfInfo) {
		return nil, false
	}
	return o.BackupAmfInfo, true
}

// HasBackupAmfInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasBackupAmfInfo() bool {
	if o != nil && !IsNil(o.BackupAmfInfo) {
		return true
	}

	return false
}

// SetBackupAmfInfo gets a reference to the given []BackupAmfInfo and assigns it to the BackupAmfInfo field.
func (o *SmContextCreateData) SetBackupAmfInfo(v []BackupAmfInfo) {
	o.BackupAmfInfo = v
}

// GetTraceData returns the TraceData field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SmContextCreateData) GetTraceData() TraceData {
	if o == nil || IsNil(o.TraceData.Get()) {
		var ret TraceData
		return ret
	}
	return *o.TraceData.Get()
}

// GetTraceDataOk returns a tuple with the TraceData field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SmContextCreateData) GetTraceDataOk() (*TraceData, bool) {
	if o == nil {
		return nil, false
	}
	return o.TraceData.Get(), o.TraceData.IsSet()
}

// HasTraceData returns a boolean if a field has been set.
func (o *SmContextCreateData) HasTraceData() bool {
	if o != nil && o.TraceData.IsSet() {
		return true
	}

	return false
}

// SetTraceData gets a reference to the given NullableTraceData and assigns it to the TraceData field.
func (o *SmContextCreateData) SetTraceData(v TraceData) {
	o.TraceData.Set(&v)
}

// SetTraceDataNil sets the value for TraceData to be an explicit nil
func (o *SmContextCreateData) SetTraceDataNil() {
	o.TraceData.Set(nil)
}

// UnsetTraceData ensures that no value is present for TraceData, not even an explicit nil
func (o *SmContextCreateData) UnsetTraceData() {
	o.TraceData.Unset()
}

// GetUdmGroupId returns the UdmGroupId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUdmGroupId() string {
	if o == nil || IsNil(o.UdmGroupId) {
		var ret string
		return ret
	}
	return *o.UdmGroupId
}

// GetUdmGroupIdOk returns a tuple with the UdmGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUdmGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.UdmGroupId) {
		return nil, false
	}
	return o.UdmGroupId, true
}

// HasUdmGroupId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUdmGroupId() bool {
	if o != nil && !IsNil(o.UdmGroupId) {
		return true
	}

	return false
}

// SetUdmGroupId gets a reference to the given string and assigns it to the UdmGroupId field.
func (o *SmContextCreateData) SetUdmGroupId(v string) {
	o.UdmGroupId = &v
}

// GetRoutingIndicator returns the RoutingIndicator field value if set, zero value otherwise.
func (o *SmContextCreateData) GetRoutingIndicator() string {
	if o == nil || IsNil(o.RoutingIndicator) {
		var ret string
		return ret
	}
	return *o.RoutingIndicator
}

// GetRoutingIndicatorOk returns a tuple with the RoutingIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetRoutingIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingIndicator) {
		return nil, false
	}
	return o.RoutingIndicator, true
}

// HasRoutingIndicator returns a boolean if a field has been set.
func (o *SmContextCreateData) HasRoutingIndicator() bool {
	if o != nil && !IsNil(o.RoutingIndicator) {
		return true
	}

	return false
}

// SetRoutingIndicator gets a reference to the given string and assigns it to the RoutingIndicator field.
func (o *SmContextCreateData) SetRoutingIndicator(v string) {
	o.RoutingIndicator = &v
}

// GetHNwPubKeyId returns the HNwPubKeyId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetHNwPubKeyId() int32 {
	if o == nil || IsNil(o.HNwPubKeyId) {
		var ret int32
		return ret
	}
	return *o.HNwPubKeyId
}

// GetHNwPubKeyIdOk returns a tuple with the HNwPubKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetHNwPubKeyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HNwPubKeyId) {
		return nil, false
	}
	return o.HNwPubKeyId, true
}

// HasHNwPubKeyId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasHNwPubKeyId() bool {
	if o != nil && !IsNil(o.HNwPubKeyId) {
		return true
	}

	return false
}

// SetHNwPubKeyId gets a reference to the given int32 and assigns it to the HNwPubKeyId field.
func (o *SmContextCreateData) SetHNwPubKeyId(v int32) {
	o.HNwPubKeyId = &v
}

// GetEpsInterworkingInd returns the EpsInterworkingInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetEpsInterworkingInd() EpsInterworkingIndication {
	if o == nil || IsNil(o.EpsInterworkingInd) {
		var ret EpsInterworkingIndication
		return ret
	}
	return *o.EpsInterworkingInd
}

// GetEpsInterworkingIndOk returns a tuple with the EpsInterworkingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetEpsInterworkingIndOk() (*EpsInterworkingIndication, bool) {
	if o == nil || IsNil(o.EpsInterworkingInd) {
		return nil, false
	}
	return o.EpsInterworkingInd, true
}

// HasEpsInterworkingInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasEpsInterworkingInd() bool {
	if o != nil && !IsNil(o.EpsInterworkingInd) {
		return true
	}

	return false
}

// SetEpsInterworkingInd gets a reference to the given EpsInterworkingIndication and assigns it to the EpsInterworkingInd field.
func (o *SmContextCreateData) SetEpsInterworkingInd(v EpsInterworkingIndication) {
	o.EpsInterworkingInd = &v
}

// GetIndirectForwardingFlag returns the IndirectForwardingFlag field value if set, zero value otherwise.
func (o *SmContextCreateData) GetIndirectForwardingFlag() bool {
	if o == nil || IsNil(o.IndirectForwardingFlag) {
		var ret bool
		return ret
	}
	return *o.IndirectForwardingFlag
}

// GetIndirectForwardingFlagOk returns a tuple with the IndirectForwardingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetIndirectForwardingFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.IndirectForwardingFlag) {
		return nil, false
	}
	return o.IndirectForwardingFlag, true
}

// HasIndirectForwardingFlag returns a boolean if a field has been set.
func (o *SmContextCreateData) HasIndirectForwardingFlag() bool {
	if o != nil && !IsNil(o.IndirectForwardingFlag) {
		return true
	}

	return false
}

// SetIndirectForwardingFlag gets a reference to the given bool and assigns it to the IndirectForwardingFlag field.
func (o *SmContextCreateData) SetIndirectForwardingFlag(v bool) {
	o.IndirectForwardingFlag = &v
}

// GetDirectForwardingFlag returns the DirectForwardingFlag field value if set, zero value otherwise.
func (o *SmContextCreateData) GetDirectForwardingFlag() bool {
	if o == nil || IsNil(o.DirectForwardingFlag) {
		var ret bool
		return ret
	}
	return *o.DirectForwardingFlag
}

// GetDirectForwardingFlagOk returns a tuple with the DirectForwardingFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetDirectForwardingFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.DirectForwardingFlag) {
		return nil, false
	}
	return o.DirectForwardingFlag, true
}

// HasDirectForwardingFlag returns a boolean if a field has been set.
func (o *SmContextCreateData) HasDirectForwardingFlag() bool {
	if o != nil && !IsNil(o.DirectForwardingFlag) {
		return true
	}

	return false
}

// SetDirectForwardingFlag gets a reference to the given bool and assigns it to the DirectForwardingFlag field.
func (o *SmContextCreateData) SetDirectForwardingFlag(v bool) {
	o.DirectForwardingFlag = &v
}

// GetTargetId returns the TargetId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetTargetId() NgRanTargetId {
	if o == nil || IsNil(o.TargetId) {
		var ret NgRanTargetId
		return ret
	}
	return *o.TargetId
}

// GetTargetIdOk returns a tuple with the TargetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetTargetIdOk() (*NgRanTargetId, bool) {
	if o == nil || IsNil(o.TargetId) {
		return nil, false
	}
	return o.TargetId, true
}

// HasTargetId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasTargetId() bool {
	if o != nil && !IsNil(o.TargetId) {
		return true
	}

	return false
}

// SetTargetId gets a reference to the given NgRanTargetId and assigns it to the TargetId field.
func (o *SmContextCreateData) SetTargetId(v NgRanTargetId) {
	o.TargetId = &v
}

// GetEpsBearerCtxStatus returns the EpsBearerCtxStatus field value if set, zero value otherwise.
func (o *SmContextCreateData) GetEpsBearerCtxStatus() string {
	if o == nil || IsNil(o.EpsBearerCtxStatus) {
		var ret string
		return ret
	}
	return *o.EpsBearerCtxStatus
}

// GetEpsBearerCtxStatusOk returns a tuple with the EpsBearerCtxStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetEpsBearerCtxStatusOk() (*string, bool) {
	if o == nil || IsNil(o.EpsBearerCtxStatus) {
		return nil, false
	}
	return o.EpsBearerCtxStatus, true
}

// HasEpsBearerCtxStatus returns a boolean if a field has been set.
func (o *SmContextCreateData) HasEpsBearerCtxStatus() bool {
	if o != nil && !IsNil(o.EpsBearerCtxStatus) {
		return true
	}

	return false
}

// SetEpsBearerCtxStatus gets a reference to the given string and assigns it to the EpsBearerCtxStatus field.
func (o *SmContextCreateData) SetEpsBearerCtxStatus(v string) {
	o.EpsBearerCtxStatus = &v
}

// GetCpCiotEnabled returns the CpCiotEnabled field value if set, zero value otherwise.
func (o *SmContextCreateData) GetCpCiotEnabled() bool {
	if o == nil || IsNil(o.CpCiotEnabled) {
		var ret bool
		return ret
	}
	return *o.CpCiotEnabled
}

// GetCpCiotEnabledOk returns a tuple with the CpCiotEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetCpCiotEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.CpCiotEnabled) {
		return nil, false
	}
	return o.CpCiotEnabled, true
}

// HasCpCiotEnabled returns a boolean if a field has been set.
func (o *SmContextCreateData) HasCpCiotEnabled() bool {
	if o != nil && !IsNil(o.CpCiotEnabled) {
		return true
	}

	return false
}

// SetCpCiotEnabled gets a reference to the given bool and assigns it to the CpCiotEnabled field.
func (o *SmContextCreateData) SetCpCiotEnabled(v bool) {
	o.CpCiotEnabled = &v
}

// GetCpOnlyInd returns the CpOnlyInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetCpOnlyInd() bool {
	if o == nil || IsNil(o.CpOnlyInd) {
		var ret bool
		return ret
	}
	return *o.CpOnlyInd
}

// GetCpOnlyIndOk returns a tuple with the CpOnlyInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetCpOnlyIndOk() (*bool, bool) {
	if o == nil || IsNil(o.CpOnlyInd) {
		return nil, false
	}
	return o.CpOnlyInd, true
}

// HasCpOnlyInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasCpOnlyInd() bool {
	if o != nil && !IsNil(o.CpOnlyInd) {
		return true
	}

	return false
}

// SetCpOnlyInd gets a reference to the given bool and assigns it to the CpOnlyInd field.
func (o *SmContextCreateData) SetCpOnlyInd(v bool) {
	o.CpOnlyInd = &v
}

// GetInvokeNef returns the InvokeNef field value if set, zero value otherwise.
func (o *SmContextCreateData) GetInvokeNef() bool {
	if o == nil || IsNil(o.InvokeNef) {
		var ret bool
		return ret
	}
	return *o.InvokeNef
}

// GetInvokeNefOk returns a tuple with the InvokeNef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetInvokeNefOk() (*bool, bool) {
	if o == nil || IsNil(o.InvokeNef) {
		return nil, false
	}
	return o.InvokeNef, true
}

// HasInvokeNef returns a boolean if a field has been set.
func (o *SmContextCreateData) HasInvokeNef() bool {
	if o != nil && !IsNil(o.InvokeNef) {
		return true
	}

	return false
}

// SetInvokeNef gets a reference to the given bool and assigns it to the InvokeNef field.
func (o *SmContextCreateData) SetInvokeNef(v bool) {
	o.InvokeNef = &v
}

// GetMaRequestInd returns the MaRequestInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetMaRequestInd() bool {
	if o == nil || IsNil(o.MaRequestInd) {
		var ret bool
		return ret
	}
	return *o.MaRequestInd
}

// GetMaRequestIndOk returns a tuple with the MaRequestInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetMaRequestIndOk() (*bool, bool) {
	if o == nil || IsNil(o.MaRequestInd) {
		return nil, false
	}
	return o.MaRequestInd, true
}

// HasMaRequestInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasMaRequestInd() bool {
	if o != nil && !IsNil(o.MaRequestInd) {
		return true
	}

	return false
}

// SetMaRequestInd gets a reference to the given bool and assigns it to the MaRequestInd field.
func (o *SmContextCreateData) SetMaRequestInd(v bool) {
	o.MaRequestInd = &v
}

// GetMaNwUpgradeInd returns the MaNwUpgradeInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetMaNwUpgradeInd() bool {
	if o == nil || IsNil(o.MaNwUpgradeInd) {
		var ret bool
		return ret
	}
	return *o.MaNwUpgradeInd
}

// GetMaNwUpgradeIndOk returns a tuple with the MaNwUpgradeInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetMaNwUpgradeIndOk() (*bool, bool) {
	if o == nil || IsNil(o.MaNwUpgradeInd) {
		return nil, false
	}
	return o.MaNwUpgradeInd, true
}

// HasMaNwUpgradeInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasMaNwUpgradeInd() bool {
	if o != nil && !IsNil(o.MaNwUpgradeInd) {
		return true
	}

	return false
}

// SetMaNwUpgradeInd gets a reference to the given bool and assigns it to the MaNwUpgradeInd field.
func (o *SmContextCreateData) SetMaNwUpgradeInd(v bool) {
	o.MaNwUpgradeInd = &v
}

// GetN2SmInfo returns the N2SmInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetN2SmInfo() RefToBinaryData {
	if o == nil || IsNil(o.N2SmInfo) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N2SmInfo
}

// GetN2SmInfoOk returns a tuple with the N2SmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetN2SmInfoOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N2SmInfo) {
		return nil, false
	}
	return o.N2SmInfo, true
}

// HasN2SmInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasN2SmInfo() bool {
	if o != nil && !IsNil(o.N2SmInfo) {
		return true
	}

	return false
}

// SetN2SmInfo gets a reference to the given RefToBinaryData and assigns it to the N2SmInfo field.
func (o *SmContextCreateData) SetN2SmInfo(v RefToBinaryData) {
	o.N2SmInfo = &v
}

// GetN2SmInfoType returns the N2SmInfoType field value if set, zero value otherwise.
func (o *SmContextCreateData) GetN2SmInfoType() N2SmInfoType {
	if o == nil || IsNil(o.N2SmInfoType) {
		var ret N2SmInfoType
		return ret
	}
	return *o.N2SmInfoType
}

// GetN2SmInfoTypeOk returns a tuple with the N2SmInfoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetN2SmInfoTypeOk() (*N2SmInfoType, bool) {
	if o == nil || IsNil(o.N2SmInfoType) {
		return nil, false
	}
	return o.N2SmInfoType, true
}

// HasN2SmInfoType returns a boolean if a field has been set.
func (o *SmContextCreateData) HasN2SmInfoType() bool {
	if o != nil && !IsNil(o.N2SmInfoType) {
		return true
	}

	return false
}

// SetN2SmInfoType gets a reference to the given N2SmInfoType and assigns it to the N2SmInfoType field.
func (o *SmContextCreateData) SetN2SmInfoType(v N2SmInfoType) {
	o.N2SmInfoType = &v
}

// GetN2SmInfoExt1 returns the N2SmInfoExt1 field value if set, zero value otherwise.
func (o *SmContextCreateData) GetN2SmInfoExt1() RefToBinaryData {
	if o == nil || IsNil(o.N2SmInfoExt1) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N2SmInfoExt1
}

// GetN2SmInfoExt1Ok returns a tuple with the N2SmInfoExt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetN2SmInfoExt1Ok() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N2SmInfoExt1) {
		return nil, false
	}
	return o.N2SmInfoExt1, true
}

// HasN2SmInfoExt1 returns a boolean if a field has been set.
func (o *SmContextCreateData) HasN2SmInfoExt1() bool {
	if o != nil && !IsNil(o.N2SmInfoExt1) {
		return true
	}

	return false
}

// SetN2SmInfoExt1 gets a reference to the given RefToBinaryData and assigns it to the N2SmInfoExt1 field.
func (o *SmContextCreateData) SetN2SmInfoExt1(v RefToBinaryData) {
	o.N2SmInfoExt1 = &v
}

// GetN2SmInfoTypeExt1 returns the N2SmInfoTypeExt1 field value if set, zero value otherwise.
func (o *SmContextCreateData) GetN2SmInfoTypeExt1() N2SmInfoType {
	if o == nil || IsNil(o.N2SmInfoTypeExt1) {
		var ret N2SmInfoType
		return ret
	}
	return *o.N2SmInfoTypeExt1
}

// GetN2SmInfoTypeExt1Ok returns a tuple with the N2SmInfoTypeExt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetN2SmInfoTypeExt1Ok() (*N2SmInfoType, bool) {
	if o == nil || IsNil(o.N2SmInfoTypeExt1) {
		return nil, false
	}
	return o.N2SmInfoTypeExt1, true
}

// HasN2SmInfoTypeExt1 returns a boolean if a field has been set.
func (o *SmContextCreateData) HasN2SmInfoTypeExt1() bool {
	if o != nil && !IsNil(o.N2SmInfoTypeExt1) {
		return true
	}

	return false
}

// SetN2SmInfoTypeExt1 gets a reference to the given N2SmInfoType and assigns it to the N2SmInfoTypeExt1 field.
func (o *SmContextCreateData) SetN2SmInfoTypeExt1(v N2SmInfoType) {
	o.N2SmInfoTypeExt1 = &v
}

// GetSmContextRef returns the SmContextRef field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextRef() string {
	if o == nil || IsNil(o.SmContextRef) {
		var ret string
		return ret
	}
	return *o.SmContextRef
}

// GetSmContextRefOk returns a tuple with the SmContextRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextRefOk() (*string, bool) {
	if o == nil || IsNil(o.SmContextRef) {
		return nil, false
	}
	return o.SmContextRef, true
}

// HasSmContextRef returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextRef() bool {
	if o != nil && !IsNil(o.SmContextRef) {
		return true
	}

	return false
}

// SetSmContextRef gets a reference to the given string and assigns it to the SmContextRef field.
func (o *SmContextCreateData) SetSmContextRef(v string) {
	o.SmContextRef = &v
}

// GetSmContextSmfPlmnId returns the SmContextSmfPlmnId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfPlmnId() PlmnIdNid {
	if o == nil || IsNil(o.SmContextSmfPlmnId) {
		var ret PlmnIdNid
		return ret
	}
	return *o.SmContextSmfPlmnId
}

// GetSmContextSmfPlmnIdOk returns a tuple with the SmContextSmfPlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfPlmnIdOk() (*PlmnIdNid, bool) {
	if o == nil || IsNil(o.SmContextSmfPlmnId) {
		return nil, false
	}
	return o.SmContextSmfPlmnId, true
}

// HasSmContextSmfPlmnId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfPlmnId() bool {
	if o != nil && !IsNil(o.SmContextSmfPlmnId) {
		return true
	}

	return false
}

// SetSmContextSmfPlmnId gets a reference to the given PlmnIdNid and assigns it to the SmContextSmfPlmnId field.
func (o *SmContextCreateData) SetSmContextSmfPlmnId(v PlmnIdNid) {
	o.SmContextSmfPlmnId = &v
}

// GetSmContextSmfId returns the SmContextSmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfId() string {
	if o == nil || IsNil(o.SmContextSmfId) {
		var ret string
		return ret
	}
	return *o.SmContextSmfId
}

// GetSmContextSmfIdOk returns a tuple with the SmContextSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmContextSmfId) {
		return nil, false
	}
	return o.SmContextSmfId, true
}

// HasSmContextSmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfId() bool {
	if o != nil && !IsNil(o.SmContextSmfId) {
		return true
	}

	return false
}

// SetSmContextSmfId gets a reference to the given string and assigns it to the SmContextSmfId field.
func (o *SmContextCreateData) SetSmContextSmfId(v string) {
	o.SmContextSmfId = &v
}

// GetSmContextSmfSetId returns the SmContextSmfSetId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfSetId() string {
	if o == nil || IsNil(o.SmContextSmfSetId) {
		var ret string
		return ret
	}
	return *o.SmContextSmfSetId
}

// GetSmContextSmfSetIdOk returns a tuple with the SmContextSmfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmContextSmfSetId) {
		return nil, false
	}
	return o.SmContextSmfSetId, true
}

// HasSmContextSmfSetId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfSetId() bool {
	if o != nil && !IsNil(o.SmContextSmfSetId) {
		return true
	}

	return false
}

// SetSmContextSmfSetId gets a reference to the given string and assigns it to the SmContextSmfSetId field.
func (o *SmContextCreateData) SetSmContextSmfSetId(v string) {
	o.SmContextSmfSetId = &v
}

// GetSmContextSmfServiceSetId returns the SmContextSmfServiceSetId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfServiceSetId() string {
	if o == nil || IsNil(o.SmContextSmfServiceSetId) {
		var ret string
		return ret
	}
	return *o.SmContextSmfServiceSetId
}

// GetSmContextSmfServiceSetIdOk returns a tuple with the SmContextSmfServiceSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfServiceSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmContextSmfServiceSetId) {
		return nil, false
	}
	return o.SmContextSmfServiceSetId, true
}

// HasSmContextSmfServiceSetId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfServiceSetId() bool {
	if o != nil && !IsNil(o.SmContextSmfServiceSetId) {
		return true
	}

	return false
}

// SetSmContextSmfServiceSetId gets a reference to the given string and assigns it to the SmContextSmfServiceSetId field.
func (o *SmContextCreateData) SetSmContextSmfServiceSetId(v string) {
	o.SmContextSmfServiceSetId = &v
}

// GetSmContextSmfBinding returns the SmContextSmfBinding field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfBinding() SbiBindingLevel {
	if o == nil || IsNil(o.SmContextSmfBinding) {
		var ret SbiBindingLevel
		return ret
	}
	return *o.SmContextSmfBinding
}

// GetSmContextSmfBindingOk returns a tuple with the SmContextSmfBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfBindingOk() (*SbiBindingLevel, bool) {
	if o == nil || IsNil(o.SmContextSmfBinding) {
		return nil, false
	}
	return o.SmContextSmfBinding, true
}

// HasSmContextSmfBinding returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfBinding() bool {
	if o != nil && !IsNil(o.SmContextSmfBinding) {
		return true
	}

	return false
}

// SetSmContextSmfBinding gets a reference to the given SbiBindingLevel and assigns it to the SmContextSmfBinding field.
func (o *SmContextCreateData) SetSmContextSmfBinding(v SbiBindingLevel) {
	o.SmContextSmfBinding = &v
}

// GetUpCnxState returns the UpCnxState field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUpCnxState() UpCnxState {
	if o == nil || IsNil(o.UpCnxState) {
		var ret UpCnxState
		return ret
	}
	return *o.UpCnxState
}

// GetUpCnxStateOk returns a tuple with the UpCnxState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUpCnxStateOk() (*UpCnxState, bool) {
	if o == nil || IsNil(o.UpCnxState) {
		return nil, false
	}
	return o.UpCnxState, true
}

// HasUpCnxState returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUpCnxState() bool {
	if o != nil && !IsNil(o.UpCnxState) {
		return true
	}

	return false
}

// SetUpCnxState gets a reference to the given UpCnxState and assigns it to the UpCnxState field.
func (o *SmContextCreateData) SetUpCnxState(v UpCnxState) {
	o.UpCnxState = &v
}

// GetSmallDataRateStatus returns the SmallDataRateStatus field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmallDataRateStatus() SmallDataRateStatus {
	if o == nil || IsNil(o.SmallDataRateStatus) {
		var ret SmallDataRateStatus
		return ret
	}
	return *o.SmallDataRateStatus
}

// GetSmallDataRateStatusOk returns a tuple with the SmallDataRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmallDataRateStatusOk() (*SmallDataRateStatus, bool) {
	if o == nil || IsNil(o.SmallDataRateStatus) {
		return nil, false
	}
	return o.SmallDataRateStatus, true
}

// HasSmallDataRateStatus returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmallDataRateStatus() bool {
	if o != nil && !IsNil(o.SmallDataRateStatus) {
		return true
	}

	return false
}

// SetSmallDataRateStatus gets a reference to the given SmallDataRateStatus and assigns it to the SmallDataRateStatus field.
func (o *SmContextCreateData) SetSmallDataRateStatus(v SmallDataRateStatus) {
	o.SmallDataRateStatus = &v
}

// GetApnRateStatus returns the ApnRateStatus field value if set, zero value otherwise.
func (o *SmContextCreateData) GetApnRateStatus() ApnRateStatus {
	if o == nil || IsNil(o.ApnRateStatus) {
		var ret ApnRateStatus
		return ret
	}
	return *o.ApnRateStatus
}

// GetApnRateStatusOk returns a tuple with the ApnRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetApnRateStatusOk() (*ApnRateStatus, bool) {
	if o == nil || IsNil(o.ApnRateStatus) {
		return nil, false
	}
	return o.ApnRateStatus, true
}

// HasApnRateStatus returns a boolean if a field has been set.
func (o *SmContextCreateData) HasApnRateStatus() bool {
	if o != nil && !IsNil(o.ApnRateStatus) {
		return true
	}

	return false
}

// SetApnRateStatus gets a reference to the given ApnRateStatus and assigns it to the ApnRateStatus field.
func (o *SmContextCreateData) SetApnRateStatus(v ApnRateStatus) {
	o.ApnRateStatus = &v
}

// GetExtendedNasSmTimerInd returns the ExtendedNasSmTimerInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetExtendedNasSmTimerInd() bool {
	if o == nil || IsNil(o.ExtendedNasSmTimerInd) {
		var ret bool
		return ret
	}
	return *o.ExtendedNasSmTimerInd
}

// GetExtendedNasSmTimerIndOk returns a tuple with the ExtendedNasSmTimerInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetExtendedNasSmTimerIndOk() (*bool, bool) {
	if o == nil || IsNil(o.ExtendedNasSmTimerInd) {
		return nil, false
	}
	return o.ExtendedNasSmTimerInd, true
}

// HasExtendedNasSmTimerInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasExtendedNasSmTimerInd() bool {
	if o != nil && !IsNil(o.ExtendedNasSmTimerInd) {
		return true
	}

	return false
}

// SetExtendedNasSmTimerInd gets a reference to the given bool and assigns it to the ExtendedNasSmTimerInd field.
func (o *SmContextCreateData) SetExtendedNasSmTimerInd(v bool) {
	o.ExtendedNasSmTimerInd = &v
}

// GetDlDataWaitingInd returns the DlDataWaitingInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetDlDataWaitingInd() bool {
	if o == nil || IsNil(o.DlDataWaitingInd) {
		var ret bool
		return ret
	}
	return *o.DlDataWaitingInd
}

// GetDlDataWaitingIndOk returns a tuple with the DlDataWaitingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetDlDataWaitingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.DlDataWaitingInd) {
		return nil, false
	}
	return o.DlDataWaitingInd, true
}

// HasDlDataWaitingInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasDlDataWaitingInd() bool {
	if o != nil && !IsNil(o.DlDataWaitingInd) {
		return true
	}

	return false
}

// SetDlDataWaitingInd gets a reference to the given bool and assigns it to the DlDataWaitingInd field.
func (o *SmContextCreateData) SetDlDataWaitingInd(v bool) {
	o.DlDataWaitingInd = &v
}

// GetDdnFailureSubs returns the DdnFailureSubs field value if set, zero value otherwise.
func (o *SmContextCreateData) GetDdnFailureSubs() DdnFailureSubs {
	if o == nil || IsNil(o.DdnFailureSubs) {
		var ret DdnFailureSubs
		return ret
	}
	return *o.DdnFailureSubs
}

// GetDdnFailureSubsOk returns a tuple with the DdnFailureSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetDdnFailureSubsOk() (*DdnFailureSubs, bool) {
	if o == nil || IsNil(o.DdnFailureSubs) {
		return nil, false
	}
	return o.DdnFailureSubs, true
}

// HasDdnFailureSubs returns a boolean if a field has been set.
func (o *SmContextCreateData) HasDdnFailureSubs() bool {
	if o != nil && !IsNil(o.DdnFailureSubs) {
		return true
	}

	return false
}

// SetDdnFailureSubs gets a reference to the given DdnFailureSubs and assigns it to the DdnFailureSubs field.
func (o *SmContextCreateData) SetDdnFailureSubs(v DdnFailureSubs) {
	o.DdnFailureSubs = &v
}

// GetSmfTransferInd returns the SmfTransferInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmfTransferInd() bool {
	if o == nil || IsNil(o.SmfTransferInd) {
		var ret bool
		return ret
	}
	return *o.SmfTransferInd
}

// GetSmfTransferIndOk returns a tuple with the SmfTransferInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmfTransferIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SmfTransferInd) {
		return nil, false
	}
	return o.SmfTransferInd, true
}

// HasSmfTransferInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmfTransferInd() bool {
	if o != nil && !IsNil(o.SmfTransferInd) {
		return true
	}

	return false
}

// SetSmfTransferInd gets a reference to the given bool and assigns it to the SmfTransferInd field.
func (o *SmContextCreateData) SetSmfTransferInd(v bool) {
	o.SmfTransferInd = &v
}

// GetOldSmfId returns the OldSmfId field value if set, zero value otherwise.
func (o *SmContextCreateData) GetOldSmfId() string {
	if o == nil || IsNil(o.OldSmfId) {
		var ret string
		return ret
	}
	return *o.OldSmfId
}

// GetOldSmfIdOk returns a tuple with the OldSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetOldSmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.OldSmfId) {
		return nil, false
	}
	return o.OldSmfId, true
}

// HasOldSmfId returns a boolean if a field has been set.
func (o *SmContextCreateData) HasOldSmfId() bool {
	if o != nil && !IsNil(o.OldSmfId) {
		return true
	}

	return false
}

// SetOldSmfId gets a reference to the given string and assigns it to the OldSmfId field.
func (o *SmContextCreateData) SetOldSmfId(v string) {
	o.OldSmfId = &v
}

// GetOldSmContextRef returns the OldSmContextRef field value if set, zero value otherwise.
func (o *SmContextCreateData) GetOldSmContextRef() string {
	if o == nil || IsNil(o.OldSmContextRef) {
		var ret string
		return ret
	}
	return *o.OldSmContextRef
}

// GetOldSmContextRefOk returns a tuple with the OldSmContextRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetOldSmContextRefOk() (*string, bool) {
	if o == nil || IsNil(o.OldSmContextRef) {
		return nil, false
	}
	return o.OldSmContextRef, true
}

// HasOldSmContextRef returns a boolean if a field has been set.
func (o *SmContextCreateData) HasOldSmContextRef() bool {
	if o != nil && !IsNil(o.OldSmContextRef) {
		return true
	}

	return false
}

// SetOldSmContextRef gets a reference to the given string and assigns it to the OldSmContextRef field.
func (o *SmContextCreateData) SetOldSmContextRef(v string) {
	o.OldSmContextRef = &v
}

// GetWAgfInfo returns the WAgfInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetWAgfInfo() WAgfInfo {
	if o == nil || IsNil(o.WAgfInfo) {
		var ret WAgfInfo
		return ret
	}
	return *o.WAgfInfo
}

// GetWAgfInfoOk returns a tuple with the WAgfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetWAgfInfoOk() (*WAgfInfo, bool) {
	if o == nil || IsNil(o.WAgfInfo) {
		return nil, false
	}
	return o.WAgfInfo, true
}

// HasWAgfInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasWAgfInfo() bool {
	if o != nil && !IsNil(o.WAgfInfo) {
		return true
	}

	return false
}

// SetWAgfInfo gets a reference to the given WAgfInfo and assigns it to the WAgfInfo field.
func (o *SmContextCreateData) SetWAgfInfo(v WAgfInfo) {
	o.WAgfInfo = &v
}

// GetTngfInfo returns the TngfInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetTngfInfo() TngfInfo {
	if o == nil || IsNil(o.TngfInfo) {
		var ret TngfInfo
		return ret
	}
	return *o.TngfInfo
}

// GetTngfInfoOk returns a tuple with the TngfInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetTngfInfoOk() (*TngfInfo, bool) {
	if o == nil || IsNil(o.TngfInfo) {
		return nil, false
	}
	return o.TngfInfo, true
}

// HasTngfInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasTngfInfo() bool {
	if o != nil && !IsNil(o.TngfInfo) {
		return true
	}

	return false
}

// SetTngfInfo gets a reference to the given TngfInfo and assigns it to the TngfInfo field.
func (o *SmContextCreateData) SetTngfInfo(v TngfInfo) {
	o.TngfInfo = &v
}

// GetTwifInfo returns the TwifInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetTwifInfo() TwifInfo {
	if o == nil || IsNil(o.TwifInfo) {
		var ret TwifInfo
		return ret
	}
	return *o.TwifInfo
}

// GetTwifInfoOk returns a tuple with the TwifInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetTwifInfoOk() (*TwifInfo, bool) {
	if o == nil || IsNil(o.TwifInfo) {
		return nil, false
	}
	return o.TwifInfo, true
}

// HasTwifInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasTwifInfo() bool {
	if o != nil && !IsNil(o.TwifInfo) {
		return true
	}

	return false
}

// SetTwifInfo gets a reference to the given TwifInfo and assigns it to the TwifInfo field.
func (o *SmContextCreateData) SetTwifInfo(v TwifInfo) {
	o.TwifInfo = &v
}

// GetRanUnchangedInd returns the RanUnchangedInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetRanUnchangedInd() bool {
	if o == nil || IsNil(o.RanUnchangedInd) {
		var ret bool
		return ret
	}
	return *o.RanUnchangedInd
}

// GetRanUnchangedIndOk returns a tuple with the RanUnchangedInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetRanUnchangedIndOk() (*bool, bool) {
	if o == nil || IsNil(o.RanUnchangedInd) {
		return nil, false
	}
	return o.RanUnchangedInd, true
}

// HasRanUnchangedInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasRanUnchangedInd() bool {
	if o != nil && !IsNil(o.RanUnchangedInd) {
		return true
	}

	return false
}

// SetRanUnchangedInd gets a reference to the given bool and assigns it to the RanUnchangedInd field.
func (o *SmContextCreateData) SetRanUnchangedInd(v bool) {
	o.RanUnchangedInd = &v
}

// GetSamePcfSelectionInd returns the SamePcfSelectionInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSamePcfSelectionInd() bool {
	if o == nil || IsNil(o.SamePcfSelectionInd) {
		var ret bool
		return ret
	}
	return *o.SamePcfSelectionInd
}

// GetSamePcfSelectionIndOk returns a tuple with the SamePcfSelectionInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSamePcfSelectionIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SamePcfSelectionInd) {
		return nil, false
	}
	return o.SamePcfSelectionInd, true
}

// HasSamePcfSelectionInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSamePcfSelectionInd() bool {
	if o != nil && !IsNil(o.SamePcfSelectionInd) {
		return true
	}

	return false
}

// SetSamePcfSelectionInd gets a reference to the given bool and assigns it to the SamePcfSelectionInd field.
func (o *SmContextCreateData) SetSamePcfSelectionInd(v bool) {
	o.SamePcfSelectionInd = &v
}

// GetTargetDnai returns the TargetDnai field value if set, zero value otherwise.
func (o *SmContextCreateData) GetTargetDnai() string {
	if o == nil || IsNil(o.TargetDnai) {
		var ret string
		return ret
	}
	return *o.TargetDnai
}

// GetTargetDnaiOk returns a tuple with the TargetDnai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetTargetDnaiOk() (*string, bool) {
	if o == nil || IsNil(o.TargetDnai) {
		return nil, false
	}
	return o.TargetDnai, true
}

// HasTargetDnai returns a boolean if a field has been set.
func (o *SmContextCreateData) HasTargetDnai() bool {
	if o != nil && !IsNil(o.TargetDnai) {
		return true
	}

	return false
}

// SetTargetDnai gets a reference to the given string and assigns it to the TargetDnai field.
func (o *SmContextCreateData) SetTargetDnai(v string) {
	o.TargetDnai = &v
}

// GetNrfManagementUri returns the NrfManagementUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetNrfManagementUri() string {
	if o == nil || IsNil(o.NrfManagementUri) {
		var ret string
		return ret
	}
	return *o.NrfManagementUri
}

// GetNrfManagementUriOk returns a tuple with the NrfManagementUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetNrfManagementUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfManagementUri) {
		return nil, false
	}
	return o.NrfManagementUri, true
}

// HasNrfManagementUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasNrfManagementUri() bool {
	if o != nil && !IsNil(o.NrfManagementUri) {
		return true
	}

	return false
}

// SetNrfManagementUri gets a reference to the given string and assigns it to the NrfManagementUri field.
func (o *SmContextCreateData) SetNrfManagementUri(v string) {
	o.NrfManagementUri = &v
}

// GetNrfDiscoveryUri returns the NrfDiscoveryUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetNrfDiscoveryUri() string {
	if o == nil || IsNil(o.NrfDiscoveryUri) {
		var ret string
		return ret
	}
	return *o.NrfDiscoveryUri
}

// GetNrfDiscoveryUriOk returns a tuple with the NrfDiscoveryUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetNrfDiscoveryUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfDiscoveryUri) {
		return nil, false
	}
	return o.NrfDiscoveryUri, true
}

// HasNrfDiscoveryUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasNrfDiscoveryUri() bool {
	if o != nil && !IsNil(o.NrfDiscoveryUri) {
		return true
	}

	return false
}

// SetNrfDiscoveryUri gets a reference to the given string and assigns it to the NrfDiscoveryUri field.
func (o *SmContextCreateData) SetNrfDiscoveryUri(v string) {
	o.NrfDiscoveryUri = &v
}

// GetNrfAccessTokenUri returns the NrfAccessTokenUri field value if set, zero value otherwise.
func (o *SmContextCreateData) GetNrfAccessTokenUri() string {
	if o == nil || IsNil(o.NrfAccessTokenUri) {
		var ret string
		return ret
	}
	return *o.NrfAccessTokenUri
}

// GetNrfAccessTokenUriOk returns a tuple with the NrfAccessTokenUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetNrfAccessTokenUriOk() (*string, bool) {
	if o == nil || IsNil(o.NrfAccessTokenUri) {
		return nil, false
	}
	return o.NrfAccessTokenUri, true
}

// HasNrfAccessTokenUri returns a boolean if a field has been set.
func (o *SmContextCreateData) HasNrfAccessTokenUri() bool {
	if o != nil && !IsNil(o.NrfAccessTokenUri) {
		return true
	}

	return false
}

// SetNrfAccessTokenUri gets a reference to the given string and assigns it to the NrfAccessTokenUri field.
func (o *SmContextCreateData) SetNrfAccessTokenUri(v string) {
	o.NrfAccessTokenUri = &v
}

// GetNrfOauth2Required returns the NrfOauth2Required field value if set, zero value otherwise.
func (o *SmContextCreateData) GetNrfOauth2Required() map[string]bool {
	if o == nil || IsNil(o.NrfOauth2Required) {
		var ret map[string]bool
		return ret
	}
	return *o.NrfOauth2Required
}

// GetNrfOauth2RequiredOk returns a tuple with the NrfOauth2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetNrfOauth2RequiredOk() (*map[string]bool, bool) {
	if o == nil || IsNil(o.NrfOauth2Required) {
		return nil, false
	}
	return o.NrfOauth2Required, true
}

// HasNrfOauth2Required returns a boolean if a field has been set.
func (o *SmContextCreateData) HasNrfOauth2Required() bool {
	if o != nil && !IsNil(o.NrfOauth2Required) {
		return true
	}

	return false
}

// SetNrfOauth2Required gets a reference to the given map[string]bool and assigns it to the NrfOauth2Required field.
func (o *SmContextCreateData) SetNrfOauth2Required(v map[string]bool) {
	o.NrfOauth2Required = &v
}

// GetSmfBindingInfo returns the SmfBindingInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmfBindingInfo() string {
	if o == nil || IsNil(o.SmfBindingInfo) {
		var ret string
		return ret
	}
	return *o.SmfBindingInfo
}

// GetSmfBindingInfoOk returns a tuple with the SmfBindingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmfBindingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.SmfBindingInfo) {
		return nil, false
	}
	return o.SmfBindingInfo, true
}

// HasSmfBindingInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmfBindingInfo() bool {
	if o != nil && !IsNil(o.SmfBindingInfo) {
		return true
	}

	return false
}

// SetSmfBindingInfo gets a reference to the given string and assigns it to the SmfBindingInfo field.
func (o *SmContextCreateData) SetSmfBindingInfo(v string) {
	o.SmfBindingInfo = &v
}

// GetPvsInfo returns the PvsInfo field value if set, zero value otherwise.
func (o *SmContextCreateData) GetPvsInfo() []ServerAddressingInfo {
	if o == nil || IsNil(o.PvsInfo) {
		var ret []ServerAddressingInfo
		return ret
	}
	return o.PvsInfo
}

// GetPvsInfoOk returns a tuple with the PvsInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetPvsInfoOk() ([]ServerAddressingInfo, bool) {
	if o == nil || IsNil(o.PvsInfo) {
		return nil, false
	}
	return o.PvsInfo, true
}

// HasPvsInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPvsInfo() bool {
	if o != nil && !IsNil(o.PvsInfo) {
		return true
	}

	return false
}

// SetPvsInfo gets a reference to the given []ServerAddressingInfo and assigns it to the PvsInfo field.
func (o *SmContextCreateData) SetPvsInfo(v []ServerAddressingInfo) {
	o.PvsInfo = v
}

// GetOnboardingInd returns the OnboardingInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetOnboardingInd() bool {
	if o == nil || IsNil(o.OnboardingInd) {
		var ret bool
		return ret
	}
	return *o.OnboardingInd
}

// GetOnboardingIndOk returns a tuple with the OnboardingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetOnboardingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.OnboardingInd) {
		return nil, false
	}
	return o.OnboardingInd, true
}

// HasOnboardingInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasOnboardingInd() bool {
	if o != nil && !IsNil(o.OnboardingInd) {
		return true
	}

	return false
}

// SetOnboardingInd gets a reference to the given bool and assigns it to the OnboardingInd field.
func (o *SmContextCreateData) SetOnboardingInd(v bool) {
	o.OnboardingInd = &v
}

// GetOldPduSessionRef returns the OldPduSessionRef field value if set, zero value otherwise.
func (o *SmContextCreateData) GetOldPduSessionRef() string {
	if o == nil || IsNil(o.OldPduSessionRef) {
		var ret string
		return ret
	}
	return *o.OldPduSessionRef
}

// GetOldPduSessionRefOk returns a tuple with the OldPduSessionRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetOldPduSessionRefOk() (*string, bool) {
	if o == nil || IsNil(o.OldPduSessionRef) {
		return nil, false
	}
	return o.OldPduSessionRef, true
}

// HasOldPduSessionRef returns a boolean if a field has been set.
func (o *SmContextCreateData) HasOldPduSessionRef() bool {
	if o != nil && !IsNil(o.OldPduSessionRef) {
		return true
	}

	return false
}

// SetOldPduSessionRef gets a reference to the given string and assigns it to the OldPduSessionRef field.
func (o *SmContextCreateData) SetOldPduSessionRef(v string) {
	o.OldPduSessionRef = &v
}

// GetSmPolicyNotifyInd returns the SmPolicyNotifyInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmPolicyNotifyInd() bool {
	if o == nil || IsNil(o.SmPolicyNotifyInd) {
		var ret bool
		return ret
	}
	return *o.SmPolicyNotifyInd
}

// GetSmPolicyNotifyIndOk returns a tuple with the SmPolicyNotifyInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmPolicyNotifyIndOk() (*bool, bool) {
	if o == nil || IsNil(o.SmPolicyNotifyInd) {
		return nil, false
	}
	return o.SmPolicyNotifyInd, true
}

// HasSmPolicyNotifyInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmPolicyNotifyInd() bool {
	if o != nil && !IsNil(o.SmPolicyNotifyInd) {
		return true
	}

	return false
}

// SetSmPolicyNotifyInd gets a reference to the given bool and assigns it to the SmPolicyNotifyInd field.
func (o *SmContextCreateData) SetSmPolicyNotifyInd(v bool) {
	o.SmPolicyNotifyInd = &v
}

// GetPcfUeCallbackInfo returns the PcfUeCallbackInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *SmContextCreateData) GetPcfUeCallbackInfo() PcfUeCallbackInfo {
	if o == nil || IsNil(o.PcfUeCallbackInfo.Get()) {
		var ret PcfUeCallbackInfo
		return ret
	}
	return *o.PcfUeCallbackInfo.Get()
}

// GetPcfUeCallbackInfoOk returns a tuple with the PcfUeCallbackInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *SmContextCreateData) GetPcfUeCallbackInfoOk() (*PcfUeCallbackInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.PcfUeCallbackInfo.Get(), o.PcfUeCallbackInfo.IsSet()
}

// HasPcfUeCallbackInfo returns a boolean if a field has been set.
func (o *SmContextCreateData) HasPcfUeCallbackInfo() bool {
	if o != nil && o.PcfUeCallbackInfo.IsSet() {
		return true
	}

	return false
}

// SetPcfUeCallbackInfo gets a reference to the given NullablePcfUeCallbackInfo and assigns it to the PcfUeCallbackInfo field.
func (o *SmContextCreateData) SetPcfUeCallbackInfo(v PcfUeCallbackInfo) {
	o.PcfUeCallbackInfo.Set(&v)
}

// SetPcfUeCallbackInfoNil sets the value for PcfUeCallbackInfo to be an explicit nil
func (o *SmContextCreateData) SetPcfUeCallbackInfoNil() {
	o.PcfUeCallbackInfo.Set(nil)
}

// UnsetPcfUeCallbackInfo ensures that no value is present for PcfUeCallbackInfo, not even an explicit nil
func (o *SmContextCreateData) UnsetPcfUeCallbackInfo() {
	o.PcfUeCallbackInfo.Unset()
}

// GetSatelliteBackhaulCat returns the SatelliteBackhaulCat field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSatelliteBackhaulCat() SatelliteBackhaulCategory {
	if o == nil || IsNil(o.SatelliteBackhaulCat) {
		var ret SatelliteBackhaulCategory
		return ret
	}
	return *o.SatelliteBackhaulCat
}

// GetSatelliteBackhaulCatOk returns a tuple with the SatelliteBackhaulCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSatelliteBackhaulCatOk() (*SatelliteBackhaulCategory, bool) {
	if o == nil || IsNil(o.SatelliteBackhaulCat) {
		return nil, false
	}
	return o.SatelliteBackhaulCat, true
}

// HasSatelliteBackhaulCat returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSatelliteBackhaulCat() bool {
	if o != nil && !IsNil(o.SatelliteBackhaulCat) {
		return true
	}

	return false
}

// SetSatelliteBackhaulCat gets a reference to the given SatelliteBackhaulCategory and assigns it to the SatelliteBackhaulCat field.
func (o *SmContextCreateData) SetSatelliteBackhaulCat(v SatelliteBackhaulCategory) {
	o.SatelliteBackhaulCat = &v
}

// GetUpipSupported returns the UpipSupported field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUpipSupported() bool {
	if o == nil || IsNil(o.UpipSupported) {
		var ret bool
		return ret
	}
	return *o.UpipSupported
}

// GetUpipSupportedOk returns a tuple with the UpipSupported field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUpipSupportedOk() (*bool, bool) {
	if o == nil || IsNil(o.UpipSupported) {
		return nil, false
	}
	return o.UpipSupported, true
}

// HasUpipSupported returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUpipSupported() bool {
	if o != nil && !IsNil(o.UpipSupported) {
		return true
	}

	return false
}

// SetUpipSupported gets a reference to the given bool and assigns it to the UpipSupported field.
func (o *SmContextCreateData) SetUpipSupported(v bool) {
	o.UpipSupported = &v
}

// GetUavAuthenticated returns the UavAuthenticated field value if set, zero value otherwise.
func (o *SmContextCreateData) GetUavAuthenticated() bool {
	if o == nil || IsNil(o.UavAuthenticated) {
		var ret bool
		return ret
	}
	return *o.UavAuthenticated
}

// GetUavAuthenticatedOk returns a tuple with the UavAuthenticated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetUavAuthenticatedOk() (*bool, bool) {
	if o == nil || IsNil(o.UavAuthenticated) {
		return nil, false
	}
	return o.UavAuthenticated, true
}

// HasUavAuthenticated returns a boolean if a field has been set.
func (o *SmContextCreateData) HasUavAuthenticated() bool {
	if o != nil && !IsNil(o.UavAuthenticated) {
		return true
	}

	return false
}

// SetUavAuthenticated gets a reference to the given bool and assigns it to the UavAuthenticated field.
func (o *SmContextCreateData) SetUavAuthenticated(v bool) {
	o.UavAuthenticated = &v
}

// GetDisasterRoamingInd returns the DisasterRoamingInd field value if set, zero value otherwise.
func (o *SmContextCreateData) GetDisasterRoamingInd() bool {
	if o == nil || IsNil(o.DisasterRoamingInd) {
		var ret bool
		return ret
	}
	return *o.DisasterRoamingInd
}

// GetDisasterRoamingIndOk returns a tuple with the DisasterRoamingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetDisasterRoamingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.DisasterRoamingInd) {
		return nil, false
	}
	return o.DisasterRoamingInd, true
}

// HasDisasterRoamingInd returns a boolean if a field has been set.
func (o *SmContextCreateData) HasDisasterRoamingInd() bool {
	if o != nil && !IsNil(o.DisasterRoamingInd) {
		return true
	}

	return false
}

// SetDisasterRoamingInd gets a reference to the given bool and assigns it to the DisasterRoamingInd field.
func (o *SmContextCreateData) SetDisasterRoamingInd(v bool) {
	o.DisasterRoamingInd = &v
}

// GetAnchorSmfOauth2Required returns the AnchorSmfOauth2Required field value if set, zero value otherwise.
func (o *SmContextCreateData) GetAnchorSmfOauth2Required() bool {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		var ret bool
		return ret
	}
	return *o.AnchorSmfOauth2Required
}

// GetAnchorSmfOauth2RequiredOk returns a tuple with the AnchorSmfOauth2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetAnchorSmfOauth2RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		return nil, false
	}
	return o.AnchorSmfOauth2Required, true
}

// HasAnchorSmfOauth2Required returns a boolean if a field has been set.
func (o *SmContextCreateData) HasAnchorSmfOauth2Required() bool {
	if o != nil && !IsNil(o.AnchorSmfOauth2Required) {
		return true
	}

	return false
}

// SetAnchorSmfOauth2Required gets a reference to the given bool and assigns it to the AnchorSmfOauth2Required field.
func (o *SmContextCreateData) SetAnchorSmfOauth2Required(v bool) {
	o.AnchorSmfOauth2Required = &v
}

// GetSmContextSmfOauth2Required returns the SmContextSmfOauth2Required field value if set, zero value otherwise.
func (o *SmContextCreateData) GetSmContextSmfOauth2Required() bool {
	if o == nil || IsNil(o.SmContextSmfOauth2Required) {
		var ret bool
		return ret
	}
	return *o.SmContextSmfOauth2Required
}

// GetSmContextSmfOauth2RequiredOk returns a tuple with the SmContextSmfOauth2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreateData) GetSmContextSmfOauth2RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.SmContextSmfOauth2Required) {
		return nil, false
	}
	return o.SmContextSmfOauth2Required, true
}

// HasSmContextSmfOauth2Required returns a boolean if a field has been set.
func (o *SmContextCreateData) HasSmContextSmfOauth2Required() bool {
	if o != nil && !IsNil(o.SmContextSmfOauth2Required) {
		return true
	}

	return false
}

// SetSmContextSmfOauth2Required gets a reference to the given bool and assigns it to the SmContextSmfOauth2Required field.
func (o *SmContextCreateData) SetSmContextSmfOauth2Required(v bool) {
	o.SmContextSmfOauth2Required = &v
}

func (o SmContextCreateData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmContextCreateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Supi) {
		toSerialize["supi"] = o.Supi
	}
	if !IsNil(o.UnauthenticatedSupi) {
		toSerialize["unauthenticatedSupi"] = o.UnauthenticatedSupi
	}
	if !IsNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !IsNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !IsNil(o.PduSessionId) {
		toSerialize["pduSessionId"] = o.PduSessionId
	}
	if !IsNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !IsNil(o.SelectedDnn) {
		toSerialize["selectedDnn"] = o.SelectedDnn
	}
	if !IsNil(o.SNssai) {
		toSerialize["sNssai"] = o.SNssai
	}
	if !IsNil(o.HplmnSnssai) {
		toSerialize["hplmnSnssai"] = o.HplmnSnssai
	}
	toSerialize["servingNfId"] = o.ServingNfId
	if !IsNil(o.Guami) {
		toSerialize["guami"] = o.Guami
	}
	if !IsNil(o.ServiceName) {
		toSerialize["serviceName"] = o.ServiceName
	}
	toSerialize["servingNetwork"] = o.ServingNetwork
	if !IsNil(o.RequestType) {
		toSerialize["requestType"] = o.RequestType
	}
	if !IsNil(o.N1SmMsg) {
		toSerialize["n1SmMsg"] = o.N1SmMsg
	}
	toSerialize["anType"] = o.AnType
	if !IsNil(o.AdditionalAnType) {
		toSerialize["additionalAnType"] = o.AdditionalAnType
	}
	if !IsNil(o.RatType) {
		toSerialize["ratType"] = o.RatType
	}
	if !IsNil(o.PresenceInLadn) {
		toSerialize["presenceInLadn"] = o.PresenceInLadn
	}
	if !IsNil(o.UeLocation) {
		toSerialize["ueLocation"] = o.UeLocation
	}
	if !IsNil(o.UeTimeZone) {
		toSerialize["ueTimeZone"] = o.UeTimeZone
	}
	if !IsNil(o.AddUeLocation) {
		toSerialize["addUeLocation"] = o.AddUeLocation
	}
	toSerialize["smContextStatusUri"] = o.SmContextStatusUri
	if !IsNil(o.HSmfUri) {
		toSerialize["hSmfUri"] = o.HSmfUri
	}
	if !IsNil(o.HSmfId) {
		toSerialize["hSmfId"] = o.HSmfId
	}
	if !IsNil(o.SmfUri) {
		toSerialize["smfUri"] = o.SmfUri
	}
	if !IsNil(o.SmfId) {
		toSerialize["smfId"] = o.SmfId
	}
	if !IsNil(o.AdditionalHsmfUri) {
		toSerialize["additionalHsmfUri"] = o.AdditionalHsmfUri
	}
	if !IsNil(o.AdditionalHsmfId) {
		toSerialize["additionalHsmfId"] = o.AdditionalHsmfId
	}
	if !IsNil(o.AdditionalSmfUri) {
		toSerialize["additionalSmfUri"] = o.AdditionalSmfUri
	}
	if !IsNil(o.AdditionalSmfId) {
		toSerialize["additionalSmfId"] = o.AdditionalSmfId
	}
	if !IsNil(o.OldPduSessionId) {
		toSerialize["oldPduSessionId"] = o.OldPduSessionId
	}
	if !IsNil(o.PduSessionsActivateList) {
		toSerialize["pduSessionsActivateList"] = o.PduSessionsActivateList
	}
	if !IsNil(o.UeEpsPdnConnection) {
		toSerialize["ueEpsPdnConnection"] = o.UeEpsPdnConnection
	}
	if !IsNil(o.HoState) {
		toSerialize["hoState"] = o.HoState
	}
	if !IsNil(o.PcfId) {
		toSerialize["pcfId"] = o.PcfId
	}
	if !IsNil(o.PcfGroupId) {
		toSerialize["pcfGroupId"] = o.PcfGroupId
	}
	if !IsNil(o.PcfSetId) {
		toSerialize["pcfSetId"] = o.PcfSetId
	}
	if !IsNil(o.NrfUri) {
		toSerialize["nrfUri"] = o.NrfUri
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.SelMode) {
		toSerialize["selMode"] = o.SelMode
	}
	if !IsNil(o.BackupAmfInfo) {
		toSerialize["backupAmfInfo"] = o.BackupAmfInfo
	}
	if o.TraceData.IsSet() {
		toSerialize["traceData"] = o.TraceData.Get()
	}
	if !IsNil(o.UdmGroupId) {
		toSerialize["udmGroupId"] = o.UdmGroupId
	}
	if !IsNil(o.RoutingIndicator) {
		toSerialize["routingIndicator"] = o.RoutingIndicator
	}
	if !IsNil(o.HNwPubKeyId) {
		toSerialize["hNwPubKeyId"] = o.HNwPubKeyId
	}
	if !IsNil(o.EpsInterworkingInd) {
		toSerialize["epsInterworkingInd"] = o.EpsInterworkingInd
	}
	if !IsNil(o.IndirectForwardingFlag) {
		toSerialize["indirectForwardingFlag"] = o.IndirectForwardingFlag
	}
	if !IsNil(o.DirectForwardingFlag) {
		toSerialize["directForwardingFlag"] = o.DirectForwardingFlag
	}
	if !IsNil(o.TargetId) {
		toSerialize["targetId"] = o.TargetId
	}
	if !IsNil(o.EpsBearerCtxStatus) {
		toSerialize["epsBearerCtxStatus"] = o.EpsBearerCtxStatus
	}
	if !IsNil(o.CpCiotEnabled) {
		toSerialize["cpCiotEnabled"] = o.CpCiotEnabled
	}
	if !IsNil(o.CpOnlyInd) {
		toSerialize["cpOnlyInd"] = o.CpOnlyInd
	}
	if !IsNil(o.InvokeNef) {
		toSerialize["invokeNef"] = o.InvokeNef
	}
	if !IsNil(o.MaRequestInd) {
		toSerialize["maRequestInd"] = o.MaRequestInd
	}
	if !IsNil(o.MaNwUpgradeInd) {
		toSerialize["maNwUpgradeInd"] = o.MaNwUpgradeInd
	}
	if !IsNil(o.N2SmInfo) {
		toSerialize["n2SmInfo"] = o.N2SmInfo
	}
	if !IsNil(o.N2SmInfoType) {
		toSerialize["n2SmInfoType"] = o.N2SmInfoType
	}
	if !IsNil(o.N2SmInfoExt1) {
		toSerialize["n2SmInfoExt1"] = o.N2SmInfoExt1
	}
	if !IsNil(o.N2SmInfoTypeExt1) {
		toSerialize["n2SmInfoTypeExt1"] = o.N2SmInfoTypeExt1
	}
	if !IsNil(o.SmContextRef) {
		toSerialize["smContextRef"] = o.SmContextRef
	}
	if !IsNil(o.SmContextSmfPlmnId) {
		toSerialize["smContextSmfPlmnId"] = o.SmContextSmfPlmnId
	}
	if !IsNil(o.SmContextSmfId) {
		toSerialize["smContextSmfId"] = o.SmContextSmfId
	}
	if !IsNil(o.SmContextSmfSetId) {
		toSerialize["smContextSmfSetId"] = o.SmContextSmfSetId
	}
	if !IsNil(o.SmContextSmfServiceSetId) {
		toSerialize["smContextSmfServiceSetId"] = o.SmContextSmfServiceSetId
	}
	if !IsNil(o.SmContextSmfBinding) {
		toSerialize["smContextSmfBinding"] = o.SmContextSmfBinding
	}
	if !IsNil(o.UpCnxState) {
		toSerialize["upCnxState"] = o.UpCnxState
	}
	if !IsNil(o.SmallDataRateStatus) {
		toSerialize["smallDataRateStatus"] = o.SmallDataRateStatus
	}
	if !IsNil(o.ApnRateStatus) {
		toSerialize["apnRateStatus"] = o.ApnRateStatus
	}
	if !IsNil(o.ExtendedNasSmTimerInd) {
		toSerialize["extendedNasSmTimerInd"] = o.ExtendedNasSmTimerInd
	}
	if !IsNil(o.DlDataWaitingInd) {
		toSerialize["dlDataWaitingInd"] = o.DlDataWaitingInd
	}
	if !IsNil(o.DdnFailureSubs) {
		toSerialize["ddnFailureSubs"] = o.DdnFailureSubs
	}
	if !IsNil(o.SmfTransferInd) {
		toSerialize["smfTransferInd"] = o.SmfTransferInd
	}
	if !IsNil(o.OldSmfId) {
		toSerialize["oldSmfId"] = o.OldSmfId
	}
	if !IsNil(o.OldSmContextRef) {
		toSerialize["oldSmContextRef"] = o.OldSmContextRef
	}
	if !IsNil(o.WAgfInfo) {
		toSerialize["wAgfInfo"] = o.WAgfInfo
	}
	if !IsNil(o.TngfInfo) {
		toSerialize["tngfInfo"] = o.TngfInfo
	}
	if !IsNil(o.TwifInfo) {
		toSerialize["twifInfo"] = o.TwifInfo
	}
	if !IsNil(o.RanUnchangedInd) {
		toSerialize["ranUnchangedInd"] = o.RanUnchangedInd
	}
	if !IsNil(o.SamePcfSelectionInd) {
		toSerialize["samePcfSelectionInd"] = o.SamePcfSelectionInd
	}
	if !IsNil(o.TargetDnai) {
		toSerialize["targetDnai"] = o.TargetDnai
	}
	if !IsNil(o.NrfManagementUri) {
		toSerialize["nrfManagementUri"] = o.NrfManagementUri
	}
	if !IsNil(o.NrfDiscoveryUri) {
		toSerialize["nrfDiscoveryUri"] = o.NrfDiscoveryUri
	}
	if !IsNil(o.NrfAccessTokenUri) {
		toSerialize["nrfAccessTokenUri"] = o.NrfAccessTokenUri
	}
	if !IsNil(o.NrfOauth2Required) {
		toSerialize["nrfOauth2Required"] = o.NrfOauth2Required
	}
	if !IsNil(o.SmfBindingInfo) {
		toSerialize["smfBindingInfo"] = o.SmfBindingInfo
	}
	if !IsNil(o.PvsInfo) {
		toSerialize["pvsInfo"] = o.PvsInfo
	}
	if !IsNil(o.OnboardingInd) {
		toSerialize["onboardingInd"] = o.OnboardingInd
	}
	if !IsNil(o.OldPduSessionRef) {
		toSerialize["oldPduSessionRef"] = o.OldPduSessionRef
	}
	if !IsNil(o.SmPolicyNotifyInd) {
		toSerialize["smPolicyNotifyInd"] = o.SmPolicyNotifyInd
	}
	if o.PcfUeCallbackInfo.IsSet() {
		toSerialize["pcfUeCallbackInfo"] = o.PcfUeCallbackInfo.Get()
	}
	if !IsNil(o.SatelliteBackhaulCat) {
		toSerialize["satelliteBackhaulCat"] = o.SatelliteBackhaulCat
	}
	if !IsNil(o.UpipSupported) {
		toSerialize["upipSupported"] = o.UpipSupported
	}
	if !IsNil(o.UavAuthenticated) {
		toSerialize["uavAuthenticated"] = o.UavAuthenticated
	}
	if !IsNil(o.DisasterRoamingInd) {
		toSerialize["disasterRoamingInd"] = o.DisasterRoamingInd
	}
	if !IsNil(o.AnchorSmfOauth2Required) {
		toSerialize["anchorSmfOauth2Required"] = o.AnchorSmfOauth2Required
	}
	if !IsNil(o.SmContextSmfOauth2Required) {
		toSerialize["smContextSmfOauth2Required"] = o.SmContextSmfOauth2Required
	}
	return toSerialize, nil
}

type NullableSmContextCreateData struct {
	value *SmContextCreateData
	isSet bool
}

func (v NullableSmContextCreateData) Get() *SmContextCreateData {
	return v.value
}

func (v *NullableSmContextCreateData) Set(val *SmContextCreateData) {
	v.value = val
	v.isSet = true
}

func (v NullableSmContextCreateData) IsSet() bool {
	return v.isSet
}

func (v *NullableSmContextCreateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmContextCreateData(val *SmContextCreateData) *NullableSmContextCreateData {
	return &NullableSmContextCreateData{value: val, isSet: true}
}

func (v NullableSmContextCreateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmContextCreateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
