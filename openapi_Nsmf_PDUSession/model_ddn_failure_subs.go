/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the DdnFailureSubs type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DdnFailureSubs{}

// DdnFailureSubs DDN Failure Subscription
type DdnFailureSubs struct {
	DdnFailureSubsInd *bool `json:"ddnFailureSubsInd,omitempty"`
	DdnFailureSubsInfoList []DdnFailureSubInfo `json:"ddnFailureSubsInfoList,omitempty"`
}

// NewDdnFailureSubs instantiates a new DdnFailureSubs object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDdnFailureSubs() *DdnFailureSubs {
	this := DdnFailureSubs{}
	var ddnFailureSubsInd bool = false
	this.DdnFailureSubsInd = &ddnFailureSubsInd
	return &this
}

// NewDdnFailureSubsWithDefaults instantiates a new DdnFailureSubs object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDdnFailureSubsWithDefaults() *DdnFailureSubs {
	this := DdnFailureSubs{}
	var ddnFailureSubsInd bool = false
	this.DdnFailureSubsInd = &ddnFailureSubsInd
	return &this
}

// GetDdnFailureSubsInd returns the DdnFailureSubsInd field value if set, zero value otherwise.
func (o *DdnFailureSubs) GetDdnFailureSubsInd() bool {
	if o == nil || isNil(o.DdnFailureSubsInd) {
		var ret bool
		return ret
	}
	return *o.DdnFailureSubsInd
}

// GetDdnFailureSubsIndOk returns a tuple with the DdnFailureSubsInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DdnFailureSubs) GetDdnFailureSubsIndOk() (*bool, bool) {
	if o == nil || isNil(o.DdnFailureSubsInd) {
		return nil, false
	}
	return o.DdnFailureSubsInd, true
}

// HasDdnFailureSubsInd returns a boolean if a field has been set.
func (o *DdnFailureSubs) HasDdnFailureSubsInd() bool {
	if o != nil && !isNil(o.DdnFailureSubsInd) {
		return true
	}

	return false
}

// SetDdnFailureSubsInd gets a reference to the given bool and assigns it to the DdnFailureSubsInd field.
func (o *DdnFailureSubs) SetDdnFailureSubsInd(v bool) {
	o.DdnFailureSubsInd = &v
}

// GetDdnFailureSubsInfoList returns the DdnFailureSubsInfoList field value if set, zero value otherwise.
func (o *DdnFailureSubs) GetDdnFailureSubsInfoList() []DdnFailureSubInfo {
	if o == nil || isNil(o.DdnFailureSubsInfoList) {
		var ret []DdnFailureSubInfo
		return ret
	}
	return o.DdnFailureSubsInfoList
}

// GetDdnFailureSubsInfoListOk returns a tuple with the DdnFailureSubsInfoList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DdnFailureSubs) GetDdnFailureSubsInfoListOk() ([]DdnFailureSubInfo, bool) {
	if o == nil || isNil(o.DdnFailureSubsInfoList) {
		return nil, false
	}
	return o.DdnFailureSubsInfoList, true
}

// HasDdnFailureSubsInfoList returns a boolean if a field has been set.
func (o *DdnFailureSubs) HasDdnFailureSubsInfoList() bool {
	if o != nil && !isNil(o.DdnFailureSubsInfoList) {
		return true
	}

	return false
}

// SetDdnFailureSubsInfoList gets a reference to the given []DdnFailureSubInfo and assigns it to the DdnFailureSubsInfoList field.
func (o *DdnFailureSubs) SetDdnFailureSubsInfoList(v []DdnFailureSubInfo) {
	o.DdnFailureSubsInfoList = v
}

func (o DdnFailureSubs) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DdnFailureSubs) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.DdnFailureSubsInd) {
		toSerialize["ddnFailureSubsInd"] = o.DdnFailureSubsInd
	}
	if !isNil(o.DdnFailureSubsInfoList) {
		toSerialize["ddnFailureSubsInfoList"] = o.DdnFailureSubsInfoList
	}
	return toSerialize, nil
}

type NullableDdnFailureSubs struct {
	value *DdnFailureSubs
	isSet bool
}

func (v NullableDdnFailureSubs) Get() *DdnFailureSubs {
	return v.value
}

func (v *NullableDdnFailureSubs) Set(val *DdnFailureSubs) {
	v.value = val
	v.isSet = true
}

func (v NullableDdnFailureSubs) IsSet() bool {
	return v.isSet
}

func (v *NullableDdnFailureSubs) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDdnFailureSubs(val *DdnFailureSubs) *NullableDdnFailureSubs {
	return &NullableDdnFailureSubs{value: val, isSet: true}
}

func (v NullableDdnFailureSubs) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDdnFailureSubs) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


