/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the DdnFailureSubInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DdnFailureSubInfo{}

// DdnFailureSubInfo DDN Failure Subscription Information
type DdnFailureSubInfo struct {
	NotifyCorrelationId      string                 `json:"notifyCorrelationId"`
	DddTrafficDescriptorList []DddTrafficDescriptor `json:"dddTrafficDescriptorList,omitempty"`
}

// NewDdnFailureSubInfo instantiates a new DdnFailureSubInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDdnFailureSubInfo(notifyCorrelationId string) *DdnFailureSubInfo {
	this := DdnFailureSubInfo{}
	this.NotifyCorrelationId = notifyCorrelationId
	return &this
}

// NewDdnFailureSubInfoWithDefaults instantiates a new DdnFailureSubInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDdnFailureSubInfoWithDefaults() *DdnFailureSubInfo {
	this := DdnFailureSubInfo{}
	return &this
}

// GetNotifyCorrelationId returns the NotifyCorrelationId field value
func (o *DdnFailureSubInfo) GetNotifyCorrelationId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotifyCorrelationId
}

// GetNotifyCorrelationIdOk returns a tuple with the NotifyCorrelationId field value
// and a boolean to check if the value has been set.
func (o *DdnFailureSubInfo) GetNotifyCorrelationIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotifyCorrelationId, true
}

// SetNotifyCorrelationId sets field value
func (o *DdnFailureSubInfo) SetNotifyCorrelationId(v string) {
	o.NotifyCorrelationId = v
}

// GetDddTrafficDescriptorList returns the DddTrafficDescriptorList field value if set, zero value otherwise.
func (o *DdnFailureSubInfo) GetDddTrafficDescriptorList() []DddTrafficDescriptor {
	if o == nil || IsNil(o.DddTrafficDescriptorList) {
		var ret []DddTrafficDescriptor
		return ret
	}
	return o.DddTrafficDescriptorList
}

// GetDddTrafficDescriptorListOk returns a tuple with the DddTrafficDescriptorList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DdnFailureSubInfo) GetDddTrafficDescriptorListOk() ([]DddTrafficDescriptor, bool) {
	if o == nil || IsNil(o.DddTrafficDescriptorList) {
		return nil, false
	}
	return o.DddTrafficDescriptorList, true
}

// HasDddTrafficDescriptorList returns a boolean if a field has been set.
func (o *DdnFailureSubInfo) HasDddTrafficDescriptorList() bool {
	if o != nil && !IsNil(o.DddTrafficDescriptorList) {
		return true
	}

	return false
}

// SetDddTrafficDescriptorList gets a reference to the given []DddTrafficDescriptor and assigns it to the DddTrafficDescriptorList field.
func (o *DdnFailureSubInfo) SetDddTrafficDescriptorList(v []DddTrafficDescriptor) {
	o.DddTrafficDescriptorList = v
}

func (o DdnFailureSubInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DdnFailureSubInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["notifyCorrelationId"] = o.NotifyCorrelationId
	if !IsNil(o.DddTrafficDescriptorList) {
		toSerialize["dddTrafficDescriptorList"] = o.DddTrafficDescriptorList
	}
	return toSerialize, nil
}

type NullableDdnFailureSubInfo struct {
	value *DdnFailureSubInfo
	isSet bool
}

func (v NullableDdnFailureSubInfo) Get() *DdnFailureSubInfo {
	return v.value
}

func (v *NullableDdnFailureSubInfo) Set(val *DdnFailureSubInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableDdnFailureSubInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableDdnFailureSubInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDdnFailureSubInfo(val *DdnFailureSubInfo) *NullableDdnFailureSubInfo {
	return &NullableDdnFailureSubInfo{value: val, isSet: true}
}

func (v NullableDdnFailureSubInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDdnFailureSubInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
