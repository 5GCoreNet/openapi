/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the ExemptionInd type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExemptionInd{}

// ExemptionInd Exemption Indication
type ExemptionInd struct {
	DnnCongestion *bool `json:"dnnCongestion,omitempty"`
	SnssaiOnlyCongestion *bool `json:"snssaiOnlyCongestion,omitempty"`
	SnssaiDnnCongestion *bool `json:"snssaiDnnCongestion,omitempty"`
}

// NewExemptionInd instantiates a new ExemptionInd object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExemptionInd() *ExemptionInd {
	this := ExemptionInd{}
	var dnnCongestion bool = false
	this.DnnCongestion = &dnnCongestion
	var snssaiOnlyCongestion bool = false
	this.SnssaiOnlyCongestion = &snssaiOnlyCongestion
	var snssaiDnnCongestion bool = false
	this.SnssaiDnnCongestion = &snssaiDnnCongestion
	return &this
}

// NewExemptionIndWithDefaults instantiates a new ExemptionInd object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExemptionIndWithDefaults() *ExemptionInd {
	this := ExemptionInd{}
	var dnnCongestion bool = false
	this.DnnCongestion = &dnnCongestion
	var snssaiOnlyCongestion bool = false
	this.SnssaiOnlyCongestion = &snssaiOnlyCongestion
	var snssaiDnnCongestion bool = false
	this.SnssaiDnnCongestion = &snssaiDnnCongestion
	return &this
}

// GetDnnCongestion returns the DnnCongestion field value if set, zero value otherwise.
func (o *ExemptionInd) GetDnnCongestion() bool {
	if o == nil || IsNil(o.DnnCongestion) {
		var ret bool
		return ret
	}
	return *o.DnnCongestion
}

// GetDnnCongestionOk returns a tuple with the DnnCongestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExemptionInd) GetDnnCongestionOk() (*bool, bool) {
	if o == nil || IsNil(o.DnnCongestion) {
		return nil, false
	}
	return o.DnnCongestion, true
}

// HasDnnCongestion returns a boolean if a field has been set.
func (o *ExemptionInd) HasDnnCongestion() bool {
	if o != nil && !IsNil(o.DnnCongestion) {
		return true
	}

	return false
}

// SetDnnCongestion gets a reference to the given bool and assigns it to the DnnCongestion field.
func (o *ExemptionInd) SetDnnCongestion(v bool) {
	o.DnnCongestion = &v
}

// GetSnssaiOnlyCongestion returns the SnssaiOnlyCongestion field value if set, zero value otherwise.
func (o *ExemptionInd) GetSnssaiOnlyCongestion() bool {
	if o == nil || IsNil(o.SnssaiOnlyCongestion) {
		var ret bool
		return ret
	}
	return *o.SnssaiOnlyCongestion
}

// GetSnssaiOnlyCongestionOk returns a tuple with the SnssaiOnlyCongestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExemptionInd) GetSnssaiOnlyCongestionOk() (*bool, bool) {
	if o == nil || IsNil(o.SnssaiOnlyCongestion) {
		return nil, false
	}
	return o.SnssaiOnlyCongestion, true
}

// HasSnssaiOnlyCongestion returns a boolean if a field has been set.
func (o *ExemptionInd) HasSnssaiOnlyCongestion() bool {
	if o != nil && !IsNil(o.SnssaiOnlyCongestion) {
		return true
	}

	return false
}

// SetSnssaiOnlyCongestion gets a reference to the given bool and assigns it to the SnssaiOnlyCongestion field.
func (o *ExemptionInd) SetSnssaiOnlyCongestion(v bool) {
	o.SnssaiOnlyCongestion = &v
}

// GetSnssaiDnnCongestion returns the SnssaiDnnCongestion field value if set, zero value otherwise.
func (o *ExemptionInd) GetSnssaiDnnCongestion() bool {
	if o == nil || IsNil(o.SnssaiDnnCongestion) {
		var ret bool
		return ret
	}
	return *o.SnssaiDnnCongestion
}

// GetSnssaiDnnCongestionOk returns a tuple with the SnssaiDnnCongestion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExemptionInd) GetSnssaiDnnCongestionOk() (*bool, bool) {
	if o == nil || IsNil(o.SnssaiDnnCongestion) {
		return nil, false
	}
	return o.SnssaiDnnCongestion, true
}

// HasSnssaiDnnCongestion returns a boolean if a field has been set.
func (o *ExemptionInd) HasSnssaiDnnCongestion() bool {
	if o != nil && !IsNil(o.SnssaiDnnCongestion) {
		return true
	}

	return false
}

// SetSnssaiDnnCongestion gets a reference to the given bool and assigns it to the SnssaiDnnCongestion field.
func (o *ExemptionInd) SetSnssaiDnnCongestion(v bool) {
	o.SnssaiDnnCongestion = &v
}

func (o ExemptionInd) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExemptionInd) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DnnCongestion) {
		toSerialize["dnnCongestion"] = o.DnnCongestion
	}
	if !IsNil(o.SnssaiOnlyCongestion) {
		toSerialize["snssaiOnlyCongestion"] = o.SnssaiOnlyCongestion
	}
	if !IsNil(o.SnssaiDnnCongestion) {
		toSerialize["snssaiDnnCongestion"] = o.SnssaiDnnCongestion
	}
	return toSerialize, nil
}

type NullableExemptionInd struct {
	value *ExemptionInd
	isSet bool
}

func (v NullableExemptionInd) Get() *ExemptionInd {
	return v.value
}

func (v *NullableExemptionInd) Set(val *ExemptionInd) {
	v.value = val
	v.isSet = true
}

func (v NullableExemptionInd) IsSet() bool {
	return v.isSet
}

func (v *NullableExemptionInd) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExemptionInd(val *ExemptionInd) *NullableExemptionInd {
	return &NullableExemptionInd{value: val, isSet: true}
}

func (v NullableExemptionInd) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExemptionInd) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


