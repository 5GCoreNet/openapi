/*
Nsmf_PDUSession

SMF PDU Session Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the HsmfUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HsmfUpdateData{}

// HsmfUpdateData Data within Update Request towards H-SMF, or from I-SMF to SMF
type HsmfUpdateData struct {
	RequestIndication RequestIndication `json:"requestIndication"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.  
	Pei *string `json:"pei,omitempty"`
	VcnTunnelInfo *TunnelInfo `json:"vcnTunnelInfo,omitempty"`
	IcnTunnelInfo *TunnelInfo `json:"icnTunnelInfo,omitempty"`
	AdditionalCnTunnelInfo *TunnelInfo `json:"additionalCnTunnelInfo,omitempty"`
	ServingNetwork *PlmnIdNid `json:"servingNetwork,omitempty"`
	AnType *AccessType `json:"anType,omitempty"`
	AdditionalAnType *AccessType `json:"additionalAnType,omitempty"`
	RatType *RatType `json:"ratType,omitempty"`
	UeLocation *UserLocation `json:"ueLocation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time. 
	UeTimeZone *string `json:"ueTimeZone,omitempty"`
	AddUeLocation *UserLocation `json:"addUeLocation,omitempty"`
	PauseCharging *bool `json:"pauseCharging,omitempty"`
	// Procedure Transaction Identifier
	Pti *int32 `json:"pti,omitempty"`
	N1SmInfoFromUe *RefToBinaryData `json:"n1SmInfoFromUe,omitempty"`
	UnknownN1SmInfo *RefToBinaryData `json:"unknownN1SmInfo,omitempty"`
	QosFlowsRelNotifyList []QosFlowItem `json:"qosFlowsRelNotifyList,omitempty"`
	QosFlowsNotifyList []QosFlowNotifyItem `json:"qosFlowsNotifyList,omitempty"`
	NotifyList []PduSessionNotifyItem `json:"NotifyList,omitempty"`
	EpsBearerId []int32 `json:"epsBearerId,omitempty"`
	HoPreparationIndication *bool `json:"hoPreparationIndication,omitempty"`
	RevokeEbiList []int32 `json:"revokeEbiList,omitempty"`
	Cause *Cause `json:"cause,omitempty"`
	NgApCause *NgApCause `json:"ngApCause,omitempty"`
	// Unsigned Integer, i.e. only value 0 and integers above 0 are permissible.
	Var5gMmCauseValue *int32 `json:"5gMmCauseValue,omitempty"`
	AlwaysOnRequested *bool `json:"alwaysOnRequested,omitempty"`
	EpsInterworkingInd *EpsInterworkingIndication `json:"epsInterworkingInd,omitempty"`
	SecondaryRatUsageReport []SecondaryRatUsageReport `json:"secondaryRatUsageReport,omitempty"`
	SecondaryRatUsageInfo []SecondaryRatUsageInfo `json:"secondaryRatUsageInfo,omitempty"`
	AnTypeCanBeChanged *bool `json:"anTypeCanBeChanged,omitempty"`
	MaReleaseInd *MaReleaseIndication `json:"maReleaseInd,omitempty"`
	MaNwUpgradeInd *bool `json:"maNwUpgradeInd,omitempty"`
	MaRequestInd *bool `json:"maRequestInd,omitempty"`
	UnavailableAccessInd *UnavailableAccessIndication `json:"unavailableAccessInd,omitempty"`
	PsaInfo []PsaInformation `json:"psaInfo,omitempty"`
	UlclBpInfo *UlclBpInformation `json:"ulclBpInfo,omitempty"`
	N4Info *N4Information `json:"n4Info,omitempty"`
	N4InfoExt1 *N4Information `json:"n4InfoExt1,omitempty"`
	N4InfoExt2 *N4Information `json:"n4InfoExt2,omitempty"`
	PresenceInLadn *PresenceState `json:"presenceInLadn,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	VsmfPduSessionUri *string `json:"vsmfPduSessionUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	VsmfId *string `json:"vsmfId,omitempty"`
	VSmfServiceInstanceId *string `json:"vSmfServiceInstanceId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	IsmfPduSessionUri *string `json:"ismfPduSessionUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	IsmfId *string `json:"ismfId,omitempty"`
	ISmfServiceInstanceId *string `json:"iSmfServiceInstanceId,omitempty"`
	DlServingPlmnRateCtl NullableInt32 `json:"dlServingPlmnRateCtl,omitempty"`
	DnaiList []string `json:"dnaiList,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	RoamingChargingProfile *RoamingChargingProfile `json:"roamingChargingProfile,omitempty"`
	MoExpDataCounter *MoExpDataCounter `json:"moExpDataCounter,omitempty"`
	VplmnQos *VplmnQos `json:"vplmnQos,omitempty"`
	SecurityResult *SecurityResult `json:"securityResult,omitempty"`
	UpSecurityInfo *UpSecurityInfo `json:"upSecurityInfo,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	AmfNfId *string `json:"amfNfId,omitempty"`
	Guami *Guami `json:"guami,omitempty"`
	SecondaryRatUsageDataReportContainer []string `json:"secondaryRatUsageDataReportContainer,omitempty"`
	SmPolicyNotifyInd *bool `json:"smPolicyNotifyInd,omitempty"`
	PcfUeCallbackInfo NullablePcfUeCallbackInfo `json:"pcfUeCallbackInfo,omitempty"`
	SatelliteBackhaulCat *SatelliteBackhaulCategory `json:"satelliteBackhaulCat,omitempty"`
	MaxIntegrityProtectedDataRateUl *MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateUl,omitempty"`
	MaxIntegrityProtectedDataRateDl *MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateDl,omitempty"`
	UpCnxState *UpCnxState `json:"upCnxState,omitempty"`
}

// NewHsmfUpdateData instantiates a new HsmfUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHsmfUpdateData(requestIndication RequestIndication) *HsmfUpdateData {
	this := HsmfUpdateData{}
	this.RequestIndication = requestIndication
	var alwaysOnRequested bool = false
	this.AlwaysOnRequested = &alwaysOnRequested
	var anTypeCanBeChanged bool = false
	this.AnTypeCanBeChanged = &anTypeCanBeChanged
	var maNwUpgradeInd bool = false
	this.MaNwUpgradeInd = &maNwUpgradeInd
	var maRequestInd bool = false
	this.MaRequestInd = &maRequestInd
	return &this
}

// NewHsmfUpdateDataWithDefaults instantiates a new HsmfUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHsmfUpdateDataWithDefaults() *HsmfUpdateData {
	this := HsmfUpdateData{}
	var alwaysOnRequested bool = false
	this.AlwaysOnRequested = &alwaysOnRequested
	var anTypeCanBeChanged bool = false
	this.AnTypeCanBeChanged = &anTypeCanBeChanged
	var maNwUpgradeInd bool = false
	this.MaNwUpgradeInd = &maNwUpgradeInd
	var maRequestInd bool = false
	this.MaRequestInd = &maRequestInd
	return &this
}

// GetRequestIndication returns the RequestIndication field value
func (o *HsmfUpdateData) GetRequestIndication() RequestIndication {
	if o == nil {
		var ret RequestIndication
		return ret
	}

	return o.RequestIndication
}

// GetRequestIndicationOk returns a tuple with the RequestIndication field value
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRequestIndicationOk() (*RequestIndication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestIndication, true
}

// SetRequestIndication sets field value
func (o *HsmfUpdateData) SetRequestIndication(v RequestIndication) {
	o.RequestIndication = v
}

// GetPei returns the Pei field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPei() string {
	if o == nil || isNil(o.Pei) {
		var ret string
		return ret
	}
	return *o.Pei
}

// GetPeiOk returns a tuple with the Pei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPeiOk() (*string, bool) {
	if o == nil || isNil(o.Pei) {
		return nil, false
	}
	return o.Pei, true
}

// HasPei returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPei() bool {
	if o != nil && !isNil(o.Pei) {
		return true
	}

	return false
}

// SetPei gets a reference to the given string and assigns it to the Pei field.
func (o *HsmfUpdateData) SetPei(v string) {
	o.Pei = &v
}

// GetVcnTunnelInfo returns the VcnTunnelInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVcnTunnelInfo() TunnelInfo {
	if o == nil || isNil(o.VcnTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.VcnTunnelInfo
}

// GetVcnTunnelInfoOk returns a tuple with the VcnTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVcnTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || isNil(o.VcnTunnelInfo) {
		return nil, false
	}
	return o.VcnTunnelInfo, true
}

// HasVcnTunnelInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVcnTunnelInfo() bool {
	if o != nil && !isNil(o.VcnTunnelInfo) {
		return true
	}

	return false
}

// SetVcnTunnelInfo gets a reference to the given TunnelInfo and assigns it to the VcnTunnelInfo field.
func (o *HsmfUpdateData) SetVcnTunnelInfo(v TunnelInfo) {
	o.VcnTunnelInfo = &v
}

// GetIcnTunnelInfo returns the IcnTunnelInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetIcnTunnelInfo() TunnelInfo {
	if o == nil || isNil(o.IcnTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.IcnTunnelInfo
}

// GetIcnTunnelInfoOk returns a tuple with the IcnTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetIcnTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || isNil(o.IcnTunnelInfo) {
		return nil, false
	}
	return o.IcnTunnelInfo, true
}

// HasIcnTunnelInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasIcnTunnelInfo() bool {
	if o != nil && !isNil(o.IcnTunnelInfo) {
		return true
	}

	return false
}

// SetIcnTunnelInfo gets a reference to the given TunnelInfo and assigns it to the IcnTunnelInfo field.
func (o *HsmfUpdateData) SetIcnTunnelInfo(v TunnelInfo) {
	o.IcnTunnelInfo = &v
}

// GetAdditionalCnTunnelInfo returns the AdditionalCnTunnelInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAdditionalCnTunnelInfo() TunnelInfo {
	if o == nil || isNil(o.AdditionalCnTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.AdditionalCnTunnelInfo
}

// GetAdditionalCnTunnelInfoOk returns a tuple with the AdditionalCnTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAdditionalCnTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || isNil(o.AdditionalCnTunnelInfo) {
		return nil, false
	}
	return o.AdditionalCnTunnelInfo, true
}

// HasAdditionalCnTunnelInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAdditionalCnTunnelInfo() bool {
	if o != nil && !isNil(o.AdditionalCnTunnelInfo) {
		return true
	}

	return false
}

// SetAdditionalCnTunnelInfo gets a reference to the given TunnelInfo and assigns it to the AdditionalCnTunnelInfo field.
func (o *HsmfUpdateData) SetAdditionalCnTunnelInfo(v TunnelInfo) {
	o.AdditionalCnTunnelInfo = &v
}

// GetServingNetwork returns the ServingNetwork field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetServingNetwork() PlmnIdNid {
	if o == nil || isNil(o.ServingNetwork) {
		var ret PlmnIdNid
		return ret
	}
	return *o.ServingNetwork
}

// GetServingNetworkOk returns a tuple with the ServingNetwork field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetServingNetworkOk() (*PlmnIdNid, bool) {
	if o == nil || isNil(o.ServingNetwork) {
		return nil, false
	}
	return o.ServingNetwork, true
}

// HasServingNetwork returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasServingNetwork() bool {
	if o != nil && !isNil(o.ServingNetwork) {
		return true
	}

	return false
}

// SetServingNetwork gets a reference to the given PlmnIdNid and assigns it to the ServingNetwork field.
func (o *HsmfUpdateData) SetServingNetwork(v PlmnIdNid) {
	o.ServingNetwork = &v
}

// GetAnType returns the AnType field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAnType() AccessType {
	if o == nil || isNil(o.AnType) {
		var ret AccessType
		return ret
	}
	return *o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAnTypeOk() (*AccessType, bool) {
	if o == nil || isNil(o.AnType) {
		return nil, false
	}
	return o.AnType, true
}

// HasAnType returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAnType() bool {
	if o != nil && !isNil(o.AnType) {
		return true
	}

	return false
}

// SetAnType gets a reference to the given AccessType and assigns it to the AnType field.
func (o *HsmfUpdateData) SetAnType(v AccessType) {
	o.AnType = &v
}

// GetAdditionalAnType returns the AdditionalAnType field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAdditionalAnType() AccessType {
	if o == nil || isNil(o.AdditionalAnType) {
		var ret AccessType
		return ret
	}
	return *o.AdditionalAnType
}

// GetAdditionalAnTypeOk returns a tuple with the AdditionalAnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAdditionalAnTypeOk() (*AccessType, bool) {
	if o == nil || isNil(o.AdditionalAnType) {
		return nil, false
	}
	return o.AdditionalAnType, true
}

// HasAdditionalAnType returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAdditionalAnType() bool {
	if o != nil && !isNil(o.AdditionalAnType) {
		return true
	}

	return false
}

// SetAdditionalAnType gets a reference to the given AccessType and assigns it to the AdditionalAnType field.
func (o *HsmfUpdateData) SetAdditionalAnType(v AccessType) {
	o.AdditionalAnType = &v
}

// GetRatType returns the RatType field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetRatType() RatType {
	if o == nil || isNil(o.RatType) {
		var ret RatType
		return ret
	}
	return *o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRatTypeOk() (*RatType, bool) {
	if o == nil || isNil(o.RatType) {
		return nil, false
	}
	return o.RatType, true
}

// HasRatType returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasRatType() bool {
	if o != nil && !isNil(o.RatType) {
		return true
	}

	return false
}

// SetRatType gets a reference to the given RatType and assigns it to the RatType field.
func (o *HsmfUpdateData) SetRatType(v RatType) {
	o.RatType = &v
}

// GetUeLocation returns the UeLocation field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUeLocation() UserLocation {
	if o == nil || isNil(o.UeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.UeLocation
}

// GetUeLocationOk returns a tuple with the UeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUeLocationOk() (*UserLocation, bool) {
	if o == nil || isNil(o.UeLocation) {
		return nil, false
	}
	return o.UeLocation, true
}

// HasUeLocation returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUeLocation() bool {
	if o != nil && !isNil(o.UeLocation) {
		return true
	}

	return false
}

// SetUeLocation gets a reference to the given UserLocation and assigns it to the UeLocation field.
func (o *HsmfUpdateData) SetUeLocation(v UserLocation) {
	o.UeLocation = &v
}

// GetUeTimeZone returns the UeTimeZone field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUeTimeZone() string {
	if o == nil || isNil(o.UeTimeZone) {
		var ret string
		return ret
	}
	return *o.UeTimeZone
}

// GetUeTimeZoneOk returns a tuple with the UeTimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUeTimeZoneOk() (*string, bool) {
	if o == nil || isNil(o.UeTimeZone) {
		return nil, false
	}
	return o.UeTimeZone, true
}

// HasUeTimeZone returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUeTimeZone() bool {
	if o != nil && !isNil(o.UeTimeZone) {
		return true
	}

	return false
}

// SetUeTimeZone gets a reference to the given string and assigns it to the UeTimeZone field.
func (o *HsmfUpdateData) SetUeTimeZone(v string) {
	o.UeTimeZone = &v
}

// GetAddUeLocation returns the AddUeLocation field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAddUeLocation() UserLocation {
	if o == nil || isNil(o.AddUeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.AddUeLocation
}

// GetAddUeLocationOk returns a tuple with the AddUeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAddUeLocationOk() (*UserLocation, bool) {
	if o == nil || isNil(o.AddUeLocation) {
		return nil, false
	}
	return o.AddUeLocation, true
}

// HasAddUeLocation returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAddUeLocation() bool {
	if o != nil && !isNil(o.AddUeLocation) {
		return true
	}

	return false
}

// SetAddUeLocation gets a reference to the given UserLocation and assigns it to the AddUeLocation field.
func (o *HsmfUpdateData) SetAddUeLocation(v UserLocation) {
	o.AddUeLocation = &v
}

// GetPauseCharging returns the PauseCharging field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPauseCharging() bool {
	if o == nil || isNil(o.PauseCharging) {
		var ret bool
		return ret
	}
	return *o.PauseCharging
}

// GetPauseChargingOk returns a tuple with the PauseCharging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPauseChargingOk() (*bool, bool) {
	if o == nil || isNil(o.PauseCharging) {
		return nil, false
	}
	return o.PauseCharging, true
}

// HasPauseCharging returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPauseCharging() bool {
	if o != nil && !isNil(o.PauseCharging) {
		return true
	}

	return false
}

// SetPauseCharging gets a reference to the given bool and assigns it to the PauseCharging field.
func (o *HsmfUpdateData) SetPauseCharging(v bool) {
	o.PauseCharging = &v
}

// GetPti returns the Pti field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPti() int32 {
	if o == nil || isNil(o.Pti) {
		var ret int32
		return ret
	}
	return *o.Pti
}

// GetPtiOk returns a tuple with the Pti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPtiOk() (*int32, bool) {
	if o == nil || isNil(o.Pti) {
		return nil, false
	}
	return o.Pti, true
}

// HasPti returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPti() bool {
	if o != nil && !isNil(o.Pti) {
		return true
	}

	return false
}

// SetPti gets a reference to the given int32 and assigns it to the Pti field.
func (o *HsmfUpdateData) SetPti(v int32) {
	o.Pti = &v
}

// GetN1SmInfoFromUe returns the N1SmInfoFromUe field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetN1SmInfoFromUe() RefToBinaryData {
	if o == nil || isNil(o.N1SmInfoFromUe) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N1SmInfoFromUe
}

// GetN1SmInfoFromUeOk returns a tuple with the N1SmInfoFromUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetN1SmInfoFromUeOk() (*RefToBinaryData, bool) {
	if o == nil || isNil(o.N1SmInfoFromUe) {
		return nil, false
	}
	return o.N1SmInfoFromUe, true
}

// HasN1SmInfoFromUe returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasN1SmInfoFromUe() bool {
	if o != nil && !isNil(o.N1SmInfoFromUe) {
		return true
	}

	return false
}

// SetN1SmInfoFromUe gets a reference to the given RefToBinaryData and assigns it to the N1SmInfoFromUe field.
func (o *HsmfUpdateData) SetN1SmInfoFromUe(v RefToBinaryData) {
	o.N1SmInfoFromUe = &v
}

// GetUnknownN1SmInfo returns the UnknownN1SmInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUnknownN1SmInfo() RefToBinaryData {
	if o == nil || isNil(o.UnknownN1SmInfo) {
		var ret RefToBinaryData
		return ret
	}
	return *o.UnknownN1SmInfo
}

// GetUnknownN1SmInfoOk returns a tuple with the UnknownN1SmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUnknownN1SmInfoOk() (*RefToBinaryData, bool) {
	if o == nil || isNil(o.UnknownN1SmInfo) {
		return nil, false
	}
	return o.UnknownN1SmInfo, true
}

// HasUnknownN1SmInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUnknownN1SmInfo() bool {
	if o != nil && !isNil(o.UnknownN1SmInfo) {
		return true
	}

	return false
}

// SetUnknownN1SmInfo gets a reference to the given RefToBinaryData and assigns it to the UnknownN1SmInfo field.
func (o *HsmfUpdateData) SetUnknownN1SmInfo(v RefToBinaryData) {
	o.UnknownN1SmInfo = &v
}

// GetQosFlowsRelNotifyList returns the QosFlowsRelNotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetQosFlowsRelNotifyList() []QosFlowItem {
	if o == nil || isNil(o.QosFlowsRelNotifyList) {
		var ret []QosFlowItem
		return ret
	}
	return o.QosFlowsRelNotifyList
}

// GetQosFlowsRelNotifyListOk returns a tuple with the QosFlowsRelNotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetQosFlowsRelNotifyListOk() ([]QosFlowItem, bool) {
	if o == nil || isNil(o.QosFlowsRelNotifyList) {
		return nil, false
	}
	return o.QosFlowsRelNotifyList, true
}

// HasQosFlowsRelNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasQosFlowsRelNotifyList() bool {
	if o != nil && !isNil(o.QosFlowsRelNotifyList) {
		return true
	}

	return false
}

// SetQosFlowsRelNotifyList gets a reference to the given []QosFlowItem and assigns it to the QosFlowsRelNotifyList field.
func (o *HsmfUpdateData) SetQosFlowsRelNotifyList(v []QosFlowItem) {
	o.QosFlowsRelNotifyList = v
}

// GetQosFlowsNotifyList returns the QosFlowsNotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetQosFlowsNotifyList() []QosFlowNotifyItem {
	if o == nil || isNil(o.QosFlowsNotifyList) {
		var ret []QosFlowNotifyItem
		return ret
	}
	return o.QosFlowsNotifyList
}

// GetQosFlowsNotifyListOk returns a tuple with the QosFlowsNotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetQosFlowsNotifyListOk() ([]QosFlowNotifyItem, bool) {
	if o == nil || isNil(o.QosFlowsNotifyList) {
		return nil, false
	}
	return o.QosFlowsNotifyList, true
}

// HasQosFlowsNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasQosFlowsNotifyList() bool {
	if o != nil && !isNil(o.QosFlowsNotifyList) {
		return true
	}

	return false
}

// SetQosFlowsNotifyList gets a reference to the given []QosFlowNotifyItem and assigns it to the QosFlowsNotifyList field.
func (o *HsmfUpdateData) SetQosFlowsNotifyList(v []QosFlowNotifyItem) {
	o.QosFlowsNotifyList = v
}

// GetNotifyList returns the NotifyList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetNotifyList() []PduSessionNotifyItem {
	if o == nil || isNil(o.NotifyList) {
		var ret []PduSessionNotifyItem
		return ret
	}
	return o.NotifyList
}

// GetNotifyListOk returns a tuple with the NotifyList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetNotifyListOk() ([]PduSessionNotifyItem, bool) {
	if o == nil || isNil(o.NotifyList) {
		return nil, false
	}
	return o.NotifyList, true
}

// HasNotifyList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasNotifyList() bool {
	if o != nil && !isNil(o.NotifyList) {
		return true
	}

	return false
}

// SetNotifyList gets a reference to the given []PduSessionNotifyItem and assigns it to the NotifyList field.
func (o *HsmfUpdateData) SetNotifyList(v []PduSessionNotifyItem) {
	o.NotifyList = v
}

// GetEpsBearerId returns the EpsBearerId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetEpsBearerId() []int32 {
	if o == nil || isNil(o.EpsBearerId) {
		var ret []int32
		return ret
	}
	return o.EpsBearerId
}

// GetEpsBearerIdOk returns a tuple with the EpsBearerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetEpsBearerIdOk() ([]int32, bool) {
	if o == nil || isNil(o.EpsBearerId) {
		return nil, false
	}
	return o.EpsBearerId, true
}

// HasEpsBearerId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasEpsBearerId() bool {
	if o != nil && !isNil(o.EpsBearerId) {
		return true
	}

	return false
}

// SetEpsBearerId gets a reference to the given []int32 and assigns it to the EpsBearerId field.
func (o *HsmfUpdateData) SetEpsBearerId(v []int32) {
	o.EpsBearerId = v
}

// GetHoPreparationIndication returns the HoPreparationIndication field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetHoPreparationIndication() bool {
	if o == nil || isNil(o.HoPreparationIndication) {
		var ret bool
		return ret
	}
	return *o.HoPreparationIndication
}

// GetHoPreparationIndicationOk returns a tuple with the HoPreparationIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetHoPreparationIndicationOk() (*bool, bool) {
	if o == nil || isNil(o.HoPreparationIndication) {
		return nil, false
	}
	return o.HoPreparationIndication, true
}

// HasHoPreparationIndication returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasHoPreparationIndication() bool {
	if o != nil && !isNil(o.HoPreparationIndication) {
		return true
	}

	return false
}

// SetHoPreparationIndication gets a reference to the given bool and assigns it to the HoPreparationIndication field.
func (o *HsmfUpdateData) SetHoPreparationIndication(v bool) {
	o.HoPreparationIndication = &v
}

// GetRevokeEbiList returns the RevokeEbiList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetRevokeEbiList() []int32 {
	if o == nil || isNil(o.RevokeEbiList) {
		var ret []int32
		return ret
	}
	return o.RevokeEbiList
}

// GetRevokeEbiListOk returns a tuple with the RevokeEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRevokeEbiListOk() ([]int32, bool) {
	if o == nil || isNil(o.RevokeEbiList) {
		return nil, false
	}
	return o.RevokeEbiList, true
}

// HasRevokeEbiList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasRevokeEbiList() bool {
	if o != nil && !isNil(o.RevokeEbiList) {
		return true
	}

	return false
}

// SetRevokeEbiList gets a reference to the given []int32 and assigns it to the RevokeEbiList field.
func (o *HsmfUpdateData) SetRevokeEbiList(v []int32) {
	o.RevokeEbiList = v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetCause() Cause {
	if o == nil || isNil(o.Cause) {
		var ret Cause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetCauseOk() (*Cause, bool) {
	if o == nil || isNil(o.Cause) {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasCause() bool {
	if o != nil && !isNil(o.Cause) {
		return true
	}

	return false
}

// SetCause gets a reference to the given Cause and assigns it to the Cause field.
func (o *HsmfUpdateData) SetCause(v Cause) {
	o.Cause = &v
}

// GetNgApCause returns the NgApCause field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetNgApCause() NgApCause {
	if o == nil || isNil(o.NgApCause) {
		var ret NgApCause
		return ret
	}
	return *o.NgApCause
}

// GetNgApCauseOk returns a tuple with the NgApCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetNgApCauseOk() (*NgApCause, bool) {
	if o == nil || isNil(o.NgApCause) {
		return nil, false
	}
	return o.NgApCause, true
}

// HasNgApCause returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasNgApCause() bool {
	if o != nil && !isNil(o.NgApCause) {
		return true
	}

	return false
}

// SetNgApCause gets a reference to the given NgApCause and assigns it to the NgApCause field.
func (o *HsmfUpdateData) SetNgApCause(v NgApCause) {
	o.NgApCause = &v
}

// GetVar5gMmCauseValue returns the Var5gMmCauseValue field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVar5gMmCauseValue() int32 {
	if o == nil || isNil(o.Var5gMmCauseValue) {
		var ret int32
		return ret
	}
	return *o.Var5gMmCauseValue
}

// GetVar5gMmCauseValueOk returns a tuple with the Var5gMmCauseValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVar5gMmCauseValueOk() (*int32, bool) {
	if o == nil || isNil(o.Var5gMmCauseValue) {
		return nil, false
	}
	return o.Var5gMmCauseValue, true
}

// HasVar5gMmCauseValue returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVar5gMmCauseValue() bool {
	if o != nil && !isNil(o.Var5gMmCauseValue) {
		return true
	}

	return false
}

// SetVar5gMmCauseValue gets a reference to the given int32 and assigns it to the Var5gMmCauseValue field.
func (o *HsmfUpdateData) SetVar5gMmCauseValue(v int32) {
	o.Var5gMmCauseValue = &v
}

// GetAlwaysOnRequested returns the AlwaysOnRequested field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAlwaysOnRequested() bool {
	if o == nil || isNil(o.AlwaysOnRequested) {
		var ret bool
		return ret
	}
	return *o.AlwaysOnRequested
}

// GetAlwaysOnRequestedOk returns a tuple with the AlwaysOnRequested field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAlwaysOnRequestedOk() (*bool, bool) {
	if o == nil || isNil(o.AlwaysOnRequested) {
		return nil, false
	}
	return o.AlwaysOnRequested, true
}

// HasAlwaysOnRequested returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAlwaysOnRequested() bool {
	if o != nil && !isNil(o.AlwaysOnRequested) {
		return true
	}

	return false
}

// SetAlwaysOnRequested gets a reference to the given bool and assigns it to the AlwaysOnRequested field.
func (o *HsmfUpdateData) SetAlwaysOnRequested(v bool) {
	o.AlwaysOnRequested = &v
}

// GetEpsInterworkingInd returns the EpsInterworkingInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetEpsInterworkingInd() EpsInterworkingIndication {
	if o == nil || isNil(o.EpsInterworkingInd) {
		var ret EpsInterworkingIndication
		return ret
	}
	return *o.EpsInterworkingInd
}

// GetEpsInterworkingIndOk returns a tuple with the EpsInterworkingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetEpsInterworkingIndOk() (*EpsInterworkingIndication, bool) {
	if o == nil || isNil(o.EpsInterworkingInd) {
		return nil, false
	}
	return o.EpsInterworkingInd, true
}

// HasEpsInterworkingInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasEpsInterworkingInd() bool {
	if o != nil && !isNil(o.EpsInterworkingInd) {
		return true
	}

	return false
}

// SetEpsInterworkingInd gets a reference to the given EpsInterworkingIndication and assigns it to the EpsInterworkingInd field.
func (o *HsmfUpdateData) SetEpsInterworkingInd(v EpsInterworkingIndication) {
	o.EpsInterworkingInd = &v
}

// GetSecondaryRatUsageReport returns the SecondaryRatUsageReport field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecondaryRatUsageReport() []SecondaryRatUsageReport {
	if o == nil || isNil(o.SecondaryRatUsageReport) {
		var ret []SecondaryRatUsageReport
		return ret
	}
	return o.SecondaryRatUsageReport
}

// GetSecondaryRatUsageReportOk returns a tuple with the SecondaryRatUsageReport field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecondaryRatUsageReportOk() ([]SecondaryRatUsageReport, bool) {
	if o == nil || isNil(o.SecondaryRatUsageReport) {
		return nil, false
	}
	return o.SecondaryRatUsageReport, true
}

// HasSecondaryRatUsageReport returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecondaryRatUsageReport() bool {
	if o != nil && !isNil(o.SecondaryRatUsageReport) {
		return true
	}

	return false
}

// SetSecondaryRatUsageReport gets a reference to the given []SecondaryRatUsageReport and assigns it to the SecondaryRatUsageReport field.
func (o *HsmfUpdateData) SetSecondaryRatUsageReport(v []SecondaryRatUsageReport) {
	o.SecondaryRatUsageReport = v
}

// GetSecondaryRatUsageInfo returns the SecondaryRatUsageInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecondaryRatUsageInfo() []SecondaryRatUsageInfo {
	if o == nil || isNil(o.SecondaryRatUsageInfo) {
		var ret []SecondaryRatUsageInfo
		return ret
	}
	return o.SecondaryRatUsageInfo
}

// GetSecondaryRatUsageInfoOk returns a tuple with the SecondaryRatUsageInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecondaryRatUsageInfoOk() ([]SecondaryRatUsageInfo, bool) {
	if o == nil || isNil(o.SecondaryRatUsageInfo) {
		return nil, false
	}
	return o.SecondaryRatUsageInfo, true
}

// HasSecondaryRatUsageInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecondaryRatUsageInfo() bool {
	if o != nil && !isNil(o.SecondaryRatUsageInfo) {
		return true
	}

	return false
}

// SetSecondaryRatUsageInfo gets a reference to the given []SecondaryRatUsageInfo and assigns it to the SecondaryRatUsageInfo field.
func (o *HsmfUpdateData) SetSecondaryRatUsageInfo(v []SecondaryRatUsageInfo) {
	o.SecondaryRatUsageInfo = v
}

// GetAnTypeCanBeChanged returns the AnTypeCanBeChanged field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAnTypeCanBeChanged() bool {
	if o == nil || isNil(o.AnTypeCanBeChanged) {
		var ret bool
		return ret
	}
	return *o.AnTypeCanBeChanged
}

// GetAnTypeCanBeChangedOk returns a tuple with the AnTypeCanBeChanged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAnTypeCanBeChangedOk() (*bool, bool) {
	if o == nil || isNil(o.AnTypeCanBeChanged) {
		return nil, false
	}
	return o.AnTypeCanBeChanged, true
}

// HasAnTypeCanBeChanged returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAnTypeCanBeChanged() bool {
	if o != nil && !isNil(o.AnTypeCanBeChanged) {
		return true
	}

	return false
}

// SetAnTypeCanBeChanged gets a reference to the given bool and assigns it to the AnTypeCanBeChanged field.
func (o *HsmfUpdateData) SetAnTypeCanBeChanged(v bool) {
	o.AnTypeCanBeChanged = &v
}

// GetMaReleaseInd returns the MaReleaseInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMaReleaseInd() MaReleaseIndication {
	if o == nil || isNil(o.MaReleaseInd) {
		var ret MaReleaseIndication
		return ret
	}
	return *o.MaReleaseInd
}

// GetMaReleaseIndOk returns a tuple with the MaReleaseInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMaReleaseIndOk() (*MaReleaseIndication, bool) {
	if o == nil || isNil(o.MaReleaseInd) {
		return nil, false
	}
	return o.MaReleaseInd, true
}

// HasMaReleaseInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMaReleaseInd() bool {
	if o != nil && !isNil(o.MaReleaseInd) {
		return true
	}

	return false
}

// SetMaReleaseInd gets a reference to the given MaReleaseIndication and assigns it to the MaReleaseInd field.
func (o *HsmfUpdateData) SetMaReleaseInd(v MaReleaseIndication) {
	o.MaReleaseInd = &v
}

// GetMaNwUpgradeInd returns the MaNwUpgradeInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMaNwUpgradeInd() bool {
	if o == nil || isNil(o.MaNwUpgradeInd) {
		var ret bool
		return ret
	}
	return *o.MaNwUpgradeInd
}

// GetMaNwUpgradeIndOk returns a tuple with the MaNwUpgradeInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMaNwUpgradeIndOk() (*bool, bool) {
	if o == nil || isNil(o.MaNwUpgradeInd) {
		return nil, false
	}
	return o.MaNwUpgradeInd, true
}

// HasMaNwUpgradeInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMaNwUpgradeInd() bool {
	if o != nil && !isNil(o.MaNwUpgradeInd) {
		return true
	}

	return false
}

// SetMaNwUpgradeInd gets a reference to the given bool and assigns it to the MaNwUpgradeInd field.
func (o *HsmfUpdateData) SetMaNwUpgradeInd(v bool) {
	o.MaNwUpgradeInd = &v
}

// GetMaRequestInd returns the MaRequestInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMaRequestInd() bool {
	if o == nil || isNil(o.MaRequestInd) {
		var ret bool
		return ret
	}
	return *o.MaRequestInd
}

// GetMaRequestIndOk returns a tuple with the MaRequestInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMaRequestIndOk() (*bool, bool) {
	if o == nil || isNil(o.MaRequestInd) {
		return nil, false
	}
	return o.MaRequestInd, true
}

// HasMaRequestInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMaRequestInd() bool {
	if o != nil && !isNil(o.MaRequestInd) {
		return true
	}

	return false
}

// SetMaRequestInd gets a reference to the given bool and assigns it to the MaRequestInd field.
func (o *HsmfUpdateData) SetMaRequestInd(v bool) {
	o.MaRequestInd = &v
}

// GetUnavailableAccessInd returns the UnavailableAccessInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUnavailableAccessInd() UnavailableAccessIndication {
	if o == nil || isNil(o.UnavailableAccessInd) {
		var ret UnavailableAccessIndication
		return ret
	}
	return *o.UnavailableAccessInd
}

// GetUnavailableAccessIndOk returns a tuple with the UnavailableAccessInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUnavailableAccessIndOk() (*UnavailableAccessIndication, bool) {
	if o == nil || isNil(o.UnavailableAccessInd) {
		return nil, false
	}
	return o.UnavailableAccessInd, true
}

// HasUnavailableAccessInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUnavailableAccessInd() bool {
	if o != nil && !isNil(o.UnavailableAccessInd) {
		return true
	}

	return false
}

// SetUnavailableAccessInd gets a reference to the given UnavailableAccessIndication and assigns it to the UnavailableAccessInd field.
func (o *HsmfUpdateData) SetUnavailableAccessInd(v UnavailableAccessIndication) {
	o.UnavailableAccessInd = &v
}

// GetPsaInfo returns the PsaInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPsaInfo() []PsaInformation {
	if o == nil || isNil(o.PsaInfo) {
		var ret []PsaInformation
		return ret
	}
	return o.PsaInfo
}

// GetPsaInfoOk returns a tuple with the PsaInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPsaInfoOk() ([]PsaInformation, bool) {
	if o == nil || isNil(o.PsaInfo) {
		return nil, false
	}
	return o.PsaInfo, true
}

// HasPsaInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPsaInfo() bool {
	if o != nil && !isNil(o.PsaInfo) {
		return true
	}

	return false
}

// SetPsaInfo gets a reference to the given []PsaInformation and assigns it to the PsaInfo field.
func (o *HsmfUpdateData) SetPsaInfo(v []PsaInformation) {
	o.PsaInfo = v
}

// GetUlclBpInfo returns the UlclBpInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUlclBpInfo() UlclBpInformation {
	if o == nil || isNil(o.UlclBpInfo) {
		var ret UlclBpInformation
		return ret
	}
	return *o.UlclBpInfo
}

// GetUlclBpInfoOk returns a tuple with the UlclBpInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUlclBpInfoOk() (*UlclBpInformation, bool) {
	if o == nil || isNil(o.UlclBpInfo) {
		return nil, false
	}
	return o.UlclBpInfo, true
}

// HasUlclBpInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUlclBpInfo() bool {
	if o != nil && !isNil(o.UlclBpInfo) {
		return true
	}

	return false
}

// SetUlclBpInfo gets a reference to the given UlclBpInformation and assigns it to the UlclBpInfo field.
func (o *HsmfUpdateData) SetUlclBpInfo(v UlclBpInformation) {
	o.UlclBpInfo = &v
}

// GetN4Info returns the N4Info field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetN4Info() N4Information {
	if o == nil || isNil(o.N4Info) {
		var ret N4Information
		return ret
	}
	return *o.N4Info
}

// GetN4InfoOk returns a tuple with the N4Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetN4InfoOk() (*N4Information, bool) {
	if o == nil || isNil(o.N4Info) {
		return nil, false
	}
	return o.N4Info, true
}

// HasN4Info returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasN4Info() bool {
	if o != nil && !isNil(o.N4Info) {
		return true
	}

	return false
}

// SetN4Info gets a reference to the given N4Information and assigns it to the N4Info field.
func (o *HsmfUpdateData) SetN4Info(v N4Information) {
	o.N4Info = &v
}

// GetN4InfoExt1 returns the N4InfoExt1 field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetN4InfoExt1() N4Information {
	if o == nil || isNil(o.N4InfoExt1) {
		var ret N4Information
		return ret
	}
	return *o.N4InfoExt1
}

// GetN4InfoExt1Ok returns a tuple with the N4InfoExt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetN4InfoExt1Ok() (*N4Information, bool) {
	if o == nil || isNil(o.N4InfoExt1) {
		return nil, false
	}
	return o.N4InfoExt1, true
}

// HasN4InfoExt1 returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasN4InfoExt1() bool {
	if o != nil && !isNil(o.N4InfoExt1) {
		return true
	}

	return false
}

// SetN4InfoExt1 gets a reference to the given N4Information and assigns it to the N4InfoExt1 field.
func (o *HsmfUpdateData) SetN4InfoExt1(v N4Information) {
	o.N4InfoExt1 = &v
}

// GetN4InfoExt2 returns the N4InfoExt2 field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetN4InfoExt2() N4Information {
	if o == nil || isNil(o.N4InfoExt2) {
		var ret N4Information
		return ret
	}
	return *o.N4InfoExt2
}

// GetN4InfoExt2Ok returns a tuple with the N4InfoExt2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetN4InfoExt2Ok() (*N4Information, bool) {
	if o == nil || isNil(o.N4InfoExt2) {
		return nil, false
	}
	return o.N4InfoExt2, true
}

// HasN4InfoExt2 returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasN4InfoExt2() bool {
	if o != nil && !isNil(o.N4InfoExt2) {
		return true
	}

	return false
}

// SetN4InfoExt2 gets a reference to the given N4Information and assigns it to the N4InfoExt2 field.
func (o *HsmfUpdateData) SetN4InfoExt2(v N4Information) {
	o.N4InfoExt2 = &v
}

// GetPresenceInLadn returns the PresenceInLadn field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetPresenceInLadn() PresenceState {
	if o == nil || isNil(o.PresenceInLadn) {
		var ret PresenceState
		return ret
	}
	return *o.PresenceInLadn
}

// GetPresenceInLadnOk returns a tuple with the PresenceInLadn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetPresenceInLadnOk() (*PresenceState, bool) {
	if o == nil || isNil(o.PresenceInLadn) {
		return nil, false
	}
	return o.PresenceInLadn, true
}

// HasPresenceInLadn returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPresenceInLadn() bool {
	if o != nil && !isNil(o.PresenceInLadn) {
		return true
	}

	return false
}

// SetPresenceInLadn gets a reference to the given PresenceState and assigns it to the PresenceInLadn field.
func (o *HsmfUpdateData) SetPresenceInLadn(v PresenceState) {
	o.PresenceInLadn = &v
}

// GetVsmfPduSessionUri returns the VsmfPduSessionUri field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVsmfPduSessionUri() string {
	if o == nil || isNil(o.VsmfPduSessionUri) {
		var ret string
		return ret
	}
	return *o.VsmfPduSessionUri
}

// GetVsmfPduSessionUriOk returns a tuple with the VsmfPduSessionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVsmfPduSessionUriOk() (*string, bool) {
	if o == nil || isNil(o.VsmfPduSessionUri) {
		return nil, false
	}
	return o.VsmfPduSessionUri, true
}

// HasVsmfPduSessionUri returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVsmfPduSessionUri() bool {
	if o != nil && !isNil(o.VsmfPduSessionUri) {
		return true
	}

	return false
}

// SetVsmfPduSessionUri gets a reference to the given string and assigns it to the VsmfPduSessionUri field.
func (o *HsmfUpdateData) SetVsmfPduSessionUri(v string) {
	o.VsmfPduSessionUri = &v
}

// GetVsmfId returns the VsmfId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVsmfId() string {
	if o == nil || isNil(o.VsmfId) {
		var ret string
		return ret
	}
	return *o.VsmfId
}

// GetVsmfIdOk returns a tuple with the VsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVsmfIdOk() (*string, bool) {
	if o == nil || isNil(o.VsmfId) {
		return nil, false
	}
	return o.VsmfId, true
}

// HasVsmfId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVsmfId() bool {
	if o != nil && !isNil(o.VsmfId) {
		return true
	}

	return false
}

// SetVsmfId gets a reference to the given string and assigns it to the VsmfId field.
func (o *HsmfUpdateData) SetVsmfId(v string) {
	o.VsmfId = &v
}

// GetVSmfServiceInstanceId returns the VSmfServiceInstanceId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVSmfServiceInstanceId() string {
	if o == nil || isNil(o.VSmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.VSmfServiceInstanceId
}

// GetVSmfServiceInstanceIdOk returns a tuple with the VSmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || isNil(o.VSmfServiceInstanceId) {
		return nil, false
	}
	return o.VSmfServiceInstanceId, true
}

// HasVSmfServiceInstanceId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVSmfServiceInstanceId() bool {
	if o != nil && !isNil(o.VSmfServiceInstanceId) {
		return true
	}

	return false
}

// SetVSmfServiceInstanceId gets a reference to the given string and assigns it to the VSmfServiceInstanceId field.
func (o *HsmfUpdateData) SetVSmfServiceInstanceId(v string) {
	o.VSmfServiceInstanceId = &v
}

// GetIsmfPduSessionUri returns the IsmfPduSessionUri field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetIsmfPduSessionUri() string {
	if o == nil || isNil(o.IsmfPduSessionUri) {
		var ret string
		return ret
	}
	return *o.IsmfPduSessionUri
}

// GetIsmfPduSessionUriOk returns a tuple with the IsmfPduSessionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetIsmfPduSessionUriOk() (*string, bool) {
	if o == nil || isNil(o.IsmfPduSessionUri) {
		return nil, false
	}
	return o.IsmfPduSessionUri, true
}

// HasIsmfPduSessionUri returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasIsmfPduSessionUri() bool {
	if o != nil && !isNil(o.IsmfPduSessionUri) {
		return true
	}

	return false
}

// SetIsmfPduSessionUri gets a reference to the given string and assigns it to the IsmfPduSessionUri field.
func (o *HsmfUpdateData) SetIsmfPduSessionUri(v string) {
	o.IsmfPduSessionUri = &v
}

// GetIsmfId returns the IsmfId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetIsmfId() string {
	if o == nil || isNil(o.IsmfId) {
		var ret string
		return ret
	}
	return *o.IsmfId
}

// GetIsmfIdOk returns a tuple with the IsmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetIsmfIdOk() (*string, bool) {
	if o == nil || isNil(o.IsmfId) {
		return nil, false
	}
	return o.IsmfId, true
}

// HasIsmfId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasIsmfId() bool {
	if o != nil && !isNil(o.IsmfId) {
		return true
	}

	return false
}

// SetIsmfId gets a reference to the given string and assigns it to the IsmfId field.
func (o *HsmfUpdateData) SetIsmfId(v string) {
	o.IsmfId = &v
}

// GetISmfServiceInstanceId returns the ISmfServiceInstanceId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetISmfServiceInstanceId() string {
	if o == nil || isNil(o.ISmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.ISmfServiceInstanceId
}

// GetISmfServiceInstanceIdOk returns a tuple with the ISmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetISmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || isNil(o.ISmfServiceInstanceId) {
		return nil, false
	}
	return o.ISmfServiceInstanceId, true
}

// HasISmfServiceInstanceId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasISmfServiceInstanceId() bool {
	if o != nil && !isNil(o.ISmfServiceInstanceId) {
		return true
	}

	return false
}

// SetISmfServiceInstanceId gets a reference to the given string and assigns it to the ISmfServiceInstanceId field.
func (o *HsmfUpdateData) SetISmfServiceInstanceId(v string) {
	o.ISmfServiceInstanceId = &v
}

// GetDlServingPlmnRateCtl returns the DlServingPlmnRateCtl field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HsmfUpdateData) GetDlServingPlmnRateCtl() int32 {
	if o == nil || isNil(o.DlServingPlmnRateCtl.Get()) {
		var ret int32
		return ret
	}
	return *o.DlServingPlmnRateCtl.Get()
}

// GetDlServingPlmnRateCtlOk returns a tuple with the DlServingPlmnRateCtl field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HsmfUpdateData) GetDlServingPlmnRateCtlOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DlServingPlmnRateCtl.Get(), o.DlServingPlmnRateCtl.IsSet()
}

// HasDlServingPlmnRateCtl returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasDlServingPlmnRateCtl() bool {
	if o != nil && o.DlServingPlmnRateCtl.IsSet() {
		return true
	}

	return false
}

// SetDlServingPlmnRateCtl gets a reference to the given NullableInt32 and assigns it to the DlServingPlmnRateCtl field.
func (o *HsmfUpdateData) SetDlServingPlmnRateCtl(v int32) {
	o.DlServingPlmnRateCtl.Set(&v)
}
// SetDlServingPlmnRateCtlNil sets the value for DlServingPlmnRateCtl to be an explicit nil
func (o *HsmfUpdateData) SetDlServingPlmnRateCtlNil() {
	o.DlServingPlmnRateCtl.Set(nil)
}

// UnsetDlServingPlmnRateCtl ensures that no value is present for DlServingPlmnRateCtl, not even an explicit nil
func (o *HsmfUpdateData) UnsetDlServingPlmnRateCtl() {
	o.DlServingPlmnRateCtl.Unset()
}

// GetDnaiList returns the DnaiList field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetDnaiList() []string {
	if o == nil || isNil(o.DnaiList) {
		var ret []string
		return ret
	}
	return o.DnaiList
}

// GetDnaiListOk returns a tuple with the DnaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetDnaiListOk() ([]string, bool) {
	if o == nil || isNil(o.DnaiList) {
		return nil, false
	}
	return o.DnaiList, true
}

// HasDnaiList returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasDnaiList() bool {
	if o != nil && !isNil(o.DnaiList) {
		return true
	}

	return false
}

// SetDnaiList gets a reference to the given []string and assigns it to the DnaiList field.
func (o *HsmfUpdateData) SetDnaiList(v []string) {
	o.DnaiList = v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSupportedFeatures() string {
	if o == nil || isNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSupportedFeatures() bool {
	if o != nil && !isNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *HsmfUpdateData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetRoamingChargingProfile returns the RoamingChargingProfile field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetRoamingChargingProfile() RoamingChargingProfile {
	if o == nil || isNil(o.RoamingChargingProfile) {
		var ret RoamingChargingProfile
		return ret
	}
	return *o.RoamingChargingProfile
}

// GetRoamingChargingProfileOk returns a tuple with the RoamingChargingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetRoamingChargingProfileOk() (*RoamingChargingProfile, bool) {
	if o == nil || isNil(o.RoamingChargingProfile) {
		return nil, false
	}
	return o.RoamingChargingProfile, true
}

// HasRoamingChargingProfile returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasRoamingChargingProfile() bool {
	if o != nil && !isNil(o.RoamingChargingProfile) {
		return true
	}

	return false
}

// SetRoamingChargingProfile gets a reference to the given RoamingChargingProfile and assigns it to the RoamingChargingProfile field.
func (o *HsmfUpdateData) SetRoamingChargingProfile(v RoamingChargingProfile) {
	o.RoamingChargingProfile = &v
}

// GetMoExpDataCounter returns the MoExpDataCounter field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMoExpDataCounter() MoExpDataCounter {
	if o == nil || isNil(o.MoExpDataCounter) {
		var ret MoExpDataCounter
		return ret
	}
	return *o.MoExpDataCounter
}

// GetMoExpDataCounterOk returns a tuple with the MoExpDataCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMoExpDataCounterOk() (*MoExpDataCounter, bool) {
	if o == nil || isNil(o.MoExpDataCounter) {
		return nil, false
	}
	return o.MoExpDataCounter, true
}

// HasMoExpDataCounter returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMoExpDataCounter() bool {
	if o != nil && !isNil(o.MoExpDataCounter) {
		return true
	}

	return false
}

// SetMoExpDataCounter gets a reference to the given MoExpDataCounter and assigns it to the MoExpDataCounter field.
func (o *HsmfUpdateData) SetMoExpDataCounter(v MoExpDataCounter) {
	o.MoExpDataCounter = &v
}

// GetVplmnQos returns the VplmnQos field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetVplmnQos() VplmnQos {
	if o == nil || isNil(o.VplmnQos) {
		var ret VplmnQos
		return ret
	}
	return *o.VplmnQos
}

// GetVplmnQosOk returns a tuple with the VplmnQos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetVplmnQosOk() (*VplmnQos, bool) {
	if o == nil || isNil(o.VplmnQos) {
		return nil, false
	}
	return o.VplmnQos, true
}

// HasVplmnQos returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasVplmnQos() bool {
	if o != nil && !isNil(o.VplmnQos) {
		return true
	}

	return false
}

// SetVplmnQos gets a reference to the given VplmnQos and assigns it to the VplmnQos field.
func (o *HsmfUpdateData) SetVplmnQos(v VplmnQos) {
	o.VplmnQos = &v
}

// GetSecurityResult returns the SecurityResult field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecurityResult() SecurityResult {
	if o == nil || isNil(o.SecurityResult) {
		var ret SecurityResult
		return ret
	}
	return *o.SecurityResult
}

// GetSecurityResultOk returns a tuple with the SecurityResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecurityResultOk() (*SecurityResult, bool) {
	if o == nil || isNil(o.SecurityResult) {
		return nil, false
	}
	return o.SecurityResult, true
}

// HasSecurityResult returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecurityResult() bool {
	if o != nil && !isNil(o.SecurityResult) {
		return true
	}

	return false
}

// SetSecurityResult gets a reference to the given SecurityResult and assigns it to the SecurityResult field.
func (o *HsmfUpdateData) SetSecurityResult(v SecurityResult) {
	o.SecurityResult = &v
}

// GetUpSecurityInfo returns the UpSecurityInfo field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUpSecurityInfo() UpSecurityInfo {
	if o == nil || isNil(o.UpSecurityInfo) {
		var ret UpSecurityInfo
		return ret
	}
	return *o.UpSecurityInfo
}

// GetUpSecurityInfoOk returns a tuple with the UpSecurityInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUpSecurityInfoOk() (*UpSecurityInfo, bool) {
	if o == nil || isNil(o.UpSecurityInfo) {
		return nil, false
	}
	return o.UpSecurityInfo, true
}

// HasUpSecurityInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUpSecurityInfo() bool {
	if o != nil && !isNil(o.UpSecurityInfo) {
		return true
	}

	return false
}

// SetUpSecurityInfo gets a reference to the given UpSecurityInfo and assigns it to the UpSecurityInfo field.
func (o *HsmfUpdateData) SetUpSecurityInfo(v UpSecurityInfo) {
	o.UpSecurityInfo = &v
}

// GetAmfNfId returns the AmfNfId field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetAmfNfId() string {
	if o == nil || isNil(o.AmfNfId) {
		var ret string
		return ret
	}
	return *o.AmfNfId
}

// GetAmfNfIdOk returns a tuple with the AmfNfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetAmfNfIdOk() (*string, bool) {
	if o == nil || isNil(o.AmfNfId) {
		return nil, false
	}
	return o.AmfNfId, true
}

// HasAmfNfId returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasAmfNfId() bool {
	if o != nil && !isNil(o.AmfNfId) {
		return true
	}

	return false
}

// SetAmfNfId gets a reference to the given string and assigns it to the AmfNfId field.
func (o *HsmfUpdateData) SetAmfNfId(v string) {
	o.AmfNfId = &v
}

// GetGuami returns the Guami field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetGuami() Guami {
	if o == nil || isNil(o.Guami) {
		var ret Guami
		return ret
	}
	return *o.Guami
}

// GetGuamiOk returns a tuple with the Guami field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetGuamiOk() (*Guami, bool) {
	if o == nil || isNil(o.Guami) {
		return nil, false
	}
	return o.Guami, true
}

// HasGuami returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasGuami() bool {
	if o != nil && !isNil(o.Guami) {
		return true
	}

	return false
}

// SetGuami gets a reference to the given Guami and assigns it to the Guami field.
func (o *HsmfUpdateData) SetGuami(v Guami) {
	o.Guami = &v
}

// GetSecondaryRatUsageDataReportContainer returns the SecondaryRatUsageDataReportContainer field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSecondaryRatUsageDataReportContainer() []string {
	if o == nil || isNil(o.SecondaryRatUsageDataReportContainer) {
		var ret []string
		return ret
	}
	return o.SecondaryRatUsageDataReportContainer
}

// GetSecondaryRatUsageDataReportContainerOk returns a tuple with the SecondaryRatUsageDataReportContainer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSecondaryRatUsageDataReportContainerOk() ([]string, bool) {
	if o == nil || isNil(o.SecondaryRatUsageDataReportContainer) {
		return nil, false
	}
	return o.SecondaryRatUsageDataReportContainer, true
}

// HasSecondaryRatUsageDataReportContainer returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSecondaryRatUsageDataReportContainer() bool {
	if o != nil && !isNil(o.SecondaryRatUsageDataReportContainer) {
		return true
	}

	return false
}

// SetSecondaryRatUsageDataReportContainer gets a reference to the given []string and assigns it to the SecondaryRatUsageDataReportContainer field.
func (o *HsmfUpdateData) SetSecondaryRatUsageDataReportContainer(v []string) {
	o.SecondaryRatUsageDataReportContainer = v
}

// GetSmPolicyNotifyInd returns the SmPolicyNotifyInd field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSmPolicyNotifyInd() bool {
	if o == nil || isNil(o.SmPolicyNotifyInd) {
		var ret bool
		return ret
	}
	return *o.SmPolicyNotifyInd
}

// GetSmPolicyNotifyIndOk returns a tuple with the SmPolicyNotifyInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSmPolicyNotifyIndOk() (*bool, bool) {
	if o == nil || isNil(o.SmPolicyNotifyInd) {
		return nil, false
	}
	return o.SmPolicyNotifyInd, true
}

// HasSmPolicyNotifyInd returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSmPolicyNotifyInd() bool {
	if o != nil && !isNil(o.SmPolicyNotifyInd) {
		return true
	}

	return false
}

// SetSmPolicyNotifyInd gets a reference to the given bool and assigns it to the SmPolicyNotifyInd field.
func (o *HsmfUpdateData) SetSmPolicyNotifyInd(v bool) {
	o.SmPolicyNotifyInd = &v
}

// GetPcfUeCallbackInfo returns the PcfUeCallbackInfo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *HsmfUpdateData) GetPcfUeCallbackInfo() PcfUeCallbackInfo {
	if o == nil || isNil(o.PcfUeCallbackInfo.Get()) {
		var ret PcfUeCallbackInfo
		return ret
	}
	return *o.PcfUeCallbackInfo.Get()
}

// GetPcfUeCallbackInfoOk returns a tuple with the PcfUeCallbackInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *HsmfUpdateData) GetPcfUeCallbackInfoOk() (*PcfUeCallbackInfo, bool) {
	if o == nil {
		return nil, false
	}
	return o.PcfUeCallbackInfo.Get(), o.PcfUeCallbackInfo.IsSet()
}

// HasPcfUeCallbackInfo returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasPcfUeCallbackInfo() bool {
	if o != nil && o.PcfUeCallbackInfo.IsSet() {
		return true
	}

	return false
}

// SetPcfUeCallbackInfo gets a reference to the given NullablePcfUeCallbackInfo and assigns it to the PcfUeCallbackInfo field.
func (o *HsmfUpdateData) SetPcfUeCallbackInfo(v PcfUeCallbackInfo) {
	o.PcfUeCallbackInfo.Set(&v)
}
// SetPcfUeCallbackInfoNil sets the value for PcfUeCallbackInfo to be an explicit nil
func (o *HsmfUpdateData) SetPcfUeCallbackInfoNil() {
	o.PcfUeCallbackInfo.Set(nil)
}

// UnsetPcfUeCallbackInfo ensures that no value is present for PcfUeCallbackInfo, not even an explicit nil
func (o *HsmfUpdateData) UnsetPcfUeCallbackInfo() {
	o.PcfUeCallbackInfo.Unset()
}

// GetSatelliteBackhaulCat returns the SatelliteBackhaulCat field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetSatelliteBackhaulCat() SatelliteBackhaulCategory {
	if o == nil || isNil(o.SatelliteBackhaulCat) {
		var ret SatelliteBackhaulCategory
		return ret
	}
	return *o.SatelliteBackhaulCat
}

// GetSatelliteBackhaulCatOk returns a tuple with the SatelliteBackhaulCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetSatelliteBackhaulCatOk() (*SatelliteBackhaulCategory, bool) {
	if o == nil || isNil(o.SatelliteBackhaulCat) {
		return nil, false
	}
	return o.SatelliteBackhaulCat, true
}

// HasSatelliteBackhaulCat returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasSatelliteBackhaulCat() bool {
	if o != nil && !isNil(o.SatelliteBackhaulCat) {
		return true
	}

	return false
}

// SetSatelliteBackhaulCat gets a reference to the given SatelliteBackhaulCategory and assigns it to the SatelliteBackhaulCat field.
func (o *HsmfUpdateData) SetSatelliteBackhaulCat(v SatelliteBackhaulCategory) {
	o.SatelliteBackhaulCat = &v
}

// GetMaxIntegrityProtectedDataRateUl returns the MaxIntegrityProtectedDataRateUl field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMaxIntegrityProtectedDataRateUl() MaxIntegrityProtectedDataRate {
	if o == nil || isNil(o.MaxIntegrityProtectedDataRateUl) {
		var ret MaxIntegrityProtectedDataRate
		return ret
	}
	return *o.MaxIntegrityProtectedDataRateUl
}

// GetMaxIntegrityProtectedDataRateUlOk returns a tuple with the MaxIntegrityProtectedDataRateUl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMaxIntegrityProtectedDataRateUlOk() (*MaxIntegrityProtectedDataRate, bool) {
	if o == nil || isNil(o.MaxIntegrityProtectedDataRateUl) {
		return nil, false
	}
	return o.MaxIntegrityProtectedDataRateUl, true
}

// HasMaxIntegrityProtectedDataRateUl returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMaxIntegrityProtectedDataRateUl() bool {
	if o != nil && !isNil(o.MaxIntegrityProtectedDataRateUl) {
		return true
	}

	return false
}

// SetMaxIntegrityProtectedDataRateUl gets a reference to the given MaxIntegrityProtectedDataRate and assigns it to the MaxIntegrityProtectedDataRateUl field.
func (o *HsmfUpdateData) SetMaxIntegrityProtectedDataRateUl(v MaxIntegrityProtectedDataRate) {
	o.MaxIntegrityProtectedDataRateUl = &v
}

// GetMaxIntegrityProtectedDataRateDl returns the MaxIntegrityProtectedDataRateDl field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetMaxIntegrityProtectedDataRateDl() MaxIntegrityProtectedDataRate {
	if o == nil || isNil(o.MaxIntegrityProtectedDataRateDl) {
		var ret MaxIntegrityProtectedDataRate
		return ret
	}
	return *o.MaxIntegrityProtectedDataRateDl
}

// GetMaxIntegrityProtectedDataRateDlOk returns a tuple with the MaxIntegrityProtectedDataRateDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetMaxIntegrityProtectedDataRateDlOk() (*MaxIntegrityProtectedDataRate, bool) {
	if o == nil || isNil(o.MaxIntegrityProtectedDataRateDl) {
		return nil, false
	}
	return o.MaxIntegrityProtectedDataRateDl, true
}

// HasMaxIntegrityProtectedDataRateDl returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasMaxIntegrityProtectedDataRateDl() bool {
	if o != nil && !isNil(o.MaxIntegrityProtectedDataRateDl) {
		return true
	}

	return false
}

// SetMaxIntegrityProtectedDataRateDl gets a reference to the given MaxIntegrityProtectedDataRate and assigns it to the MaxIntegrityProtectedDataRateDl field.
func (o *HsmfUpdateData) SetMaxIntegrityProtectedDataRateDl(v MaxIntegrityProtectedDataRate) {
	o.MaxIntegrityProtectedDataRateDl = &v
}

// GetUpCnxState returns the UpCnxState field value if set, zero value otherwise.
func (o *HsmfUpdateData) GetUpCnxState() UpCnxState {
	if o == nil || isNil(o.UpCnxState) {
		var ret UpCnxState
		return ret
	}
	return *o.UpCnxState
}

// GetUpCnxStateOk returns a tuple with the UpCnxState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HsmfUpdateData) GetUpCnxStateOk() (*UpCnxState, bool) {
	if o == nil || isNil(o.UpCnxState) {
		return nil, false
	}
	return o.UpCnxState, true
}

// HasUpCnxState returns a boolean if a field has been set.
func (o *HsmfUpdateData) HasUpCnxState() bool {
	if o != nil && !isNil(o.UpCnxState) {
		return true
	}

	return false
}

// SetUpCnxState gets a reference to the given UpCnxState and assigns it to the UpCnxState field.
func (o *HsmfUpdateData) SetUpCnxState(v UpCnxState) {
	o.UpCnxState = &v
}

func (o HsmfUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HsmfUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestIndication"] = o.RequestIndication
	if !isNil(o.Pei) {
		toSerialize["pei"] = o.Pei
	}
	if !isNil(o.VcnTunnelInfo) {
		toSerialize["vcnTunnelInfo"] = o.VcnTunnelInfo
	}
	if !isNil(o.IcnTunnelInfo) {
		toSerialize["icnTunnelInfo"] = o.IcnTunnelInfo
	}
	if !isNil(o.AdditionalCnTunnelInfo) {
		toSerialize["additionalCnTunnelInfo"] = o.AdditionalCnTunnelInfo
	}
	if !isNil(o.ServingNetwork) {
		toSerialize["servingNetwork"] = o.ServingNetwork
	}
	if !isNil(o.AnType) {
		toSerialize["anType"] = o.AnType
	}
	if !isNil(o.AdditionalAnType) {
		toSerialize["additionalAnType"] = o.AdditionalAnType
	}
	if !isNil(o.RatType) {
		toSerialize["ratType"] = o.RatType
	}
	if !isNil(o.UeLocation) {
		toSerialize["ueLocation"] = o.UeLocation
	}
	if !isNil(o.UeTimeZone) {
		toSerialize["ueTimeZone"] = o.UeTimeZone
	}
	if !isNil(o.AddUeLocation) {
		toSerialize["addUeLocation"] = o.AddUeLocation
	}
	if !isNil(o.PauseCharging) {
		toSerialize["pauseCharging"] = o.PauseCharging
	}
	if !isNil(o.Pti) {
		toSerialize["pti"] = o.Pti
	}
	if !isNil(o.N1SmInfoFromUe) {
		toSerialize["n1SmInfoFromUe"] = o.N1SmInfoFromUe
	}
	if !isNil(o.UnknownN1SmInfo) {
		toSerialize["unknownN1SmInfo"] = o.UnknownN1SmInfo
	}
	if !isNil(o.QosFlowsRelNotifyList) {
		toSerialize["qosFlowsRelNotifyList"] = o.QosFlowsRelNotifyList
	}
	if !isNil(o.QosFlowsNotifyList) {
		toSerialize["qosFlowsNotifyList"] = o.QosFlowsNotifyList
	}
	if !isNil(o.NotifyList) {
		toSerialize["NotifyList"] = o.NotifyList
	}
	if !isNil(o.EpsBearerId) {
		toSerialize["epsBearerId"] = o.EpsBearerId
	}
	if !isNil(o.HoPreparationIndication) {
		toSerialize["hoPreparationIndication"] = o.HoPreparationIndication
	}
	if !isNil(o.RevokeEbiList) {
		toSerialize["revokeEbiList"] = o.RevokeEbiList
	}
	if !isNil(o.Cause) {
		toSerialize["cause"] = o.Cause
	}
	if !isNil(o.NgApCause) {
		toSerialize["ngApCause"] = o.NgApCause
	}
	if !isNil(o.Var5gMmCauseValue) {
		toSerialize["5gMmCauseValue"] = o.Var5gMmCauseValue
	}
	if !isNil(o.AlwaysOnRequested) {
		toSerialize["alwaysOnRequested"] = o.AlwaysOnRequested
	}
	if !isNil(o.EpsInterworkingInd) {
		toSerialize["epsInterworkingInd"] = o.EpsInterworkingInd
	}
	if !isNil(o.SecondaryRatUsageReport) {
		toSerialize["secondaryRatUsageReport"] = o.SecondaryRatUsageReport
	}
	if !isNil(o.SecondaryRatUsageInfo) {
		toSerialize["secondaryRatUsageInfo"] = o.SecondaryRatUsageInfo
	}
	if !isNil(o.AnTypeCanBeChanged) {
		toSerialize["anTypeCanBeChanged"] = o.AnTypeCanBeChanged
	}
	if !isNil(o.MaReleaseInd) {
		toSerialize["maReleaseInd"] = o.MaReleaseInd
	}
	if !isNil(o.MaNwUpgradeInd) {
		toSerialize["maNwUpgradeInd"] = o.MaNwUpgradeInd
	}
	if !isNil(o.MaRequestInd) {
		toSerialize["maRequestInd"] = o.MaRequestInd
	}
	if !isNil(o.UnavailableAccessInd) {
		toSerialize["unavailableAccessInd"] = o.UnavailableAccessInd
	}
	if !isNil(o.PsaInfo) {
		toSerialize["psaInfo"] = o.PsaInfo
	}
	if !isNil(o.UlclBpInfo) {
		toSerialize["ulclBpInfo"] = o.UlclBpInfo
	}
	if !isNil(o.N4Info) {
		toSerialize["n4Info"] = o.N4Info
	}
	if !isNil(o.N4InfoExt1) {
		toSerialize["n4InfoExt1"] = o.N4InfoExt1
	}
	if !isNil(o.N4InfoExt2) {
		toSerialize["n4InfoExt2"] = o.N4InfoExt2
	}
	if !isNil(o.PresenceInLadn) {
		toSerialize["presenceInLadn"] = o.PresenceInLadn
	}
	if !isNil(o.VsmfPduSessionUri) {
		toSerialize["vsmfPduSessionUri"] = o.VsmfPduSessionUri
	}
	if !isNil(o.VsmfId) {
		toSerialize["vsmfId"] = o.VsmfId
	}
	if !isNil(o.VSmfServiceInstanceId) {
		toSerialize["vSmfServiceInstanceId"] = o.VSmfServiceInstanceId
	}
	if !isNil(o.IsmfPduSessionUri) {
		toSerialize["ismfPduSessionUri"] = o.IsmfPduSessionUri
	}
	if !isNil(o.IsmfId) {
		toSerialize["ismfId"] = o.IsmfId
	}
	if !isNil(o.ISmfServiceInstanceId) {
		toSerialize["iSmfServiceInstanceId"] = o.ISmfServiceInstanceId
	}
	if o.DlServingPlmnRateCtl.IsSet() {
		toSerialize["dlServingPlmnRateCtl"] = o.DlServingPlmnRateCtl.Get()
	}
	if !isNil(o.DnaiList) {
		toSerialize["dnaiList"] = o.DnaiList
	}
	if !isNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !isNil(o.RoamingChargingProfile) {
		toSerialize["roamingChargingProfile"] = o.RoamingChargingProfile
	}
	if !isNil(o.MoExpDataCounter) {
		toSerialize["moExpDataCounter"] = o.MoExpDataCounter
	}
	if !isNil(o.VplmnQos) {
		toSerialize["vplmnQos"] = o.VplmnQos
	}
	if !isNil(o.SecurityResult) {
		toSerialize["securityResult"] = o.SecurityResult
	}
	if !isNil(o.UpSecurityInfo) {
		toSerialize["upSecurityInfo"] = o.UpSecurityInfo
	}
	if !isNil(o.AmfNfId) {
		toSerialize["amfNfId"] = o.AmfNfId
	}
	if !isNil(o.Guami) {
		toSerialize["guami"] = o.Guami
	}
	if !isNil(o.SecondaryRatUsageDataReportContainer) {
		toSerialize["secondaryRatUsageDataReportContainer"] = o.SecondaryRatUsageDataReportContainer
	}
	if !isNil(o.SmPolicyNotifyInd) {
		toSerialize["smPolicyNotifyInd"] = o.SmPolicyNotifyInd
	}
	if o.PcfUeCallbackInfo.IsSet() {
		toSerialize["pcfUeCallbackInfo"] = o.PcfUeCallbackInfo.Get()
	}
	if !isNil(o.SatelliteBackhaulCat) {
		toSerialize["satelliteBackhaulCat"] = o.SatelliteBackhaulCat
	}
	if !isNil(o.MaxIntegrityProtectedDataRateUl) {
		toSerialize["maxIntegrityProtectedDataRateUl"] = o.MaxIntegrityProtectedDataRateUl
	}
	if !isNil(o.MaxIntegrityProtectedDataRateDl) {
		toSerialize["maxIntegrityProtectedDataRateDl"] = o.MaxIntegrityProtectedDataRateDl
	}
	if !isNil(o.UpCnxState) {
		toSerialize["upCnxState"] = o.UpCnxState
	}
	return toSerialize, nil
}

type NullableHsmfUpdateData struct {
	value *HsmfUpdateData
	isSet bool
}

func (v NullableHsmfUpdateData) Get() *HsmfUpdateData {
	return v.value
}

func (v *NullableHsmfUpdateData) Set(val *HsmfUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableHsmfUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableHsmfUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHsmfUpdateData(val *HsmfUpdateData) *NullableHsmfUpdateData {
	return &NullableHsmfUpdateData{value: val, isSet: true}
}

func (v NullableHsmfUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHsmfUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


