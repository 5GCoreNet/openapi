/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the TransferMtDataReqData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TransferMtDataReqData{}

// TransferMtDataReqData Data within Transfer MT Data Request
type TransferMtDataReqData struct {
	MtData RefToBinaryData `json:"mtData"`
}

// NewTransferMtDataReqData instantiates a new TransferMtDataReqData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTransferMtDataReqData(mtData RefToBinaryData) *TransferMtDataReqData {
	this := TransferMtDataReqData{}
	this.MtData = mtData
	return &this
}

// NewTransferMtDataReqDataWithDefaults instantiates a new TransferMtDataReqData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTransferMtDataReqDataWithDefaults() *TransferMtDataReqData {
	this := TransferMtDataReqData{}
	return &this
}

// GetMtData returns the MtData field value
func (o *TransferMtDataReqData) GetMtData() RefToBinaryData {
	if o == nil {
		var ret RefToBinaryData
		return ret
	}

	return o.MtData
}

// GetMtDataOk returns a tuple with the MtData field value
// and a boolean to check if the value has been set.
func (o *TransferMtDataReqData) GetMtDataOk() (*RefToBinaryData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MtData, true
}

// SetMtData sets field value
func (o *TransferMtDataReqData) SetMtData(v RefToBinaryData) {
	o.MtData = v
}

func (o TransferMtDataReqData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TransferMtDataReqData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mtData"] = o.MtData
	return toSerialize, nil
}

type NullableTransferMtDataReqData struct {
	value *TransferMtDataReqData
	isSet bool
}

func (v NullableTransferMtDataReqData) Get() *TransferMtDataReqData {
	return v.value
}

func (v *NullableTransferMtDataReqData) Set(val *TransferMtDataReqData) {
	v.value = val
	v.isSet = true
}

func (v NullableTransferMtDataReqData) IsSet() bool {
	return v.isSet
}

func (v *NullableTransferMtDataReqData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTransferMtDataReqData(val *TransferMtDataReqData) *NullableTransferMtDataReqData {
	return &NullableTransferMtDataReqData{value: val, isSet: true}
}

func (v NullableTransferMtDataReqData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTransferMtDataReqData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
