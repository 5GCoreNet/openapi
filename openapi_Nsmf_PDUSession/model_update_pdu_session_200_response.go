/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
	"os"
)

// checks if the UpdatePduSession200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePduSession200Response{}

// UpdatePduSession200Response struct for UpdatePduSession200Response
type UpdatePduSession200Response struct {
	JsonData                    *HsmfUpdatedData `json:"jsonData,omitempty"`
	BinaryDataN1SmInfoToUe      **os.File        `json:"binaryDataN1SmInfoToUe,omitempty"`
	BinaryDataN4Information     **os.File        `json:"binaryDataN4Information,omitempty"`
	BinaryDataN4InformationExt1 **os.File        `json:"binaryDataN4InformationExt1,omitempty"`
	BinaryDataN4InformationExt2 **os.File        `json:"binaryDataN4InformationExt2,omitempty"`
}

// NewUpdatePduSession200Response instantiates a new UpdatePduSession200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePduSession200Response() *UpdatePduSession200Response {
	this := UpdatePduSession200Response{}
	return &this
}

// NewUpdatePduSession200ResponseWithDefaults instantiates a new UpdatePduSession200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePduSession200ResponseWithDefaults() *UpdatePduSession200Response {
	this := UpdatePduSession200Response{}
	return &this
}

// GetJsonData returns the JsonData field value if set, zero value otherwise.
func (o *UpdatePduSession200Response) GetJsonData() HsmfUpdatedData {
	if o == nil || IsNil(o.JsonData) {
		var ret HsmfUpdatedData
		return ret
	}
	return *o.JsonData
}

// GetJsonDataOk returns a tuple with the JsonData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePduSession200Response) GetJsonDataOk() (*HsmfUpdatedData, bool) {
	if o == nil || IsNil(o.JsonData) {
		return nil, false
	}
	return o.JsonData, true
}

// HasJsonData returns a boolean if a field has been set.
func (o *UpdatePduSession200Response) HasJsonData() bool {
	if o != nil && !IsNil(o.JsonData) {
		return true
	}

	return false
}

// SetJsonData gets a reference to the given HsmfUpdatedData and assigns it to the JsonData field.
func (o *UpdatePduSession200Response) SetJsonData(v HsmfUpdatedData) {
	o.JsonData = &v
}

// GetBinaryDataN1SmInfoToUe returns the BinaryDataN1SmInfoToUe field value if set, zero value otherwise.
func (o *UpdatePduSession200Response) GetBinaryDataN1SmInfoToUe() *os.File {
	if o == nil || IsNil(o.BinaryDataN1SmInfoToUe) {
		var ret *os.File
		return ret
	}
	return *o.BinaryDataN1SmInfoToUe
}

// GetBinaryDataN1SmInfoToUeOk returns a tuple with the BinaryDataN1SmInfoToUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePduSession200Response) GetBinaryDataN1SmInfoToUeOk() (**os.File, bool) {
	if o == nil || IsNil(o.BinaryDataN1SmInfoToUe) {
		return nil, false
	}
	return o.BinaryDataN1SmInfoToUe, true
}

// HasBinaryDataN1SmInfoToUe returns a boolean if a field has been set.
func (o *UpdatePduSession200Response) HasBinaryDataN1SmInfoToUe() bool {
	if o != nil && !IsNil(o.BinaryDataN1SmInfoToUe) {
		return true
	}

	return false
}

// SetBinaryDataN1SmInfoToUe gets a reference to the given *os.File and assigns it to the BinaryDataN1SmInfoToUe field.
func (o *UpdatePduSession200Response) SetBinaryDataN1SmInfoToUe(v *os.File) {
	o.BinaryDataN1SmInfoToUe = &v
}

// GetBinaryDataN4Information returns the BinaryDataN4Information field value if set, zero value otherwise.
func (o *UpdatePduSession200Response) GetBinaryDataN4Information() *os.File {
	if o == nil || IsNil(o.BinaryDataN4Information) {
		var ret *os.File
		return ret
	}
	return *o.BinaryDataN4Information
}

// GetBinaryDataN4InformationOk returns a tuple with the BinaryDataN4Information field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePduSession200Response) GetBinaryDataN4InformationOk() (**os.File, bool) {
	if o == nil || IsNil(o.BinaryDataN4Information) {
		return nil, false
	}
	return o.BinaryDataN4Information, true
}

// HasBinaryDataN4Information returns a boolean if a field has been set.
func (o *UpdatePduSession200Response) HasBinaryDataN4Information() bool {
	if o != nil && !IsNil(o.BinaryDataN4Information) {
		return true
	}

	return false
}

// SetBinaryDataN4Information gets a reference to the given *os.File and assigns it to the BinaryDataN4Information field.
func (o *UpdatePduSession200Response) SetBinaryDataN4Information(v *os.File) {
	o.BinaryDataN4Information = &v
}

// GetBinaryDataN4InformationExt1 returns the BinaryDataN4InformationExt1 field value if set, zero value otherwise.
func (o *UpdatePduSession200Response) GetBinaryDataN4InformationExt1() *os.File {
	if o == nil || IsNil(o.BinaryDataN4InformationExt1) {
		var ret *os.File
		return ret
	}
	return *o.BinaryDataN4InformationExt1
}

// GetBinaryDataN4InformationExt1Ok returns a tuple with the BinaryDataN4InformationExt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePduSession200Response) GetBinaryDataN4InformationExt1Ok() (**os.File, bool) {
	if o == nil || IsNil(o.BinaryDataN4InformationExt1) {
		return nil, false
	}
	return o.BinaryDataN4InformationExt1, true
}

// HasBinaryDataN4InformationExt1 returns a boolean if a field has been set.
func (o *UpdatePduSession200Response) HasBinaryDataN4InformationExt1() bool {
	if o != nil && !IsNil(o.BinaryDataN4InformationExt1) {
		return true
	}

	return false
}

// SetBinaryDataN4InformationExt1 gets a reference to the given *os.File and assigns it to the BinaryDataN4InformationExt1 field.
func (o *UpdatePduSession200Response) SetBinaryDataN4InformationExt1(v *os.File) {
	o.BinaryDataN4InformationExt1 = &v
}

// GetBinaryDataN4InformationExt2 returns the BinaryDataN4InformationExt2 field value if set, zero value otherwise.
func (o *UpdatePduSession200Response) GetBinaryDataN4InformationExt2() *os.File {
	if o == nil || IsNil(o.BinaryDataN4InformationExt2) {
		var ret *os.File
		return ret
	}
	return *o.BinaryDataN4InformationExt2
}

// GetBinaryDataN4InformationExt2Ok returns a tuple with the BinaryDataN4InformationExt2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePduSession200Response) GetBinaryDataN4InformationExt2Ok() (**os.File, bool) {
	if o == nil || IsNil(o.BinaryDataN4InformationExt2) {
		return nil, false
	}
	return o.BinaryDataN4InformationExt2, true
}

// HasBinaryDataN4InformationExt2 returns a boolean if a field has been set.
func (o *UpdatePduSession200Response) HasBinaryDataN4InformationExt2() bool {
	if o != nil && !IsNil(o.BinaryDataN4InformationExt2) {
		return true
	}

	return false
}

// SetBinaryDataN4InformationExt2 gets a reference to the given *os.File and assigns it to the BinaryDataN4InformationExt2 field.
func (o *UpdatePduSession200Response) SetBinaryDataN4InformationExt2(v *os.File) {
	o.BinaryDataN4InformationExt2 = &v
}

func (o UpdatePduSession200Response) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePduSession200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JsonData) {
		toSerialize["jsonData"] = o.JsonData
	}
	if !IsNil(o.BinaryDataN1SmInfoToUe) {
		toSerialize["binaryDataN1SmInfoToUe"] = o.BinaryDataN1SmInfoToUe
	}
	if !IsNil(o.BinaryDataN4Information) {
		toSerialize["binaryDataN4Information"] = o.BinaryDataN4Information
	}
	if !IsNil(o.BinaryDataN4InformationExt1) {
		toSerialize["binaryDataN4InformationExt1"] = o.BinaryDataN4InformationExt1
	}
	if !IsNil(o.BinaryDataN4InformationExt2) {
		toSerialize["binaryDataN4InformationExt2"] = o.BinaryDataN4InformationExt2
	}
	return toSerialize, nil
}

type NullableUpdatePduSession200Response struct {
	value *UpdatePduSession200Response
	isSet bool
}

func (v NullableUpdatePduSession200Response) Get() *UpdatePduSession200Response {
	return v.value
}

func (v *NullableUpdatePduSession200Response) Set(val *UpdatePduSession200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePduSession200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePduSession200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePduSession200Response(val *UpdatePduSession200Response) *NullableUpdatePduSession200Response {
	return &NullableUpdatePduSession200Response{value: val, isSet: true}
}

func (v NullableUpdatePduSession200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePduSession200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
