/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
	"fmt"
)

// PsaIndicationAnyOf the model 'PsaIndicationAnyOf'
type PsaIndicationAnyOf string

// List of PsaIndication_anyOf
const (
	INSERTED PsaIndicationAnyOf = "PSA_INSERTED"
	REMOVED PsaIndicationAnyOf = "PSA_REMOVED"
	INSERTED_ONLY PsaIndicationAnyOf = "PSA_INSERTED_ONLY"
	REMOVED_ONLY PsaIndicationAnyOf = "PSA_REMOVED_ONLY"
)

// All allowed values of PsaIndicationAnyOf enum
var AllowedPsaIndicationAnyOfEnumValues = []PsaIndicationAnyOf{
	"PSA_INSERTED",
	"PSA_REMOVED",
	"PSA_INSERTED_ONLY",
	"PSA_REMOVED_ONLY",
}

func (v *PsaIndicationAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PsaIndicationAnyOf(value)
	for _, existing := range AllowedPsaIndicationAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PsaIndicationAnyOf", value)
}

// NewPsaIndicationAnyOfFromValue returns a pointer to a valid PsaIndicationAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPsaIndicationAnyOfFromValue(v string) (*PsaIndicationAnyOf, error) {
	ev := PsaIndicationAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PsaIndicationAnyOf: valid values are %v", v, AllowedPsaIndicationAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PsaIndicationAnyOf) IsValid() bool {
	for _, existing := range AllowedPsaIndicationAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PsaIndication_anyOf value
func (v PsaIndicationAnyOf) Ptr() *PsaIndicationAnyOf {
	return &v
}

type NullablePsaIndicationAnyOf struct {
	value *PsaIndicationAnyOf
	isSet bool
}

func (v NullablePsaIndicationAnyOf) Get() *PsaIndicationAnyOf {
	return v.value
}

func (v *NullablePsaIndicationAnyOf) Set(val *PsaIndicationAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullablePsaIndicationAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullablePsaIndicationAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePsaIndicationAnyOf(val *PsaIndicationAnyOf) *NullablePsaIndicationAnyOf {
	return &NullablePsaIndicationAnyOf{value: val, isSet: true}
}

func (v NullablePsaIndicationAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePsaIndicationAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

