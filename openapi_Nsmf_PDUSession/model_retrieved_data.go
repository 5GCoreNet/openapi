/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the RetrievedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RetrievedData{}

// RetrievedData Data within Retrieve Response
type RetrievedData struct {
	SmallDataRateStatus *SmallDataRateStatus `json:"smallDataRateStatus,omitempty"`
	AfCoordinationInfo  *AfCoordinationInfo  `json:"afCoordinationInfo,omitempty"`
}

// NewRetrievedData instantiates a new RetrievedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRetrievedData() *RetrievedData {
	this := RetrievedData{}
	return &this
}

// NewRetrievedDataWithDefaults instantiates a new RetrievedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRetrievedDataWithDefaults() *RetrievedData {
	this := RetrievedData{}
	return &this
}

// GetSmallDataRateStatus returns the SmallDataRateStatus field value if set, zero value otherwise.
func (o *RetrievedData) GetSmallDataRateStatus() SmallDataRateStatus {
	if o == nil || IsNil(o.SmallDataRateStatus) {
		var ret SmallDataRateStatus
		return ret
	}
	return *o.SmallDataRateStatus
}

// GetSmallDataRateStatusOk returns a tuple with the SmallDataRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrievedData) GetSmallDataRateStatusOk() (*SmallDataRateStatus, bool) {
	if o == nil || IsNil(o.SmallDataRateStatus) {
		return nil, false
	}
	return o.SmallDataRateStatus, true
}

// HasSmallDataRateStatus returns a boolean if a field has been set.
func (o *RetrievedData) HasSmallDataRateStatus() bool {
	if o != nil && !IsNil(o.SmallDataRateStatus) {
		return true
	}

	return false
}

// SetSmallDataRateStatus gets a reference to the given SmallDataRateStatus and assigns it to the SmallDataRateStatus field.
func (o *RetrievedData) SetSmallDataRateStatus(v SmallDataRateStatus) {
	o.SmallDataRateStatus = &v
}

// GetAfCoordinationInfo returns the AfCoordinationInfo field value if set, zero value otherwise.
func (o *RetrievedData) GetAfCoordinationInfo() AfCoordinationInfo {
	if o == nil || IsNil(o.AfCoordinationInfo) {
		var ret AfCoordinationInfo
		return ret
	}
	return *o.AfCoordinationInfo
}

// GetAfCoordinationInfoOk returns a tuple with the AfCoordinationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RetrievedData) GetAfCoordinationInfoOk() (*AfCoordinationInfo, bool) {
	if o == nil || IsNil(o.AfCoordinationInfo) {
		return nil, false
	}
	return o.AfCoordinationInfo, true
}

// HasAfCoordinationInfo returns a boolean if a field has been set.
func (o *RetrievedData) HasAfCoordinationInfo() bool {
	if o != nil && !IsNil(o.AfCoordinationInfo) {
		return true
	}

	return false
}

// SetAfCoordinationInfo gets a reference to the given AfCoordinationInfo and assigns it to the AfCoordinationInfo field.
func (o *RetrievedData) SetAfCoordinationInfo(v AfCoordinationInfo) {
	o.AfCoordinationInfo = &v
}

func (o RetrievedData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RetrievedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SmallDataRateStatus) {
		toSerialize["smallDataRateStatus"] = o.SmallDataRateStatus
	}
	if !IsNil(o.AfCoordinationInfo) {
		toSerialize["afCoordinationInfo"] = o.AfCoordinationInfo
	}
	return toSerialize, nil
}

type NullableRetrievedData struct {
	value *RetrievedData
	isSet bool
}

func (v NullableRetrievedData) Get() *RetrievedData {
	return v.value
}

func (v *NullableRetrievedData) Set(val *RetrievedData) {
	v.value = val
	v.isSet = true
}

func (v NullableRetrievedData) IsSet() bool {
	return v.isSet
}

func (v *NullableRetrievedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRetrievedData(val *RetrievedData) *NullableRetrievedData {
	return &NullableRetrievedData{value: val, isSet: true}
}

func (v NullableRetrievedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRetrievedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
