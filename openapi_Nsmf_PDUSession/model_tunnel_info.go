/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the TunnelInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TunnelInfo{}

// TunnelInfo Tunnel Information
type TunnelInfo struct {
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166. 
	Ipv4Addr *string `json:"ipv4Addr,omitempty"`
	Ipv6Addr *Ipv6Addr `json:"ipv6Addr,omitempty"`
	// GTP Tunnel Endpoint Identifier
	GtpTeid string `json:"gtpTeid"`
	AnType *AccessType `json:"anType,omitempty"`
}

// NewTunnelInfo instantiates a new TunnelInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTunnelInfo(gtpTeid string) *TunnelInfo {
	this := TunnelInfo{}
	this.GtpTeid = gtpTeid
	return &this
}

// NewTunnelInfoWithDefaults instantiates a new TunnelInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTunnelInfoWithDefaults() *TunnelInfo {
	this := TunnelInfo{}
	return &this
}

// GetIpv4Addr returns the Ipv4Addr field value if set, zero value otherwise.
func (o *TunnelInfo) GetIpv4Addr() string {
	if o == nil || isNil(o.Ipv4Addr) {
		var ret string
		return ret
	}
	return *o.Ipv4Addr
}

// GetIpv4AddrOk returns a tuple with the Ipv4Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelInfo) GetIpv4AddrOk() (*string, bool) {
	if o == nil || isNil(o.Ipv4Addr) {
		return nil, false
	}
	return o.Ipv4Addr, true
}

// HasIpv4Addr returns a boolean if a field has been set.
func (o *TunnelInfo) HasIpv4Addr() bool {
	if o != nil && !isNil(o.Ipv4Addr) {
		return true
	}

	return false
}

// SetIpv4Addr gets a reference to the given string and assigns it to the Ipv4Addr field.
func (o *TunnelInfo) SetIpv4Addr(v string) {
	o.Ipv4Addr = &v
}

// GetIpv6Addr returns the Ipv6Addr field value if set, zero value otherwise.
func (o *TunnelInfo) GetIpv6Addr() Ipv6Addr {
	if o == nil || isNil(o.Ipv6Addr) {
		var ret Ipv6Addr
		return ret
	}
	return *o.Ipv6Addr
}

// GetIpv6AddrOk returns a tuple with the Ipv6Addr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelInfo) GetIpv6AddrOk() (*Ipv6Addr, bool) {
	if o == nil || isNil(o.Ipv6Addr) {
		return nil, false
	}
	return o.Ipv6Addr, true
}

// HasIpv6Addr returns a boolean if a field has been set.
func (o *TunnelInfo) HasIpv6Addr() bool {
	if o != nil && !isNil(o.Ipv6Addr) {
		return true
	}

	return false
}

// SetIpv6Addr gets a reference to the given Ipv6Addr and assigns it to the Ipv6Addr field.
func (o *TunnelInfo) SetIpv6Addr(v Ipv6Addr) {
	o.Ipv6Addr = &v
}

// GetGtpTeid returns the GtpTeid field value
func (o *TunnelInfo) GetGtpTeid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GtpTeid
}

// GetGtpTeidOk returns a tuple with the GtpTeid field value
// and a boolean to check if the value has been set.
func (o *TunnelInfo) GetGtpTeidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GtpTeid, true
}

// SetGtpTeid sets field value
func (o *TunnelInfo) SetGtpTeid(v string) {
	o.GtpTeid = v
}

// GetAnType returns the AnType field value if set, zero value otherwise.
func (o *TunnelInfo) GetAnType() AccessType {
	if o == nil || isNil(o.AnType) {
		var ret AccessType
		return ret
	}
	return *o.AnType
}

// GetAnTypeOk returns a tuple with the AnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TunnelInfo) GetAnTypeOk() (*AccessType, bool) {
	if o == nil || isNil(o.AnType) {
		return nil, false
	}
	return o.AnType, true
}

// HasAnType returns a boolean if a field has been set.
func (o *TunnelInfo) HasAnType() bool {
	if o != nil && !isNil(o.AnType) {
		return true
	}

	return false
}

// SetAnType gets a reference to the given AccessType and assigns it to the AnType field.
func (o *TunnelInfo) SetAnType(v AccessType) {
	o.AnType = &v
}

func (o TunnelInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TunnelInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Ipv4Addr) {
		toSerialize["ipv4Addr"] = o.Ipv4Addr
	}
	if !isNil(o.Ipv6Addr) {
		toSerialize["ipv6Addr"] = o.Ipv6Addr
	}
	toSerialize["gtpTeid"] = o.GtpTeid
	if !isNil(o.AnType) {
		toSerialize["anType"] = o.AnType
	}
	return toSerialize, nil
}

type NullableTunnelInfo struct {
	value *TunnelInfo
	isSet bool
}

func (v NullableTunnelInfo) Get() *TunnelInfo {
	return v.value
}

func (v *NullableTunnelInfo) Set(val *TunnelInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableTunnelInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableTunnelInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTunnelInfo(val *TunnelInfo) *NullableTunnelInfo {
	return &NullableTunnelInfo{value: val, isSet: true}
}

func (v NullableTunnelInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTunnelInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


