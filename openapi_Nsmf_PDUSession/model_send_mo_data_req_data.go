/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the SendMoDataReqData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SendMoDataReqData{}

// SendMoDataReqData Data within Send MO Data Request
type SendMoDataReqData struct {
	MoData RefToBinaryData `json:"moData"`
	MoExpDataCounter *MoExpDataCounter `json:"moExpDataCounter,omitempty"`
	UeLocation *UserLocation `json:"ueLocation,omitempty"`
}

// NewSendMoDataReqData instantiates a new SendMoDataReqData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSendMoDataReqData(moData RefToBinaryData) *SendMoDataReqData {
	this := SendMoDataReqData{}
	this.MoData = moData
	return &this
}

// NewSendMoDataReqDataWithDefaults instantiates a new SendMoDataReqData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSendMoDataReqDataWithDefaults() *SendMoDataReqData {
	this := SendMoDataReqData{}
	return &this
}

// GetMoData returns the MoData field value
func (o *SendMoDataReqData) GetMoData() RefToBinaryData {
	if o == nil {
		var ret RefToBinaryData
		return ret
	}

	return o.MoData
}

// GetMoDataOk returns a tuple with the MoData field value
// and a boolean to check if the value has been set.
func (o *SendMoDataReqData) GetMoDataOk() (*RefToBinaryData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MoData, true
}

// SetMoData sets field value
func (o *SendMoDataReqData) SetMoData(v RefToBinaryData) {
	o.MoData = v
}

// GetMoExpDataCounter returns the MoExpDataCounter field value if set, zero value otherwise.
func (o *SendMoDataReqData) GetMoExpDataCounter() MoExpDataCounter {
	if o == nil || isNil(o.MoExpDataCounter) {
		var ret MoExpDataCounter
		return ret
	}
	return *o.MoExpDataCounter
}

// GetMoExpDataCounterOk returns a tuple with the MoExpDataCounter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMoDataReqData) GetMoExpDataCounterOk() (*MoExpDataCounter, bool) {
	if o == nil || isNil(o.MoExpDataCounter) {
		return nil, false
	}
	return o.MoExpDataCounter, true
}

// HasMoExpDataCounter returns a boolean if a field has been set.
func (o *SendMoDataReqData) HasMoExpDataCounter() bool {
	if o != nil && !isNil(o.MoExpDataCounter) {
		return true
	}

	return false
}

// SetMoExpDataCounter gets a reference to the given MoExpDataCounter and assigns it to the MoExpDataCounter field.
func (o *SendMoDataReqData) SetMoExpDataCounter(v MoExpDataCounter) {
	o.MoExpDataCounter = &v
}

// GetUeLocation returns the UeLocation field value if set, zero value otherwise.
func (o *SendMoDataReqData) GetUeLocation() UserLocation {
	if o == nil || isNil(o.UeLocation) {
		var ret UserLocation
		return ret
	}
	return *o.UeLocation
}

// GetUeLocationOk returns a tuple with the UeLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SendMoDataReqData) GetUeLocationOk() (*UserLocation, bool) {
	if o == nil || isNil(o.UeLocation) {
		return nil, false
	}
	return o.UeLocation, true
}

// HasUeLocation returns a boolean if a field has been set.
func (o *SendMoDataReqData) HasUeLocation() bool {
	if o != nil && !isNil(o.UeLocation) {
		return true
	}

	return false
}

// SetUeLocation gets a reference to the given UserLocation and assigns it to the UeLocation field.
func (o *SendMoDataReqData) SetUeLocation(v UserLocation) {
	o.UeLocation = &v
}

func (o SendMoDataReqData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SendMoDataReqData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["moData"] = o.MoData
	if !isNil(o.MoExpDataCounter) {
		toSerialize["moExpDataCounter"] = o.MoExpDataCounter
	}
	if !isNil(o.UeLocation) {
		toSerialize["ueLocation"] = o.UeLocation
	}
	return toSerialize, nil
}

type NullableSendMoDataReqData struct {
	value *SendMoDataReqData
	isSet bool
}

func (v NullableSendMoDataReqData) Get() *SendMoDataReqData {
	return v.value
}

func (v *NullableSendMoDataReqData) Set(val *SendMoDataReqData) {
	v.value = val
	v.isSet = true
}

func (v NullableSendMoDataReqData) IsSet() bool {
	return v.isSet
}

func (v *NullableSendMoDataReqData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSendMoDataReqData(val *SendMoDataReqData) *NullableSendMoDataReqData {
	return &NullableSendMoDataReqData{value: val, isSet: true}
}

func (v NullableSendMoDataReqData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSendMoDataReqData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


