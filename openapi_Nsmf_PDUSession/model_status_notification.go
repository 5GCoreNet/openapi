/*
Nsmf_PDUSession

SMF PDU Session Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the StatusNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusNotification{}

// StatusNotification Data within Notify Status Request
type StatusNotification struct {
	StatusInfo StatusInfo `json:"statusInfo"`
	SmallDataRateStatus *SmallDataRateStatus `json:"smallDataRateStatus,omitempty"`
	ApnRateStatus *ApnRateStatus `json:"apnRateStatus,omitempty"`
	TargetDnaiInfo *TargetDnaiInfo `json:"targetDnaiInfo,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	OldPduSessionRef *string `json:"oldPduSessionRef,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	NewSmfId *string `json:"newSmfId,omitempty"`
	EpsPdnCnxInfo *EpsPdnCnxInfo `json:"epsPdnCnxInfo,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot *string `json:"interPlmnApiRoot,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	IntraPlmnApiRoot *string `json:"intraPlmnApiRoot,omitempty"`
}

// NewStatusNotification instantiates a new StatusNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusNotification(statusInfo StatusInfo) *StatusNotification {
	this := StatusNotification{}
	this.StatusInfo = statusInfo
	return &this
}

// NewStatusNotificationWithDefaults instantiates a new StatusNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusNotificationWithDefaults() *StatusNotification {
	this := StatusNotification{}
	return &this
}

// GetStatusInfo returns the StatusInfo field value
func (o *StatusNotification) GetStatusInfo() StatusInfo {
	if o == nil {
		var ret StatusInfo
		return ret
	}

	return o.StatusInfo
}

// GetStatusInfoOk returns a tuple with the StatusInfo field value
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetStatusInfoOk() (*StatusInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StatusInfo, true
}

// SetStatusInfo sets field value
func (o *StatusNotification) SetStatusInfo(v StatusInfo) {
	o.StatusInfo = v
}

// GetSmallDataRateStatus returns the SmallDataRateStatus field value if set, zero value otherwise.
func (o *StatusNotification) GetSmallDataRateStatus() SmallDataRateStatus {
	if o == nil || isNil(o.SmallDataRateStatus) {
		var ret SmallDataRateStatus
		return ret
	}
	return *o.SmallDataRateStatus
}

// GetSmallDataRateStatusOk returns a tuple with the SmallDataRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetSmallDataRateStatusOk() (*SmallDataRateStatus, bool) {
	if o == nil || isNil(o.SmallDataRateStatus) {
		return nil, false
	}
	return o.SmallDataRateStatus, true
}

// HasSmallDataRateStatus returns a boolean if a field has been set.
func (o *StatusNotification) HasSmallDataRateStatus() bool {
	if o != nil && !isNil(o.SmallDataRateStatus) {
		return true
	}

	return false
}

// SetSmallDataRateStatus gets a reference to the given SmallDataRateStatus and assigns it to the SmallDataRateStatus field.
func (o *StatusNotification) SetSmallDataRateStatus(v SmallDataRateStatus) {
	o.SmallDataRateStatus = &v
}

// GetApnRateStatus returns the ApnRateStatus field value if set, zero value otherwise.
func (o *StatusNotification) GetApnRateStatus() ApnRateStatus {
	if o == nil || isNil(o.ApnRateStatus) {
		var ret ApnRateStatus
		return ret
	}
	return *o.ApnRateStatus
}

// GetApnRateStatusOk returns a tuple with the ApnRateStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetApnRateStatusOk() (*ApnRateStatus, bool) {
	if o == nil || isNil(o.ApnRateStatus) {
		return nil, false
	}
	return o.ApnRateStatus, true
}

// HasApnRateStatus returns a boolean if a field has been set.
func (o *StatusNotification) HasApnRateStatus() bool {
	if o != nil && !isNil(o.ApnRateStatus) {
		return true
	}

	return false
}

// SetApnRateStatus gets a reference to the given ApnRateStatus and assigns it to the ApnRateStatus field.
func (o *StatusNotification) SetApnRateStatus(v ApnRateStatus) {
	o.ApnRateStatus = &v
}

// GetTargetDnaiInfo returns the TargetDnaiInfo field value if set, zero value otherwise.
func (o *StatusNotification) GetTargetDnaiInfo() TargetDnaiInfo {
	if o == nil || isNil(o.TargetDnaiInfo) {
		var ret TargetDnaiInfo
		return ret
	}
	return *o.TargetDnaiInfo
}

// GetTargetDnaiInfoOk returns a tuple with the TargetDnaiInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetTargetDnaiInfoOk() (*TargetDnaiInfo, bool) {
	if o == nil || isNil(o.TargetDnaiInfo) {
		return nil, false
	}
	return o.TargetDnaiInfo, true
}

// HasTargetDnaiInfo returns a boolean if a field has been set.
func (o *StatusNotification) HasTargetDnaiInfo() bool {
	if o != nil && !isNil(o.TargetDnaiInfo) {
		return true
	}

	return false
}

// SetTargetDnaiInfo gets a reference to the given TargetDnaiInfo and assigns it to the TargetDnaiInfo field.
func (o *StatusNotification) SetTargetDnaiInfo(v TargetDnaiInfo) {
	o.TargetDnaiInfo = &v
}

// GetOldPduSessionRef returns the OldPduSessionRef field value if set, zero value otherwise.
func (o *StatusNotification) GetOldPduSessionRef() string {
	if o == nil || isNil(o.OldPduSessionRef) {
		var ret string
		return ret
	}
	return *o.OldPduSessionRef
}

// GetOldPduSessionRefOk returns a tuple with the OldPduSessionRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetOldPduSessionRefOk() (*string, bool) {
	if o == nil || isNil(o.OldPduSessionRef) {
		return nil, false
	}
	return o.OldPduSessionRef, true
}

// HasOldPduSessionRef returns a boolean if a field has been set.
func (o *StatusNotification) HasOldPduSessionRef() bool {
	if o != nil && !isNil(o.OldPduSessionRef) {
		return true
	}

	return false
}

// SetOldPduSessionRef gets a reference to the given string and assigns it to the OldPduSessionRef field.
func (o *StatusNotification) SetOldPduSessionRef(v string) {
	o.OldPduSessionRef = &v
}

// GetNewSmfId returns the NewSmfId field value if set, zero value otherwise.
func (o *StatusNotification) GetNewSmfId() string {
	if o == nil || isNil(o.NewSmfId) {
		var ret string
		return ret
	}
	return *o.NewSmfId
}

// GetNewSmfIdOk returns a tuple with the NewSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetNewSmfIdOk() (*string, bool) {
	if o == nil || isNil(o.NewSmfId) {
		return nil, false
	}
	return o.NewSmfId, true
}

// HasNewSmfId returns a boolean if a field has been set.
func (o *StatusNotification) HasNewSmfId() bool {
	if o != nil && !isNil(o.NewSmfId) {
		return true
	}

	return false
}

// SetNewSmfId gets a reference to the given string and assigns it to the NewSmfId field.
func (o *StatusNotification) SetNewSmfId(v string) {
	o.NewSmfId = &v
}

// GetEpsPdnCnxInfo returns the EpsPdnCnxInfo field value if set, zero value otherwise.
func (o *StatusNotification) GetEpsPdnCnxInfo() EpsPdnCnxInfo {
	if o == nil || isNil(o.EpsPdnCnxInfo) {
		var ret EpsPdnCnxInfo
		return ret
	}
	return *o.EpsPdnCnxInfo
}

// GetEpsPdnCnxInfoOk returns a tuple with the EpsPdnCnxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetEpsPdnCnxInfoOk() (*EpsPdnCnxInfo, bool) {
	if o == nil || isNil(o.EpsPdnCnxInfo) {
		return nil, false
	}
	return o.EpsPdnCnxInfo, true
}

// HasEpsPdnCnxInfo returns a boolean if a field has been set.
func (o *StatusNotification) HasEpsPdnCnxInfo() bool {
	if o != nil && !isNil(o.EpsPdnCnxInfo) {
		return true
	}

	return false
}

// SetEpsPdnCnxInfo gets a reference to the given EpsPdnCnxInfo and assigns it to the EpsPdnCnxInfo field.
func (o *StatusNotification) SetEpsPdnCnxInfo(v EpsPdnCnxInfo) {
	o.EpsPdnCnxInfo = &v
}

// GetInterPlmnApiRoot returns the InterPlmnApiRoot field value if set, zero value otherwise.
func (o *StatusNotification) GetInterPlmnApiRoot() string {
	if o == nil || isNil(o.InterPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.InterPlmnApiRoot
}

// GetInterPlmnApiRootOk returns a tuple with the InterPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetInterPlmnApiRootOk() (*string, bool) {
	if o == nil || isNil(o.InterPlmnApiRoot) {
		return nil, false
	}
	return o.InterPlmnApiRoot, true
}

// HasInterPlmnApiRoot returns a boolean if a field has been set.
func (o *StatusNotification) HasInterPlmnApiRoot() bool {
	if o != nil && !isNil(o.InterPlmnApiRoot) {
		return true
	}

	return false
}

// SetInterPlmnApiRoot gets a reference to the given string and assigns it to the InterPlmnApiRoot field.
func (o *StatusNotification) SetInterPlmnApiRoot(v string) {
	o.InterPlmnApiRoot = &v
}

// GetIntraPlmnApiRoot returns the IntraPlmnApiRoot field value if set, zero value otherwise.
func (o *StatusNotification) GetIntraPlmnApiRoot() string {
	if o == nil || isNil(o.IntraPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.IntraPlmnApiRoot
}

// GetIntraPlmnApiRootOk returns a tuple with the IntraPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusNotification) GetIntraPlmnApiRootOk() (*string, bool) {
	if o == nil || isNil(o.IntraPlmnApiRoot) {
		return nil, false
	}
	return o.IntraPlmnApiRoot, true
}

// HasIntraPlmnApiRoot returns a boolean if a field has been set.
func (o *StatusNotification) HasIntraPlmnApiRoot() bool {
	if o != nil && !isNil(o.IntraPlmnApiRoot) {
		return true
	}

	return false
}

// SetIntraPlmnApiRoot gets a reference to the given string and assigns it to the IntraPlmnApiRoot field.
func (o *StatusNotification) SetIntraPlmnApiRoot(v string) {
	o.IntraPlmnApiRoot = &v
}

func (o StatusNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["statusInfo"] = o.StatusInfo
	if !isNil(o.SmallDataRateStatus) {
		toSerialize["smallDataRateStatus"] = o.SmallDataRateStatus
	}
	if !isNil(o.ApnRateStatus) {
		toSerialize["apnRateStatus"] = o.ApnRateStatus
	}
	if !isNil(o.TargetDnaiInfo) {
		toSerialize["targetDnaiInfo"] = o.TargetDnaiInfo
	}
	if !isNil(o.OldPduSessionRef) {
		toSerialize["oldPduSessionRef"] = o.OldPduSessionRef
	}
	if !isNil(o.NewSmfId) {
		toSerialize["newSmfId"] = o.NewSmfId
	}
	if !isNil(o.EpsPdnCnxInfo) {
		toSerialize["epsPdnCnxInfo"] = o.EpsPdnCnxInfo
	}
	if !isNil(o.InterPlmnApiRoot) {
		toSerialize["interPlmnApiRoot"] = o.InterPlmnApiRoot
	}
	if !isNil(o.IntraPlmnApiRoot) {
		toSerialize["intraPlmnApiRoot"] = o.IntraPlmnApiRoot
	}
	return toSerialize, nil
}

type NullableStatusNotification struct {
	value *StatusNotification
	isSet bool
}

func (v NullableStatusNotification) Get() *StatusNotification {
	return v.value
}

func (v *NullableStatusNotification) Set(val *StatusNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusNotification(val *StatusNotification) *NullableStatusNotification {
	return &NullableStatusNotification{value: val, isSet: true}
}

func (v NullableStatusNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


