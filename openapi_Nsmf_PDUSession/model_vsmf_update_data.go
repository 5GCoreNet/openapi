/*
Nsmf_PDUSession

SMF PDU Session Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
)

// checks if the VsmfUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VsmfUpdateData{}

// VsmfUpdateData Data within Update Request towards V-SMF, or from SMF to I-SMF
type VsmfUpdateData struct {
	RequestIndication         RequestIndication             `json:"requestIndication"`
	SessionAmbr               *Ambr                         `json:"sessionAmbr,omitempty"`
	QosFlowsAddModRequestList []QosFlowAddModifyRequestItem `json:"qosFlowsAddModRequestList,omitempty"`
	QosFlowsRelRequestList    []QosFlowReleaseRequestItem   `json:"qosFlowsRelRequestList,omitempty"`
	EpsBearerInfo             []EpsBearerInfo               `json:"epsBearerInfo,omitempty"`
	AssignEbiList             []Arp                         `json:"assignEbiList,omitempty"`
	RevokeEbiList             []int32                       `json:"revokeEbiList,omitempty"`
	ModifiedEbiList           []EbiArpMapping               `json:"modifiedEbiList,omitempty"`
	// Procedure Transaction Identifier
	Pti             *int32           `json:"pti,omitempty"`
	N1SmInfoToUe    *RefToBinaryData `json:"n1SmInfoToUe,omitempty"`
	AlwaysOnGranted *bool            `json:"alwaysOnGranted,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	HsmfPduSessionUri *string `json:"hsmfPduSessionUri,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	NewSmfId *string `json:"newSmfId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NewSmfPduSessionUri *string `json:"newSmfPduSessionUri,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	Cause             *Cause  `json:"cause,omitempty"`
	N1smCause         *string `json:"n1smCause,omitempty"`
	// indicating a time in seconds.
	BackOffTimer                *int32               `json:"backOffTimer,omitempty"`
	MaReleaseInd                *MaReleaseIndication `json:"maReleaseInd,omitempty"`
	MaAcceptedInd               *bool                `json:"maAcceptedInd,omitempty"`
	AdditionalCnTunnelInfo      *TunnelInfo          `json:"additionalCnTunnelInfo,omitempty"`
	DnaiList                    []string             `json:"dnaiList,omitempty"`
	N4Info                      *N4Information       `json:"n4Info,omitempty"`
	N4InfoExt1                  *N4Information       `json:"n4InfoExt1,omitempty"`
	N4InfoExt2                  *N4Information       `json:"n4InfoExt2,omitempty"`
	N4InfoExt3                  *N4Information       `json:"n4InfoExt3,omitempty"`
	SmallDataRateControlEnabled *bool                `json:"smallDataRateControlEnabled,omitempty"`
	QosMonitoringInfo           *QosMonitoringInfo   `json:"qosMonitoringInfo,omitempty"`
	EpsPdnCnxInfo               *EpsPdnCnxInfo       `json:"epsPdnCnxInfo,omitempty"`
	N9DataForwardingInd         *bool                `json:"n9DataForwardingInd,omitempty"`
	// indicating a time in seconds.
	N9InactivityTimer *int32 `json:"n9InactivityTimer,omitempty"`
}

// NewVsmfUpdateData instantiates a new VsmfUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVsmfUpdateData(requestIndication RequestIndication) *VsmfUpdateData {
	this := VsmfUpdateData{}
	this.RequestIndication = requestIndication
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	var maAcceptedInd bool = false
	this.MaAcceptedInd = &maAcceptedInd
	var n9DataForwardingInd bool = false
	this.N9DataForwardingInd = &n9DataForwardingInd
	return &this
}

// NewVsmfUpdateDataWithDefaults instantiates a new VsmfUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVsmfUpdateDataWithDefaults() *VsmfUpdateData {
	this := VsmfUpdateData{}
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	var maAcceptedInd bool = false
	this.MaAcceptedInd = &maAcceptedInd
	var n9DataForwardingInd bool = false
	this.N9DataForwardingInd = &n9DataForwardingInd
	return &this
}

// GetRequestIndication returns the RequestIndication field value
func (o *VsmfUpdateData) GetRequestIndication() RequestIndication {
	if o == nil {
		var ret RequestIndication
		return ret
	}

	return o.RequestIndication
}

// GetRequestIndicationOk returns a tuple with the RequestIndication field value
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetRequestIndicationOk() (*RequestIndication, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestIndication, true
}

// SetRequestIndication sets field value
func (o *VsmfUpdateData) SetRequestIndication(v RequestIndication) {
	o.RequestIndication = v
}

// GetSessionAmbr returns the SessionAmbr field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetSessionAmbr() Ambr {
	if o == nil || IsNil(o.SessionAmbr) {
		var ret Ambr
		return ret
	}
	return *o.SessionAmbr
}

// GetSessionAmbrOk returns a tuple with the SessionAmbr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetSessionAmbrOk() (*Ambr, bool) {
	if o == nil || IsNil(o.SessionAmbr) {
		return nil, false
	}
	return o.SessionAmbr, true
}

// HasSessionAmbr returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasSessionAmbr() bool {
	if o != nil && !IsNil(o.SessionAmbr) {
		return true
	}

	return false
}

// SetSessionAmbr gets a reference to the given Ambr and assigns it to the SessionAmbr field.
func (o *VsmfUpdateData) SetSessionAmbr(v Ambr) {
	o.SessionAmbr = &v
}

// GetQosFlowsAddModRequestList returns the QosFlowsAddModRequestList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetQosFlowsAddModRequestList() []QosFlowAddModifyRequestItem {
	if o == nil || IsNil(o.QosFlowsAddModRequestList) {
		var ret []QosFlowAddModifyRequestItem
		return ret
	}
	return o.QosFlowsAddModRequestList
}

// GetQosFlowsAddModRequestListOk returns a tuple with the QosFlowsAddModRequestList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetQosFlowsAddModRequestListOk() ([]QosFlowAddModifyRequestItem, bool) {
	if o == nil || IsNil(o.QosFlowsAddModRequestList) {
		return nil, false
	}
	return o.QosFlowsAddModRequestList, true
}

// HasQosFlowsAddModRequestList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasQosFlowsAddModRequestList() bool {
	if o != nil && !IsNil(o.QosFlowsAddModRequestList) {
		return true
	}

	return false
}

// SetQosFlowsAddModRequestList gets a reference to the given []QosFlowAddModifyRequestItem and assigns it to the QosFlowsAddModRequestList field.
func (o *VsmfUpdateData) SetQosFlowsAddModRequestList(v []QosFlowAddModifyRequestItem) {
	o.QosFlowsAddModRequestList = v
}

// GetQosFlowsRelRequestList returns the QosFlowsRelRequestList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetQosFlowsRelRequestList() []QosFlowReleaseRequestItem {
	if o == nil || IsNil(o.QosFlowsRelRequestList) {
		var ret []QosFlowReleaseRequestItem
		return ret
	}
	return o.QosFlowsRelRequestList
}

// GetQosFlowsRelRequestListOk returns a tuple with the QosFlowsRelRequestList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetQosFlowsRelRequestListOk() ([]QosFlowReleaseRequestItem, bool) {
	if o == nil || IsNil(o.QosFlowsRelRequestList) {
		return nil, false
	}
	return o.QosFlowsRelRequestList, true
}

// HasQosFlowsRelRequestList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasQosFlowsRelRequestList() bool {
	if o != nil && !IsNil(o.QosFlowsRelRequestList) {
		return true
	}

	return false
}

// SetQosFlowsRelRequestList gets a reference to the given []QosFlowReleaseRequestItem and assigns it to the QosFlowsRelRequestList field.
func (o *VsmfUpdateData) SetQosFlowsRelRequestList(v []QosFlowReleaseRequestItem) {
	o.QosFlowsRelRequestList = v
}

// GetEpsBearerInfo returns the EpsBearerInfo field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetEpsBearerInfo() []EpsBearerInfo {
	if o == nil || IsNil(o.EpsBearerInfo) {
		var ret []EpsBearerInfo
		return ret
	}
	return o.EpsBearerInfo
}

// GetEpsBearerInfoOk returns a tuple with the EpsBearerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetEpsBearerInfoOk() ([]EpsBearerInfo, bool) {
	if o == nil || IsNil(o.EpsBearerInfo) {
		return nil, false
	}
	return o.EpsBearerInfo, true
}

// HasEpsBearerInfo returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasEpsBearerInfo() bool {
	if o != nil && !IsNil(o.EpsBearerInfo) {
		return true
	}

	return false
}

// SetEpsBearerInfo gets a reference to the given []EpsBearerInfo and assigns it to the EpsBearerInfo field.
func (o *VsmfUpdateData) SetEpsBearerInfo(v []EpsBearerInfo) {
	o.EpsBearerInfo = v
}

// GetAssignEbiList returns the AssignEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetAssignEbiList() []Arp {
	if o == nil || IsNil(o.AssignEbiList) {
		var ret []Arp
		return ret
	}
	return o.AssignEbiList
}

// GetAssignEbiListOk returns a tuple with the AssignEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetAssignEbiListOk() ([]Arp, bool) {
	if o == nil || IsNil(o.AssignEbiList) {
		return nil, false
	}
	return o.AssignEbiList, true
}

// HasAssignEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasAssignEbiList() bool {
	if o != nil && !IsNil(o.AssignEbiList) {
		return true
	}

	return false
}

// SetAssignEbiList gets a reference to the given []Arp and assigns it to the AssignEbiList field.
func (o *VsmfUpdateData) SetAssignEbiList(v []Arp) {
	o.AssignEbiList = v
}

// GetRevokeEbiList returns the RevokeEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetRevokeEbiList() []int32 {
	if o == nil || IsNil(o.RevokeEbiList) {
		var ret []int32
		return ret
	}
	return o.RevokeEbiList
}

// GetRevokeEbiListOk returns a tuple with the RevokeEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetRevokeEbiListOk() ([]int32, bool) {
	if o == nil || IsNil(o.RevokeEbiList) {
		return nil, false
	}
	return o.RevokeEbiList, true
}

// HasRevokeEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasRevokeEbiList() bool {
	if o != nil && !IsNil(o.RevokeEbiList) {
		return true
	}

	return false
}

// SetRevokeEbiList gets a reference to the given []int32 and assigns it to the RevokeEbiList field.
func (o *VsmfUpdateData) SetRevokeEbiList(v []int32) {
	o.RevokeEbiList = v
}

// GetModifiedEbiList returns the ModifiedEbiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetModifiedEbiList() []EbiArpMapping {
	if o == nil || IsNil(o.ModifiedEbiList) {
		var ret []EbiArpMapping
		return ret
	}
	return o.ModifiedEbiList
}

// GetModifiedEbiListOk returns a tuple with the ModifiedEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetModifiedEbiListOk() ([]EbiArpMapping, bool) {
	if o == nil || IsNil(o.ModifiedEbiList) {
		return nil, false
	}
	return o.ModifiedEbiList, true
}

// HasModifiedEbiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasModifiedEbiList() bool {
	if o != nil && !IsNil(o.ModifiedEbiList) {
		return true
	}

	return false
}

// SetModifiedEbiList gets a reference to the given []EbiArpMapping and assigns it to the ModifiedEbiList field.
func (o *VsmfUpdateData) SetModifiedEbiList(v []EbiArpMapping) {
	o.ModifiedEbiList = v
}

// GetPti returns the Pti field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetPti() int32 {
	if o == nil || IsNil(o.Pti) {
		var ret int32
		return ret
	}
	return *o.Pti
}

// GetPtiOk returns a tuple with the Pti field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetPtiOk() (*int32, bool) {
	if o == nil || IsNil(o.Pti) {
		return nil, false
	}
	return o.Pti, true
}

// HasPti returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasPti() bool {
	if o != nil && !IsNil(o.Pti) {
		return true
	}

	return false
}

// SetPti gets a reference to the given int32 and assigns it to the Pti field.
func (o *VsmfUpdateData) SetPti(v int32) {
	o.Pti = &v
}

// GetN1SmInfoToUe returns the N1SmInfoToUe field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN1SmInfoToUe() RefToBinaryData {
	if o == nil || IsNil(o.N1SmInfoToUe) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N1SmInfoToUe
}

// GetN1SmInfoToUeOk returns a tuple with the N1SmInfoToUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN1SmInfoToUeOk() (*RefToBinaryData, bool) {
	if o == nil || IsNil(o.N1SmInfoToUe) {
		return nil, false
	}
	return o.N1SmInfoToUe, true
}

// HasN1SmInfoToUe returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN1SmInfoToUe() bool {
	if o != nil && !IsNil(o.N1SmInfoToUe) {
		return true
	}

	return false
}

// SetN1SmInfoToUe gets a reference to the given RefToBinaryData and assigns it to the N1SmInfoToUe field.
func (o *VsmfUpdateData) SetN1SmInfoToUe(v RefToBinaryData) {
	o.N1SmInfoToUe = &v
}

// GetAlwaysOnGranted returns the AlwaysOnGranted field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetAlwaysOnGranted() bool {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		var ret bool
		return ret
	}
	return *o.AlwaysOnGranted
}

// GetAlwaysOnGrantedOk returns a tuple with the AlwaysOnGranted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetAlwaysOnGrantedOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		return nil, false
	}
	return o.AlwaysOnGranted, true
}

// HasAlwaysOnGranted returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasAlwaysOnGranted() bool {
	if o != nil && !IsNil(o.AlwaysOnGranted) {
		return true
	}

	return false
}

// SetAlwaysOnGranted gets a reference to the given bool and assigns it to the AlwaysOnGranted field.
func (o *VsmfUpdateData) SetAlwaysOnGranted(v bool) {
	o.AlwaysOnGranted = &v
}

// GetHsmfPduSessionUri returns the HsmfPduSessionUri field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetHsmfPduSessionUri() string {
	if o == nil || IsNil(o.HsmfPduSessionUri) {
		var ret string
		return ret
	}
	return *o.HsmfPduSessionUri
}

// GetHsmfPduSessionUriOk returns a tuple with the HsmfPduSessionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetHsmfPduSessionUriOk() (*string, bool) {
	if o == nil || IsNil(o.HsmfPduSessionUri) {
		return nil, false
	}
	return o.HsmfPduSessionUri, true
}

// HasHsmfPduSessionUri returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasHsmfPduSessionUri() bool {
	if o != nil && !IsNil(o.HsmfPduSessionUri) {
		return true
	}

	return false
}

// SetHsmfPduSessionUri gets a reference to the given string and assigns it to the HsmfPduSessionUri field.
func (o *VsmfUpdateData) SetHsmfPduSessionUri(v string) {
	o.HsmfPduSessionUri = &v
}

// GetNewSmfId returns the NewSmfId field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetNewSmfId() string {
	if o == nil || IsNil(o.NewSmfId) {
		var ret string
		return ret
	}
	return *o.NewSmfId
}

// GetNewSmfIdOk returns a tuple with the NewSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetNewSmfIdOk() (*string, bool) {
	if o == nil || IsNil(o.NewSmfId) {
		return nil, false
	}
	return o.NewSmfId, true
}

// HasNewSmfId returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasNewSmfId() bool {
	if o != nil && !IsNil(o.NewSmfId) {
		return true
	}

	return false
}

// SetNewSmfId gets a reference to the given string and assigns it to the NewSmfId field.
func (o *VsmfUpdateData) SetNewSmfId(v string) {
	o.NewSmfId = &v
}

// GetNewSmfPduSessionUri returns the NewSmfPduSessionUri field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetNewSmfPduSessionUri() string {
	if o == nil || IsNil(o.NewSmfPduSessionUri) {
		var ret string
		return ret
	}
	return *o.NewSmfPduSessionUri
}

// GetNewSmfPduSessionUriOk returns a tuple with the NewSmfPduSessionUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetNewSmfPduSessionUriOk() (*string, bool) {
	if o == nil || IsNil(o.NewSmfPduSessionUri) {
		return nil, false
	}
	return o.NewSmfPduSessionUri, true
}

// HasNewSmfPduSessionUri returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasNewSmfPduSessionUri() bool {
	if o != nil && !IsNil(o.NewSmfPduSessionUri) {
		return true
	}

	return false
}

// SetNewSmfPduSessionUri gets a reference to the given string and assigns it to the NewSmfPduSessionUri field.
func (o *VsmfUpdateData) SetNewSmfPduSessionUri(v string) {
	o.NewSmfPduSessionUri = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *VsmfUpdateData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetCause returns the Cause field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetCause() Cause {
	if o == nil || IsNil(o.Cause) {
		var ret Cause
		return ret
	}
	return *o.Cause
}

// GetCauseOk returns a tuple with the Cause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetCauseOk() (*Cause, bool) {
	if o == nil || IsNil(o.Cause) {
		return nil, false
	}
	return o.Cause, true
}

// HasCause returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasCause() bool {
	if o != nil && !IsNil(o.Cause) {
		return true
	}

	return false
}

// SetCause gets a reference to the given Cause and assigns it to the Cause field.
func (o *VsmfUpdateData) SetCause(v Cause) {
	o.Cause = &v
}

// GetN1smCause returns the N1smCause field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN1smCause() string {
	if o == nil || IsNil(o.N1smCause) {
		var ret string
		return ret
	}
	return *o.N1smCause
}

// GetN1smCauseOk returns a tuple with the N1smCause field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN1smCauseOk() (*string, bool) {
	if o == nil || IsNil(o.N1smCause) {
		return nil, false
	}
	return o.N1smCause, true
}

// HasN1smCause returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN1smCause() bool {
	if o != nil && !IsNil(o.N1smCause) {
		return true
	}

	return false
}

// SetN1smCause gets a reference to the given string and assigns it to the N1smCause field.
func (o *VsmfUpdateData) SetN1smCause(v string) {
	o.N1smCause = &v
}

// GetBackOffTimer returns the BackOffTimer field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetBackOffTimer() int32 {
	if o == nil || IsNil(o.BackOffTimer) {
		var ret int32
		return ret
	}
	return *o.BackOffTimer
}

// GetBackOffTimerOk returns a tuple with the BackOffTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetBackOffTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.BackOffTimer) {
		return nil, false
	}
	return o.BackOffTimer, true
}

// HasBackOffTimer returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasBackOffTimer() bool {
	if o != nil && !IsNil(o.BackOffTimer) {
		return true
	}

	return false
}

// SetBackOffTimer gets a reference to the given int32 and assigns it to the BackOffTimer field.
func (o *VsmfUpdateData) SetBackOffTimer(v int32) {
	o.BackOffTimer = &v
}

// GetMaReleaseInd returns the MaReleaseInd field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetMaReleaseInd() MaReleaseIndication {
	if o == nil || IsNil(o.MaReleaseInd) {
		var ret MaReleaseIndication
		return ret
	}
	return *o.MaReleaseInd
}

// GetMaReleaseIndOk returns a tuple with the MaReleaseInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetMaReleaseIndOk() (*MaReleaseIndication, bool) {
	if o == nil || IsNil(o.MaReleaseInd) {
		return nil, false
	}
	return o.MaReleaseInd, true
}

// HasMaReleaseInd returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasMaReleaseInd() bool {
	if o != nil && !IsNil(o.MaReleaseInd) {
		return true
	}

	return false
}

// SetMaReleaseInd gets a reference to the given MaReleaseIndication and assigns it to the MaReleaseInd field.
func (o *VsmfUpdateData) SetMaReleaseInd(v MaReleaseIndication) {
	o.MaReleaseInd = &v
}

// GetMaAcceptedInd returns the MaAcceptedInd field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetMaAcceptedInd() bool {
	if o == nil || IsNil(o.MaAcceptedInd) {
		var ret bool
		return ret
	}
	return *o.MaAcceptedInd
}

// GetMaAcceptedIndOk returns a tuple with the MaAcceptedInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetMaAcceptedIndOk() (*bool, bool) {
	if o == nil || IsNil(o.MaAcceptedInd) {
		return nil, false
	}
	return o.MaAcceptedInd, true
}

// HasMaAcceptedInd returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasMaAcceptedInd() bool {
	if o != nil && !IsNil(o.MaAcceptedInd) {
		return true
	}

	return false
}

// SetMaAcceptedInd gets a reference to the given bool and assigns it to the MaAcceptedInd field.
func (o *VsmfUpdateData) SetMaAcceptedInd(v bool) {
	o.MaAcceptedInd = &v
}

// GetAdditionalCnTunnelInfo returns the AdditionalCnTunnelInfo field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetAdditionalCnTunnelInfo() TunnelInfo {
	if o == nil || IsNil(o.AdditionalCnTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.AdditionalCnTunnelInfo
}

// GetAdditionalCnTunnelInfoOk returns a tuple with the AdditionalCnTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetAdditionalCnTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || IsNil(o.AdditionalCnTunnelInfo) {
		return nil, false
	}
	return o.AdditionalCnTunnelInfo, true
}

// HasAdditionalCnTunnelInfo returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasAdditionalCnTunnelInfo() bool {
	if o != nil && !IsNil(o.AdditionalCnTunnelInfo) {
		return true
	}

	return false
}

// SetAdditionalCnTunnelInfo gets a reference to the given TunnelInfo and assigns it to the AdditionalCnTunnelInfo field.
func (o *VsmfUpdateData) SetAdditionalCnTunnelInfo(v TunnelInfo) {
	o.AdditionalCnTunnelInfo = &v
}

// GetDnaiList returns the DnaiList field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetDnaiList() []string {
	if o == nil || IsNil(o.DnaiList) {
		var ret []string
		return ret
	}
	return o.DnaiList
}

// GetDnaiListOk returns a tuple with the DnaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetDnaiListOk() ([]string, bool) {
	if o == nil || IsNil(o.DnaiList) {
		return nil, false
	}
	return o.DnaiList, true
}

// HasDnaiList returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasDnaiList() bool {
	if o != nil && !IsNil(o.DnaiList) {
		return true
	}

	return false
}

// SetDnaiList gets a reference to the given []string and assigns it to the DnaiList field.
func (o *VsmfUpdateData) SetDnaiList(v []string) {
	o.DnaiList = v
}

// GetN4Info returns the N4Info field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN4Info() N4Information {
	if o == nil || IsNil(o.N4Info) {
		var ret N4Information
		return ret
	}
	return *o.N4Info
}

// GetN4InfoOk returns a tuple with the N4Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN4InfoOk() (*N4Information, bool) {
	if o == nil || IsNil(o.N4Info) {
		return nil, false
	}
	return o.N4Info, true
}

// HasN4Info returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN4Info() bool {
	if o != nil && !IsNil(o.N4Info) {
		return true
	}

	return false
}

// SetN4Info gets a reference to the given N4Information and assigns it to the N4Info field.
func (o *VsmfUpdateData) SetN4Info(v N4Information) {
	o.N4Info = &v
}

// GetN4InfoExt1 returns the N4InfoExt1 field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN4InfoExt1() N4Information {
	if o == nil || IsNil(o.N4InfoExt1) {
		var ret N4Information
		return ret
	}
	return *o.N4InfoExt1
}

// GetN4InfoExt1Ok returns a tuple with the N4InfoExt1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN4InfoExt1Ok() (*N4Information, bool) {
	if o == nil || IsNil(o.N4InfoExt1) {
		return nil, false
	}
	return o.N4InfoExt1, true
}

// HasN4InfoExt1 returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN4InfoExt1() bool {
	if o != nil && !IsNil(o.N4InfoExt1) {
		return true
	}

	return false
}

// SetN4InfoExt1 gets a reference to the given N4Information and assigns it to the N4InfoExt1 field.
func (o *VsmfUpdateData) SetN4InfoExt1(v N4Information) {
	o.N4InfoExt1 = &v
}

// GetN4InfoExt2 returns the N4InfoExt2 field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN4InfoExt2() N4Information {
	if o == nil || IsNil(o.N4InfoExt2) {
		var ret N4Information
		return ret
	}
	return *o.N4InfoExt2
}

// GetN4InfoExt2Ok returns a tuple with the N4InfoExt2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN4InfoExt2Ok() (*N4Information, bool) {
	if o == nil || IsNil(o.N4InfoExt2) {
		return nil, false
	}
	return o.N4InfoExt2, true
}

// HasN4InfoExt2 returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN4InfoExt2() bool {
	if o != nil && !IsNil(o.N4InfoExt2) {
		return true
	}

	return false
}

// SetN4InfoExt2 gets a reference to the given N4Information and assigns it to the N4InfoExt2 field.
func (o *VsmfUpdateData) SetN4InfoExt2(v N4Information) {
	o.N4InfoExt2 = &v
}

// GetN4InfoExt3 returns the N4InfoExt3 field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN4InfoExt3() N4Information {
	if o == nil || IsNil(o.N4InfoExt3) {
		var ret N4Information
		return ret
	}
	return *o.N4InfoExt3
}

// GetN4InfoExt3Ok returns a tuple with the N4InfoExt3 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN4InfoExt3Ok() (*N4Information, bool) {
	if o == nil || IsNil(o.N4InfoExt3) {
		return nil, false
	}
	return o.N4InfoExt3, true
}

// HasN4InfoExt3 returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN4InfoExt3() bool {
	if o != nil && !IsNil(o.N4InfoExt3) {
		return true
	}

	return false
}

// SetN4InfoExt3 gets a reference to the given N4Information and assigns it to the N4InfoExt3 field.
func (o *VsmfUpdateData) SetN4InfoExt3(v N4Information) {
	o.N4InfoExt3 = &v
}

// GetSmallDataRateControlEnabled returns the SmallDataRateControlEnabled field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetSmallDataRateControlEnabled() bool {
	if o == nil || IsNil(o.SmallDataRateControlEnabled) {
		var ret bool
		return ret
	}
	return *o.SmallDataRateControlEnabled
}

// GetSmallDataRateControlEnabledOk returns a tuple with the SmallDataRateControlEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetSmallDataRateControlEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SmallDataRateControlEnabled) {
		return nil, false
	}
	return o.SmallDataRateControlEnabled, true
}

// HasSmallDataRateControlEnabled returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasSmallDataRateControlEnabled() bool {
	if o != nil && !IsNil(o.SmallDataRateControlEnabled) {
		return true
	}

	return false
}

// SetSmallDataRateControlEnabled gets a reference to the given bool and assigns it to the SmallDataRateControlEnabled field.
func (o *VsmfUpdateData) SetSmallDataRateControlEnabled(v bool) {
	o.SmallDataRateControlEnabled = &v
}

// GetQosMonitoringInfo returns the QosMonitoringInfo field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetQosMonitoringInfo() QosMonitoringInfo {
	if o == nil || IsNil(o.QosMonitoringInfo) {
		var ret QosMonitoringInfo
		return ret
	}
	return *o.QosMonitoringInfo
}

// GetQosMonitoringInfoOk returns a tuple with the QosMonitoringInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetQosMonitoringInfoOk() (*QosMonitoringInfo, bool) {
	if o == nil || IsNil(o.QosMonitoringInfo) {
		return nil, false
	}
	return o.QosMonitoringInfo, true
}

// HasQosMonitoringInfo returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasQosMonitoringInfo() bool {
	if o != nil && !IsNil(o.QosMonitoringInfo) {
		return true
	}

	return false
}

// SetQosMonitoringInfo gets a reference to the given QosMonitoringInfo and assigns it to the QosMonitoringInfo field.
func (o *VsmfUpdateData) SetQosMonitoringInfo(v QosMonitoringInfo) {
	o.QosMonitoringInfo = &v
}

// GetEpsPdnCnxInfo returns the EpsPdnCnxInfo field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetEpsPdnCnxInfo() EpsPdnCnxInfo {
	if o == nil || IsNil(o.EpsPdnCnxInfo) {
		var ret EpsPdnCnxInfo
		return ret
	}
	return *o.EpsPdnCnxInfo
}

// GetEpsPdnCnxInfoOk returns a tuple with the EpsPdnCnxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetEpsPdnCnxInfoOk() (*EpsPdnCnxInfo, bool) {
	if o == nil || IsNil(o.EpsPdnCnxInfo) {
		return nil, false
	}
	return o.EpsPdnCnxInfo, true
}

// HasEpsPdnCnxInfo returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasEpsPdnCnxInfo() bool {
	if o != nil && !IsNil(o.EpsPdnCnxInfo) {
		return true
	}

	return false
}

// SetEpsPdnCnxInfo gets a reference to the given EpsPdnCnxInfo and assigns it to the EpsPdnCnxInfo field.
func (o *VsmfUpdateData) SetEpsPdnCnxInfo(v EpsPdnCnxInfo) {
	o.EpsPdnCnxInfo = &v
}

// GetN9DataForwardingInd returns the N9DataForwardingInd field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN9DataForwardingInd() bool {
	if o == nil || IsNil(o.N9DataForwardingInd) {
		var ret bool
		return ret
	}
	return *o.N9DataForwardingInd
}

// GetN9DataForwardingIndOk returns a tuple with the N9DataForwardingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN9DataForwardingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.N9DataForwardingInd) {
		return nil, false
	}
	return o.N9DataForwardingInd, true
}

// HasN9DataForwardingInd returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN9DataForwardingInd() bool {
	if o != nil && !IsNil(o.N9DataForwardingInd) {
		return true
	}

	return false
}

// SetN9DataForwardingInd gets a reference to the given bool and assigns it to the N9DataForwardingInd field.
func (o *VsmfUpdateData) SetN9DataForwardingInd(v bool) {
	o.N9DataForwardingInd = &v
}

// GetN9InactivityTimer returns the N9InactivityTimer field value if set, zero value otherwise.
func (o *VsmfUpdateData) GetN9InactivityTimer() int32 {
	if o == nil || IsNil(o.N9InactivityTimer) {
		var ret int32
		return ret
	}
	return *o.N9InactivityTimer
}

// GetN9InactivityTimerOk returns a tuple with the N9InactivityTimer field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VsmfUpdateData) GetN9InactivityTimerOk() (*int32, bool) {
	if o == nil || IsNil(o.N9InactivityTimer) {
		return nil, false
	}
	return o.N9InactivityTimer, true
}

// HasN9InactivityTimer returns a boolean if a field has been set.
func (o *VsmfUpdateData) HasN9InactivityTimer() bool {
	if o != nil && !IsNil(o.N9InactivityTimer) {
		return true
	}

	return false
}

// SetN9InactivityTimer gets a reference to the given int32 and assigns it to the N9InactivityTimer field.
func (o *VsmfUpdateData) SetN9InactivityTimer(v int32) {
	o.N9InactivityTimer = &v
}

func (o VsmfUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VsmfUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestIndication"] = o.RequestIndication
	if !IsNil(o.SessionAmbr) {
		toSerialize["sessionAmbr"] = o.SessionAmbr
	}
	if !IsNil(o.QosFlowsAddModRequestList) {
		toSerialize["qosFlowsAddModRequestList"] = o.QosFlowsAddModRequestList
	}
	if !IsNil(o.QosFlowsRelRequestList) {
		toSerialize["qosFlowsRelRequestList"] = o.QosFlowsRelRequestList
	}
	if !IsNil(o.EpsBearerInfo) {
		toSerialize["epsBearerInfo"] = o.EpsBearerInfo
	}
	if !IsNil(o.AssignEbiList) {
		toSerialize["assignEbiList"] = o.AssignEbiList
	}
	if !IsNil(o.RevokeEbiList) {
		toSerialize["revokeEbiList"] = o.RevokeEbiList
	}
	if !IsNil(o.ModifiedEbiList) {
		toSerialize["modifiedEbiList"] = o.ModifiedEbiList
	}
	if !IsNil(o.Pti) {
		toSerialize["pti"] = o.Pti
	}
	if !IsNil(o.N1SmInfoToUe) {
		toSerialize["n1SmInfoToUe"] = o.N1SmInfoToUe
	}
	if !IsNil(o.AlwaysOnGranted) {
		toSerialize["alwaysOnGranted"] = o.AlwaysOnGranted
	}
	if !IsNil(o.HsmfPduSessionUri) {
		toSerialize["hsmfPduSessionUri"] = o.HsmfPduSessionUri
	}
	if !IsNil(o.NewSmfId) {
		toSerialize["newSmfId"] = o.NewSmfId
	}
	if !IsNil(o.NewSmfPduSessionUri) {
		toSerialize["newSmfPduSessionUri"] = o.NewSmfPduSessionUri
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.Cause) {
		toSerialize["cause"] = o.Cause
	}
	if !IsNil(o.N1smCause) {
		toSerialize["n1smCause"] = o.N1smCause
	}
	if !IsNil(o.BackOffTimer) {
		toSerialize["backOffTimer"] = o.BackOffTimer
	}
	if !IsNil(o.MaReleaseInd) {
		toSerialize["maReleaseInd"] = o.MaReleaseInd
	}
	if !IsNil(o.MaAcceptedInd) {
		toSerialize["maAcceptedInd"] = o.MaAcceptedInd
	}
	if !IsNil(o.AdditionalCnTunnelInfo) {
		toSerialize["additionalCnTunnelInfo"] = o.AdditionalCnTunnelInfo
	}
	if !IsNil(o.DnaiList) {
		toSerialize["dnaiList"] = o.DnaiList
	}
	if !IsNil(o.N4Info) {
		toSerialize["n4Info"] = o.N4Info
	}
	if !IsNil(o.N4InfoExt1) {
		toSerialize["n4InfoExt1"] = o.N4InfoExt1
	}
	if !IsNil(o.N4InfoExt2) {
		toSerialize["n4InfoExt2"] = o.N4InfoExt2
	}
	if !IsNil(o.N4InfoExt3) {
		toSerialize["n4InfoExt3"] = o.N4InfoExt3
	}
	if !IsNil(o.SmallDataRateControlEnabled) {
		toSerialize["smallDataRateControlEnabled"] = o.SmallDataRateControlEnabled
	}
	if !IsNil(o.QosMonitoringInfo) {
		toSerialize["qosMonitoringInfo"] = o.QosMonitoringInfo
	}
	if !IsNil(o.EpsPdnCnxInfo) {
		toSerialize["epsPdnCnxInfo"] = o.EpsPdnCnxInfo
	}
	if !IsNil(o.N9DataForwardingInd) {
		toSerialize["n9DataForwardingInd"] = o.N9DataForwardingInd
	}
	if !IsNil(o.N9InactivityTimer) {
		toSerialize["n9InactivityTimer"] = o.N9InactivityTimer
	}
	return toSerialize, nil
}

type NullableVsmfUpdateData struct {
	value *VsmfUpdateData
	isSet bool
}

func (v NullableVsmfUpdateData) Get() *VsmfUpdateData {
	return v.value
}

func (v *NullableVsmfUpdateData) Set(val *VsmfUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableVsmfUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableVsmfUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVsmfUpdateData(val *VsmfUpdateData) *NullableVsmfUpdateData {
	return &NullableVsmfUpdateData{value: val, isSet: true}
}

func (v NullableVsmfUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVsmfUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
