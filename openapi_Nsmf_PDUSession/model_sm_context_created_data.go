/*
Nsmf_PDUSession

SMF PDU Session Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
	"time"
)

// checks if the SmContextCreatedData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmContextCreatedData{}

// SmContextCreatedData Data within Create SM Context Response
type SmContextCreatedData struct {
	// String providing an URI formatted according to RFC 3986.
	HSmfUri *string `json:"hSmfUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SmfUri *string `json:"smfUri,omitempty"`
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.  
	PduSessionId *int32 `json:"pduSessionId,omitempty"`
	SNssai *Snssai `json:"sNssai,omitempty"`
	UpCnxState *UpCnxState `json:"upCnxState,omitempty"`
	N2SmInfo *RefToBinaryData `json:"n2SmInfo,omitempty"`
	N2SmInfoType *N2SmInfoType `json:"n2SmInfoType,omitempty"`
	AllocatedEbiList []EbiArpMapping `json:"allocatedEbiList,omitempty"`
	HoState *HoState `json:"hoState,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	Gpsi *string `json:"gpsi,omitempty"`
	SmfServiceInstanceId *string `json:"smfServiceInstanceId,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RecoveryTime *time.Time `json:"recoveryTime,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	SelectedSmfId *string `json:"selectedSmfId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.  
	SelectedOldSmfId *string `json:"selectedOldSmfId,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot *string `json:"interPlmnApiRoot,omitempty"`
}

// NewSmContextCreatedData instantiates a new SmContextCreatedData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmContextCreatedData() *SmContextCreatedData {
	this := SmContextCreatedData{}
	return &this
}

// NewSmContextCreatedDataWithDefaults instantiates a new SmContextCreatedData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmContextCreatedDataWithDefaults() *SmContextCreatedData {
	this := SmContextCreatedData{}
	return &this
}

// GetHSmfUri returns the HSmfUri field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetHSmfUri() string {
	if o == nil || isNil(o.HSmfUri) {
		var ret string
		return ret
	}
	return *o.HSmfUri
}

// GetHSmfUriOk returns a tuple with the HSmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetHSmfUriOk() (*string, bool) {
	if o == nil || isNil(o.HSmfUri) {
		return nil, false
	}
	return o.HSmfUri, true
}

// HasHSmfUri returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasHSmfUri() bool {
	if o != nil && !isNil(o.HSmfUri) {
		return true
	}

	return false
}

// SetHSmfUri gets a reference to the given string and assigns it to the HSmfUri field.
func (o *SmContextCreatedData) SetHSmfUri(v string) {
	o.HSmfUri = &v
}

// GetSmfUri returns the SmfUri field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSmfUri() string {
	if o == nil || isNil(o.SmfUri) {
		var ret string
		return ret
	}
	return *o.SmfUri
}

// GetSmfUriOk returns a tuple with the SmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSmfUriOk() (*string, bool) {
	if o == nil || isNil(o.SmfUri) {
		return nil, false
	}
	return o.SmfUri, true
}

// HasSmfUri returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSmfUri() bool {
	if o != nil && !isNil(o.SmfUri) {
		return true
	}

	return false
}

// SetSmfUri gets a reference to the given string and assigns it to the SmfUri field.
func (o *SmContextCreatedData) SetSmfUri(v string) {
	o.SmfUri = &v
}

// GetPduSessionId returns the PduSessionId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetPduSessionId() int32 {
	if o == nil || isNil(o.PduSessionId) {
		var ret int32
		return ret
	}
	return *o.PduSessionId
}

// GetPduSessionIdOk returns a tuple with the PduSessionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetPduSessionIdOk() (*int32, bool) {
	if o == nil || isNil(o.PduSessionId) {
		return nil, false
	}
	return o.PduSessionId, true
}

// HasPduSessionId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasPduSessionId() bool {
	if o != nil && !isNil(o.PduSessionId) {
		return true
	}

	return false
}

// SetPduSessionId gets a reference to the given int32 and assigns it to the PduSessionId field.
func (o *SmContextCreatedData) SetPduSessionId(v int32) {
	o.PduSessionId = &v
}

// GetSNssai returns the SNssai field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSNssai() Snssai {
	if o == nil || isNil(o.SNssai) {
		var ret Snssai
		return ret
	}
	return *o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSNssaiOk() (*Snssai, bool) {
	if o == nil || isNil(o.SNssai) {
		return nil, false
	}
	return o.SNssai, true
}

// HasSNssai returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSNssai() bool {
	if o != nil && !isNil(o.SNssai) {
		return true
	}

	return false
}

// SetSNssai gets a reference to the given Snssai and assigns it to the SNssai field.
func (o *SmContextCreatedData) SetSNssai(v Snssai) {
	o.SNssai = &v
}

// GetUpCnxState returns the UpCnxState field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetUpCnxState() UpCnxState {
	if o == nil || isNil(o.UpCnxState) {
		var ret UpCnxState
		return ret
	}
	return *o.UpCnxState
}

// GetUpCnxStateOk returns a tuple with the UpCnxState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetUpCnxStateOk() (*UpCnxState, bool) {
	if o == nil || isNil(o.UpCnxState) {
		return nil, false
	}
	return o.UpCnxState, true
}

// HasUpCnxState returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasUpCnxState() bool {
	if o != nil && !isNil(o.UpCnxState) {
		return true
	}

	return false
}

// SetUpCnxState gets a reference to the given UpCnxState and assigns it to the UpCnxState field.
func (o *SmContextCreatedData) SetUpCnxState(v UpCnxState) {
	o.UpCnxState = &v
}

// GetN2SmInfo returns the N2SmInfo field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetN2SmInfo() RefToBinaryData {
	if o == nil || isNil(o.N2SmInfo) {
		var ret RefToBinaryData
		return ret
	}
	return *o.N2SmInfo
}

// GetN2SmInfoOk returns a tuple with the N2SmInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetN2SmInfoOk() (*RefToBinaryData, bool) {
	if o == nil || isNil(o.N2SmInfo) {
		return nil, false
	}
	return o.N2SmInfo, true
}

// HasN2SmInfo returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasN2SmInfo() bool {
	if o != nil && !isNil(o.N2SmInfo) {
		return true
	}

	return false
}

// SetN2SmInfo gets a reference to the given RefToBinaryData and assigns it to the N2SmInfo field.
func (o *SmContextCreatedData) SetN2SmInfo(v RefToBinaryData) {
	o.N2SmInfo = &v
}

// GetN2SmInfoType returns the N2SmInfoType field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetN2SmInfoType() N2SmInfoType {
	if o == nil || isNil(o.N2SmInfoType) {
		var ret N2SmInfoType
		return ret
	}
	return *o.N2SmInfoType
}

// GetN2SmInfoTypeOk returns a tuple with the N2SmInfoType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetN2SmInfoTypeOk() (*N2SmInfoType, bool) {
	if o == nil || isNil(o.N2SmInfoType) {
		return nil, false
	}
	return o.N2SmInfoType, true
}

// HasN2SmInfoType returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasN2SmInfoType() bool {
	if o != nil && !isNil(o.N2SmInfoType) {
		return true
	}

	return false
}

// SetN2SmInfoType gets a reference to the given N2SmInfoType and assigns it to the N2SmInfoType field.
func (o *SmContextCreatedData) SetN2SmInfoType(v N2SmInfoType) {
	o.N2SmInfoType = &v
}

// GetAllocatedEbiList returns the AllocatedEbiList field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetAllocatedEbiList() []EbiArpMapping {
	if o == nil || isNil(o.AllocatedEbiList) {
		var ret []EbiArpMapping
		return ret
	}
	return o.AllocatedEbiList
}

// GetAllocatedEbiListOk returns a tuple with the AllocatedEbiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetAllocatedEbiListOk() ([]EbiArpMapping, bool) {
	if o == nil || isNil(o.AllocatedEbiList) {
		return nil, false
	}
	return o.AllocatedEbiList, true
}

// HasAllocatedEbiList returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasAllocatedEbiList() bool {
	if o != nil && !isNil(o.AllocatedEbiList) {
		return true
	}

	return false
}

// SetAllocatedEbiList gets a reference to the given []EbiArpMapping and assigns it to the AllocatedEbiList field.
func (o *SmContextCreatedData) SetAllocatedEbiList(v []EbiArpMapping) {
	o.AllocatedEbiList = v
}

// GetHoState returns the HoState field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetHoState() HoState {
	if o == nil || isNil(o.HoState) {
		var ret HoState
		return ret
	}
	return *o.HoState
}

// GetHoStateOk returns a tuple with the HoState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetHoStateOk() (*HoState, bool) {
	if o == nil || isNil(o.HoState) {
		return nil, false
	}
	return o.HoState, true
}

// HasHoState returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasHoState() bool {
	if o != nil && !isNil(o.HoState) {
		return true
	}

	return false
}

// SetHoState gets a reference to the given HoState and assigns it to the HoState field.
func (o *SmContextCreatedData) SetHoState(v HoState) {
	o.HoState = &v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetGpsi() string {
	if o == nil || isNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetGpsiOk() (*string, bool) {
	if o == nil || isNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasGpsi() bool {
	if o != nil && !isNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *SmContextCreatedData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetSmfServiceInstanceId returns the SmfServiceInstanceId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSmfServiceInstanceId() string {
	if o == nil || isNil(o.SmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.SmfServiceInstanceId
}

// GetSmfServiceInstanceIdOk returns a tuple with the SmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || isNil(o.SmfServiceInstanceId) {
		return nil, false
	}
	return o.SmfServiceInstanceId, true
}

// HasSmfServiceInstanceId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSmfServiceInstanceId() bool {
	if o != nil && !isNil(o.SmfServiceInstanceId) {
		return true
	}

	return false
}

// SetSmfServiceInstanceId gets a reference to the given string and assigns it to the SmfServiceInstanceId field.
func (o *SmContextCreatedData) SetSmfServiceInstanceId(v string) {
	o.SmfServiceInstanceId = &v
}

// GetRecoveryTime returns the RecoveryTime field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetRecoveryTime() time.Time {
	if o == nil || isNil(o.RecoveryTime) {
		var ret time.Time
		return ret
	}
	return *o.RecoveryTime
}

// GetRecoveryTimeOk returns a tuple with the RecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetRecoveryTimeOk() (*time.Time, bool) {
	if o == nil || isNil(o.RecoveryTime) {
		return nil, false
	}
	return o.RecoveryTime, true
}

// HasRecoveryTime returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasRecoveryTime() bool {
	if o != nil && !isNil(o.RecoveryTime) {
		return true
	}

	return false
}

// SetRecoveryTime gets a reference to the given time.Time and assigns it to the RecoveryTime field.
func (o *SmContextCreatedData) SetRecoveryTime(v time.Time) {
	o.RecoveryTime = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSupportedFeatures() string {
	if o == nil || isNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSupportedFeatures() bool {
	if o != nil && !isNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *SmContextCreatedData) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetSelectedSmfId returns the SelectedSmfId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSelectedSmfId() string {
	if o == nil || isNil(o.SelectedSmfId) {
		var ret string
		return ret
	}
	return *o.SelectedSmfId
}

// GetSelectedSmfIdOk returns a tuple with the SelectedSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSelectedSmfIdOk() (*string, bool) {
	if o == nil || isNil(o.SelectedSmfId) {
		return nil, false
	}
	return o.SelectedSmfId, true
}

// HasSelectedSmfId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSelectedSmfId() bool {
	if o != nil && !isNil(o.SelectedSmfId) {
		return true
	}

	return false
}

// SetSelectedSmfId gets a reference to the given string and assigns it to the SelectedSmfId field.
func (o *SmContextCreatedData) SetSelectedSmfId(v string) {
	o.SelectedSmfId = &v
}

// GetSelectedOldSmfId returns the SelectedOldSmfId field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetSelectedOldSmfId() string {
	if o == nil || isNil(o.SelectedOldSmfId) {
		var ret string
		return ret
	}
	return *o.SelectedOldSmfId
}

// GetSelectedOldSmfIdOk returns a tuple with the SelectedOldSmfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetSelectedOldSmfIdOk() (*string, bool) {
	if o == nil || isNil(o.SelectedOldSmfId) {
		return nil, false
	}
	return o.SelectedOldSmfId, true
}

// HasSelectedOldSmfId returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasSelectedOldSmfId() bool {
	if o != nil && !isNil(o.SelectedOldSmfId) {
		return true
	}

	return false
}

// SetSelectedOldSmfId gets a reference to the given string and assigns it to the SelectedOldSmfId field.
func (o *SmContextCreatedData) SetSelectedOldSmfId(v string) {
	o.SelectedOldSmfId = &v
}

// GetInterPlmnApiRoot returns the InterPlmnApiRoot field value if set, zero value otherwise.
func (o *SmContextCreatedData) GetInterPlmnApiRoot() string {
	if o == nil || isNil(o.InterPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.InterPlmnApiRoot
}

// GetInterPlmnApiRootOk returns a tuple with the InterPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContextCreatedData) GetInterPlmnApiRootOk() (*string, bool) {
	if o == nil || isNil(o.InterPlmnApiRoot) {
		return nil, false
	}
	return o.InterPlmnApiRoot, true
}

// HasInterPlmnApiRoot returns a boolean if a field has been set.
func (o *SmContextCreatedData) HasInterPlmnApiRoot() bool {
	if o != nil && !isNil(o.InterPlmnApiRoot) {
		return true
	}

	return false
}

// SetInterPlmnApiRoot gets a reference to the given string and assigns it to the InterPlmnApiRoot field.
func (o *SmContextCreatedData) SetInterPlmnApiRoot(v string) {
	o.InterPlmnApiRoot = &v
}

func (o SmContextCreatedData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmContextCreatedData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.HSmfUri) {
		toSerialize["hSmfUri"] = o.HSmfUri
	}
	if !isNil(o.SmfUri) {
		toSerialize["smfUri"] = o.SmfUri
	}
	if !isNil(o.PduSessionId) {
		toSerialize["pduSessionId"] = o.PduSessionId
	}
	if !isNil(o.SNssai) {
		toSerialize["sNssai"] = o.SNssai
	}
	if !isNil(o.UpCnxState) {
		toSerialize["upCnxState"] = o.UpCnxState
	}
	if !isNil(o.N2SmInfo) {
		toSerialize["n2SmInfo"] = o.N2SmInfo
	}
	if !isNil(o.N2SmInfoType) {
		toSerialize["n2SmInfoType"] = o.N2SmInfoType
	}
	if !isNil(o.AllocatedEbiList) {
		toSerialize["allocatedEbiList"] = o.AllocatedEbiList
	}
	if !isNil(o.HoState) {
		toSerialize["hoState"] = o.HoState
	}
	if !isNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !isNil(o.SmfServiceInstanceId) {
		toSerialize["smfServiceInstanceId"] = o.SmfServiceInstanceId
	}
	if !isNil(o.RecoveryTime) {
		toSerialize["recoveryTime"] = o.RecoveryTime
	}
	if !isNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !isNil(o.SelectedSmfId) {
		toSerialize["selectedSmfId"] = o.SelectedSmfId
	}
	if !isNil(o.SelectedOldSmfId) {
		toSerialize["selectedOldSmfId"] = o.SelectedOldSmfId
	}
	if !isNil(o.InterPlmnApiRoot) {
		toSerialize["interPlmnApiRoot"] = o.InterPlmnApiRoot
	}
	return toSerialize, nil
}

type NullableSmContextCreatedData struct {
	value *SmContextCreatedData
	isSet bool
}

func (v NullableSmContextCreatedData) Get() *SmContextCreatedData {
	return v.value
}

func (v *NullableSmContextCreatedData) Set(val *SmContextCreatedData) {
	v.value = val
	v.isSet = true
}

func (v NullableSmContextCreatedData) IsSet() bool {
	return v.isSet
}

func (v *NullableSmContextCreatedData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmContextCreatedData(val *SmContextCreatedData) *NullableSmContextCreatedData {
	return &NullableSmContextCreatedData{value: val, isSet: true}
}

func (v NullableSmContextCreatedData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmContextCreatedData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


