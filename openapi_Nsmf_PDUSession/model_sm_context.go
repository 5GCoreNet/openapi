/*
Nsmf_PDUSession

SMF PDU Session Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nsmf_PDUSession

import (
	"encoding/json"
	"time"
)

// checks if the SmContext type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SmContext{}

// SmContext Complete SM Context
type SmContext struct {
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.
	PduSessionId int32 `json:"pduSessionId"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	Dnn string `json:"dnn"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	SelectedDnn    *string        `json:"selectedDnn,omitempty"`
	SNssai         Snssai         `json:"sNssai"`
	HplmnSnssai    *Snssai        `json:"hplmnSnssai,omitempty"`
	PduSessionType PduSessionType `json:"pduSessionType"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	Gpsi *string `json:"gpsi,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	HSmfUri *string `json:"hSmfUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	SmfUri *string `json:"smfUri,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	PduSessionRef *string `json:"pduSessionRef,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	InterPlmnApiRoot *string `json:"interPlmnApiRoot,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	IntraPlmnApiRoot *string `json:"intraPlmnApiRoot,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	PcfId *string `json:"pcfId,omitempty"`
	// Identifier of a group of NFs.
	PcfGroupId *string `json:"pcfGroupId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	PcfSetId *string           `json:"pcfSetId,omitempty"`
	SelMode  *DnnSelectionMode `json:"selMode,omitempty"`
	// Identifier of a group of NFs.
	UdmGroupId       *string            `json:"udmGroupId,omitempty"`
	RoutingIndicator *string            `json:"routingIndicator,omitempty"`
	HNwPubKeyId      *int32             `json:"hNwPubKeyId,omitempty"`
	SessionAmbr      Ambr               `json:"sessionAmbr"`
	QosFlowsList     []QosFlowSetupItem `json:"qosFlowsList"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	HSmfInstanceId *string `json:"hSmfInstanceId,omitempty"`
	// String uniquely identifying a NF instance. The format of the NF Instance ID shall be a  Universally Unique Identifier (UUID) version 4, as described in IETF RFC 4122.
	SmfInstanceId *string `json:"smfInstanceId,omitempty"`
	// NF Set Identifier (see clause 28.12 of 3GPP TS 23.003), formatted as the following string \"set<Set ID>.<nftype>set.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.<NFType>set.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)  <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NFType> encoded as a value defined in Table 6.1.6.3.3-1 of 3GPP TS 29.510 but    with lower case characters <Set ID> encoded as a string of characters consisting of    alphabetic characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that    shall end with either an alphabetic character or a digit.
	PduSessionSmfSetId *string `json:"pduSessionSmfSetId,omitempty"`
	// NF Service Set Identifier (see clause 28.12 of 3GPP TS 23.003) formatted as the following  string \"set<Set ID>.sn<Service Name>.nfi<NF Instance ID>.5gc.mnc<MNC>.mcc<MCC>\", or  \"set<SetID>.sn<ServiceName>.nfi<NFInstanceID>.5gc.nid<NID>.mnc<MNC>.mcc<MCC>\" with  <MCC> encoded as defined in clause 5.4.2 (\"Mcc\" data type definition)   <MNC> encoding the Mobile Network Code part of the PLMN, comprising 3 digits.    If there are only 2 significant digits in the MNC, one \"0\" digit shall be inserted    at the left side to fill the 3 digits coding of MNC.  Pattern: '^[0-9]{3}$' <NID> encoded as defined in clause 5.4.2 (\"Nid\" data type definition)  <NFInstanceId> encoded as defined in clause 5.3.2  <ServiceName> encoded as defined in 3GPP TS 29.510  <Set ID> encoded as a string of characters consisting of alphabetic    characters (A-Z and a-z), digits (0-9) and/or the hyphen (-) and that shall end    with either an alphabetic character or a digit.
	PduSessionSmfServiceSetId *string          `json:"pduSessionSmfServiceSetId,omitempty"`
	PduSessionSmfBinding      *SbiBindingLevel `json:"pduSessionSmfBinding,omitempty"`
	EnablePauseCharging       *bool            `json:"enablePauseCharging,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	UeIpv4Address                   *string                        `json:"ueIpv4Address,omitempty"`
	UeIpv6Prefix                    *Ipv6Prefix                    `json:"ueIpv6Prefix,omitempty"`
	EpsPdnCnxInfo                   *EpsPdnCnxInfo                 `json:"epsPdnCnxInfo,omitempty"`
	EpsBearerInfo                   []EpsBearerInfo                `json:"epsBearerInfo,omitempty"`
	MaxIntegrityProtectedDataRate   *MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRate,omitempty"`
	MaxIntegrityProtectedDataRateDl *MaxIntegrityProtectedDataRate `json:"maxIntegrityProtectedDataRateDl,omitempty"`
	AlwaysOnGranted                 *bool                          `json:"alwaysOnGranted,omitempty"`
	UpSecurity                      *UpSecurity                    `json:"upSecurity,omitempty"`
	HSmfServiceInstanceId           *string                        `json:"hSmfServiceInstanceId,omitempty"`
	SmfServiceInstanceId            *string                        `json:"smfServiceInstanceId,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	RecoveryTime           *time.Time              `json:"recoveryTime,omitempty"`
	ForwardingInd          *bool                   `json:"forwardingInd,omitempty"`
	PsaTunnelInfo          *TunnelInfo             `json:"psaTunnelInfo,omitempty"`
	ChargingId             *string                 `json:"chargingId,omitempty"`
	ChargingInfo           *ChargingInformation    `json:"chargingInfo,omitempty"`
	RoamingChargingProfile *RoamingChargingProfile `json:"roamingChargingProfile,omitempty"`
	NefExtBufSupportInd    *bool                   `json:"nefExtBufSupportInd,omitempty"`
	// Represents information that identifies which IP pool or external server is used to allocate the IP address.
	Ipv6Index               *int32                          `json:"ipv6Index,omitempty"`
	DnAaaAddress            *IpAddress                      `json:"dnAaaAddress,omitempty"`
	RedundantPduSessionInfo *RedundantPduSessionInformation `json:"redundantPduSessionInfo,omitempty"`
	RanTunnelInfo           *QosFlowTunnel                  `json:"ranTunnelInfo,omitempty"`
	AddRanTunnelInfo        []QosFlowTunnel                 `json:"addRanTunnelInfo,omitempty"`
	RedRanTunnelInfo        *QosFlowTunnel                  `json:"redRanTunnelInfo,omitempty"`
	AddRedRanTunnelInfo     []QosFlowTunnel                 `json:"addRedRanTunnelInfo,omitempty"`
	NspuSupportInd          *bool                           `json:"nspuSupportInd,omitempty"`
	SmfBindingInfo          *string                         `json:"smfBindingInfo,omitempty"`
	SatelliteBackhaulCat    *SatelliteBackhaulCategory      `json:"satelliteBackhaulCat,omitempty"`
	SscMode                 *string                         `json:"sscMode,omitempty"`
	DlsetSupportInd         *bool                           `json:"dlsetSupportInd,omitempty"`
	N9fscSupportInd         *bool                           `json:"n9fscSupportInd,omitempty"`
	DisasterRoamingInd      *bool                           `json:"disasterRoamingInd,omitempty"`
	AnchorSmfOauth2Required *bool                           `json:"anchorSmfOauth2Required,omitempty"`
	FullDnaiList            []string                        `json:"fullDnaiList,omitempty"`
}

// NewSmContext instantiates a new SmContext object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSmContext(pduSessionId int32, dnn string, sNssai Snssai, pduSessionType PduSessionType, sessionAmbr Ambr, qosFlowsList []QosFlowSetupItem) *SmContext {
	this := SmContext{}
	this.PduSessionId = pduSessionId
	this.Dnn = dnn
	this.SNssai = sNssai
	this.PduSessionType = pduSessionType
	this.SessionAmbr = sessionAmbr
	this.QosFlowsList = qosFlowsList
	var enablePauseCharging bool = false
	this.EnablePauseCharging = &enablePauseCharging
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	var forwardingInd bool = false
	this.ForwardingInd = &forwardingInd
	var nefExtBufSupportInd bool = false
	this.NefExtBufSupportInd = &nefExtBufSupportInd
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	return &this
}

// NewSmContextWithDefaults instantiates a new SmContext object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSmContextWithDefaults() *SmContext {
	this := SmContext{}
	var enablePauseCharging bool = false
	this.EnablePauseCharging = &enablePauseCharging
	var alwaysOnGranted bool = false
	this.AlwaysOnGranted = &alwaysOnGranted
	var forwardingInd bool = false
	this.ForwardingInd = &forwardingInd
	var nefExtBufSupportInd bool = false
	this.NefExtBufSupportInd = &nefExtBufSupportInd
	var disasterRoamingInd bool = false
	this.DisasterRoamingInd = &disasterRoamingInd
	return &this
}

// GetPduSessionId returns the PduSessionId field value
func (o *SmContext) GetPduSessionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PduSessionId
}

// GetPduSessionIdOk returns a tuple with the PduSessionId field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PduSessionId, true
}

// SetPduSessionId sets field value
func (o *SmContext) SetPduSessionId(v int32) {
	o.PduSessionId = v
}

// GetDnn returns the Dnn field value
func (o *SmContext) GetDnn() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetDnnOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Dnn, true
}

// SetDnn sets field value
func (o *SmContext) SetDnn(v string) {
	o.Dnn = v
}

// GetSelectedDnn returns the SelectedDnn field value if set, zero value otherwise.
func (o *SmContext) GetSelectedDnn() string {
	if o == nil || IsNil(o.SelectedDnn) {
		var ret string
		return ret
	}
	return *o.SelectedDnn
}

// GetSelectedDnnOk returns a tuple with the SelectedDnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSelectedDnnOk() (*string, bool) {
	if o == nil || IsNil(o.SelectedDnn) {
		return nil, false
	}
	return o.SelectedDnn, true
}

// HasSelectedDnn returns a boolean if a field has been set.
func (o *SmContext) HasSelectedDnn() bool {
	if o != nil && !IsNil(o.SelectedDnn) {
		return true
	}

	return false
}

// SetSelectedDnn gets a reference to the given string and assigns it to the SelectedDnn field.
func (o *SmContext) SetSelectedDnn(v string) {
	o.SelectedDnn = &v
}

// GetSNssai returns the SNssai field value
func (o *SmContext) GetSNssai() Snssai {
	if o == nil {
		var ret Snssai
		return ret
	}

	return o.SNssai
}

// GetSNssaiOk returns a tuple with the SNssai field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetSNssaiOk() (*Snssai, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SNssai, true
}

// SetSNssai sets field value
func (o *SmContext) SetSNssai(v Snssai) {
	o.SNssai = v
}

// GetHplmnSnssai returns the HplmnSnssai field value if set, zero value otherwise.
func (o *SmContext) GetHplmnSnssai() Snssai {
	if o == nil || IsNil(o.HplmnSnssai) {
		var ret Snssai
		return ret
	}
	return *o.HplmnSnssai
}

// GetHplmnSnssaiOk returns a tuple with the HplmnSnssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetHplmnSnssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.HplmnSnssai) {
		return nil, false
	}
	return o.HplmnSnssai, true
}

// HasHplmnSnssai returns a boolean if a field has been set.
func (o *SmContext) HasHplmnSnssai() bool {
	if o != nil && !IsNil(o.HplmnSnssai) {
		return true
	}

	return false
}

// SetHplmnSnssai gets a reference to the given Snssai and assigns it to the HplmnSnssai field.
func (o *SmContext) SetHplmnSnssai(v Snssai) {
	o.HplmnSnssai = &v
}

// GetPduSessionType returns the PduSessionType field value
func (o *SmContext) GetPduSessionType() PduSessionType {
	if o == nil {
		var ret PduSessionType
		return ret
	}

	return o.PduSessionType
}

// GetPduSessionTypeOk returns a tuple with the PduSessionType field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionTypeOk() (*PduSessionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PduSessionType, true
}

// SetPduSessionType sets field value
func (o *SmContext) SetPduSessionType(v PduSessionType) {
	o.PduSessionType = v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *SmContext) GetGpsi() string {
	if o == nil || IsNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetGpsiOk() (*string, bool) {
	if o == nil || IsNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *SmContext) HasGpsi() bool {
	if o != nil && !IsNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *SmContext) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetHSmfUri returns the HSmfUri field value if set, zero value otherwise.
func (o *SmContext) GetHSmfUri() string {
	if o == nil || IsNil(o.HSmfUri) {
		var ret string
		return ret
	}
	return *o.HSmfUri
}

// GetHSmfUriOk returns a tuple with the HSmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetHSmfUriOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfUri) {
		return nil, false
	}
	return o.HSmfUri, true
}

// HasHSmfUri returns a boolean if a field has been set.
func (o *SmContext) HasHSmfUri() bool {
	if o != nil && !IsNil(o.HSmfUri) {
		return true
	}

	return false
}

// SetHSmfUri gets a reference to the given string and assigns it to the HSmfUri field.
func (o *SmContext) SetHSmfUri(v string) {
	o.HSmfUri = &v
}

// GetSmfUri returns the SmfUri field value if set, zero value otherwise.
func (o *SmContext) GetSmfUri() string {
	if o == nil || IsNil(o.SmfUri) {
		var ret string
		return ret
	}
	return *o.SmfUri
}

// GetSmfUriOk returns a tuple with the SmfUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSmfUriOk() (*string, bool) {
	if o == nil || IsNil(o.SmfUri) {
		return nil, false
	}
	return o.SmfUri, true
}

// HasSmfUri returns a boolean if a field has been set.
func (o *SmContext) HasSmfUri() bool {
	if o != nil && !IsNil(o.SmfUri) {
		return true
	}

	return false
}

// SetSmfUri gets a reference to the given string and assigns it to the SmfUri field.
func (o *SmContext) SetSmfUri(v string) {
	o.SmfUri = &v
}

// GetPduSessionRef returns the PduSessionRef field value if set, zero value otherwise.
func (o *SmContext) GetPduSessionRef() string {
	if o == nil || IsNil(o.PduSessionRef) {
		var ret string
		return ret
	}
	return *o.PduSessionRef
}

// GetPduSessionRefOk returns a tuple with the PduSessionRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionRefOk() (*string, bool) {
	if o == nil || IsNil(o.PduSessionRef) {
		return nil, false
	}
	return o.PduSessionRef, true
}

// HasPduSessionRef returns a boolean if a field has been set.
func (o *SmContext) HasPduSessionRef() bool {
	if o != nil && !IsNil(o.PduSessionRef) {
		return true
	}

	return false
}

// SetPduSessionRef gets a reference to the given string and assigns it to the PduSessionRef field.
func (o *SmContext) SetPduSessionRef(v string) {
	o.PduSessionRef = &v
}

// GetInterPlmnApiRoot returns the InterPlmnApiRoot field value if set, zero value otherwise.
func (o *SmContext) GetInterPlmnApiRoot() string {
	if o == nil || IsNil(o.InterPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.InterPlmnApiRoot
}

// GetInterPlmnApiRootOk returns a tuple with the InterPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetInterPlmnApiRootOk() (*string, bool) {
	if o == nil || IsNil(o.InterPlmnApiRoot) {
		return nil, false
	}
	return o.InterPlmnApiRoot, true
}

// HasInterPlmnApiRoot returns a boolean if a field has been set.
func (o *SmContext) HasInterPlmnApiRoot() bool {
	if o != nil && !IsNil(o.InterPlmnApiRoot) {
		return true
	}

	return false
}

// SetInterPlmnApiRoot gets a reference to the given string and assigns it to the InterPlmnApiRoot field.
func (o *SmContext) SetInterPlmnApiRoot(v string) {
	o.InterPlmnApiRoot = &v
}

// GetIntraPlmnApiRoot returns the IntraPlmnApiRoot field value if set, zero value otherwise.
func (o *SmContext) GetIntraPlmnApiRoot() string {
	if o == nil || IsNil(o.IntraPlmnApiRoot) {
		var ret string
		return ret
	}
	return *o.IntraPlmnApiRoot
}

// GetIntraPlmnApiRootOk returns a tuple with the IntraPlmnApiRoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetIntraPlmnApiRootOk() (*string, bool) {
	if o == nil || IsNil(o.IntraPlmnApiRoot) {
		return nil, false
	}
	return o.IntraPlmnApiRoot, true
}

// HasIntraPlmnApiRoot returns a boolean if a field has been set.
func (o *SmContext) HasIntraPlmnApiRoot() bool {
	if o != nil && !IsNil(o.IntraPlmnApiRoot) {
		return true
	}

	return false
}

// SetIntraPlmnApiRoot gets a reference to the given string and assigns it to the IntraPlmnApiRoot field.
func (o *SmContext) SetIntraPlmnApiRoot(v string) {
	o.IntraPlmnApiRoot = &v
}

// GetPcfId returns the PcfId field value if set, zero value otherwise.
func (o *SmContext) GetPcfId() string {
	if o == nil || IsNil(o.PcfId) {
		var ret string
		return ret
	}
	return *o.PcfId
}

// GetPcfIdOk returns a tuple with the PcfId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPcfIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfId) {
		return nil, false
	}
	return o.PcfId, true
}

// HasPcfId returns a boolean if a field has been set.
func (o *SmContext) HasPcfId() bool {
	if o != nil && !IsNil(o.PcfId) {
		return true
	}

	return false
}

// SetPcfId gets a reference to the given string and assigns it to the PcfId field.
func (o *SmContext) SetPcfId(v string) {
	o.PcfId = &v
}

// GetPcfGroupId returns the PcfGroupId field value if set, zero value otherwise.
func (o *SmContext) GetPcfGroupId() string {
	if o == nil || IsNil(o.PcfGroupId) {
		var ret string
		return ret
	}
	return *o.PcfGroupId
}

// GetPcfGroupIdOk returns a tuple with the PcfGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPcfGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfGroupId) {
		return nil, false
	}
	return o.PcfGroupId, true
}

// HasPcfGroupId returns a boolean if a field has been set.
func (o *SmContext) HasPcfGroupId() bool {
	if o != nil && !IsNil(o.PcfGroupId) {
		return true
	}

	return false
}

// SetPcfGroupId gets a reference to the given string and assigns it to the PcfGroupId field.
func (o *SmContext) SetPcfGroupId(v string) {
	o.PcfGroupId = &v
}

// GetPcfSetId returns the PcfSetId field value if set, zero value otherwise.
func (o *SmContext) GetPcfSetId() string {
	if o == nil || IsNil(o.PcfSetId) {
		var ret string
		return ret
	}
	return *o.PcfSetId
}

// GetPcfSetIdOk returns a tuple with the PcfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPcfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PcfSetId) {
		return nil, false
	}
	return o.PcfSetId, true
}

// HasPcfSetId returns a boolean if a field has been set.
func (o *SmContext) HasPcfSetId() bool {
	if o != nil && !IsNil(o.PcfSetId) {
		return true
	}

	return false
}

// SetPcfSetId gets a reference to the given string and assigns it to the PcfSetId field.
func (o *SmContext) SetPcfSetId(v string) {
	o.PcfSetId = &v
}

// GetSelMode returns the SelMode field value if set, zero value otherwise.
func (o *SmContext) GetSelMode() DnnSelectionMode {
	if o == nil || IsNil(o.SelMode) {
		var ret DnnSelectionMode
		return ret
	}
	return *o.SelMode
}

// GetSelModeOk returns a tuple with the SelMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSelModeOk() (*DnnSelectionMode, bool) {
	if o == nil || IsNil(o.SelMode) {
		return nil, false
	}
	return o.SelMode, true
}

// HasSelMode returns a boolean if a field has been set.
func (o *SmContext) HasSelMode() bool {
	if o != nil && !IsNil(o.SelMode) {
		return true
	}

	return false
}

// SetSelMode gets a reference to the given DnnSelectionMode and assigns it to the SelMode field.
func (o *SmContext) SetSelMode(v DnnSelectionMode) {
	o.SelMode = &v
}

// GetUdmGroupId returns the UdmGroupId field value if set, zero value otherwise.
func (o *SmContext) GetUdmGroupId() string {
	if o == nil || IsNil(o.UdmGroupId) {
		var ret string
		return ret
	}
	return *o.UdmGroupId
}

// GetUdmGroupIdOk returns a tuple with the UdmGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetUdmGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.UdmGroupId) {
		return nil, false
	}
	return o.UdmGroupId, true
}

// HasUdmGroupId returns a boolean if a field has been set.
func (o *SmContext) HasUdmGroupId() bool {
	if o != nil && !IsNil(o.UdmGroupId) {
		return true
	}

	return false
}

// SetUdmGroupId gets a reference to the given string and assigns it to the UdmGroupId field.
func (o *SmContext) SetUdmGroupId(v string) {
	o.UdmGroupId = &v
}

// GetRoutingIndicator returns the RoutingIndicator field value if set, zero value otherwise.
func (o *SmContext) GetRoutingIndicator() string {
	if o == nil || IsNil(o.RoutingIndicator) {
		var ret string
		return ret
	}
	return *o.RoutingIndicator
}

// GetRoutingIndicatorOk returns a tuple with the RoutingIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRoutingIndicatorOk() (*string, bool) {
	if o == nil || IsNil(o.RoutingIndicator) {
		return nil, false
	}
	return o.RoutingIndicator, true
}

// HasRoutingIndicator returns a boolean if a field has been set.
func (o *SmContext) HasRoutingIndicator() bool {
	if o != nil && !IsNil(o.RoutingIndicator) {
		return true
	}

	return false
}

// SetRoutingIndicator gets a reference to the given string and assigns it to the RoutingIndicator field.
func (o *SmContext) SetRoutingIndicator(v string) {
	o.RoutingIndicator = &v
}

// GetHNwPubKeyId returns the HNwPubKeyId field value if set, zero value otherwise.
func (o *SmContext) GetHNwPubKeyId() int32 {
	if o == nil || IsNil(o.HNwPubKeyId) {
		var ret int32
		return ret
	}
	return *o.HNwPubKeyId
}

// GetHNwPubKeyIdOk returns a tuple with the HNwPubKeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetHNwPubKeyIdOk() (*int32, bool) {
	if o == nil || IsNil(o.HNwPubKeyId) {
		return nil, false
	}
	return o.HNwPubKeyId, true
}

// HasHNwPubKeyId returns a boolean if a field has been set.
func (o *SmContext) HasHNwPubKeyId() bool {
	if o != nil && !IsNil(o.HNwPubKeyId) {
		return true
	}

	return false
}

// SetHNwPubKeyId gets a reference to the given int32 and assigns it to the HNwPubKeyId field.
func (o *SmContext) SetHNwPubKeyId(v int32) {
	o.HNwPubKeyId = &v
}

// GetSessionAmbr returns the SessionAmbr field value
func (o *SmContext) GetSessionAmbr() Ambr {
	if o == nil {
		var ret Ambr
		return ret
	}

	return o.SessionAmbr
}

// GetSessionAmbrOk returns a tuple with the SessionAmbr field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetSessionAmbrOk() (*Ambr, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SessionAmbr, true
}

// SetSessionAmbr sets field value
func (o *SmContext) SetSessionAmbr(v Ambr) {
	o.SessionAmbr = v
}

// GetQosFlowsList returns the QosFlowsList field value
func (o *SmContext) GetQosFlowsList() []QosFlowSetupItem {
	if o == nil {
		var ret []QosFlowSetupItem
		return ret
	}

	return o.QosFlowsList
}

// GetQosFlowsListOk returns a tuple with the QosFlowsList field value
// and a boolean to check if the value has been set.
func (o *SmContext) GetQosFlowsListOk() ([]QosFlowSetupItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.QosFlowsList, true
}

// SetQosFlowsList sets field value
func (o *SmContext) SetQosFlowsList(v []QosFlowSetupItem) {
	o.QosFlowsList = v
}

// GetHSmfInstanceId returns the HSmfInstanceId field value if set, zero value otherwise.
func (o *SmContext) GetHSmfInstanceId() string {
	if o == nil || IsNil(o.HSmfInstanceId) {
		var ret string
		return ret
	}
	return *o.HSmfInstanceId
}

// GetHSmfInstanceIdOk returns a tuple with the HSmfInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetHSmfInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfInstanceId) {
		return nil, false
	}
	return o.HSmfInstanceId, true
}

// HasHSmfInstanceId returns a boolean if a field has been set.
func (o *SmContext) HasHSmfInstanceId() bool {
	if o != nil && !IsNil(o.HSmfInstanceId) {
		return true
	}

	return false
}

// SetHSmfInstanceId gets a reference to the given string and assigns it to the HSmfInstanceId field.
func (o *SmContext) SetHSmfInstanceId(v string) {
	o.HSmfInstanceId = &v
}

// GetSmfInstanceId returns the SmfInstanceId field value if set, zero value otherwise.
func (o *SmContext) GetSmfInstanceId() string {
	if o == nil || IsNil(o.SmfInstanceId) {
		var ret string
		return ret
	}
	return *o.SmfInstanceId
}

// GetSmfInstanceIdOk returns a tuple with the SmfInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSmfInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmfInstanceId) {
		return nil, false
	}
	return o.SmfInstanceId, true
}

// HasSmfInstanceId returns a boolean if a field has been set.
func (o *SmContext) HasSmfInstanceId() bool {
	if o != nil && !IsNil(o.SmfInstanceId) {
		return true
	}

	return false
}

// SetSmfInstanceId gets a reference to the given string and assigns it to the SmfInstanceId field.
func (o *SmContext) SetSmfInstanceId(v string) {
	o.SmfInstanceId = &v
}

// GetPduSessionSmfSetId returns the PduSessionSmfSetId field value if set, zero value otherwise.
func (o *SmContext) GetPduSessionSmfSetId() string {
	if o == nil || IsNil(o.PduSessionSmfSetId) {
		var ret string
		return ret
	}
	return *o.PduSessionSmfSetId
}

// GetPduSessionSmfSetIdOk returns a tuple with the PduSessionSmfSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionSmfSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PduSessionSmfSetId) {
		return nil, false
	}
	return o.PduSessionSmfSetId, true
}

// HasPduSessionSmfSetId returns a boolean if a field has been set.
func (o *SmContext) HasPduSessionSmfSetId() bool {
	if o != nil && !IsNil(o.PduSessionSmfSetId) {
		return true
	}

	return false
}

// SetPduSessionSmfSetId gets a reference to the given string and assigns it to the PduSessionSmfSetId field.
func (o *SmContext) SetPduSessionSmfSetId(v string) {
	o.PduSessionSmfSetId = &v
}

// GetPduSessionSmfServiceSetId returns the PduSessionSmfServiceSetId field value if set, zero value otherwise.
func (o *SmContext) GetPduSessionSmfServiceSetId() string {
	if o == nil || IsNil(o.PduSessionSmfServiceSetId) {
		var ret string
		return ret
	}
	return *o.PduSessionSmfServiceSetId
}

// GetPduSessionSmfServiceSetIdOk returns a tuple with the PduSessionSmfServiceSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionSmfServiceSetIdOk() (*string, bool) {
	if o == nil || IsNil(o.PduSessionSmfServiceSetId) {
		return nil, false
	}
	return o.PduSessionSmfServiceSetId, true
}

// HasPduSessionSmfServiceSetId returns a boolean if a field has been set.
func (o *SmContext) HasPduSessionSmfServiceSetId() bool {
	if o != nil && !IsNil(o.PduSessionSmfServiceSetId) {
		return true
	}

	return false
}

// SetPduSessionSmfServiceSetId gets a reference to the given string and assigns it to the PduSessionSmfServiceSetId field.
func (o *SmContext) SetPduSessionSmfServiceSetId(v string) {
	o.PduSessionSmfServiceSetId = &v
}

// GetPduSessionSmfBinding returns the PduSessionSmfBinding field value if set, zero value otherwise.
func (o *SmContext) GetPduSessionSmfBinding() SbiBindingLevel {
	if o == nil || IsNil(o.PduSessionSmfBinding) {
		var ret SbiBindingLevel
		return ret
	}
	return *o.PduSessionSmfBinding
}

// GetPduSessionSmfBindingOk returns a tuple with the PduSessionSmfBinding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPduSessionSmfBindingOk() (*SbiBindingLevel, bool) {
	if o == nil || IsNil(o.PduSessionSmfBinding) {
		return nil, false
	}
	return o.PduSessionSmfBinding, true
}

// HasPduSessionSmfBinding returns a boolean if a field has been set.
func (o *SmContext) HasPduSessionSmfBinding() bool {
	if o != nil && !IsNil(o.PduSessionSmfBinding) {
		return true
	}

	return false
}

// SetPduSessionSmfBinding gets a reference to the given SbiBindingLevel and assigns it to the PduSessionSmfBinding field.
func (o *SmContext) SetPduSessionSmfBinding(v SbiBindingLevel) {
	o.PduSessionSmfBinding = &v
}

// GetEnablePauseCharging returns the EnablePauseCharging field value if set, zero value otherwise.
func (o *SmContext) GetEnablePauseCharging() bool {
	if o == nil || IsNil(o.EnablePauseCharging) {
		var ret bool
		return ret
	}
	return *o.EnablePauseCharging
}

// GetEnablePauseChargingOk returns a tuple with the EnablePauseCharging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetEnablePauseChargingOk() (*bool, bool) {
	if o == nil || IsNil(o.EnablePauseCharging) {
		return nil, false
	}
	return o.EnablePauseCharging, true
}

// HasEnablePauseCharging returns a boolean if a field has been set.
func (o *SmContext) HasEnablePauseCharging() bool {
	if o != nil && !IsNil(o.EnablePauseCharging) {
		return true
	}

	return false
}

// SetEnablePauseCharging gets a reference to the given bool and assigns it to the EnablePauseCharging field.
func (o *SmContext) SetEnablePauseCharging(v bool) {
	o.EnablePauseCharging = &v
}

// GetUeIpv4Address returns the UeIpv4Address field value if set, zero value otherwise.
func (o *SmContext) GetUeIpv4Address() string {
	if o == nil || IsNil(o.UeIpv4Address) {
		var ret string
		return ret
	}
	return *o.UeIpv4Address
}

// GetUeIpv4AddressOk returns a tuple with the UeIpv4Address field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetUeIpv4AddressOk() (*string, bool) {
	if o == nil || IsNil(o.UeIpv4Address) {
		return nil, false
	}
	return o.UeIpv4Address, true
}

// HasUeIpv4Address returns a boolean if a field has been set.
func (o *SmContext) HasUeIpv4Address() bool {
	if o != nil && !IsNil(o.UeIpv4Address) {
		return true
	}

	return false
}

// SetUeIpv4Address gets a reference to the given string and assigns it to the UeIpv4Address field.
func (o *SmContext) SetUeIpv4Address(v string) {
	o.UeIpv4Address = &v
}

// GetUeIpv6Prefix returns the UeIpv6Prefix field value if set, zero value otherwise.
func (o *SmContext) GetUeIpv6Prefix() Ipv6Prefix {
	if o == nil || IsNil(o.UeIpv6Prefix) {
		var ret Ipv6Prefix
		return ret
	}
	return *o.UeIpv6Prefix
}

// GetUeIpv6PrefixOk returns a tuple with the UeIpv6Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetUeIpv6PrefixOk() (*Ipv6Prefix, bool) {
	if o == nil || IsNil(o.UeIpv6Prefix) {
		return nil, false
	}
	return o.UeIpv6Prefix, true
}

// HasUeIpv6Prefix returns a boolean if a field has been set.
func (o *SmContext) HasUeIpv6Prefix() bool {
	if o != nil && !IsNil(o.UeIpv6Prefix) {
		return true
	}

	return false
}

// SetUeIpv6Prefix gets a reference to the given Ipv6Prefix and assigns it to the UeIpv6Prefix field.
func (o *SmContext) SetUeIpv6Prefix(v Ipv6Prefix) {
	o.UeIpv6Prefix = &v
}

// GetEpsPdnCnxInfo returns the EpsPdnCnxInfo field value if set, zero value otherwise.
func (o *SmContext) GetEpsPdnCnxInfo() EpsPdnCnxInfo {
	if o == nil || IsNil(o.EpsPdnCnxInfo) {
		var ret EpsPdnCnxInfo
		return ret
	}
	return *o.EpsPdnCnxInfo
}

// GetEpsPdnCnxInfoOk returns a tuple with the EpsPdnCnxInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetEpsPdnCnxInfoOk() (*EpsPdnCnxInfo, bool) {
	if o == nil || IsNil(o.EpsPdnCnxInfo) {
		return nil, false
	}
	return o.EpsPdnCnxInfo, true
}

// HasEpsPdnCnxInfo returns a boolean if a field has been set.
func (o *SmContext) HasEpsPdnCnxInfo() bool {
	if o != nil && !IsNil(o.EpsPdnCnxInfo) {
		return true
	}

	return false
}

// SetEpsPdnCnxInfo gets a reference to the given EpsPdnCnxInfo and assigns it to the EpsPdnCnxInfo field.
func (o *SmContext) SetEpsPdnCnxInfo(v EpsPdnCnxInfo) {
	o.EpsPdnCnxInfo = &v
}

// GetEpsBearerInfo returns the EpsBearerInfo field value if set, zero value otherwise.
func (o *SmContext) GetEpsBearerInfo() []EpsBearerInfo {
	if o == nil || IsNil(o.EpsBearerInfo) {
		var ret []EpsBearerInfo
		return ret
	}
	return o.EpsBearerInfo
}

// GetEpsBearerInfoOk returns a tuple with the EpsBearerInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetEpsBearerInfoOk() ([]EpsBearerInfo, bool) {
	if o == nil || IsNil(o.EpsBearerInfo) {
		return nil, false
	}
	return o.EpsBearerInfo, true
}

// HasEpsBearerInfo returns a boolean if a field has been set.
func (o *SmContext) HasEpsBearerInfo() bool {
	if o != nil && !IsNil(o.EpsBearerInfo) {
		return true
	}

	return false
}

// SetEpsBearerInfo gets a reference to the given []EpsBearerInfo and assigns it to the EpsBearerInfo field.
func (o *SmContext) SetEpsBearerInfo(v []EpsBearerInfo) {
	o.EpsBearerInfo = v
}

// GetMaxIntegrityProtectedDataRate returns the MaxIntegrityProtectedDataRate field value if set, zero value otherwise.
func (o *SmContext) GetMaxIntegrityProtectedDataRate() MaxIntegrityProtectedDataRate {
	if o == nil || IsNil(o.MaxIntegrityProtectedDataRate) {
		var ret MaxIntegrityProtectedDataRate
		return ret
	}
	return *o.MaxIntegrityProtectedDataRate
}

// GetMaxIntegrityProtectedDataRateOk returns a tuple with the MaxIntegrityProtectedDataRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetMaxIntegrityProtectedDataRateOk() (*MaxIntegrityProtectedDataRate, bool) {
	if o == nil || IsNil(o.MaxIntegrityProtectedDataRate) {
		return nil, false
	}
	return o.MaxIntegrityProtectedDataRate, true
}

// HasMaxIntegrityProtectedDataRate returns a boolean if a field has been set.
func (o *SmContext) HasMaxIntegrityProtectedDataRate() bool {
	if o != nil && !IsNil(o.MaxIntegrityProtectedDataRate) {
		return true
	}

	return false
}

// SetMaxIntegrityProtectedDataRate gets a reference to the given MaxIntegrityProtectedDataRate and assigns it to the MaxIntegrityProtectedDataRate field.
func (o *SmContext) SetMaxIntegrityProtectedDataRate(v MaxIntegrityProtectedDataRate) {
	o.MaxIntegrityProtectedDataRate = &v
}

// GetMaxIntegrityProtectedDataRateDl returns the MaxIntegrityProtectedDataRateDl field value if set, zero value otherwise.
func (o *SmContext) GetMaxIntegrityProtectedDataRateDl() MaxIntegrityProtectedDataRate {
	if o == nil || IsNil(o.MaxIntegrityProtectedDataRateDl) {
		var ret MaxIntegrityProtectedDataRate
		return ret
	}
	return *o.MaxIntegrityProtectedDataRateDl
}

// GetMaxIntegrityProtectedDataRateDlOk returns a tuple with the MaxIntegrityProtectedDataRateDl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetMaxIntegrityProtectedDataRateDlOk() (*MaxIntegrityProtectedDataRate, bool) {
	if o == nil || IsNil(o.MaxIntegrityProtectedDataRateDl) {
		return nil, false
	}
	return o.MaxIntegrityProtectedDataRateDl, true
}

// HasMaxIntegrityProtectedDataRateDl returns a boolean if a field has been set.
func (o *SmContext) HasMaxIntegrityProtectedDataRateDl() bool {
	if o != nil && !IsNil(o.MaxIntegrityProtectedDataRateDl) {
		return true
	}

	return false
}

// SetMaxIntegrityProtectedDataRateDl gets a reference to the given MaxIntegrityProtectedDataRate and assigns it to the MaxIntegrityProtectedDataRateDl field.
func (o *SmContext) SetMaxIntegrityProtectedDataRateDl(v MaxIntegrityProtectedDataRate) {
	o.MaxIntegrityProtectedDataRateDl = &v
}

// GetAlwaysOnGranted returns the AlwaysOnGranted field value if set, zero value otherwise.
func (o *SmContext) GetAlwaysOnGranted() bool {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		var ret bool
		return ret
	}
	return *o.AlwaysOnGranted
}

// GetAlwaysOnGrantedOk returns a tuple with the AlwaysOnGranted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetAlwaysOnGrantedOk() (*bool, bool) {
	if o == nil || IsNil(o.AlwaysOnGranted) {
		return nil, false
	}
	return o.AlwaysOnGranted, true
}

// HasAlwaysOnGranted returns a boolean if a field has been set.
func (o *SmContext) HasAlwaysOnGranted() bool {
	if o != nil && !IsNil(o.AlwaysOnGranted) {
		return true
	}

	return false
}

// SetAlwaysOnGranted gets a reference to the given bool and assigns it to the AlwaysOnGranted field.
func (o *SmContext) SetAlwaysOnGranted(v bool) {
	o.AlwaysOnGranted = &v
}

// GetUpSecurity returns the UpSecurity field value if set, zero value otherwise.
func (o *SmContext) GetUpSecurity() UpSecurity {
	if o == nil || IsNil(o.UpSecurity) {
		var ret UpSecurity
		return ret
	}
	return *o.UpSecurity
}

// GetUpSecurityOk returns a tuple with the UpSecurity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetUpSecurityOk() (*UpSecurity, bool) {
	if o == nil || IsNil(o.UpSecurity) {
		return nil, false
	}
	return o.UpSecurity, true
}

// HasUpSecurity returns a boolean if a field has been set.
func (o *SmContext) HasUpSecurity() bool {
	if o != nil && !IsNil(o.UpSecurity) {
		return true
	}

	return false
}

// SetUpSecurity gets a reference to the given UpSecurity and assigns it to the UpSecurity field.
func (o *SmContext) SetUpSecurity(v UpSecurity) {
	o.UpSecurity = &v
}

// GetHSmfServiceInstanceId returns the HSmfServiceInstanceId field value if set, zero value otherwise.
func (o *SmContext) GetHSmfServiceInstanceId() string {
	if o == nil || IsNil(o.HSmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.HSmfServiceInstanceId
}

// GetHSmfServiceInstanceIdOk returns a tuple with the HSmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetHSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.HSmfServiceInstanceId) {
		return nil, false
	}
	return o.HSmfServiceInstanceId, true
}

// HasHSmfServiceInstanceId returns a boolean if a field has been set.
func (o *SmContext) HasHSmfServiceInstanceId() bool {
	if o != nil && !IsNil(o.HSmfServiceInstanceId) {
		return true
	}

	return false
}

// SetHSmfServiceInstanceId gets a reference to the given string and assigns it to the HSmfServiceInstanceId field.
func (o *SmContext) SetHSmfServiceInstanceId(v string) {
	o.HSmfServiceInstanceId = &v
}

// GetSmfServiceInstanceId returns the SmfServiceInstanceId field value if set, zero value otherwise.
func (o *SmContext) GetSmfServiceInstanceId() string {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		var ret string
		return ret
	}
	return *o.SmfServiceInstanceId
}

// GetSmfServiceInstanceIdOk returns a tuple with the SmfServiceInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSmfServiceInstanceIdOk() (*string, bool) {
	if o == nil || IsNil(o.SmfServiceInstanceId) {
		return nil, false
	}
	return o.SmfServiceInstanceId, true
}

// HasSmfServiceInstanceId returns a boolean if a field has been set.
func (o *SmContext) HasSmfServiceInstanceId() bool {
	if o != nil && !IsNil(o.SmfServiceInstanceId) {
		return true
	}

	return false
}

// SetSmfServiceInstanceId gets a reference to the given string and assigns it to the SmfServiceInstanceId field.
func (o *SmContext) SetSmfServiceInstanceId(v string) {
	o.SmfServiceInstanceId = &v
}

// GetRecoveryTime returns the RecoveryTime field value if set, zero value otherwise.
func (o *SmContext) GetRecoveryTime() time.Time {
	if o == nil || IsNil(o.RecoveryTime) {
		var ret time.Time
		return ret
	}
	return *o.RecoveryTime
}

// GetRecoveryTimeOk returns a tuple with the RecoveryTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRecoveryTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RecoveryTime) {
		return nil, false
	}
	return o.RecoveryTime, true
}

// HasRecoveryTime returns a boolean if a field has been set.
func (o *SmContext) HasRecoveryTime() bool {
	if o != nil && !IsNil(o.RecoveryTime) {
		return true
	}

	return false
}

// SetRecoveryTime gets a reference to the given time.Time and assigns it to the RecoveryTime field.
func (o *SmContext) SetRecoveryTime(v time.Time) {
	o.RecoveryTime = &v
}

// GetForwardingInd returns the ForwardingInd field value if set, zero value otherwise.
func (o *SmContext) GetForwardingInd() bool {
	if o == nil || IsNil(o.ForwardingInd) {
		var ret bool
		return ret
	}
	return *o.ForwardingInd
}

// GetForwardingIndOk returns a tuple with the ForwardingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetForwardingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.ForwardingInd) {
		return nil, false
	}
	return o.ForwardingInd, true
}

// HasForwardingInd returns a boolean if a field has been set.
func (o *SmContext) HasForwardingInd() bool {
	if o != nil && !IsNil(o.ForwardingInd) {
		return true
	}

	return false
}

// SetForwardingInd gets a reference to the given bool and assigns it to the ForwardingInd field.
func (o *SmContext) SetForwardingInd(v bool) {
	o.ForwardingInd = &v
}

// GetPsaTunnelInfo returns the PsaTunnelInfo field value if set, zero value otherwise.
func (o *SmContext) GetPsaTunnelInfo() TunnelInfo {
	if o == nil || IsNil(o.PsaTunnelInfo) {
		var ret TunnelInfo
		return ret
	}
	return *o.PsaTunnelInfo
}

// GetPsaTunnelInfoOk returns a tuple with the PsaTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetPsaTunnelInfoOk() (*TunnelInfo, bool) {
	if o == nil || IsNil(o.PsaTunnelInfo) {
		return nil, false
	}
	return o.PsaTunnelInfo, true
}

// HasPsaTunnelInfo returns a boolean if a field has been set.
func (o *SmContext) HasPsaTunnelInfo() bool {
	if o != nil && !IsNil(o.PsaTunnelInfo) {
		return true
	}

	return false
}

// SetPsaTunnelInfo gets a reference to the given TunnelInfo and assigns it to the PsaTunnelInfo field.
func (o *SmContext) SetPsaTunnelInfo(v TunnelInfo) {
	o.PsaTunnelInfo = &v
}

// GetChargingId returns the ChargingId field value if set, zero value otherwise.
func (o *SmContext) GetChargingId() string {
	if o == nil || IsNil(o.ChargingId) {
		var ret string
		return ret
	}
	return *o.ChargingId
}

// GetChargingIdOk returns a tuple with the ChargingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetChargingIdOk() (*string, bool) {
	if o == nil || IsNil(o.ChargingId) {
		return nil, false
	}
	return o.ChargingId, true
}

// HasChargingId returns a boolean if a field has been set.
func (o *SmContext) HasChargingId() bool {
	if o != nil && !IsNil(o.ChargingId) {
		return true
	}

	return false
}

// SetChargingId gets a reference to the given string and assigns it to the ChargingId field.
func (o *SmContext) SetChargingId(v string) {
	o.ChargingId = &v
}

// GetChargingInfo returns the ChargingInfo field value if set, zero value otherwise.
func (o *SmContext) GetChargingInfo() ChargingInformation {
	if o == nil || IsNil(o.ChargingInfo) {
		var ret ChargingInformation
		return ret
	}
	return *o.ChargingInfo
}

// GetChargingInfoOk returns a tuple with the ChargingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetChargingInfoOk() (*ChargingInformation, bool) {
	if o == nil || IsNil(o.ChargingInfo) {
		return nil, false
	}
	return o.ChargingInfo, true
}

// HasChargingInfo returns a boolean if a field has been set.
func (o *SmContext) HasChargingInfo() bool {
	if o != nil && !IsNil(o.ChargingInfo) {
		return true
	}

	return false
}

// SetChargingInfo gets a reference to the given ChargingInformation and assigns it to the ChargingInfo field.
func (o *SmContext) SetChargingInfo(v ChargingInformation) {
	o.ChargingInfo = &v
}

// GetRoamingChargingProfile returns the RoamingChargingProfile field value if set, zero value otherwise.
func (o *SmContext) GetRoamingChargingProfile() RoamingChargingProfile {
	if o == nil || IsNil(o.RoamingChargingProfile) {
		var ret RoamingChargingProfile
		return ret
	}
	return *o.RoamingChargingProfile
}

// GetRoamingChargingProfileOk returns a tuple with the RoamingChargingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRoamingChargingProfileOk() (*RoamingChargingProfile, bool) {
	if o == nil || IsNil(o.RoamingChargingProfile) {
		return nil, false
	}
	return o.RoamingChargingProfile, true
}

// HasRoamingChargingProfile returns a boolean if a field has been set.
func (o *SmContext) HasRoamingChargingProfile() bool {
	if o != nil && !IsNil(o.RoamingChargingProfile) {
		return true
	}

	return false
}

// SetRoamingChargingProfile gets a reference to the given RoamingChargingProfile and assigns it to the RoamingChargingProfile field.
func (o *SmContext) SetRoamingChargingProfile(v RoamingChargingProfile) {
	o.RoamingChargingProfile = &v
}

// GetNefExtBufSupportInd returns the NefExtBufSupportInd field value if set, zero value otherwise.
func (o *SmContext) GetNefExtBufSupportInd() bool {
	if o == nil || IsNil(o.NefExtBufSupportInd) {
		var ret bool
		return ret
	}
	return *o.NefExtBufSupportInd
}

// GetNefExtBufSupportIndOk returns a tuple with the NefExtBufSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetNefExtBufSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.NefExtBufSupportInd) {
		return nil, false
	}
	return o.NefExtBufSupportInd, true
}

// HasNefExtBufSupportInd returns a boolean if a field has been set.
func (o *SmContext) HasNefExtBufSupportInd() bool {
	if o != nil && !IsNil(o.NefExtBufSupportInd) {
		return true
	}

	return false
}

// SetNefExtBufSupportInd gets a reference to the given bool and assigns it to the NefExtBufSupportInd field.
func (o *SmContext) SetNefExtBufSupportInd(v bool) {
	o.NefExtBufSupportInd = &v
}

// GetIpv6Index returns the Ipv6Index field value if set, zero value otherwise.
func (o *SmContext) GetIpv6Index() int32 {
	if o == nil || IsNil(o.Ipv6Index) {
		var ret int32
		return ret
	}
	return *o.Ipv6Index
}

// GetIpv6IndexOk returns a tuple with the Ipv6Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetIpv6IndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Ipv6Index) {
		return nil, false
	}
	return o.Ipv6Index, true
}

// HasIpv6Index returns a boolean if a field has been set.
func (o *SmContext) HasIpv6Index() bool {
	if o != nil && !IsNil(o.Ipv6Index) {
		return true
	}

	return false
}

// SetIpv6Index gets a reference to the given int32 and assigns it to the Ipv6Index field.
func (o *SmContext) SetIpv6Index(v int32) {
	o.Ipv6Index = &v
}

// GetDnAaaAddress returns the DnAaaAddress field value if set, zero value otherwise.
func (o *SmContext) GetDnAaaAddress() IpAddress {
	if o == nil || IsNil(o.DnAaaAddress) {
		var ret IpAddress
		return ret
	}
	return *o.DnAaaAddress
}

// GetDnAaaAddressOk returns a tuple with the DnAaaAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetDnAaaAddressOk() (*IpAddress, bool) {
	if o == nil || IsNil(o.DnAaaAddress) {
		return nil, false
	}
	return o.DnAaaAddress, true
}

// HasDnAaaAddress returns a boolean if a field has been set.
func (o *SmContext) HasDnAaaAddress() bool {
	if o != nil && !IsNil(o.DnAaaAddress) {
		return true
	}

	return false
}

// SetDnAaaAddress gets a reference to the given IpAddress and assigns it to the DnAaaAddress field.
func (o *SmContext) SetDnAaaAddress(v IpAddress) {
	o.DnAaaAddress = &v
}

// GetRedundantPduSessionInfo returns the RedundantPduSessionInfo field value if set, zero value otherwise.
func (o *SmContext) GetRedundantPduSessionInfo() RedundantPduSessionInformation {
	if o == nil || IsNil(o.RedundantPduSessionInfo) {
		var ret RedundantPduSessionInformation
		return ret
	}
	return *o.RedundantPduSessionInfo
}

// GetRedundantPduSessionInfoOk returns a tuple with the RedundantPduSessionInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRedundantPduSessionInfoOk() (*RedundantPduSessionInformation, bool) {
	if o == nil || IsNil(o.RedundantPduSessionInfo) {
		return nil, false
	}
	return o.RedundantPduSessionInfo, true
}

// HasRedundantPduSessionInfo returns a boolean if a field has been set.
func (o *SmContext) HasRedundantPduSessionInfo() bool {
	if o != nil && !IsNil(o.RedundantPduSessionInfo) {
		return true
	}

	return false
}

// SetRedundantPduSessionInfo gets a reference to the given RedundantPduSessionInformation and assigns it to the RedundantPduSessionInfo field.
func (o *SmContext) SetRedundantPduSessionInfo(v RedundantPduSessionInformation) {
	o.RedundantPduSessionInfo = &v
}

// GetRanTunnelInfo returns the RanTunnelInfo field value if set, zero value otherwise.
func (o *SmContext) GetRanTunnelInfo() QosFlowTunnel {
	if o == nil || IsNil(o.RanTunnelInfo) {
		var ret QosFlowTunnel
		return ret
	}
	return *o.RanTunnelInfo
}

// GetRanTunnelInfoOk returns a tuple with the RanTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRanTunnelInfoOk() (*QosFlowTunnel, bool) {
	if o == nil || IsNil(o.RanTunnelInfo) {
		return nil, false
	}
	return o.RanTunnelInfo, true
}

// HasRanTunnelInfo returns a boolean if a field has been set.
func (o *SmContext) HasRanTunnelInfo() bool {
	if o != nil && !IsNil(o.RanTunnelInfo) {
		return true
	}

	return false
}

// SetRanTunnelInfo gets a reference to the given QosFlowTunnel and assigns it to the RanTunnelInfo field.
func (o *SmContext) SetRanTunnelInfo(v QosFlowTunnel) {
	o.RanTunnelInfo = &v
}

// GetAddRanTunnelInfo returns the AddRanTunnelInfo field value if set, zero value otherwise.
func (o *SmContext) GetAddRanTunnelInfo() []QosFlowTunnel {
	if o == nil || IsNil(o.AddRanTunnelInfo) {
		var ret []QosFlowTunnel
		return ret
	}
	return o.AddRanTunnelInfo
}

// GetAddRanTunnelInfoOk returns a tuple with the AddRanTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetAddRanTunnelInfoOk() ([]QosFlowTunnel, bool) {
	if o == nil || IsNil(o.AddRanTunnelInfo) {
		return nil, false
	}
	return o.AddRanTunnelInfo, true
}

// HasAddRanTunnelInfo returns a boolean if a field has been set.
func (o *SmContext) HasAddRanTunnelInfo() bool {
	if o != nil && !IsNil(o.AddRanTunnelInfo) {
		return true
	}

	return false
}

// SetAddRanTunnelInfo gets a reference to the given []QosFlowTunnel and assigns it to the AddRanTunnelInfo field.
func (o *SmContext) SetAddRanTunnelInfo(v []QosFlowTunnel) {
	o.AddRanTunnelInfo = v
}

// GetRedRanTunnelInfo returns the RedRanTunnelInfo field value if set, zero value otherwise.
func (o *SmContext) GetRedRanTunnelInfo() QosFlowTunnel {
	if o == nil || IsNil(o.RedRanTunnelInfo) {
		var ret QosFlowTunnel
		return ret
	}
	return *o.RedRanTunnelInfo
}

// GetRedRanTunnelInfoOk returns a tuple with the RedRanTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetRedRanTunnelInfoOk() (*QosFlowTunnel, bool) {
	if o == nil || IsNil(o.RedRanTunnelInfo) {
		return nil, false
	}
	return o.RedRanTunnelInfo, true
}

// HasRedRanTunnelInfo returns a boolean if a field has been set.
func (o *SmContext) HasRedRanTunnelInfo() bool {
	if o != nil && !IsNil(o.RedRanTunnelInfo) {
		return true
	}

	return false
}

// SetRedRanTunnelInfo gets a reference to the given QosFlowTunnel and assigns it to the RedRanTunnelInfo field.
func (o *SmContext) SetRedRanTunnelInfo(v QosFlowTunnel) {
	o.RedRanTunnelInfo = &v
}

// GetAddRedRanTunnelInfo returns the AddRedRanTunnelInfo field value if set, zero value otherwise.
func (o *SmContext) GetAddRedRanTunnelInfo() []QosFlowTunnel {
	if o == nil || IsNil(o.AddRedRanTunnelInfo) {
		var ret []QosFlowTunnel
		return ret
	}
	return o.AddRedRanTunnelInfo
}

// GetAddRedRanTunnelInfoOk returns a tuple with the AddRedRanTunnelInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetAddRedRanTunnelInfoOk() ([]QosFlowTunnel, bool) {
	if o == nil || IsNil(o.AddRedRanTunnelInfo) {
		return nil, false
	}
	return o.AddRedRanTunnelInfo, true
}

// HasAddRedRanTunnelInfo returns a boolean if a field has been set.
func (o *SmContext) HasAddRedRanTunnelInfo() bool {
	if o != nil && !IsNil(o.AddRedRanTunnelInfo) {
		return true
	}

	return false
}

// SetAddRedRanTunnelInfo gets a reference to the given []QosFlowTunnel and assigns it to the AddRedRanTunnelInfo field.
func (o *SmContext) SetAddRedRanTunnelInfo(v []QosFlowTunnel) {
	o.AddRedRanTunnelInfo = v
}

// GetNspuSupportInd returns the NspuSupportInd field value if set, zero value otherwise.
func (o *SmContext) GetNspuSupportInd() bool {
	if o == nil || IsNil(o.NspuSupportInd) {
		var ret bool
		return ret
	}
	return *o.NspuSupportInd
}

// GetNspuSupportIndOk returns a tuple with the NspuSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetNspuSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.NspuSupportInd) {
		return nil, false
	}
	return o.NspuSupportInd, true
}

// HasNspuSupportInd returns a boolean if a field has been set.
func (o *SmContext) HasNspuSupportInd() bool {
	if o != nil && !IsNil(o.NspuSupportInd) {
		return true
	}

	return false
}

// SetNspuSupportInd gets a reference to the given bool and assigns it to the NspuSupportInd field.
func (o *SmContext) SetNspuSupportInd(v bool) {
	o.NspuSupportInd = &v
}

// GetSmfBindingInfo returns the SmfBindingInfo field value if set, zero value otherwise.
func (o *SmContext) GetSmfBindingInfo() string {
	if o == nil || IsNil(o.SmfBindingInfo) {
		var ret string
		return ret
	}
	return *o.SmfBindingInfo
}

// GetSmfBindingInfoOk returns a tuple with the SmfBindingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSmfBindingInfoOk() (*string, bool) {
	if o == nil || IsNil(o.SmfBindingInfo) {
		return nil, false
	}
	return o.SmfBindingInfo, true
}

// HasSmfBindingInfo returns a boolean if a field has been set.
func (o *SmContext) HasSmfBindingInfo() bool {
	if o != nil && !IsNil(o.SmfBindingInfo) {
		return true
	}

	return false
}

// SetSmfBindingInfo gets a reference to the given string and assigns it to the SmfBindingInfo field.
func (o *SmContext) SetSmfBindingInfo(v string) {
	o.SmfBindingInfo = &v
}

// GetSatelliteBackhaulCat returns the SatelliteBackhaulCat field value if set, zero value otherwise.
func (o *SmContext) GetSatelliteBackhaulCat() SatelliteBackhaulCategory {
	if o == nil || IsNil(o.SatelliteBackhaulCat) {
		var ret SatelliteBackhaulCategory
		return ret
	}
	return *o.SatelliteBackhaulCat
}

// GetSatelliteBackhaulCatOk returns a tuple with the SatelliteBackhaulCat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSatelliteBackhaulCatOk() (*SatelliteBackhaulCategory, bool) {
	if o == nil || IsNil(o.SatelliteBackhaulCat) {
		return nil, false
	}
	return o.SatelliteBackhaulCat, true
}

// HasSatelliteBackhaulCat returns a boolean if a field has been set.
func (o *SmContext) HasSatelliteBackhaulCat() bool {
	if o != nil && !IsNil(o.SatelliteBackhaulCat) {
		return true
	}

	return false
}

// SetSatelliteBackhaulCat gets a reference to the given SatelliteBackhaulCategory and assigns it to the SatelliteBackhaulCat field.
func (o *SmContext) SetSatelliteBackhaulCat(v SatelliteBackhaulCategory) {
	o.SatelliteBackhaulCat = &v
}

// GetSscMode returns the SscMode field value if set, zero value otherwise.
func (o *SmContext) GetSscMode() string {
	if o == nil || IsNil(o.SscMode) {
		var ret string
		return ret
	}
	return *o.SscMode
}

// GetSscModeOk returns a tuple with the SscMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetSscModeOk() (*string, bool) {
	if o == nil || IsNil(o.SscMode) {
		return nil, false
	}
	return o.SscMode, true
}

// HasSscMode returns a boolean if a field has been set.
func (o *SmContext) HasSscMode() bool {
	if o != nil && !IsNil(o.SscMode) {
		return true
	}

	return false
}

// SetSscMode gets a reference to the given string and assigns it to the SscMode field.
func (o *SmContext) SetSscMode(v string) {
	o.SscMode = &v
}

// GetDlsetSupportInd returns the DlsetSupportInd field value if set, zero value otherwise.
func (o *SmContext) GetDlsetSupportInd() bool {
	if o == nil || IsNil(o.DlsetSupportInd) {
		var ret bool
		return ret
	}
	return *o.DlsetSupportInd
}

// GetDlsetSupportIndOk returns a tuple with the DlsetSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetDlsetSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.DlsetSupportInd) {
		return nil, false
	}
	return o.DlsetSupportInd, true
}

// HasDlsetSupportInd returns a boolean if a field has been set.
func (o *SmContext) HasDlsetSupportInd() bool {
	if o != nil && !IsNil(o.DlsetSupportInd) {
		return true
	}

	return false
}

// SetDlsetSupportInd gets a reference to the given bool and assigns it to the DlsetSupportInd field.
func (o *SmContext) SetDlsetSupportInd(v bool) {
	o.DlsetSupportInd = &v
}

// GetN9fscSupportInd returns the N9fscSupportInd field value if set, zero value otherwise.
func (o *SmContext) GetN9fscSupportInd() bool {
	if o == nil || IsNil(o.N9fscSupportInd) {
		var ret bool
		return ret
	}
	return *o.N9fscSupportInd
}

// GetN9fscSupportIndOk returns a tuple with the N9fscSupportInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetN9fscSupportIndOk() (*bool, bool) {
	if o == nil || IsNil(o.N9fscSupportInd) {
		return nil, false
	}
	return o.N9fscSupportInd, true
}

// HasN9fscSupportInd returns a boolean if a field has been set.
func (o *SmContext) HasN9fscSupportInd() bool {
	if o != nil && !IsNil(o.N9fscSupportInd) {
		return true
	}

	return false
}

// SetN9fscSupportInd gets a reference to the given bool and assigns it to the N9fscSupportInd field.
func (o *SmContext) SetN9fscSupportInd(v bool) {
	o.N9fscSupportInd = &v
}

// GetDisasterRoamingInd returns the DisasterRoamingInd field value if set, zero value otherwise.
func (o *SmContext) GetDisasterRoamingInd() bool {
	if o == nil || IsNil(o.DisasterRoamingInd) {
		var ret bool
		return ret
	}
	return *o.DisasterRoamingInd
}

// GetDisasterRoamingIndOk returns a tuple with the DisasterRoamingInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetDisasterRoamingIndOk() (*bool, bool) {
	if o == nil || IsNil(o.DisasterRoamingInd) {
		return nil, false
	}
	return o.DisasterRoamingInd, true
}

// HasDisasterRoamingInd returns a boolean if a field has been set.
func (o *SmContext) HasDisasterRoamingInd() bool {
	if o != nil && !IsNil(o.DisasterRoamingInd) {
		return true
	}

	return false
}

// SetDisasterRoamingInd gets a reference to the given bool and assigns it to the DisasterRoamingInd field.
func (o *SmContext) SetDisasterRoamingInd(v bool) {
	o.DisasterRoamingInd = &v
}

// GetAnchorSmfOauth2Required returns the AnchorSmfOauth2Required field value if set, zero value otherwise.
func (o *SmContext) GetAnchorSmfOauth2Required() bool {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		var ret bool
		return ret
	}
	return *o.AnchorSmfOauth2Required
}

// GetAnchorSmfOauth2RequiredOk returns a tuple with the AnchorSmfOauth2Required field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetAnchorSmfOauth2RequiredOk() (*bool, bool) {
	if o == nil || IsNil(o.AnchorSmfOauth2Required) {
		return nil, false
	}
	return o.AnchorSmfOauth2Required, true
}

// HasAnchorSmfOauth2Required returns a boolean if a field has been set.
func (o *SmContext) HasAnchorSmfOauth2Required() bool {
	if o != nil && !IsNil(o.AnchorSmfOauth2Required) {
		return true
	}

	return false
}

// SetAnchorSmfOauth2Required gets a reference to the given bool and assigns it to the AnchorSmfOauth2Required field.
func (o *SmContext) SetAnchorSmfOauth2Required(v bool) {
	o.AnchorSmfOauth2Required = &v
}

// GetFullDnaiList returns the FullDnaiList field value if set, zero value otherwise.
func (o *SmContext) GetFullDnaiList() []string {
	if o == nil || IsNil(o.FullDnaiList) {
		var ret []string
		return ret
	}
	return o.FullDnaiList
}

// GetFullDnaiListOk returns a tuple with the FullDnaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SmContext) GetFullDnaiListOk() ([]string, bool) {
	if o == nil || IsNil(o.FullDnaiList) {
		return nil, false
	}
	return o.FullDnaiList, true
}

// HasFullDnaiList returns a boolean if a field has been set.
func (o *SmContext) HasFullDnaiList() bool {
	if o != nil && !IsNil(o.FullDnaiList) {
		return true
	}

	return false
}

// SetFullDnaiList gets a reference to the given []string and assigns it to the FullDnaiList field.
func (o *SmContext) SetFullDnaiList(v []string) {
	o.FullDnaiList = v
}

func (o SmContext) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SmContext) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pduSessionId"] = o.PduSessionId
	toSerialize["dnn"] = o.Dnn
	if !IsNil(o.SelectedDnn) {
		toSerialize["selectedDnn"] = o.SelectedDnn
	}
	toSerialize["sNssai"] = o.SNssai
	if !IsNil(o.HplmnSnssai) {
		toSerialize["hplmnSnssai"] = o.HplmnSnssai
	}
	toSerialize["pduSessionType"] = o.PduSessionType
	if !IsNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !IsNil(o.HSmfUri) {
		toSerialize["hSmfUri"] = o.HSmfUri
	}
	if !IsNil(o.SmfUri) {
		toSerialize["smfUri"] = o.SmfUri
	}
	if !IsNil(o.PduSessionRef) {
		toSerialize["pduSessionRef"] = o.PduSessionRef
	}
	if !IsNil(o.InterPlmnApiRoot) {
		toSerialize["interPlmnApiRoot"] = o.InterPlmnApiRoot
	}
	if !IsNil(o.IntraPlmnApiRoot) {
		toSerialize["intraPlmnApiRoot"] = o.IntraPlmnApiRoot
	}
	if !IsNil(o.PcfId) {
		toSerialize["pcfId"] = o.PcfId
	}
	if !IsNil(o.PcfGroupId) {
		toSerialize["pcfGroupId"] = o.PcfGroupId
	}
	if !IsNil(o.PcfSetId) {
		toSerialize["pcfSetId"] = o.PcfSetId
	}
	if !IsNil(o.SelMode) {
		toSerialize["selMode"] = o.SelMode
	}
	if !IsNil(o.UdmGroupId) {
		toSerialize["udmGroupId"] = o.UdmGroupId
	}
	if !IsNil(o.RoutingIndicator) {
		toSerialize["routingIndicator"] = o.RoutingIndicator
	}
	if !IsNil(o.HNwPubKeyId) {
		toSerialize["hNwPubKeyId"] = o.HNwPubKeyId
	}
	toSerialize["sessionAmbr"] = o.SessionAmbr
	toSerialize["qosFlowsList"] = o.QosFlowsList
	if !IsNil(o.HSmfInstanceId) {
		toSerialize["hSmfInstanceId"] = o.HSmfInstanceId
	}
	if !IsNil(o.SmfInstanceId) {
		toSerialize["smfInstanceId"] = o.SmfInstanceId
	}
	if !IsNil(o.PduSessionSmfSetId) {
		toSerialize["pduSessionSmfSetId"] = o.PduSessionSmfSetId
	}
	if !IsNil(o.PduSessionSmfServiceSetId) {
		toSerialize["pduSessionSmfServiceSetId"] = o.PduSessionSmfServiceSetId
	}
	if !IsNil(o.PduSessionSmfBinding) {
		toSerialize["pduSessionSmfBinding"] = o.PduSessionSmfBinding
	}
	if !IsNil(o.EnablePauseCharging) {
		toSerialize["enablePauseCharging"] = o.EnablePauseCharging
	}
	if !IsNil(o.UeIpv4Address) {
		toSerialize["ueIpv4Address"] = o.UeIpv4Address
	}
	if !IsNil(o.UeIpv6Prefix) {
		toSerialize["ueIpv6Prefix"] = o.UeIpv6Prefix
	}
	if !IsNil(o.EpsPdnCnxInfo) {
		toSerialize["epsPdnCnxInfo"] = o.EpsPdnCnxInfo
	}
	if !IsNil(o.EpsBearerInfo) {
		toSerialize["epsBearerInfo"] = o.EpsBearerInfo
	}
	if !IsNil(o.MaxIntegrityProtectedDataRate) {
		toSerialize["maxIntegrityProtectedDataRate"] = o.MaxIntegrityProtectedDataRate
	}
	if !IsNil(o.MaxIntegrityProtectedDataRateDl) {
		toSerialize["maxIntegrityProtectedDataRateDl"] = o.MaxIntegrityProtectedDataRateDl
	}
	if !IsNil(o.AlwaysOnGranted) {
		toSerialize["alwaysOnGranted"] = o.AlwaysOnGranted
	}
	if !IsNil(o.UpSecurity) {
		toSerialize["upSecurity"] = o.UpSecurity
	}
	if !IsNil(o.HSmfServiceInstanceId) {
		toSerialize["hSmfServiceInstanceId"] = o.HSmfServiceInstanceId
	}
	if !IsNil(o.SmfServiceInstanceId) {
		toSerialize["smfServiceInstanceId"] = o.SmfServiceInstanceId
	}
	if !IsNil(o.RecoveryTime) {
		toSerialize["recoveryTime"] = o.RecoveryTime
	}
	if !IsNil(o.ForwardingInd) {
		toSerialize["forwardingInd"] = o.ForwardingInd
	}
	if !IsNil(o.PsaTunnelInfo) {
		toSerialize["psaTunnelInfo"] = o.PsaTunnelInfo
	}
	if !IsNil(o.ChargingId) {
		toSerialize["chargingId"] = o.ChargingId
	}
	if !IsNil(o.ChargingInfo) {
		toSerialize["chargingInfo"] = o.ChargingInfo
	}
	if !IsNil(o.RoamingChargingProfile) {
		toSerialize["roamingChargingProfile"] = o.RoamingChargingProfile
	}
	if !IsNil(o.NefExtBufSupportInd) {
		toSerialize["nefExtBufSupportInd"] = o.NefExtBufSupportInd
	}
	if !IsNil(o.Ipv6Index) {
		toSerialize["ipv6Index"] = o.Ipv6Index
	}
	if !IsNil(o.DnAaaAddress) {
		toSerialize["dnAaaAddress"] = o.DnAaaAddress
	}
	if !IsNil(o.RedundantPduSessionInfo) {
		toSerialize["redundantPduSessionInfo"] = o.RedundantPduSessionInfo
	}
	if !IsNil(o.RanTunnelInfo) {
		toSerialize["ranTunnelInfo"] = o.RanTunnelInfo
	}
	if !IsNil(o.AddRanTunnelInfo) {
		toSerialize["addRanTunnelInfo"] = o.AddRanTunnelInfo
	}
	if !IsNil(o.RedRanTunnelInfo) {
		toSerialize["redRanTunnelInfo"] = o.RedRanTunnelInfo
	}
	if !IsNil(o.AddRedRanTunnelInfo) {
		toSerialize["addRedRanTunnelInfo"] = o.AddRedRanTunnelInfo
	}
	if !IsNil(o.NspuSupportInd) {
		toSerialize["nspuSupportInd"] = o.NspuSupportInd
	}
	if !IsNil(o.SmfBindingInfo) {
		toSerialize["smfBindingInfo"] = o.SmfBindingInfo
	}
	if !IsNil(o.SatelliteBackhaulCat) {
		toSerialize["satelliteBackhaulCat"] = o.SatelliteBackhaulCat
	}
	if !IsNil(o.SscMode) {
		toSerialize["sscMode"] = o.SscMode
	}
	if !IsNil(o.DlsetSupportInd) {
		toSerialize["dlsetSupportInd"] = o.DlsetSupportInd
	}
	if !IsNil(o.N9fscSupportInd) {
		toSerialize["n9fscSupportInd"] = o.N9fscSupportInd
	}
	if !IsNil(o.DisasterRoamingInd) {
		toSerialize["disasterRoamingInd"] = o.DisasterRoamingInd
	}
	if !IsNil(o.AnchorSmfOauth2Required) {
		toSerialize["anchorSmfOauth2Required"] = o.AnchorSmfOauth2Required
	}
	if !IsNil(o.FullDnaiList) {
		toSerialize["fullDnaiList"] = o.FullDnaiList
	}
	return toSerialize, nil
}

type NullableSmContext struct {
	value *SmContext
	isSet bool
}

func (v NullableSmContext) Get() *SmContext {
	return v.value
}

func (v *NullableSmContext) Set(val *SmContext) {
	v.value = val
	v.isSet = true
}

func (v NullableSmContext) IsSet() bool {
	return v.isSet
}

func (v *NullableSmContext) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSmContext(val *SmContext) *NullableSmContext {
	return &NullableSmContext{value: val, isSet: true}
}

func (v NullableSmContext) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSmContext) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
