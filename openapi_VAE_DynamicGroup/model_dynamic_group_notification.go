/*
VAE_DynamicGroup

VAE_Dynamic_Group Service   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_VAE_DynamicGroup

import (
	"encoding/json"
)

// checks if the DynamicGroupNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DynamicGroupNotification{}

// DynamicGroupNotification Represents a notification on the dynamic group information (i.e. group member joins or leaves). 
type DynamicGroupNotification struct {
	// String providing an URI formatted according to RFC 3986.
	ResourceUri string `json:"resourceUri"`
	JoinedUeIds []string `json:"joinedUeIds,omitempty"`
	LeftUeIds []string `json:"leftUeIds,omitempty"`
}

// NewDynamicGroupNotification instantiates a new DynamicGroupNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDynamicGroupNotification(resourceUri string) *DynamicGroupNotification {
	this := DynamicGroupNotification{}
	this.ResourceUri = resourceUri
	return &this
}

// NewDynamicGroupNotificationWithDefaults instantiates a new DynamicGroupNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDynamicGroupNotificationWithDefaults() *DynamicGroupNotification {
	this := DynamicGroupNotification{}
	return &this
}

// GetResourceUri returns the ResourceUri field value
func (o *DynamicGroupNotification) GetResourceUri() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ResourceUri
}

// GetResourceUriOk returns a tuple with the ResourceUri field value
// and a boolean to check if the value has been set.
func (o *DynamicGroupNotification) GetResourceUriOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceUri, true
}

// SetResourceUri sets field value
func (o *DynamicGroupNotification) SetResourceUri(v string) {
	o.ResourceUri = v
}

// GetJoinedUeIds returns the JoinedUeIds field value if set, zero value otherwise.
func (o *DynamicGroupNotification) GetJoinedUeIds() []string {
	if o == nil || IsNil(o.JoinedUeIds) {
		var ret []string
		return ret
	}
	return o.JoinedUeIds
}

// GetJoinedUeIdsOk returns a tuple with the JoinedUeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicGroupNotification) GetJoinedUeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.JoinedUeIds) {
		return nil, false
	}
	return o.JoinedUeIds, true
}

// HasJoinedUeIds returns a boolean if a field has been set.
func (o *DynamicGroupNotification) HasJoinedUeIds() bool {
	if o != nil && !IsNil(o.JoinedUeIds) {
		return true
	}

	return false
}

// SetJoinedUeIds gets a reference to the given []string and assigns it to the JoinedUeIds field.
func (o *DynamicGroupNotification) SetJoinedUeIds(v []string) {
	o.JoinedUeIds = v
}

// GetLeftUeIds returns the LeftUeIds field value if set, zero value otherwise.
func (o *DynamicGroupNotification) GetLeftUeIds() []string {
	if o == nil || IsNil(o.LeftUeIds) {
		var ret []string
		return ret
	}
	return o.LeftUeIds
}

// GetLeftUeIdsOk returns a tuple with the LeftUeIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DynamicGroupNotification) GetLeftUeIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.LeftUeIds) {
		return nil, false
	}
	return o.LeftUeIds, true
}

// HasLeftUeIds returns a boolean if a field has been set.
func (o *DynamicGroupNotification) HasLeftUeIds() bool {
	if o != nil && !IsNil(o.LeftUeIds) {
		return true
	}

	return false
}

// SetLeftUeIds gets a reference to the given []string and assigns it to the LeftUeIds field.
func (o *DynamicGroupNotification) SetLeftUeIds(v []string) {
	o.LeftUeIds = v
}

func (o DynamicGroupNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DynamicGroupNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["resourceUri"] = o.ResourceUri
	if !IsNil(o.JoinedUeIds) {
		toSerialize["joinedUeIds"] = o.JoinedUeIds
	}
	if !IsNil(o.LeftUeIds) {
		toSerialize["leftUeIds"] = o.LeftUeIds
	}
	return toSerialize, nil
}

type NullableDynamicGroupNotification struct {
	value *DynamicGroupNotification
	isSet bool
}

func (v NullableDynamicGroupNotification) Get() *DynamicGroupNotification {
	return v.value
}

func (v *NullableDynamicGroupNotification) Set(val *DynamicGroupNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableDynamicGroupNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableDynamicGroupNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDynamicGroupNotification(val *DynamicGroupNotification) *NullableDynamicGroupNotification {
	return &NullableDynamicGroupNotification{value: val, isSet: true}
}

func (v NullableDynamicGroupNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDynamicGroupNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


