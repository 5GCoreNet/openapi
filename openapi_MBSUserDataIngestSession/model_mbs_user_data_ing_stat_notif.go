/*
3gpp-mbs-ud-ingest

API for MBS User Data Ingest Session.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MBSUserDataIngestSession

import (
	"encoding/json"
)

// checks if the MBSUserDataIngStatNotif type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MBSUserDataIngStatNotif{}

// MBSUserDataIngStatNotif Represents an MBS User Data Ingest Session Status Notification.
type MBSUserDataIngStatNotif struct {
	MbsIngSessionId string              `json:"mbsIngSessionId"`
	EventNotifs     []EventNotification `json:"eventNotifs"`
}

// NewMBSUserDataIngStatNotif instantiates a new MBSUserDataIngStatNotif object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMBSUserDataIngStatNotif(mbsIngSessionId string, eventNotifs []EventNotification) *MBSUserDataIngStatNotif {
	this := MBSUserDataIngStatNotif{}
	this.MbsIngSessionId = mbsIngSessionId
	this.EventNotifs = eventNotifs
	return &this
}

// NewMBSUserDataIngStatNotifWithDefaults instantiates a new MBSUserDataIngStatNotif object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMBSUserDataIngStatNotifWithDefaults() *MBSUserDataIngStatNotif {
	this := MBSUserDataIngStatNotif{}
	return &this
}

// GetMbsIngSessionId returns the MbsIngSessionId field value
func (o *MBSUserDataIngStatNotif) GetMbsIngSessionId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MbsIngSessionId
}

// GetMbsIngSessionIdOk returns a tuple with the MbsIngSessionId field value
// and a boolean to check if the value has been set.
func (o *MBSUserDataIngStatNotif) GetMbsIngSessionIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MbsIngSessionId, true
}

// SetMbsIngSessionId sets field value
func (o *MBSUserDataIngStatNotif) SetMbsIngSessionId(v string) {
	o.MbsIngSessionId = v
}

// GetEventNotifs returns the EventNotifs field value
func (o *MBSUserDataIngStatNotif) GetEventNotifs() []EventNotification {
	if o == nil {
		var ret []EventNotification
		return ret
	}

	return o.EventNotifs
}

// GetEventNotifsOk returns a tuple with the EventNotifs field value
// and a boolean to check if the value has been set.
func (o *MBSUserDataIngStatNotif) GetEventNotifsOk() ([]EventNotification, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventNotifs, true
}

// SetEventNotifs sets field value
func (o *MBSUserDataIngStatNotif) SetEventNotifs(v []EventNotification) {
	o.EventNotifs = v
}

func (o MBSUserDataIngStatNotif) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MBSUserDataIngStatNotif) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mbsIngSessionId"] = o.MbsIngSessionId
	toSerialize["eventNotifs"] = o.EventNotifs
	return toSerialize, nil
}

type NullableMBSUserDataIngStatNotif struct {
	value *MBSUserDataIngStatNotif
	isSet bool
}

func (v NullableMBSUserDataIngStatNotif) Get() *MBSUserDataIngStatNotif {
	return v.value
}

func (v *NullableMBSUserDataIngStatNotif) Set(val *MBSUserDataIngStatNotif) {
	v.value = val
	v.isSet = true
}

func (v NullableMBSUserDataIngStatNotif) IsSet() bool {
	return v.isSet
}

func (v *NullableMBSUserDataIngStatNotif) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMBSUserDataIngStatNotif(val *MBSUserDataIngStatNotif) *NullableMBSUserDataIngStatNotif {
	return &NullableMBSUserDataIngStatNotif{value: val, isSet: true}
}

func (v NullableMBSUserDataIngStatNotif) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMBSUserDataIngStatNotif) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
