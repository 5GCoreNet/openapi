/*
N5g-ddnmf_Discovery API

N5g-ddnmf_Discovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N5g_ddnmf_Discovery

import (
	"encoding/json"
)

// checks if the MonitorUpdateResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorUpdateResult{}

// MonitorUpdateResult Represents the monitoring revocation results.
type MonitorUpdateResult struct {
	DiscType DiscoveryType `json:"discType"`
	// Contains the ProSe Restricted Code.
	ProseRestrictedCode string `json:"proseRestrictedCode"`
	// Contains the Application ID.
	AppId string `json:"appId"`
	// Contains the RPAUID.
	BannedRpauid string `json:"bannedRpauid"`
	// Contains the PDUID.
	BannedPduid      string           `json:"bannedPduid"`
	RevocationResult RevocationResult `json:"revocationResult"`
}

// NewMonitorUpdateResult instantiates a new MonitorUpdateResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorUpdateResult(discType DiscoveryType, proseRestrictedCode string, appId string, bannedRpauid string, bannedPduid string, revocationResult RevocationResult) *MonitorUpdateResult {
	this := MonitorUpdateResult{}
	this.DiscType = discType
	this.ProseRestrictedCode = proseRestrictedCode
	this.AppId = appId
	this.BannedRpauid = bannedRpauid
	this.BannedPduid = bannedPduid
	this.RevocationResult = revocationResult
	return &this
}

// NewMonitorUpdateResultWithDefaults instantiates a new MonitorUpdateResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorUpdateResultWithDefaults() *MonitorUpdateResult {
	this := MonitorUpdateResult{}
	return &this
}

// GetDiscType returns the DiscType field value
func (o *MonitorUpdateResult) GetDiscType() DiscoveryType {
	if o == nil {
		var ret DiscoveryType
		return ret
	}

	return o.DiscType
}

// GetDiscTypeOk returns a tuple with the DiscType field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetDiscTypeOk() (*DiscoveryType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiscType, true
}

// SetDiscType sets field value
func (o *MonitorUpdateResult) SetDiscType(v DiscoveryType) {
	o.DiscType = v
}

// GetProseRestrictedCode returns the ProseRestrictedCode field value
func (o *MonitorUpdateResult) GetProseRestrictedCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProseRestrictedCode
}

// GetProseRestrictedCodeOk returns a tuple with the ProseRestrictedCode field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetProseRestrictedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProseRestrictedCode, true
}

// SetProseRestrictedCode sets field value
func (o *MonitorUpdateResult) SetProseRestrictedCode(v string) {
	o.ProseRestrictedCode = v
}

// GetAppId returns the AppId field value
func (o *MonitorUpdateResult) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *MonitorUpdateResult) SetAppId(v string) {
	o.AppId = v
}

// GetBannedRpauid returns the BannedRpauid field value
func (o *MonitorUpdateResult) GetBannedRpauid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedRpauid
}

// GetBannedRpauidOk returns a tuple with the BannedRpauid field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetBannedRpauidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedRpauid, true
}

// SetBannedRpauid sets field value
func (o *MonitorUpdateResult) SetBannedRpauid(v string) {
	o.BannedRpauid = v
}

// GetBannedPduid returns the BannedPduid field value
func (o *MonitorUpdateResult) GetBannedPduid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedPduid
}

// GetBannedPduidOk returns a tuple with the BannedPduid field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetBannedPduidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedPduid, true
}

// SetBannedPduid sets field value
func (o *MonitorUpdateResult) SetBannedPduid(v string) {
	o.BannedPduid = v
}

// GetRevocationResult returns the RevocationResult field value
func (o *MonitorUpdateResult) GetRevocationResult() RevocationResult {
	if o == nil {
		var ret RevocationResult
		return ret
	}

	return o.RevocationResult
}

// GetRevocationResultOk returns a tuple with the RevocationResult field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateResult) GetRevocationResultOk() (*RevocationResult, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RevocationResult, true
}

// SetRevocationResult sets field value
func (o *MonitorUpdateResult) SetRevocationResult(v RevocationResult) {
	o.RevocationResult = v
}

func (o MonitorUpdateResult) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorUpdateResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["discType"] = o.DiscType
	toSerialize["proseRestrictedCode"] = o.ProseRestrictedCode
	toSerialize["appId"] = o.AppId
	toSerialize["bannedRpauid"] = o.BannedRpauid
	toSerialize["bannedPduid"] = o.BannedPduid
	toSerialize["revocationResult"] = o.RevocationResult
	return toSerialize, nil
}

type NullableMonitorUpdateResult struct {
	value *MonitorUpdateResult
	isSet bool
}

func (v NullableMonitorUpdateResult) Get() *MonitorUpdateResult {
	return v.value
}

func (v *NullableMonitorUpdateResult) Set(val *MonitorUpdateResult) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorUpdateResult) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorUpdateResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorUpdateResult(val *MonitorUpdateResult) *NullableMonitorUpdateResult {
	return &NullableMonitorUpdateResult{value: val, isSet: true}
}

func (v NullableMonitorUpdateResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorUpdateResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
