/*
N5g-ddnmf_Discovery API

N5g-ddnmf_Discovery Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_N5g_ddnmf_Discovery

import (
	"encoding/json"
)

// checks if the MonitorUpdateDataForRestricted type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MonitorUpdateDataForRestricted{}

// MonitorUpdateDataForRestricted Represents Monitor Update Data for the Discovery Type \"RESTRICTED\".
type MonitorUpdateDataForRestricted struct {
	// Contains the ProSe Restricted Code.
	ProseRestrictedCode string `json:"proseRestrictedCode"`
	// Contains the Application ID.
	AppId string `json:"appId"`
	// Contains the RPAUID.
	BannedRpauid string `json:"bannedRpauid"`
	// Contains the PDUID.
	BannedPduid string `json:"bannedPduid"`
	// String providing an URI formatted according to RFC 3986.
	MonitorUpdateResultCallbackRef *string `json:"monitorUpdateResultCallbackRef,omitempty"`
}

// NewMonitorUpdateDataForRestricted instantiates a new MonitorUpdateDataForRestricted object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMonitorUpdateDataForRestricted(proseRestrictedCode string, appId string, bannedRpauid string, bannedPduid string) *MonitorUpdateDataForRestricted {
	this := MonitorUpdateDataForRestricted{}
	this.ProseRestrictedCode = proseRestrictedCode
	this.AppId = appId
	this.BannedRpauid = bannedRpauid
	this.BannedPduid = bannedPduid
	return &this
}

// NewMonitorUpdateDataForRestrictedWithDefaults instantiates a new MonitorUpdateDataForRestricted object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMonitorUpdateDataForRestrictedWithDefaults() *MonitorUpdateDataForRestricted {
	this := MonitorUpdateDataForRestricted{}
	return &this
}

// GetProseRestrictedCode returns the ProseRestrictedCode field value
func (o *MonitorUpdateDataForRestricted) GetProseRestrictedCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ProseRestrictedCode
}

// GetProseRestrictedCodeOk returns a tuple with the ProseRestrictedCode field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateDataForRestricted) GetProseRestrictedCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProseRestrictedCode, true
}

// SetProseRestrictedCode sets field value
func (o *MonitorUpdateDataForRestricted) SetProseRestrictedCode(v string) {
	o.ProseRestrictedCode = v
}

// GetAppId returns the AppId field value
func (o *MonitorUpdateDataForRestricted) GetAppId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateDataForRestricted) GetAppIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AppId, true
}

// SetAppId sets field value
func (o *MonitorUpdateDataForRestricted) SetAppId(v string) {
	o.AppId = v
}

// GetBannedRpauid returns the BannedRpauid field value
func (o *MonitorUpdateDataForRestricted) GetBannedRpauid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedRpauid
}

// GetBannedRpauidOk returns a tuple with the BannedRpauid field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateDataForRestricted) GetBannedRpauidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedRpauid, true
}

// SetBannedRpauid sets field value
func (o *MonitorUpdateDataForRestricted) SetBannedRpauid(v string) {
	o.BannedRpauid = v
}

// GetBannedPduid returns the BannedPduid field value
func (o *MonitorUpdateDataForRestricted) GetBannedPduid() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BannedPduid
}

// GetBannedPduidOk returns a tuple with the BannedPduid field value
// and a boolean to check if the value has been set.
func (o *MonitorUpdateDataForRestricted) GetBannedPduidOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BannedPduid, true
}

// SetBannedPduid sets field value
func (o *MonitorUpdateDataForRestricted) SetBannedPduid(v string) {
	o.BannedPduid = v
}

// GetMonitorUpdateResultCallbackRef returns the MonitorUpdateResultCallbackRef field value if set, zero value otherwise.
func (o *MonitorUpdateDataForRestricted) GetMonitorUpdateResultCallbackRef() string {
	if o == nil || IsNil(o.MonitorUpdateResultCallbackRef) {
		var ret string
		return ret
	}
	return *o.MonitorUpdateResultCallbackRef
}

// GetMonitorUpdateResultCallbackRefOk returns a tuple with the MonitorUpdateResultCallbackRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MonitorUpdateDataForRestricted) GetMonitorUpdateResultCallbackRefOk() (*string, bool) {
	if o == nil || IsNil(o.MonitorUpdateResultCallbackRef) {
		return nil, false
	}
	return o.MonitorUpdateResultCallbackRef, true
}

// HasMonitorUpdateResultCallbackRef returns a boolean if a field has been set.
func (o *MonitorUpdateDataForRestricted) HasMonitorUpdateResultCallbackRef() bool {
	if o != nil && !IsNil(o.MonitorUpdateResultCallbackRef) {
		return true
	}

	return false
}

// SetMonitorUpdateResultCallbackRef gets a reference to the given string and assigns it to the MonitorUpdateResultCallbackRef field.
func (o *MonitorUpdateDataForRestricted) SetMonitorUpdateResultCallbackRef(v string) {
	o.MonitorUpdateResultCallbackRef = &v
}

func (o MonitorUpdateDataForRestricted) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MonitorUpdateDataForRestricted) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["proseRestrictedCode"] = o.ProseRestrictedCode
	toSerialize["appId"] = o.AppId
	toSerialize["bannedRpauid"] = o.BannedRpauid
	toSerialize["bannedPduid"] = o.BannedPduid
	if !IsNil(o.MonitorUpdateResultCallbackRef) {
		toSerialize["monitorUpdateResultCallbackRef"] = o.MonitorUpdateResultCallbackRef
	}
	return toSerialize, nil
}

type NullableMonitorUpdateDataForRestricted struct {
	value *MonitorUpdateDataForRestricted
	isSet bool
}

func (v NullableMonitorUpdateDataForRestricted) Get() *MonitorUpdateDataForRestricted {
	return v.value
}

func (v *NullableMonitorUpdateDataForRestricted) Set(val *MonitorUpdateDataForRestricted) {
	v.value = val
	v.isSet = true
}

func (v NullableMonitorUpdateDataForRestricted) IsSet() bool {
	return v.isSet
}

func (v *NullableMonitorUpdateDataForRestricted) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMonitorUpdateDataForRestricted(val *MonitorUpdateDataForRestricted) *NullableMonitorUpdateDataForRestricted {
	return &NullableMonitorUpdateDataForRestricted{value: val, isSet: true}
}

func (v NullableMonitorUpdateDataForRestricted) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMonitorUpdateDataForRestricted) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
