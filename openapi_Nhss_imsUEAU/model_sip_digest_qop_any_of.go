/*
Nhss_imsUEAU

Nhss UE Authentication Service for IMS.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nhss_imsUEAU

import (
	"encoding/json"
	"fmt"
)

// SipDigestQopAnyOf the model 'SipDigestQopAnyOf'
type SipDigestQopAnyOf string

// List of SipDigestQop_anyOf
const (
	AUTH SipDigestQopAnyOf = "AUTH"
	AUTH_INT SipDigestQopAnyOf = "AUTH_INT"
)

// All allowed values of SipDigestQopAnyOf enum
var AllowedSipDigestQopAnyOfEnumValues = []SipDigestQopAnyOf{
	"AUTH",
	"AUTH_INT",
}

func (v *SipDigestQopAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SipDigestQopAnyOf(value)
	for _, existing := range AllowedSipDigestQopAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SipDigestQopAnyOf", value)
}

// NewSipDigestQopAnyOfFromValue returns a pointer to a valid SipDigestQopAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSipDigestQopAnyOfFromValue(v string) (*SipDigestQopAnyOf, error) {
	ev := SipDigestQopAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SipDigestQopAnyOf: valid values are %v", v, AllowedSipDigestQopAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SipDigestQopAnyOf) IsValid() bool {
	for _, existing := range AllowedSipDigestQopAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SipDigestQop_anyOf value
func (v SipDigestQopAnyOf) Ptr() *SipDigestQopAnyOf {
	return &v
}

type NullableSipDigestQopAnyOf struct {
	value *SipDigestQopAnyOf
	isSet bool
}

func (v NullableSipDigestQopAnyOf) Get() *SipDigestQopAnyOf {
	return v.value
}

func (v *NullableSipDigestQopAnyOf) Set(val *SipDigestQopAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableSipDigestQopAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableSipDigestQopAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSipDigestQopAnyOf(val *SipDigestQopAnyOf) *NullableSipDigestQopAnyOf {
	return &NullableSipDigestQopAnyOf{value: val, isSet: true}
}

func (v NullableSipDigestQopAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSipDigestQopAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

