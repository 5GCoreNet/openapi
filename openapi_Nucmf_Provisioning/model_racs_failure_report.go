/*
Nucmf_Provisioning

UCMF_Provisioning Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nucmf_Provisioning

import (
	"encoding/json"
)

// checks if the RacsFailureReport type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RacsFailureReport{}

// RacsFailureReport Represents a radio capability data provisioning failure report.
type RacsFailureReport struct {
	// Identifies the RACS ID(s) for which the RACS data are not provisioned successfully.
	RacsIds []string `json:"racsIds"`
	FailureCode RacsFailureCode `json:"failureCode"`
}

// NewRacsFailureReport instantiates a new RacsFailureReport object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRacsFailureReport(racsIds []string, failureCode RacsFailureCode) *RacsFailureReport {
	this := RacsFailureReport{}
	this.RacsIds = racsIds
	this.FailureCode = failureCode
	return &this
}

// NewRacsFailureReportWithDefaults instantiates a new RacsFailureReport object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRacsFailureReportWithDefaults() *RacsFailureReport {
	this := RacsFailureReport{}
	return &this
}

// GetRacsIds returns the RacsIds field value
func (o *RacsFailureReport) GetRacsIds() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.RacsIds
}

// GetRacsIdsOk returns a tuple with the RacsIds field value
// and a boolean to check if the value has been set.
func (o *RacsFailureReport) GetRacsIdsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.RacsIds, true
}

// SetRacsIds sets field value
func (o *RacsFailureReport) SetRacsIds(v []string) {
	o.RacsIds = v
}

// GetFailureCode returns the FailureCode field value
func (o *RacsFailureReport) GetFailureCode() RacsFailureCode {
	if o == nil {
		var ret RacsFailureCode
		return ret
	}

	return o.FailureCode
}

// GetFailureCodeOk returns a tuple with the FailureCode field value
// and a boolean to check if the value has been set.
func (o *RacsFailureReport) GetFailureCodeOk() (*RacsFailureCode, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailureCode, true
}

// SetFailureCode sets field value
func (o *RacsFailureReport) SetFailureCode(v RacsFailureCode) {
	o.FailureCode = v
}

func (o RacsFailureReport) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RacsFailureReport) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["racsIds"] = o.RacsIds
	toSerialize["failureCode"] = o.FailureCode
	return toSerialize, nil
}

type NullableRacsFailureReport struct {
	value *RacsFailureReport
	isSet bool
}

func (v NullableRacsFailureReport) Get() *RacsFailureReport {
	return v.value
}

func (v *NullableRacsFailureReport) Set(val *RacsFailureReport) {
	v.value = val
	v.isSet = true
}

func (v NullableRacsFailureReport) IsSet() bool {
	return v.isSet
}

func (v *NullableRacsFailureReport) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRacsFailureReport(val *RacsFailureReport) *NullableRacsFailureReport {
	return &NullableRacsFailureReport{value: val, isSet: true}
}

func (v NullableRacsFailureReport) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRacsFailureReport) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


