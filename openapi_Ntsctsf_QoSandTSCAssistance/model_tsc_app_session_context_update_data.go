/*
Ntsctsf_QoSandTSCAssistance Service API

TSCTSF QoS and TSC Assistance Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Ntsctsf_QoSandTSCAssistance

import (
	"encoding/json"
)

// checks if the TscAppSessionContextUpdateData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TscAppSessionContextUpdateData{}

// TscAppSessionContextUpdateData Describes the authorization data of an Individual TSC Application Session Context created by the PCF. 
type TscAppSessionContextUpdateData struct {
	// String providing an URI formatted according to RFC 3986.
	NotifUri *string `json:"notifUri,omitempty"`
	// Identifies the Application Identifier.
	AppId *string `json:"appId,omitempty"`
	EthFlowInfo []EthFlowDescription `json:"ethFlowInfo,omitempty"`
	// Identifies the Ethernet flows which require QoS. Each Ethernet flow consists of a flow identifer and the corresponding UL and/or DL flows. 
	EnEthFlowInfo []EthFlowInfo `json:"enEthFlowInfo,omitempty"`
	FlowInfo []FlowInfo `json:"flowInfo,omitempty"`
	TscQosReq *TscQosRequirementRm `json:"tscQosReq,omitempty"`
	// Identifies a pre-defined QoS information.
	QosReference *string `json:"qosReference,omitempty"`
	// Identifies an ordered list of pre-defined QoS information.
	AltQosReferences []string `json:"altQosReferences,omitempty"`
	// Identifies an ordered list of alternative service requirements that include individual QoS parameter sets. The lower the index of the array for a given entry, the higher the priority. 
	AltQosReqs []AlternativeServiceRequirementsData `json:"altQosReqs,omitempty"`
	// Contains an identity of an application service provider.
	AspId *string `json:"aspId,omitempty"`
	// Contains an identity of a sponsor.
	SponId *string `json:"sponId,omitempty"`
	SponStatus *SponsoringStatus `json:"sponStatus,omitempty"`
	EvSubsc NullableEventsSubscReqDataRm `json:"evSubsc,omitempty"`
}

// NewTscAppSessionContextUpdateData instantiates a new TscAppSessionContextUpdateData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTscAppSessionContextUpdateData() *TscAppSessionContextUpdateData {
	this := TscAppSessionContextUpdateData{}
	return &this
}

// NewTscAppSessionContextUpdateDataWithDefaults instantiates a new TscAppSessionContextUpdateData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTscAppSessionContextUpdateDataWithDefaults() *TscAppSessionContextUpdateData {
	this := TscAppSessionContextUpdateData{}
	return &this
}

// GetNotifUri returns the NotifUri field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetNotifUri() string {
	if o == nil || isNil(o.NotifUri) {
		var ret string
		return ret
	}
	return *o.NotifUri
}

// GetNotifUriOk returns a tuple with the NotifUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetNotifUriOk() (*string, bool) {
	if o == nil || isNil(o.NotifUri) {
		return nil, false
	}
	return o.NotifUri, true
}

// HasNotifUri returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasNotifUri() bool {
	if o != nil && !isNil(o.NotifUri) {
		return true
	}

	return false
}

// SetNotifUri gets a reference to the given string and assigns it to the NotifUri field.
func (o *TscAppSessionContextUpdateData) SetNotifUri(v string) {
	o.NotifUri = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetAppId() string {
	if o == nil || isNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetAppIdOk() (*string, bool) {
	if o == nil || isNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasAppId() bool {
	if o != nil && !isNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *TscAppSessionContextUpdateData) SetAppId(v string) {
	o.AppId = &v
}

// GetEthFlowInfo returns the EthFlowInfo field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetEthFlowInfo() []EthFlowDescription {
	if o == nil || isNil(o.EthFlowInfo) {
		var ret []EthFlowDescription
		return ret
	}
	return o.EthFlowInfo
}

// GetEthFlowInfoOk returns a tuple with the EthFlowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetEthFlowInfoOk() ([]EthFlowDescription, bool) {
	if o == nil || isNil(o.EthFlowInfo) {
		return nil, false
	}
	return o.EthFlowInfo, true
}

// HasEthFlowInfo returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasEthFlowInfo() bool {
	if o != nil && !isNil(o.EthFlowInfo) {
		return true
	}

	return false
}

// SetEthFlowInfo gets a reference to the given []EthFlowDescription and assigns it to the EthFlowInfo field.
func (o *TscAppSessionContextUpdateData) SetEthFlowInfo(v []EthFlowDescription) {
	o.EthFlowInfo = v
}

// GetEnEthFlowInfo returns the EnEthFlowInfo field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetEnEthFlowInfo() []EthFlowInfo {
	if o == nil || isNil(o.EnEthFlowInfo) {
		var ret []EthFlowInfo
		return ret
	}
	return o.EnEthFlowInfo
}

// GetEnEthFlowInfoOk returns a tuple with the EnEthFlowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetEnEthFlowInfoOk() ([]EthFlowInfo, bool) {
	if o == nil || isNil(o.EnEthFlowInfo) {
		return nil, false
	}
	return o.EnEthFlowInfo, true
}

// HasEnEthFlowInfo returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasEnEthFlowInfo() bool {
	if o != nil && !isNil(o.EnEthFlowInfo) {
		return true
	}

	return false
}

// SetEnEthFlowInfo gets a reference to the given []EthFlowInfo and assigns it to the EnEthFlowInfo field.
func (o *TscAppSessionContextUpdateData) SetEnEthFlowInfo(v []EthFlowInfo) {
	o.EnEthFlowInfo = v
}

// GetFlowInfo returns the FlowInfo field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetFlowInfo() []FlowInfo {
	if o == nil || isNil(o.FlowInfo) {
		var ret []FlowInfo
		return ret
	}
	return o.FlowInfo
}

// GetFlowInfoOk returns a tuple with the FlowInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetFlowInfoOk() ([]FlowInfo, bool) {
	if o == nil || isNil(o.FlowInfo) {
		return nil, false
	}
	return o.FlowInfo, true
}

// HasFlowInfo returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasFlowInfo() bool {
	if o != nil && !isNil(o.FlowInfo) {
		return true
	}

	return false
}

// SetFlowInfo gets a reference to the given []FlowInfo and assigns it to the FlowInfo field.
func (o *TscAppSessionContextUpdateData) SetFlowInfo(v []FlowInfo) {
	o.FlowInfo = v
}

// GetTscQosReq returns the TscQosReq field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetTscQosReq() TscQosRequirementRm {
	if o == nil || isNil(o.TscQosReq) {
		var ret TscQosRequirementRm
		return ret
	}
	return *o.TscQosReq
}

// GetTscQosReqOk returns a tuple with the TscQosReq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetTscQosReqOk() (*TscQosRequirementRm, bool) {
	if o == nil || isNil(o.TscQosReq) {
		return nil, false
	}
	return o.TscQosReq, true
}

// HasTscQosReq returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasTscQosReq() bool {
	if o != nil && !isNil(o.TscQosReq) {
		return true
	}

	return false
}

// SetTscQosReq gets a reference to the given TscQosRequirementRm and assigns it to the TscQosReq field.
func (o *TscAppSessionContextUpdateData) SetTscQosReq(v TscQosRequirementRm) {
	o.TscQosReq = &v
}

// GetQosReference returns the QosReference field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetQosReference() string {
	if o == nil || isNil(o.QosReference) {
		var ret string
		return ret
	}
	return *o.QosReference
}

// GetQosReferenceOk returns a tuple with the QosReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetQosReferenceOk() (*string, bool) {
	if o == nil || isNil(o.QosReference) {
		return nil, false
	}
	return o.QosReference, true
}

// HasQosReference returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasQosReference() bool {
	if o != nil && !isNil(o.QosReference) {
		return true
	}

	return false
}

// SetQosReference gets a reference to the given string and assigns it to the QosReference field.
func (o *TscAppSessionContextUpdateData) SetQosReference(v string) {
	o.QosReference = &v
}

// GetAltQosReferences returns the AltQosReferences field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetAltQosReferences() []string {
	if o == nil || isNil(o.AltQosReferences) {
		var ret []string
		return ret
	}
	return o.AltQosReferences
}

// GetAltQosReferencesOk returns a tuple with the AltQosReferences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetAltQosReferencesOk() ([]string, bool) {
	if o == nil || isNil(o.AltQosReferences) {
		return nil, false
	}
	return o.AltQosReferences, true
}

// HasAltQosReferences returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasAltQosReferences() bool {
	if o != nil && !isNil(o.AltQosReferences) {
		return true
	}

	return false
}

// SetAltQosReferences gets a reference to the given []string and assigns it to the AltQosReferences field.
func (o *TscAppSessionContextUpdateData) SetAltQosReferences(v []string) {
	o.AltQosReferences = v
}

// GetAltQosReqs returns the AltQosReqs field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetAltQosReqs() []AlternativeServiceRequirementsData {
	if o == nil || isNil(o.AltQosReqs) {
		var ret []AlternativeServiceRequirementsData
		return ret
	}
	return o.AltQosReqs
}

// GetAltQosReqsOk returns a tuple with the AltQosReqs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetAltQosReqsOk() ([]AlternativeServiceRequirementsData, bool) {
	if o == nil || isNil(o.AltQosReqs) {
		return nil, false
	}
	return o.AltQosReqs, true
}

// HasAltQosReqs returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasAltQosReqs() bool {
	if o != nil && !isNil(o.AltQosReqs) {
		return true
	}

	return false
}

// SetAltQosReqs gets a reference to the given []AlternativeServiceRequirementsData and assigns it to the AltQosReqs field.
func (o *TscAppSessionContextUpdateData) SetAltQosReqs(v []AlternativeServiceRequirementsData) {
	o.AltQosReqs = v
}

// GetAspId returns the AspId field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetAspId() string {
	if o == nil || isNil(o.AspId) {
		var ret string
		return ret
	}
	return *o.AspId
}

// GetAspIdOk returns a tuple with the AspId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetAspIdOk() (*string, bool) {
	if o == nil || isNil(o.AspId) {
		return nil, false
	}
	return o.AspId, true
}

// HasAspId returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasAspId() bool {
	if o != nil && !isNil(o.AspId) {
		return true
	}

	return false
}

// SetAspId gets a reference to the given string and assigns it to the AspId field.
func (o *TscAppSessionContextUpdateData) SetAspId(v string) {
	o.AspId = &v
}

// GetSponId returns the SponId field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetSponId() string {
	if o == nil || isNil(o.SponId) {
		var ret string
		return ret
	}
	return *o.SponId
}

// GetSponIdOk returns a tuple with the SponId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetSponIdOk() (*string, bool) {
	if o == nil || isNil(o.SponId) {
		return nil, false
	}
	return o.SponId, true
}

// HasSponId returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasSponId() bool {
	if o != nil && !isNil(o.SponId) {
		return true
	}

	return false
}

// SetSponId gets a reference to the given string and assigns it to the SponId field.
func (o *TscAppSessionContextUpdateData) SetSponId(v string) {
	o.SponId = &v
}

// GetSponStatus returns the SponStatus field value if set, zero value otherwise.
func (o *TscAppSessionContextUpdateData) GetSponStatus() SponsoringStatus {
	if o == nil || isNil(o.SponStatus) {
		var ret SponsoringStatus
		return ret
	}
	return *o.SponStatus
}

// GetSponStatusOk returns a tuple with the SponStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TscAppSessionContextUpdateData) GetSponStatusOk() (*SponsoringStatus, bool) {
	if o == nil || isNil(o.SponStatus) {
		return nil, false
	}
	return o.SponStatus, true
}

// HasSponStatus returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasSponStatus() bool {
	if o != nil && !isNil(o.SponStatus) {
		return true
	}

	return false
}

// SetSponStatus gets a reference to the given SponsoringStatus and assigns it to the SponStatus field.
func (o *TscAppSessionContextUpdateData) SetSponStatus(v SponsoringStatus) {
	o.SponStatus = &v
}

// GetEvSubsc returns the EvSubsc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *TscAppSessionContextUpdateData) GetEvSubsc() EventsSubscReqDataRm {
	if o == nil || isNil(o.EvSubsc.Get()) {
		var ret EventsSubscReqDataRm
		return ret
	}
	return *o.EvSubsc.Get()
}

// GetEvSubscOk returns a tuple with the EvSubsc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *TscAppSessionContextUpdateData) GetEvSubscOk() (*EventsSubscReqDataRm, bool) {
	if o == nil {
		return nil, false
	}
	return o.EvSubsc.Get(), o.EvSubsc.IsSet()
}

// HasEvSubsc returns a boolean if a field has been set.
func (o *TscAppSessionContextUpdateData) HasEvSubsc() bool {
	if o != nil && o.EvSubsc.IsSet() {
		return true
	}

	return false
}

// SetEvSubsc gets a reference to the given NullableEventsSubscReqDataRm and assigns it to the EvSubsc field.
func (o *TscAppSessionContextUpdateData) SetEvSubsc(v EventsSubscReqDataRm) {
	o.EvSubsc.Set(&v)
}
// SetEvSubscNil sets the value for EvSubsc to be an explicit nil
func (o *TscAppSessionContextUpdateData) SetEvSubscNil() {
	o.EvSubsc.Set(nil)
}

// UnsetEvSubsc ensures that no value is present for EvSubsc, not even an explicit nil
func (o *TscAppSessionContextUpdateData) UnsetEvSubsc() {
	o.EvSubsc.Unset()
}

func (o TscAppSessionContextUpdateData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TscAppSessionContextUpdateData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.NotifUri) {
		toSerialize["notifUri"] = o.NotifUri
	}
	if !isNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !isNil(o.EthFlowInfo) {
		toSerialize["ethFlowInfo"] = o.EthFlowInfo
	}
	if !isNil(o.EnEthFlowInfo) {
		toSerialize["enEthFlowInfo"] = o.EnEthFlowInfo
	}
	if !isNil(o.FlowInfo) {
		toSerialize["flowInfo"] = o.FlowInfo
	}
	if !isNil(o.TscQosReq) {
		toSerialize["tscQosReq"] = o.TscQosReq
	}
	if !isNil(o.QosReference) {
		toSerialize["qosReference"] = o.QosReference
	}
	if !isNil(o.AltQosReferences) {
		toSerialize["altQosReferences"] = o.AltQosReferences
	}
	if !isNil(o.AltQosReqs) {
		toSerialize["altQosReqs"] = o.AltQosReqs
	}
	if !isNil(o.AspId) {
		toSerialize["aspId"] = o.AspId
	}
	if !isNil(o.SponId) {
		toSerialize["sponId"] = o.SponId
	}
	if !isNil(o.SponStatus) {
		toSerialize["sponStatus"] = o.SponStatus
	}
	if o.EvSubsc.IsSet() {
		toSerialize["evSubsc"] = o.EvSubsc.Get()
	}
	return toSerialize, nil
}

type NullableTscAppSessionContextUpdateData struct {
	value *TscAppSessionContextUpdateData
	isSet bool
}

func (v NullableTscAppSessionContextUpdateData) Get() *TscAppSessionContextUpdateData {
	return v.value
}

func (v *NullableTscAppSessionContextUpdateData) Set(val *TscAppSessionContextUpdateData) {
	v.value = val
	v.isSet = true
}

func (v NullableTscAppSessionContextUpdateData) IsSet() bool {
	return v.isSet
}

func (v *NullableTscAppSessionContextUpdateData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTscAppSessionContextUpdateData(val *TscAppSessionContextUpdateData) *NullableTscAppSessionContextUpdateData {
	return &NullableTscAppSessionContextUpdateData{value: val, isSet: true}
}

func (v NullableTscAppSessionContextUpdateData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTscAppSessionContextUpdateData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


