/*
Ntsctsf_QoSandTSCAssistance Service API

TSCTSF QoS and TSC Assistance Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Ntsctsf_QoSandTSCAssistance

import (
	"encoding/json"
)

// checks if the EventsSubscReqDataRm type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EventsSubscReqDataRm{}

// EventsSubscReqDataRm This data type is defined in the same way as the EventsSubscReqData data type, but with the  OpenAPI nullable property set to true. 
type EventsSubscReqDataRm struct {
	Events []TscEvent `json:"events"`
	// String providing an URI formatted according to RFC 3986.
	NotifUri *string `json:"notifUri,omitempty"`
	QosMon *QosMonitoringInformationRm `json:"qosMon,omitempty"`
	UsgThres NullableUsageThresholdRm `json:"usgThres,omitempty"`
	NotifCorreId *string `json:"notifCorreId,omitempty"`
}

// NewEventsSubscReqDataRm instantiates a new EventsSubscReqDataRm object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEventsSubscReqDataRm(events []TscEvent) *EventsSubscReqDataRm {
	this := EventsSubscReqDataRm{}
	this.Events = events
	return &this
}

// NewEventsSubscReqDataRmWithDefaults instantiates a new EventsSubscReqDataRm object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEventsSubscReqDataRmWithDefaults() *EventsSubscReqDataRm {
	this := EventsSubscReqDataRm{}
	return &this
}

// GetEvents returns the Events field value
func (o *EventsSubscReqDataRm) GetEvents() []TscEvent {
	if o == nil {
		var ret []TscEvent
		return ret
	}

	return o.Events
}

// GetEventsOk returns a tuple with the Events field value
// and a boolean to check if the value has been set.
func (o *EventsSubscReqDataRm) GetEventsOk() ([]TscEvent, bool) {
	if o == nil {
		return nil, false
	}
	return o.Events, true
}

// SetEvents sets field value
func (o *EventsSubscReqDataRm) SetEvents(v []TscEvent) {
	o.Events = v
}

// GetNotifUri returns the NotifUri field value if set, zero value otherwise.
func (o *EventsSubscReqDataRm) GetNotifUri() string {
	if o == nil || isNil(o.NotifUri) {
		var ret string
		return ret
	}
	return *o.NotifUri
}

// GetNotifUriOk returns a tuple with the NotifUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSubscReqDataRm) GetNotifUriOk() (*string, bool) {
	if o == nil || isNil(o.NotifUri) {
		return nil, false
	}
	return o.NotifUri, true
}

// HasNotifUri returns a boolean if a field has been set.
func (o *EventsSubscReqDataRm) HasNotifUri() bool {
	if o != nil && !isNil(o.NotifUri) {
		return true
	}

	return false
}

// SetNotifUri gets a reference to the given string and assigns it to the NotifUri field.
func (o *EventsSubscReqDataRm) SetNotifUri(v string) {
	o.NotifUri = &v
}

// GetQosMon returns the QosMon field value if set, zero value otherwise.
func (o *EventsSubscReqDataRm) GetQosMon() QosMonitoringInformationRm {
	if o == nil || isNil(o.QosMon) {
		var ret QosMonitoringInformationRm
		return ret
	}
	return *o.QosMon
}

// GetQosMonOk returns a tuple with the QosMon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSubscReqDataRm) GetQosMonOk() (*QosMonitoringInformationRm, bool) {
	if o == nil || isNil(o.QosMon) {
		return nil, false
	}
	return o.QosMon, true
}

// HasQosMon returns a boolean if a field has been set.
func (o *EventsSubscReqDataRm) HasQosMon() bool {
	if o != nil && !isNil(o.QosMon) {
		return true
	}

	return false
}

// SetQosMon gets a reference to the given QosMonitoringInformationRm and assigns it to the QosMon field.
func (o *EventsSubscReqDataRm) SetQosMon(v QosMonitoringInformationRm) {
	o.QosMon = &v
}

// GetUsgThres returns the UsgThres field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *EventsSubscReqDataRm) GetUsgThres() UsageThresholdRm {
	if o == nil || isNil(o.UsgThres.Get()) {
		var ret UsageThresholdRm
		return ret
	}
	return *o.UsgThres.Get()
}

// GetUsgThresOk returns a tuple with the UsgThres field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *EventsSubscReqDataRm) GetUsgThresOk() (*UsageThresholdRm, bool) {
	if o == nil {
		return nil, false
	}
	return o.UsgThres.Get(), o.UsgThres.IsSet()
}

// HasUsgThres returns a boolean if a field has been set.
func (o *EventsSubscReqDataRm) HasUsgThres() bool {
	if o != nil && o.UsgThres.IsSet() {
		return true
	}

	return false
}

// SetUsgThres gets a reference to the given NullableUsageThresholdRm and assigns it to the UsgThres field.
func (o *EventsSubscReqDataRm) SetUsgThres(v UsageThresholdRm) {
	o.UsgThres.Set(&v)
}
// SetUsgThresNil sets the value for UsgThres to be an explicit nil
func (o *EventsSubscReqDataRm) SetUsgThresNil() {
	o.UsgThres.Set(nil)
}

// UnsetUsgThres ensures that no value is present for UsgThres, not even an explicit nil
func (o *EventsSubscReqDataRm) UnsetUsgThres() {
	o.UsgThres.Unset()
}

// GetNotifCorreId returns the NotifCorreId field value if set, zero value otherwise.
func (o *EventsSubscReqDataRm) GetNotifCorreId() string {
	if o == nil || isNil(o.NotifCorreId) {
		var ret string
		return ret
	}
	return *o.NotifCorreId
}

// GetNotifCorreIdOk returns a tuple with the NotifCorreId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EventsSubscReqDataRm) GetNotifCorreIdOk() (*string, bool) {
	if o == nil || isNil(o.NotifCorreId) {
		return nil, false
	}
	return o.NotifCorreId, true
}

// HasNotifCorreId returns a boolean if a field has been set.
func (o *EventsSubscReqDataRm) HasNotifCorreId() bool {
	if o != nil && !isNil(o.NotifCorreId) {
		return true
	}

	return false
}

// SetNotifCorreId gets a reference to the given string and assigns it to the NotifCorreId field.
func (o *EventsSubscReqDataRm) SetNotifCorreId(v string) {
	o.NotifCorreId = &v
}

func (o EventsSubscReqDataRm) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EventsSubscReqDataRm) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["events"] = o.Events
	if !isNil(o.NotifUri) {
		toSerialize["notifUri"] = o.NotifUri
	}
	if !isNil(o.QosMon) {
		toSerialize["qosMon"] = o.QosMon
	}
	if o.UsgThres.IsSet() {
		toSerialize["usgThres"] = o.UsgThres.Get()
	}
	if !isNil(o.NotifCorreId) {
		toSerialize["notifCorreId"] = o.NotifCorreId
	}
	return toSerialize, nil
}

type NullableEventsSubscReqDataRm struct {
	value *EventsSubscReqDataRm
	isSet bool
}

func (v NullableEventsSubscReqDataRm) Get() *EventsSubscReqDataRm {
	return v.value
}

func (v *NullableEventsSubscReqDataRm) Set(val *EventsSubscReqDataRm) {
	v.value = val
	v.isSet = true
}

func (v NullableEventsSubscReqDataRm) IsSet() bool {
	return v.isSet
}

func (v *NullableEventsSubscReqDataRm) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEventsSubscReqDataRm(val *EventsSubscReqDataRm) *NullableEventsSubscReqDataRm {
	return &NullableEventsSubscReqDataRm{value: val, isSet: true}
}

func (v NullableEventsSubscReqDataRm) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEventsSubscReqDataRm) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


