/*
MSGS_ASRegistration

API for MSGS AS Registration Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_MSGS_ASRegistration

import (
	"encoding/json"
)

// checks if the ASProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ASProfile{}

// ASProfile AS profile information
type ASProfile struct {
	AppName *string `json:"appName,omitempty"`
	// The provider of the AS.
	AppProviders []string `json:"appProviders,omitempty"`
	// The application scenario.
	AppSenarios []string `json:"appSenarios,omitempty"`
	AppCategory *string  `json:"appCategory,omitempty"`
	AsStatus    *string  `json:"asStatus,omitempty"`
}

// NewASProfile instantiates a new ASProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewASProfile() *ASProfile {
	this := ASProfile{}
	return &this
}

// NewASProfileWithDefaults instantiates a new ASProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewASProfileWithDefaults() *ASProfile {
	this := ASProfile{}
	return &this
}

// GetAppName returns the AppName field value if set, zero value otherwise.
func (o *ASProfile) GetAppName() string {
	if o == nil || IsNil(o.AppName) {
		var ret string
		return ret
	}
	return *o.AppName
}

// GetAppNameOk returns a tuple with the AppName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASProfile) GetAppNameOk() (*string, bool) {
	if o == nil || IsNil(o.AppName) {
		return nil, false
	}
	return o.AppName, true
}

// HasAppName returns a boolean if a field has been set.
func (o *ASProfile) HasAppName() bool {
	if o != nil && !IsNil(o.AppName) {
		return true
	}

	return false
}

// SetAppName gets a reference to the given string and assigns it to the AppName field.
func (o *ASProfile) SetAppName(v string) {
	o.AppName = &v
}

// GetAppProviders returns the AppProviders field value if set, zero value otherwise.
func (o *ASProfile) GetAppProviders() []string {
	if o == nil || IsNil(o.AppProviders) {
		var ret []string
		return ret
	}
	return o.AppProviders
}

// GetAppProvidersOk returns a tuple with the AppProviders field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASProfile) GetAppProvidersOk() ([]string, bool) {
	if o == nil || IsNil(o.AppProviders) {
		return nil, false
	}
	return o.AppProviders, true
}

// HasAppProviders returns a boolean if a field has been set.
func (o *ASProfile) HasAppProviders() bool {
	if o != nil && !IsNil(o.AppProviders) {
		return true
	}

	return false
}

// SetAppProviders gets a reference to the given []string and assigns it to the AppProviders field.
func (o *ASProfile) SetAppProviders(v []string) {
	o.AppProviders = v
}

// GetAppSenarios returns the AppSenarios field value if set, zero value otherwise.
func (o *ASProfile) GetAppSenarios() []string {
	if o == nil || IsNil(o.AppSenarios) {
		var ret []string
		return ret
	}
	return o.AppSenarios
}

// GetAppSenariosOk returns a tuple with the AppSenarios field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASProfile) GetAppSenariosOk() ([]string, bool) {
	if o == nil || IsNil(o.AppSenarios) {
		return nil, false
	}
	return o.AppSenarios, true
}

// HasAppSenarios returns a boolean if a field has been set.
func (o *ASProfile) HasAppSenarios() bool {
	if o != nil && !IsNil(o.AppSenarios) {
		return true
	}

	return false
}

// SetAppSenarios gets a reference to the given []string and assigns it to the AppSenarios field.
func (o *ASProfile) SetAppSenarios(v []string) {
	o.AppSenarios = v
}

// GetAppCategory returns the AppCategory field value if set, zero value otherwise.
func (o *ASProfile) GetAppCategory() string {
	if o == nil || IsNil(o.AppCategory) {
		var ret string
		return ret
	}
	return *o.AppCategory
}

// GetAppCategoryOk returns a tuple with the AppCategory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASProfile) GetAppCategoryOk() (*string, bool) {
	if o == nil || IsNil(o.AppCategory) {
		return nil, false
	}
	return o.AppCategory, true
}

// HasAppCategory returns a boolean if a field has been set.
func (o *ASProfile) HasAppCategory() bool {
	if o != nil && !IsNil(o.AppCategory) {
		return true
	}

	return false
}

// SetAppCategory gets a reference to the given string and assigns it to the AppCategory field.
func (o *ASProfile) SetAppCategory(v string) {
	o.AppCategory = &v
}

// GetAsStatus returns the AsStatus field value if set, zero value otherwise.
func (o *ASProfile) GetAsStatus() string {
	if o == nil || IsNil(o.AsStatus) {
		var ret string
		return ret
	}
	return *o.AsStatus
}

// GetAsStatusOk returns a tuple with the AsStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ASProfile) GetAsStatusOk() (*string, bool) {
	if o == nil || IsNil(o.AsStatus) {
		return nil, false
	}
	return o.AsStatus, true
}

// HasAsStatus returns a boolean if a field has been set.
func (o *ASProfile) HasAsStatus() bool {
	if o != nil && !IsNil(o.AsStatus) {
		return true
	}

	return false
}

// SetAsStatus gets a reference to the given string and assigns it to the AsStatus field.
func (o *ASProfile) SetAsStatus(v string) {
	o.AsStatus = &v
}

func (o ASProfile) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ASProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AppName) {
		toSerialize["appName"] = o.AppName
	}
	if !IsNil(o.AppProviders) {
		toSerialize["appProviders"] = o.AppProviders
	}
	if !IsNil(o.AppSenarios) {
		toSerialize["appSenarios"] = o.AppSenarios
	}
	if !IsNil(o.AppCategory) {
		toSerialize["appCategory"] = o.AppCategory
	}
	if !IsNil(o.AsStatus) {
		toSerialize["asStatus"] = o.AsStatus
	}
	return toSerialize, nil
}

type NullableASProfile struct {
	value *ASProfile
	isSet bool
}

func (v NullableASProfile) Get() *ASProfile {
	return v.value
}

func (v *NullableASProfile) Set(val *ASProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableASProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableASProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableASProfile(val *ASProfile) *NullableASProfile {
	return &NullableASProfile{value: val, isSet: true}
}

func (v NullableASProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableASProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
