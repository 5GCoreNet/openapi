/*
EES ACR Management Event_API

API for EES ACR Management Event.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_ACRManagementEvent

import (
	"encoding/json"
)

// checks if the AcrMgntEventsNotification type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AcrMgntEventsNotification{}

// AcrMgntEventsNotification Represents the ACR management events notification.
type AcrMgntEventsNotification struct {
	// String identifying the Individual ACR Management Events Subscription for which the notification is delivered. 
	SubpId string `json:"subpId"`
	// A list of ACR management event reports.
	EventReports []AcrMgntEventReport `json:"eventReports"`
}

// NewAcrMgntEventsNotification instantiates a new AcrMgntEventsNotification object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAcrMgntEventsNotification(subpId string, eventReports []AcrMgntEventReport) *AcrMgntEventsNotification {
	this := AcrMgntEventsNotification{}
	this.SubpId = subpId
	this.EventReports = eventReports
	return &this
}

// NewAcrMgntEventsNotificationWithDefaults instantiates a new AcrMgntEventsNotification object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAcrMgntEventsNotificationWithDefaults() *AcrMgntEventsNotification {
	this := AcrMgntEventsNotification{}
	return &this
}

// GetSubpId returns the SubpId field value
func (o *AcrMgntEventsNotification) GetSubpId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SubpId
}

// GetSubpIdOk returns a tuple with the SubpId field value
// and a boolean to check if the value has been set.
func (o *AcrMgntEventsNotification) GetSubpIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SubpId, true
}

// SetSubpId sets field value
func (o *AcrMgntEventsNotification) SetSubpId(v string) {
	o.SubpId = v
}

// GetEventReports returns the EventReports field value
func (o *AcrMgntEventsNotification) GetEventReports() []AcrMgntEventReport {
	if o == nil {
		var ret []AcrMgntEventReport
		return ret
	}

	return o.EventReports
}

// GetEventReportsOk returns a tuple with the EventReports field value
// and a boolean to check if the value has been set.
func (o *AcrMgntEventsNotification) GetEventReportsOk() ([]AcrMgntEventReport, bool) {
	if o == nil {
		return nil, false
	}
	return o.EventReports, true
}

// SetEventReports sets field value
func (o *AcrMgntEventsNotification) SetEventReports(v []AcrMgntEventReport) {
	o.EventReports = v
}

func (o AcrMgntEventsNotification) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AcrMgntEventsNotification) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["subpId"] = o.SubpId
	toSerialize["eventReports"] = o.EventReports
	return toSerialize, nil
}

type NullableAcrMgntEventsNotification struct {
	value *AcrMgntEventsNotification
	isSet bool
}

func (v NullableAcrMgntEventsNotification) Get() *AcrMgntEventsNotification {
	return v.value
}

func (v *NullableAcrMgntEventsNotification) Set(val *AcrMgntEventsNotification) {
	v.value = val
	v.isSet = true
}

func (v NullableAcrMgntEventsNotification) IsSet() bool {
	return v.isSet
}

func (v *NullableAcrMgntEventsNotification) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcrMgntEventsNotification(val *AcrMgntEventsNotification) *NullableAcrMgntEventsNotification {
	return &NullableAcrMgntEventsNotification{value: val, isSet: true}
}

func (v NullableAcrMgntEventsNotification) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcrMgntEventsNotification) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


