/*
EES ACR Management Event_API

API for EES ACR Management Event.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.1.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Eees_ACRManagementEvent

import (
	"encoding/json"
	"fmt"
)

// AcrMgntEventFilterAnyOf the model 'AcrMgntEventFilterAnyOf'
type AcrMgntEventFilterAnyOf string

// List of AcrMgntEventFilter_anyOf
const (
	INTRA_EDN_MOBILITY AcrMgntEventFilterAnyOf = "INTRA_EDN_MOBILITY"
	INTER_EDN_MOBILITY AcrMgntEventFilterAnyOf = "INTER_EDN_MOBILITY"
)

// All allowed values of AcrMgntEventFilterAnyOf enum
var AllowedAcrMgntEventFilterAnyOfEnumValues = []AcrMgntEventFilterAnyOf{
	"INTRA_EDN_MOBILITY",
	"INTER_EDN_MOBILITY",
}

func (v *AcrMgntEventFilterAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AcrMgntEventFilterAnyOf(value)
	for _, existing := range AllowedAcrMgntEventFilterAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AcrMgntEventFilterAnyOf", value)
}

// NewAcrMgntEventFilterAnyOfFromValue returns a pointer to a valid AcrMgntEventFilterAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAcrMgntEventFilterAnyOfFromValue(v string) (*AcrMgntEventFilterAnyOf, error) {
	ev := AcrMgntEventFilterAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AcrMgntEventFilterAnyOf: valid values are %v", v, AllowedAcrMgntEventFilterAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AcrMgntEventFilterAnyOf) IsValid() bool {
	for _, existing := range AllowedAcrMgntEventFilterAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AcrMgntEventFilter_anyOf value
func (v AcrMgntEventFilterAnyOf) Ptr() *AcrMgntEventFilterAnyOf {
	return &v
}

type NullableAcrMgntEventFilterAnyOf struct {
	value *AcrMgntEventFilterAnyOf
	isSet bool
}

func (v NullableAcrMgntEventFilterAnyOf) Get() *AcrMgntEventFilterAnyOf {
	return v.value
}

func (v *NullableAcrMgntEventFilterAnyOf) Set(val *AcrMgntEventFilterAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAcrMgntEventFilterAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAcrMgntEventFilterAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAcrMgntEventFilterAnyOf(val *AcrMgntEventFilterAnyOf) *NullableAcrMgntEventFilterAnyOf {
	return &NullableAcrMgntEventFilterAnyOf{value: val, isSet: true}
}

func (v NullableAcrMgntEventFilterAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAcrMgntEventFilterAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

