/*
3gpp-service-parameter

API for AF service paramter   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ServiceParameter

import (
	"encoding/json"
)

// checks if the ServiceParameterData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceParameterData{}

// ServiceParameterData Represents an individual Service Parameter subscription resource.
type ServiceParameterData struct {
	// Identifies a service on behalf of which the AF is issuing the request.
	AfServiceId *string `json:"afServiceId,omitempty"`
	// Identifies an application.
	AppId *string `json:"appId,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\").
	Dnn    *string `json:"dnn,omitempty"`
	Snssai *Snssai `json:"snssai,omitempty"`
	// string containing a local identifier followed by \"@\" and a domain identifier. Both the local identifier and the domain identifier shall be encoded as strings that do not contain any \"@\" characters. See Clauses 4.6.2 and 4.6.3 of 3GPP TS 23.682 for more information.
	ExternalGroupId *string `json:"externalGroupId,omitempty"`
	// Identifies whether the AF request applies to any UE. This attribute shall set to \"true\" if applicable for any UE, otherwise, set to \"false\".
	AnyUeInd *bool `json:"anyUeInd,omitempty"`
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.
	Gpsi *string `json:"gpsi,omitempty"`
	// String identifying a IPv4 address formatted in the 'dotted decimal' notation as defined in RFC 1166.
	UeIpv4 *string   `json:"ueIpv4,omitempty"`
	UeIpv6 *Ipv6Addr `json:"ueIpv6,omitempty"`
	// String identifying a MAC address formatted in the hexadecimal notation according to clause 1.1 and clause 2.1 of RFC 7042.
	UeMac *string `json:"ueMac,omitempty"`
	// string formatted according to IETF RFC 3986 identifying a referenced resource.
	Self           *string `json:"self,omitempty"`
	SubNotifEvents []Event `json:"subNotifEvents,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotificationDestination *string `json:"notificationDestination,omitempty"`
	// Set to true by the AF to request the NEF to send a test notification as defined in clause 5.2.5.3 of 3GPP TS 29.122. Set to false or omitted otherwise.
	RequestTestNotification *bool               `json:"requestTestNotification,omitempty"`
	WebsockNotifConfig      *WebsockNotifConfig `json:"websockNotifConfig,omitempty"`
	// Represents configuration parameters for V2X communications over PC5 reference point.
	ParamOverPc5 *string `json:"paramOverPc5,omitempty"`
	// Represents configuration parameters for V2X communications over Uu reference point.
	ParamOverUu *string `json:"paramOverUu,omitempty"`
	// Represents the service parameters for 5G ProSe direct discovery.
	ParamForProSeDd *string `json:"paramForProSeDd,omitempty"`
	// Represents the service parameters for 5G ProSe direct communications.
	ParamForProSeDc *string `json:"paramForProSeDc,omitempty"`
	// Represents the service parameters for 5G ProSe UE-to-network relay UE.
	ParamForProSeU2NRelUe *string `json:"paramForProSeU2NRelUe,omitempty"`
	// Represents the service parameters for 5G ProSe Remate UE.
	ParamForProSeRemUe *string `json:"paramForProSeRemUe,omitempty"`
	// Contains the service parameter used to guide the URSP.
	UrspGuidance []UrspRuleRequest `json:"urspGuidance,omitempty"`
	// String uniquely identifying MTC provider information.
	MtcProviderId *string `json:"mtcProviderId,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SuppFeat *string `json:"suppFeat,omitempty"`
}

// NewServiceParameterData instantiates a new ServiceParameterData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceParameterData() *ServiceParameterData {
	this := ServiceParameterData{}
	return &this
}

// NewServiceParameterDataWithDefaults instantiates a new ServiceParameterData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceParameterDataWithDefaults() *ServiceParameterData {
	this := ServiceParameterData{}
	return &this
}

// GetAfServiceId returns the AfServiceId field value if set, zero value otherwise.
func (o *ServiceParameterData) GetAfServiceId() string {
	if o == nil || IsNil(o.AfServiceId) {
		var ret string
		return ret
	}
	return *o.AfServiceId
}

// GetAfServiceIdOk returns a tuple with the AfServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetAfServiceIdOk() (*string, bool) {
	if o == nil || IsNil(o.AfServiceId) {
		return nil, false
	}
	return o.AfServiceId, true
}

// HasAfServiceId returns a boolean if a field has been set.
func (o *ServiceParameterData) HasAfServiceId() bool {
	if o != nil && !IsNil(o.AfServiceId) {
		return true
	}

	return false
}

// SetAfServiceId gets a reference to the given string and assigns it to the AfServiceId field.
func (o *ServiceParameterData) SetAfServiceId(v string) {
	o.AfServiceId = &v
}

// GetAppId returns the AppId field value if set, zero value otherwise.
func (o *ServiceParameterData) GetAppId() string {
	if o == nil || IsNil(o.AppId) {
		var ret string
		return ret
	}
	return *o.AppId
}

// GetAppIdOk returns a tuple with the AppId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetAppIdOk() (*string, bool) {
	if o == nil || IsNil(o.AppId) {
		return nil, false
	}
	return o.AppId, true
}

// HasAppId returns a boolean if a field has been set.
func (o *ServiceParameterData) HasAppId() bool {
	if o != nil && !IsNil(o.AppId) {
		return true
	}

	return false
}

// SetAppId gets a reference to the given string and assigns it to the AppId field.
func (o *ServiceParameterData) SetAppId(v string) {
	o.AppId = &v
}

// GetDnn returns the Dnn field value if set, zero value otherwise.
func (o *ServiceParameterData) GetDnn() string {
	if o == nil || IsNil(o.Dnn) {
		var ret string
		return ret
	}
	return *o.Dnn
}

// GetDnnOk returns a tuple with the Dnn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetDnnOk() (*string, bool) {
	if o == nil || IsNil(o.Dnn) {
		return nil, false
	}
	return o.Dnn, true
}

// HasDnn returns a boolean if a field has been set.
func (o *ServiceParameterData) HasDnn() bool {
	if o != nil && !IsNil(o.Dnn) {
		return true
	}

	return false
}

// SetDnn gets a reference to the given string and assigns it to the Dnn field.
func (o *ServiceParameterData) SetDnn(v string) {
	o.Dnn = &v
}

// GetSnssai returns the Snssai field value if set, zero value otherwise.
func (o *ServiceParameterData) GetSnssai() Snssai {
	if o == nil || IsNil(o.Snssai) {
		var ret Snssai
		return ret
	}
	return *o.Snssai
}

// GetSnssaiOk returns a tuple with the Snssai field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetSnssaiOk() (*Snssai, bool) {
	if o == nil || IsNil(o.Snssai) {
		return nil, false
	}
	return o.Snssai, true
}

// HasSnssai returns a boolean if a field has been set.
func (o *ServiceParameterData) HasSnssai() bool {
	if o != nil && !IsNil(o.Snssai) {
		return true
	}

	return false
}

// SetSnssai gets a reference to the given Snssai and assigns it to the Snssai field.
func (o *ServiceParameterData) SetSnssai(v Snssai) {
	o.Snssai = &v
}

// GetExternalGroupId returns the ExternalGroupId field value if set, zero value otherwise.
func (o *ServiceParameterData) GetExternalGroupId() string {
	if o == nil || IsNil(o.ExternalGroupId) {
		var ret string
		return ret
	}
	return *o.ExternalGroupId
}

// GetExternalGroupIdOk returns a tuple with the ExternalGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetExternalGroupIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalGroupId) {
		return nil, false
	}
	return o.ExternalGroupId, true
}

// HasExternalGroupId returns a boolean if a field has been set.
func (o *ServiceParameterData) HasExternalGroupId() bool {
	if o != nil && !IsNil(o.ExternalGroupId) {
		return true
	}

	return false
}

// SetExternalGroupId gets a reference to the given string and assigns it to the ExternalGroupId field.
func (o *ServiceParameterData) SetExternalGroupId(v string) {
	o.ExternalGroupId = &v
}

// GetAnyUeInd returns the AnyUeInd field value if set, zero value otherwise.
func (o *ServiceParameterData) GetAnyUeInd() bool {
	if o == nil || IsNil(o.AnyUeInd) {
		var ret bool
		return ret
	}
	return *o.AnyUeInd
}

// GetAnyUeIndOk returns a tuple with the AnyUeInd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetAnyUeIndOk() (*bool, bool) {
	if o == nil || IsNil(o.AnyUeInd) {
		return nil, false
	}
	return o.AnyUeInd, true
}

// HasAnyUeInd returns a boolean if a field has been set.
func (o *ServiceParameterData) HasAnyUeInd() bool {
	if o != nil && !IsNil(o.AnyUeInd) {
		return true
	}

	return false
}

// SetAnyUeInd gets a reference to the given bool and assigns it to the AnyUeInd field.
func (o *ServiceParameterData) SetAnyUeInd(v bool) {
	o.AnyUeInd = &v
}

// GetGpsi returns the Gpsi field value if set, zero value otherwise.
func (o *ServiceParameterData) GetGpsi() string {
	if o == nil || IsNil(o.Gpsi) {
		var ret string
		return ret
	}
	return *o.Gpsi
}

// GetGpsiOk returns a tuple with the Gpsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetGpsiOk() (*string, bool) {
	if o == nil || IsNil(o.Gpsi) {
		return nil, false
	}
	return o.Gpsi, true
}

// HasGpsi returns a boolean if a field has been set.
func (o *ServiceParameterData) HasGpsi() bool {
	if o != nil && !IsNil(o.Gpsi) {
		return true
	}

	return false
}

// SetGpsi gets a reference to the given string and assigns it to the Gpsi field.
func (o *ServiceParameterData) SetGpsi(v string) {
	o.Gpsi = &v
}

// GetUeIpv4 returns the UeIpv4 field value if set, zero value otherwise.
func (o *ServiceParameterData) GetUeIpv4() string {
	if o == nil || IsNil(o.UeIpv4) {
		var ret string
		return ret
	}
	return *o.UeIpv4
}

// GetUeIpv4Ok returns a tuple with the UeIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetUeIpv4Ok() (*string, bool) {
	if o == nil || IsNil(o.UeIpv4) {
		return nil, false
	}
	return o.UeIpv4, true
}

// HasUeIpv4 returns a boolean if a field has been set.
func (o *ServiceParameterData) HasUeIpv4() bool {
	if o != nil && !IsNil(o.UeIpv4) {
		return true
	}

	return false
}

// SetUeIpv4 gets a reference to the given string and assigns it to the UeIpv4 field.
func (o *ServiceParameterData) SetUeIpv4(v string) {
	o.UeIpv4 = &v
}

// GetUeIpv6 returns the UeIpv6 field value if set, zero value otherwise.
func (o *ServiceParameterData) GetUeIpv6() Ipv6Addr {
	if o == nil || IsNil(o.UeIpv6) {
		var ret Ipv6Addr
		return ret
	}
	return *o.UeIpv6
}

// GetUeIpv6Ok returns a tuple with the UeIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetUeIpv6Ok() (*Ipv6Addr, bool) {
	if o == nil || IsNil(o.UeIpv6) {
		return nil, false
	}
	return o.UeIpv6, true
}

// HasUeIpv6 returns a boolean if a field has been set.
func (o *ServiceParameterData) HasUeIpv6() bool {
	if o != nil && !IsNil(o.UeIpv6) {
		return true
	}

	return false
}

// SetUeIpv6 gets a reference to the given Ipv6Addr and assigns it to the UeIpv6 field.
func (o *ServiceParameterData) SetUeIpv6(v Ipv6Addr) {
	o.UeIpv6 = &v
}

// GetUeMac returns the UeMac field value if set, zero value otherwise.
func (o *ServiceParameterData) GetUeMac() string {
	if o == nil || IsNil(o.UeMac) {
		var ret string
		return ret
	}
	return *o.UeMac
}

// GetUeMacOk returns a tuple with the UeMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetUeMacOk() (*string, bool) {
	if o == nil || IsNil(o.UeMac) {
		return nil, false
	}
	return o.UeMac, true
}

// HasUeMac returns a boolean if a field has been set.
func (o *ServiceParameterData) HasUeMac() bool {
	if o != nil && !IsNil(o.UeMac) {
		return true
	}

	return false
}

// SetUeMac gets a reference to the given string and assigns it to the UeMac field.
func (o *ServiceParameterData) SetUeMac(v string) {
	o.UeMac = &v
}

// GetSelf returns the Self field value if set, zero value otherwise.
func (o *ServiceParameterData) GetSelf() string {
	if o == nil || IsNil(o.Self) {
		var ret string
		return ret
	}
	return *o.Self
}

// GetSelfOk returns a tuple with the Self field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetSelfOk() (*string, bool) {
	if o == nil || IsNil(o.Self) {
		return nil, false
	}
	return o.Self, true
}

// HasSelf returns a boolean if a field has been set.
func (o *ServiceParameterData) HasSelf() bool {
	if o != nil && !IsNil(o.Self) {
		return true
	}

	return false
}

// SetSelf gets a reference to the given string and assigns it to the Self field.
func (o *ServiceParameterData) SetSelf(v string) {
	o.Self = &v
}

// GetSubNotifEvents returns the SubNotifEvents field value if set, zero value otherwise.
func (o *ServiceParameterData) GetSubNotifEvents() []Event {
	if o == nil || IsNil(o.SubNotifEvents) {
		var ret []Event
		return ret
	}
	return o.SubNotifEvents
}

// GetSubNotifEventsOk returns a tuple with the SubNotifEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetSubNotifEventsOk() ([]Event, bool) {
	if o == nil || IsNil(o.SubNotifEvents) {
		return nil, false
	}
	return o.SubNotifEvents, true
}

// HasSubNotifEvents returns a boolean if a field has been set.
func (o *ServiceParameterData) HasSubNotifEvents() bool {
	if o != nil && !IsNil(o.SubNotifEvents) {
		return true
	}

	return false
}

// SetSubNotifEvents gets a reference to the given []Event and assigns it to the SubNotifEvents field.
func (o *ServiceParameterData) SetSubNotifEvents(v []Event) {
	o.SubNotifEvents = v
}

// GetNotificationDestination returns the NotificationDestination field value if set, zero value otherwise.
func (o *ServiceParameterData) GetNotificationDestination() string {
	if o == nil || IsNil(o.NotificationDestination) {
		var ret string
		return ret
	}
	return *o.NotificationDestination
}

// GetNotificationDestinationOk returns a tuple with the NotificationDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetNotificationDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationDestination) {
		return nil, false
	}
	return o.NotificationDestination, true
}

// HasNotificationDestination returns a boolean if a field has been set.
func (o *ServiceParameterData) HasNotificationDestination() bool {
	if o != nil && !IsNil(o.NotificationDestination) {
		return true
	}

	return false
}

// SetNotificationDestination gets a reference to the given string and assigns it to the NotificationDestination field.
func (o *ServiceParameterData) SetNotificationDestination(v string) {
	o.NotificationDestination = &v
}

// GetRequestTestNotification returns the RequestTestNotification field value if set, zero value otherwise.
func (o *ServiceParameterData) GetRequestTestNotification() bool {
	if o == nil || IsNil(o.RequestTestNotification) {
		var ret bool
		return ret
	}
	return *o.RequestTestNotification
}

// GetRequestTestNotificationOk returns a tuple with the RequestTestNotification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetRequestTestNotificationOk() (*bool, bool) {
	if o == nil || IsNil(o.RequestTestNotification) {
		return nil, false
	}
	return o.RequestTestNotification, true
}

// HasRequestTestNotification returns a boolean if a field has been set.
func (o *ServiceParameterData) HasRequestTestNotification() bool {
	if o != nil && !IsNil(o.RequestTestNotification) {
		return true
	}

	return false
}

// SetRequestTestNotification gets a reference to the given bool and assigns it to the RequestTestNotification field.
func (o *ServiceParameterData) SetRequestTestNotification(v bool) {
	o.RequestTestNotification = &v
}

// GetWebsockNotifConfig returns the WebsockNotifConfig field value if set, zero value otherwise.
func (o *ServiceParameterData) GetWebsockNotifConfig() WebsockNotifConfig {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		var ret WebsockNotifConfig
		return ret
	}
	return *o.WebsockNotifConfig
}

// GetWebsockNotifConfigOk returns a tuple with the WebsockNotifConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetWebsockNotifConfigOk() (*WebsockNotifConfig, bool) {
	if o == nil || IsNil(o.WebsockNotifConfig) {
		return nil, false
	}
	return o.WebsockNotifConfig, true
}

// HasWebsockNotifConfig returns a boolean if a field has been set.
func (o *ServiceParameterData) HasWebsockNotifConfig() bool {
	if o != nil && !IsNil(o.WebsockNotifConfig) {
		return true
	}

	return false
}

// SetWebsockNotifConfig gets a reference to the given WebsockNotifConfig and assigns it to the WebsockNotifConfig field.
func (o *ServiceParameterData) SetWebsockNotifConfig(v WebsockNotifConfig) {
	o.WebsockNotifConfig = &v
}

// GetParamOverPc5 returns the ParamOverPc5 field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamOverPc5() string {
	if o == nil || IsNil(o.ParamOverPc5) {
		var ret string
		return ret
	}
	return *o.ParamOverPc5
}

// GetParamOverPc5Ok returns a tuple with the ParamOverPc5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamOverPc5Ok() (*string, bool) {
	if o == nil || IsNil(o.ParamOverPc5) {
		return nil, false
	}
	return o.ParamOverPc5, true
}

// HasParamOverPc5 returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamOverPc5() bool {
	if o != nil && !IsNil(o.ParamOverPc5) {
		return true
	}

	return false
}

// SetParamOverPc5 gets a reference to the given string and assigns it to the ParamOverPc5 field.
func (o *ServiceParameterData) SetParamOverPc5(v string) {
	o.ParamOverPc5 = &v
}

// GetParamOverUu returns the ParamOverUu field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamOverUu() string {
	if o == nil || IsNil(o.ParamOverUu) {
		var ret string
		return ret
	}
	return *o.ParamOverUu
}

// GetParamOverUuOk returns a tuple with the ParamOverUu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamOverUuOk() (*string, bool) {
	if o == nil || IsNil(o.ParamOverUu) {
		return nil, false
	}
	return o.ParamOverUu, true
}

// HasParamOverUu returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamOverUu() bool {
	if o != nil && !IsNil(o.ParamOverUu) {
		return true
	}

	return false
}

// SetParamOverUu gets a reference to the given string and assigns it to the ParamOverUu field.
func (o *ServiceParameterData) SetParamOverUu(v string) {
	o.ParamOverUu = &v
}

// GetParamForProSeDd returns the ParamForProSeDd field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamForProSeDd() string {
	if o == nil || IsNil(o.ParamForProSeDd) {
		var ret string
		return ret
	}
	return *o.ParamForProSeDd
}

// GetParamForProSeDdOk returns a tuple with the ParamForProSeDd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamForProSeDdOk() (*string, bool) {
	if o == nil || IsNil(o.ParamForProSeDd) {
		return nil, false
	}
	return o.ParamForProSeDd, true
}

// HasParamForProSeDd returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamForProSeDd() bool {
	if o != nil && !IsNil(o.ParamForProSeDd) {
		return true
	}

	return false
}

// SetParamForProSeDd gets a reference to the given string and assigns it to the ParamForProSeDd field.
func (o *ServiceParameterData) SetParamForProSeDd(v string) {
	o.ParamForProSeDd = &v
}

// GetParamForProSeDc returns the ParamForProSeDc field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamForProSeDc() string {
	if o == nil || IsNil(o.ParamForProSeDc) {
		var ret string
		return ret
	}
	return *o.ParamForProSeDc
}

// GetParamForProSeDcOk returns a tuple with the ParamForProSeDc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamForProSeDcOk() (*string, bool) {
	if o == nil || IsNil(o.ParamForProSeDc) {
		return nil, false
	}
	return o.ParamForProSeDc, true
}

// HasParamForProSeDc returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamForProSeDc() bool {
	if o != nil && !IsNil(o.ParamForProSeDc) {
		return true
	}

	return false
}

// SetParamForProSeDc gets a reference to the given string and assigns it to the ParamForProSeDc field.
func (o *ServiceParameterData) SetParamForProSeDc(v string) {
	o.ParamForProSeDc = &v
}

// GetParamForProSeU2NRelUe returns the ParamForProSeU2NRelUe field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamForProSeU2NRelUe() string {
	if o == nil || IsNil(o.ParamForProSeU2NRelUe) {
		var ret string
		return ret
	}
	return *o.ParamForProSeU2NRelUe
}

// GetParamForProSeU2NRelUeOk returns a tuple with the ParamForProSeU2NRelUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamForProSeU2NRelUeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamForProSeU2NRelUe) {
		return nil, false
	}
	return o.ParamForProSeU2NRelUe, true
}

// HasParamForProSeU2NRelUe returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamForProSeU2NRelUe() bool {
	if o != nil && !IsNil(o.ParamForProSeU2NRelUe) {
		return true
	}

	return false
}

// SetParamForProSeU2NRelUe gets a reference to the given string and assigns it to the ParamForProSeU2NRelUe field.
func (o *ServiceParameterData) SetParamForProSeU2NRelUe(v string) {
	o.ParamForProSeU2NRelUe = &v
}

// GetParamForProSeRemUe returns the ParamForProSeRemUe field value if set, zero value otherwise.
func (o *ServiceParameterData) GetParamForProSeRemUe() string {
	if o == nil || IsNil(o.ParamForProSeRemUe) {
		var ret string
		return ret
	}
	return *o.ParamForProSeRemUe
}

// GetParamForProSeRemUeOk returns a tuple with the ParamForProSeRemUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetParamForProSeRemUeOk() (*string, bool) {
	if o == nil || IsNil(o.ParamForProSeRemUe) {
		return nil, false
	}
	return o.ParamForProSeRemUe, true
}

// HasParamForProSeRemUe returns a boolean if a field has been set.
func (o *ServiceParameterData) HasParamForProSeRemUe() bool {
	if o != nil && !IsNil(o.ParamForProSeRemUe) {
		return true
	}

	return false
}

// SetParamForProSeRemUe gets a reference to the given string and assigns it to the ParamForProSeRemUe field.
func (o *ServiceParameterData) SetParamForProSeRemUe(v string) {
	o.ParamForProSeRemUe = &v
}

// GetUrspGuidance returns the UrspGuidance field value if set, zero value otherwise.
func (o *ServiceParameterData) GetUrspGuidance() []UrspRuleRequest {
	if o == nil || IsNil(o.UrspGuidance) {
		var ret []UrspRuleRequest
		return ret
	}
	return o.UrspGuidance
}

// GetUrspGuidanceOk returns a tuple with the UrspGuidance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetUrspGuidanceOk() ([]UrspRuleRequest, bool) {
	if o == nil || IsNil(o.UrspGuidance) {
		return nil, false
	}
	return o.UrspGuidance, true
}

// HasUrspGuidance returns a boolean if a field has been set.
func (o *ServiceParameterData) HasUrspGuidance() bool {
	if o != nil && !IsNil(o.UrspGuidance) {
		return true
	}

	return false
}

// SetUrspGuidance gets a reference to the given []UrspRuleRequest and assigns it to the UrspGuidance field.
func (o *ServiceParameterData) SetUrspGuidance(v []UrspRuleRequest) {
	o.UrspGuidance = v
}

// GetMtcProviderId returns the MtcProviderId field value if set, zero value otherwise.
func (o *ServiceParameterData) GetMtcProviderId() string {
	if o == nil || IsNil(o.MtcProviderId) {
		var ret string
		return ret
	}
	return *o.MtcProviderId
}

// GetMtcProviderIdOk returns a tuple with the MtcProviderId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetMtcProviderIdOk() (*string, bool) {
	if o == nil || IsNil(o.MtcProviderId) {
		return nil, false
	}
	return o.MtcProviderId, true
}

// HasMtcProviderId returns a boolean if a field has been set.
func (o *ServiceParameterData) HasMtcProviderId() bool {
	if o != nil && !IsNil(o.MtcProviderId) {
		return true
	}

	return false
}

// SetMtcProviderId gets a reference to the given string and assigns it to the MtcProviderId field.
func (o *ServiceParameterData) SetMtcProviderId(v string) {
	o.MtcProviderId = &v
}

// GetSuppFeat returns the SuppFeat field value if set, zero value otherwise.
func (o *ServiceParameterData) GetSuppFeat() string {
	if o == nil || IsNil(o.SuppFeat) {
		var ret string
		return ret
	}
	return *o.SuppFeat
}

// GetSuppFeatOk returns a tuple with the SuppFeat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterData) GetSuppFeatOk() (*string, bool) {
	if o == nil || IsNil(o.SuppFeat) {
		return nil, false
	}
	return o.SuppFeat, true
}

// HasSuppFeat returns a boolean if a field has been set.
func (o *ServiceParameterData) HasSuppFeat() bool {
	if o != nil && !IsNil(o.SuppFeat) {
		return true
	}

	return false
}

// SetSuppFeat gets a reference to the given string and assigns it to the SuppFeat field.
func (o *ServiceParameterData) SetSuppFeat(v string) {
	o.SuppFeat = &v
}

func (o ServiceParameterData) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceParameterData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AfServiceId) {
		toSerialize["afServiceId"] = o.AfServiceId
	}
	if !IsNil(o.AppId) {
		toSerialize["appId"] = o.AppId
	}
	if !IsNil(o.Dnn) {
		toSerialize["dnn"] = o.Dnn
	}
	if !IsNil(o.Snssai) {
		toSerialize["snssai"] = o.Snssai
	}
	if !IsNil(o.ExternalGroupId) {
		toSerialize["externalGroupId"] = o.ExternalGroupId
	}
	if !IsNil(o.AnyUeInd) {
		toSerialize["anyUeInd"] = o.AnyUeInd
	}
	if !IsNil(o.Gpsi) {
		toSerialize["gpsi"] = o.Gpsi
	}
	if !IsNil(o.UeIpv4) {
		toSerialize["ueIpv4"] = o.UeIpv4
	}
	if !IsNil(o.UeIpv6) {
		toSerialize["ueIpv6"] = o.UeIpv6
	}
	if !IsNil(o.UeMac) {
		toSerialize["ueMac"] = o.UeMac
	}
	if !IsNil(o.Self) {
		toSerialize["self"] = o.Self
	}
	if !IsNil(o.SubNotifEvents) {
		toSerialize["subNotifEvents"] = o.SubNotifEvents
	}
	if !IsNil(o.NotificationDestination) {
		toSerialize["notificationDestination"] = o.NotificationDestination
	}
	if !IsNil(o.RequestTestNotification) {
		toSerialize["requestTestNotification"] = o.RequestTestNotification
	}
	if !IsNil(o.WebsockNotifConfig) {
		toSerialize["websockNotifConfig"] = o.WebsockNotifConfig
	}
	if !IsNil(o.ParamOverPc5) {
		toSerialize["paramOverPc5"] = o.ParamOverPc5
	}
	if !IsNil(o.ParamOverUu) {
		toSerialize["paramOverUu"] = o.ParamOverUu
	}
	if !IsNil(o.ParamForProSeDd) {
		toSerialize["paramForProSeDd"] = o.ParamForProSeDd
	}
	if !IsNil(o.ParamForProSeDc) {
		toSerialize["paramForProSeDc"] = o.ParamForProSeDc
	}
	if !IsNil(o.ParamForProSeU2NRelUe) {
		toSerialize["paramForProSeU2NRelUe"] = o.ParamForProSeU2NRelUe
	}
	if !IsNil(o.ParamForProSeRemUe) {
		toSerialize["paramForProSeRemUe"] = o.ParamForProSeRemUe
	}
	if !IsNil(o.UrspGuidance) {
		toSerialize["urspGuidance"] = o.UrspGuidance
	}
	if !IsNil(o.MtcProviderId) {
		toSerialize["mtcProviderId"] = o.MtcProviderId
	}
	if !IsNil(o.SuppFeat) {
		toSerialize["suppFeat"] = o.SuppFeat
	}
	return toSerialize, nil
}

type NullableServiceParameterData struct {
	value *ServiceParameterData
	isSet bool
}

func (v NullableServiceParameterData) Get() *ServiceParameterData {
	return v.value
}

func (v *NullableServiceParameterData) Set(val *ServiceParameterData) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceParameterData) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceParameterData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceParameterData(val *ServiceParameterData) *NullableServiceParameterData {
	return &NullableServiceParameterData{value: val, isSet: true}
}

func (v NullableServiceParameterData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceParameterData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
