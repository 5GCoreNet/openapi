/*
3gpp-service-parameter

API for AF service paramter   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ServiceParameter

import (
	"encoding/json"
)

// checks if the ServiceParameterDataPatch type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServiceParameterDataPatch{}

// ServiceParameterDataPatch Represents the parameters to request the modification of a service parameter subscription resource.
type ServiceParameterDataPatch struct {
	// Represents the same as the ParameterOverPc5 data type but with the nullable:true property.
	ParamOverPc5 NullableString `json:"paramOverPc5,omitempty"`
	// Represents the same as the ParameterOverUu data type but with the nullable:true property.
	ParamOverUu NullableString `json:"paramOverUu,omitempty"`
	// This data type is defined in the same way as the ParamForProSeDd data type, but with the OpenAPI nullable property set to true.
	ParamForProSeDd NullableString `json:"paramForProSeDd,omitempty"`
	// This data type is defined in the same way as the ParamForProSeDc data type, but with the OpenAPI nullable property set to true.
	ParamForProSeDc NullableString `json:"paramForProSeDc,omitempty"`
	// This data type is defined in the same way as the ParamForProSeU2NRelay data type, but with the OpenAPI nullable property set to true.
	ParamForProSeU2NRelUe NullableString `json:"paramForProSeU2NRelUe,omitempty"`
	// This data type is defined in the same way as the ParamForProSeRemUe data type, but with the OpenAPI nullable property set to true.
	ParamForProSeRemUe NullableString `json:"paramForProSeRemUe,omitempty"`
	// Contains the service parameter used to guide the URSP.
	UrspGuidance   []UrspRuleRequest `json:"urspGuidance,omitempty"`
	SubNotifEvents []Event           `json:"subNotifEvents,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotificationDestination *string `json:"notificationDestination,omitempty"`
}

// NewServiceParameterDataPatch instantiates a new ServiceParameterDataPatch object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceParameterDataPatch() *ServiceParameterDataPatch {
	this := ServiceParameterDataPatch{}
	return &this
}

// NewServiceParameterDataPatchWithDefaults instantiates a new ServiceParameterDataPatch object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceParameterDataPatchWithDefaults() *ServiceParameterDataPatch {
	this := ServiceParameterDataPatch{}
	return &this
}

// GetParamOverPc5 returns the ParamOverPc5 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamOverPc5() string {
	if o == nil || IsNil(o.ParamOverPc5.Get()) {
		var ret string
		return ret
	}
	return *o.ParamOverPc5.Get()
}

// GetParamOverPc5Ok returns a tuple with the ParamOverPc5 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamOverPc5Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamOverPc5.Get(), o.ParamOverPc5.IsSet()
}

// HasParamOverPc5 returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamOverPc5() bool {
	if o != nil && o.ParamOverPc5.IsSet() {
		return true
	}

	return false
}

// SetParamOverPc5 gets a reference to the given NullableString and assigns it to the ParamOverPc5 field.
func (o *ServiceParameterDataPatch) SetParamOverPc5(v string) {
	o.ParamOverPc5.Set(&v)
}

// SetParamOverPc5Nil sets the value for ParamOverPc5 to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamOverPc5Nil() {
	o.ParamOverPc5.Set(nil)
}

// UnsetParamOverPc5 ensures that no value is present for ParamOverPc5, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamOverPc5() {
	o.ParamOverPc5.Unset()
}

// GetParamOverUu returns the ParamOverUu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamOverUu() string {
	if o == nil || IsNil(o.ParamOverUu.Get()) {
		var ret string
		return ret
	}
	return *o.ParamOverUu.Get()
}

// GetParamOverUuOk returns a tuple with the ParamOverUu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamOverUuOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamOverUu.Get(), o.ParamOverUu.IsSet()
}

// HasParamOverUu returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamOverUu() bool {
	if o != nil && o.ParamOverUu.IsSet() {
		return true
	}

	return false
}

// SetParamOverUu gets a reference to the given NullableString and assigns it to the ParamOverUu field.
func (o *ServiceParameterDataPatch) SetParamOverUu(v string) {
	o.ParamOverUu.Set(&v)
}

// SetParamOverUuNil sets the value for ParamOverUu to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamOverUuNil() {
	o.ParamOverUu.Set(nil)
}

// UnsetParamOverUu ensures that no value is present for ParamOverUu, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamOverUu() {
	o.ParamOverUu.Unset()
}

// GetParamForProSeDd returns the ParamForProSeDd field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamForProSeDd() string {
	if o == nil || IsNil(o.ParamForProSeDd.Get()) {
		var ret string
		return ret
	}
	return *o.ParamForProSeDd.Get()
}

// GetParamForProSeDdOk returns a tuple with the ParamForProSeDd field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamForProSeDdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamForProSeDd.Get(), o.ParamForProSeDd.IsSet()
}

// HasParamForProSeDd returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamForProSeDd() bool {
	if o != nil && o.ParamForProSeDd.IsSet() {
		return true
	}

	return false
}

// SetParamForProSeDd gets a reference to the given NullableString and assigns it to the ParamForProSeDd field.
func (o *ServiceParameterDataPatch) SetParamForProSeDd(v string) {
	o.ParamForProSeDd.Set(&v)
}

// SetParamForProSeDdNil sets the value for ParamForProSeDd to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamForProSeDdNil() {
	o.ParamForProSeDd.Set(nil)
}

// UnsetParamForProSeDd ensures that no value is present for ParamForProSeDd, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamForProSeDd() {
	o.ParamForProSeDd.Unset()
}

// GetParamForProSeDc returns the ParamForProSeDc field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamForProSeDc() string {
	if o == nil || IsNil(o.ParamForProSeDc.Get()) {
		var ret string
		return ret
	}
	return *o.ParamForProSeDc.Get()
}

// GetParamForProSeDcOk returns a tuple with the ParamForProSeDc field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamForProSeDcOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamForProSeDc.Get(), o.ParamForProSeDc.IsSet()
}

// HasParamForProSeDc returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamForProSeDc() bool {
	if o != nil && o.ParamForProSeDc.IsSet() {
		return true
	}

	return false
}

// SetParamForProSeDc gets a reference to the given NullableString and assigns it to the ParamForProSeDc field.
func (o *ServiceParameterDataPatch) SetParamForProSeDc(v string) {
	o.ParamForProSeDc.Set(&v)
}

// SetParamForProSeDcNil sets the value for ParamForProSeDc to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamForProSeDcNil() {
	o.ParamForProSeDc.Set(nil)
}

// UnsetParamForProSeDc ensures that no value is present for ParamForProSeDc, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamForProSeDc() {
	o.ParamForProSeDc.Unset()
}

// GetParamForProSeU2NRelUe returns the ParamForProSeU2NRelUe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamForProSeU2NRelUe() string {
	if o == nil || IsNil(o.ParamForProSeU2NRelUe.Get()) {
		var ret string
		return ret
	}
	return *o.ParamForProSeU2NRelUe.Get()
}

// GetParamForProSeU2NRelUeOk returns a tuple with the ParamForProSeU2NRelUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamForProSeU2NRelUeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamForProSeU2NRelUe.Get(), o.ParamForProSeU2NRelUe.IsSet()
}

// HasParamForProSeU2NRelUe returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamForProSeU2NRelUe() bool {
	if o != nil && o.ParamForProSeU2NRelUe.IsSet() {
		return true
	}

	return false
}

// SetParamForProSeU2NRelUe gets a reference to the given NullableString and assigns it to the ParamForProSeU2NRelUe field.
func (o *ServiceParameterDataPatch) SetParamForProSeU2NRelUe(v string) {
	o.ParamForProSeU2NRelUe.Set(&v)
}

// SetParamForProSeU2NRelUeNil sets the value for ParamForProSeU2NRelUe to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamForProSeU2NRelUeNil() {
	o.ParamForProSeU2NRelUe.Set(nil)
}

// UnsetParamForProSeU2NRelUe ensures that no value is present for ParamForProSeU2NRelUe, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamForProSeU2NRelUe() {
	o.ParamForProSeU2NRelUe.Unset()
}

// GetParamForProSeRemUe returns the ParamForProSeRemUe field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetParamForProSeRemUe() string {
	if o == nil || IsNil(o.ParamForProSeRemUe.Get()) {
		var ret string
		return ret
	}
	return *o.ParamForProSeRemUe.Get()
}

// GetParamForProSeRemUeOk returns a tuple with the ParamForProSeRemUe field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetParamForProSeRemUeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParamForProSeRemUe.Get(), o.ParamForProSeRemUe.IsSet()
}

// HasParamForProSeRemUe returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasParamForProSeRemUe() bool {
	if o != nil && o.ParamForProSeRemUe.IsSet() {
		return true
	}

	return false
}

// SetParamForProSeRemUe gets a reference to the given NullableString and assigns it to the ParamForProSeRemUe field.
func (o *ServiceParameterDataPatch) SetParamForProSeRemUe(v string) {
	o.ParamForProSeRemUe.Set(&v)
}

// SetParamForProSeRemUeNil sets the value for ParamForProSeRemUe to be an explicit nil
func (o *ServiceParameterDataPatch) SetParamForProSeRemUeNil() {
	o.ParamForProSeRemUe.Set(nil)
}

// UnsetParamForProSeRemUe ensures that no value is present for ParamForProSeRemUe, not even an explicit nil
func (o *ServiceParameterDataPatch) UnsetParamForProSeRemUe() {
	o.ParamForProSeRemUe.Unset()
}

// GetUrspGuidance returns the UrspGuidance field value if set, zero value otherwise.
func (o *ServiceParameterDataPatch) GetUrspGuidance() []UrspRuleRequest {
	if o == nil || IsNil(o.UrspGuidance) {
		var ret []UrspRuleRequest
		return ret
	}
	return o.UrspGuidance
}

// GetUrspGuidanceOk returns a tuple with the UrspGuidance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterDataPatch) GetUrspGuidanceOk() ([]UrspRuleRequest, bool) {
	if o == nil || IsNil(o.UrspGuidance) {
		return nil, false
	}
	return o.UrspGuidance, true
}

// HasUrspGuidance returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasUrspGuidance() bool {
	if o != nil && !IsNil(o.UrspGuidance) {
		return true
	}

	return false
}

// SetUrspGuidance gets a reference to the given []UrspRuleRequest and assigns it to the UrspGuidance field.
func (o *ServiceParameterDataPatch) SetUrspGuidance(v []UrspRuleRequest) {
	o.UrspGuidance = v
}

// GetSubNotifEvents returns the SubNotifEvents field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ServiceParameterDataPatch) GetSubNotifEvents() []Event {
	if o == nil {
		var ret []Event
		return ret
	}
	return o.SubNotifEvents
}

// GetSubNotifEventsOk returns a tuple with the SubNotifEvents field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ServiceParameterDataPatch) GetSubNotifEventsOk() ([]Event, bool) {
	if o == nil || IsNil(o.SubNotifEvents) {
		return nil, false
	}
	return o.SubNotifEvents, true
}

// HasSubNotifEvents returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasSubNotifEvents() bool {
	if o != nil && IsNil(o.SubNotifEvents) {
		return true
	}

	return false
}

// SetSubNotifEvents gets a reference to the given []Event and assigns it to the SubNotifEvents field.
func (o *ServiceParameterDataPatch) SetSubNotifEvents(v []Event) {
	o.SubNotifEvents = v
}

// GetNotificationDestination returns the NotificationDestination field value if set, zero value otherwise.
func (o *ServiceParameterDataPatch) GetNotificationDestination() string {
	if o == nil || IsNil(o.NotificationDestination) {
		var ret string
		return ret
	}
	return *o.NotificationDestination
}

// GetNotificationDestinationOk returns a tuple with the NotificationDestination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceParameterDataPatch) GetNotificationDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.NotificationDestination) {
		return nil, false
	}
	return o.NotificationDestination, true
}

// HasNotificationDestination returns a boolean if a field has been set.
func (o *ServiceParameterDataPatch) HasNotificationDestination() bool {
	if o != nil && !IsNil(o.NotificationDestination) {
		return true
	}

	return false
}

// SetNotificationDestination gets a reference to the given string and assigns it to the NotificationDestination field.
func (o *ServiceParameterDataPatch) SetNotificationDestination(v string) {
	o.NotificationDestination = &v
}

func (o ServiceParameterDataPatch) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServiceParameterDataPatch) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.ParamOverPc5.IsSet() {
		toSerialize["paramOverPc5"] = o.ParamOverPc5.Get()
	}
	if o.ParamOverUu.IsSet() {
		toSerialize["paramOverUu"] = o.ParamOverUu.Get()
	}
	if o.ParamForProSeDd.IsSet() {
		toSerialize["paramForProSeDd"] = o.ParamForProSeDd.Get()
	}
	if o.ParamForProSeDc.IsSet() {
		toSerialize["paramForProSeDc"] = o.ParamForProSeDc.Get()
	}
	if o.ParamForProSeU2NRelUe.IsSet() {
		toSerialize["paramForProSeU2NRelUe"] = o.ParamForProSeU2NRelUe.Get()
	}
	if o.ParamForProSeRemUe.IsSet() {
		toSerialize["paramForProSeRemUe"] = o.ParamForProSeRemUe.Get()
	}
	if !IsNil(o.UrspGuidance) {
		toSerialize["urspGuidance"] = o.UrspGuidance
	}
	if o.SubNotifEvents != nil {
		toSerialize["subNotifEvents"] = o.SubNotifEvents
	}
	if !IsNil(o.NotificationDestination) {
		toSerialize["notificationDestination"] = o.NotificationDestination
	}
	return toSerialize, nil
}

type NullableServiceParameterDataPatch struct {
	value *ServiceParameterDataPatch
	isSet bool
}

func (v NullableServiceParameterDataPatch) Get() *ServiceParameterDataPatch {
	return v.value
}

func (v *NullableServiceParameterDataPatch) Set(val *ServiceParameterDataPatch) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceParameterDataPatch) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceParameterDataPatch) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceParameterDataPatch(val *ServiceParameterDataPatch) *NullableServiceParameterDataPatch {
	return &NullableServiceParameterDataPatch{value: val, isSet: true}
}

func (v NullableServiceParameterDataPatch) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceParameterDataPatch) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
