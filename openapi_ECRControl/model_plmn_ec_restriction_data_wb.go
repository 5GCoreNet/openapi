/*
3gpp-ecr-control

API for enhanced converage restriction control.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_ECRControl

import (
	"encoding/json"
)

// checks if the PlmnEcRestrictionDataWb type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PlmnEcRestrictionDataWb{}

// PlmnEcRestrictionDataWb Indicates whether enhanced coverage mode is restricted or not for a PLMN ID.
type PlmnEcRestrictionDataWb struct {
	PlmnId        PlmnId               `json:"plmnId"`
	PlmnEcrDataWb *EcRestrictionDataWb `json:"plmnEcrDataWb,omitempty"`
}

// NewPlmnEcRestrictionDataWb instantiates a new PlmnEcRestrictionDataWb object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPlmnEcRestrictionDataWb(plmnId PlmnId) *PlmnEcRestrictionDataWb {
	this := PlmnEcRestrictionDataWb{}
	this.PlmnId = plmnId
	return &this
}

// NewPlmnEcRestrictionDataWbWithDefaults instantiates a new PlmnEcRestrictionDataWb object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPlmnEcRestrictionDataWbWithDefaults() *PlmnEcRestrictionDataWb {
	this := PlmnEcRestrictionDataWb{}
	return &this
}

// GetPlmnId returns the PlmnId field value
func (o *PlmnEcRestrictionDataWb) GetPlmnId() PlmnId {
	if o == nil {
		var ret PlmnId
		return ret
	}

	return o.PlmnId
}

// GetPlmnIdOk returns a tuple with the PlmnId field value
// and a boolean to check if the value has been set.
func (o *PlmnEcRestrictionDataWb) GetPlmnIdOk() (*PlmnId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlmnId, true
}

// SetPlmnId sets field value
func (o *PlmnEcRestrictionDataWb) SetPlmnId(v PlmnId) {
	o.PlmnId = v
}

// GetPlmnEcrDataWb returns the PlmnEcrDataWb field value if set, zero value otherwise.
func (o *PlmnEcRestrictionDataWb) GetPlmnEcrDataWb() EcRestrictionDataWb {
	if o == nil || IsNil(o.PlmnEcrDataWb) {
		var ret EcRestrictionDataWb
		return ret
	}
	return *o.PlmnEcrDataWb
}

// GetPlmnEcrDataWbOk returns a tuple with the PlmnEcrDataWb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PlmnEcRestrictionDataWb) GetPlmnEcrDataWbOk() (*EcRestrictionDataWb, bool) {
	if o == nil || IsNil(o.PlmnEcrDataWb) {
		return nil, false
	}
	return o.PlmnEcrDataWb, true
}

// HasPlmnEcrDataWb returns a boolean if a field has been set.
func (o *PlmnEcRestrictionDataWb) HasPlmnEcrDataWb() bool {
	if o != nil && !IsNil(o.PlmnEcrDataWb) {
		return true
	}

	return false
}

// SetPlmnEcrDataWb gets a reference to the given EcRestrictionDataWb and assigns it to the PlmnEcrDataWb field.
func (o *PlmnEcRestrictionDataWb) SetPlmnEcrDataWb(v EcRestrictionDataWb) {
	o.PlmnEcrDataWb = &v
}

func (o PlmnEcRestrictionDataWb) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PlmnEcRestrictionDataWb) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["plmnId"] = o.PlmnId
	if !IsNil(o.PlmnEcrDataWb) {
		toSerialize["plmnEcrDataWb"] = o.PlmnEcrDataWb
	}
	return toSerialize, nil
}

type NullablePlmnEcRestrictionDataWb struct {
	value *PlmnEcRestrictionDataWb
	isSet bool
}

func (v NullablePlmnEcRestrictionDataWb) Get() *PlmnEcRestrictionDataWb {
	return v.value
}

func (v *NullablePlmnEcRestrictionDataWb) Set(val *PlmnEcRestrictionDataWb) {
	v.value = val
	v.isSet = true
}

func (v NullablePlmnEcRestrictionDataWb) IsSet() bool {
	return v.isSet
}

func (v *NullablePlmnEcRestrictionDataWb) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePlmnEcRestrictionDataWb(val *PlmnEcRestrictionDataWb) *NullablePlmnEcRestrictionDataWb {
	return &NullablePlmnEcRestrictionDataWb{value: val, isSet: true}
}

func (v NullablePlmnEcRestrictionDataWb) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePlmnEcRestrictionDataWb) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
