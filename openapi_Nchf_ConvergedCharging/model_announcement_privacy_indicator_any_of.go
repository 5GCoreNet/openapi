/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"fmt"
)

// AnnouncementPrivacyIndicatorAnyOf the model 'AnnouncementPrivacyIndicatorAnyOf'
type AnnouncementPrivacyIndicatorAnyOf string

// List of AnnouncementPrivacyIndicator_anyOf
const (
	NOT_PRIVATE AnnouncementPrivacyIndicatorAnyOf = "NOT_PRIVATE"
	PRIVATE AnnouncementPrivacyIndicatorAnyOf = "PRIVATE"
)

// All allowed values of AnnouncementPrivacyIndicatorAnyOf enum
var AllowedAnnouncementPrivacyIndicatorAnyOfEnumValues = []AnnouncementPrivacyIndicatorAnyOf{
	"NOT_PRIVATE",
	"PRIVATE",
}

func (v *AnnouncementPrivacyIndicatorAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := AnnouncementPrivacyIndicatorAnyOf(value)
	for _, existing := range AllowedAnnouncementPrivacyIndicatorAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid AnnouncementPrivacyIndicatorAnyOf", value)
}

// NewAnnouncementPrivacyIndicatorAnyOfFromValue returns a pointer to a valid AnnouncementPrivacyIndicatorAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewAnnouncementPrivacyIndicatorAnyOfFromValue(v string) (*AnnouncementPrivacyIndicatorAnyOf, error) {
	ev := AnnouncementPrivacyIndicatorAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for AnnouncementPrivacyIndicatorAnyOf: valid values are %v", v, AllowedAnnouncementPrivacyIndicatorAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v AnnouncementPrivacyIndicatorAnyOf) IsValid() bool {
	for _, existing := range AllowedAnnouncementPrivacyIndicatorAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to AnnouncementPrivacyIndicator_anyOf value
func (v AnnouncementPrivacyIndicatorAnyOf) Ptr() *AnnouncementPrivacyIndicatorAnyOf {
	return &v
}

type NullableAnnouncementPrivacyIndicatorAnyOf struct {
	value *AnnouncementPrivacyIndicatorAnyOf
	isSet bool
}

func (v NullableAnnouncementPrivacyIndicatorAnyOf) Get() *AnnouncementPrivacyIndicatorAnyOf {
	return v.value
}

func (v *NullableAnnouncementPrivacyIndicatorAnyOf) Set(val *AnnouncementPrivacyIndicatorAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableAnnouncementPrivacyIndicatorAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableAnnouncementPrivacyIndicatorAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnnouncementPrivacyIndicatorAnyOf(val *AnnouncementPrivacyIndicatorAnyOf) *NullableAnnouncementPrivacyIndicatorAnyOf {
	return &NullableAnnouncementPrivacyIndicatorAnyOf{value: val, isSet: true}
}

func (v NullableAnnouncementPrivacyIndicatorAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnnouncementPrivacyIndicatorAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

