/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the TopologicalServiceArea type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TopologicalServiceArea{}

// TopologicalServiceArea struct for TopologicalServiceArea
type TopologicalServiceArea struct {
	CellIdList []int32 `json:"cellIdList,omitempty"`
	TrackingAreaIdList []Tai1 `json:"trackingAreaIdList,omitempty"`
	ServingPLMN *PlmnId1 `json:"servingPLMN,omitempty"`
}

// NewTopologicalServiceArea instantiates a new TopologicalServiceArea object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTopologicalServiceArea() *TopologicalServiceArea {
	this := TopologicalServiceArea{}
	return &this
}

// NewTopologicalServiceAreaWithDefaults instantiates a new TopologicalServiceArea object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTopologicalServiceAreaWithDefaults() *TopologicalServiceArea {
	this := TopologicalServiceArea{}
	return &this
}

// GetCellIdList returns the CellIdList field value if set, zero value otherwise.
func (o *TopologicalServiceArea) GetCellIdList() []int32 {
	if o == nil || isNil(o.CellIdList) {
		var ret []int32
		return ret
	}
	return o.CellIdList
}

// GetCellIdListOk returns a tuple with the CellIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopologicalServiceArea) GetCellIdListOk() ([]int32, bool) {
	if o == nil || isNil(o.CellIdList) {
		return nil, false
	}
	return o.CellIdList, true
}

// HasCellIdList returns a boolean if a field has been set.
func (o *TopologicalServiceArea) HasCellIdList() bool {
	if o != nil && !isNil(o.CellIdList) {
		return true
	}

	return false
}

// SetCellIdList gets a reference to the given []int32 and assigns it to the CellIdList field.
func (o *TopologicalServiceArea) SetCellIdList(v []int32) {
	o.CellIdList = v
}

// GetTrackingAreaIdList returns the TrackingAreaIdList field value if set, zero value otherwise.
func (o *TopologicalServiceArea) GetTrackingAreaIdList() []Tai1 {
	if o == nil || isNil(o.TrackingAreaIdList) {
		var ret []Tai1
		return ret
	}
	return o.TrackingAreaIdList
}

// GetTrackingAreaIdListOk returns a tuple with the TrackingAreaIdList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopologicalServiceArea) GetTrackingAreaIdListOk() ([]Tai1, bool) {
	if o == nil || isNil(o.TrackingAreaIdList) {
		return nil, false
	}
	return o.TrackingAreaIdList, true
}

// HasTrackingAreaIdList returns a boolean if a field has been set.
func (o *TopologicalServiceArea) HasTrackingAreaIdList() bool {
	if o != nil && !isNil(o.TrackingAreaIdList) {
		return true
	}

	return false
}

// SetTrackingAreaIdList gets a reference to the given []Tai1 and assigns it to the TrackingAreaIdList field.
func (o *TopologicalServiceArea) SetTrackingAreaIdList(v []Tai1) {
	o.TrackingAreaIdList = v
}

// GetServingPLMN returns the ServingPLMN field value if set, zero value otherwise.
func (o *TopologicalServiceArea) GetServingPLMN() PlmnId1 {
	if o == nil || isNil(o.ServingPLMN) {
		var ret PlmnId1
		return ret
	}
	return *o.ServingPLMN
}

// GetServingPLMNOk returns a tuple with the ServingPLMN field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TopologicalServiceArea) GetServingPLMNOk() (*PlmnId1, bool) {
	if o == nil || isNil(o.ServingPLMN) {
		return nil, false
	}
	return o.ServingPLMN, true
}

// HasServingPLMN returns a boolean if a field has been set.
func (o *TopologicalServiceArea) HasServingPLMN() bool {
	if o != nil && !isNil(o.ServingPLMN) {
		return true
	}

	return false
}

// SetServingPLMN gets a reference to the given PlmnId1 and assigns it to the ServingPLMN field.
func (o *TopologicalServiceArea) SetServingPLMN(v PlmnId1) {
	o.ServingPLMN = &v
}

func (o TopologicalServiceArea) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TopologicalServiceArea) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.CellIdList) {
		toSerialize["cellIdList"] = o.CellIdList
	}
	if !isNil(o.TrackingAreaIdList) {
		toSerialize["trackingAreaIdList"] = o.TrackingAreaIdList
	}
	if !isNil(o.ServingPLMN) {
		toSerialize["servingPLMN"] = o.ServingPLMN
	}
	return toSerialize, nil
}

type NullableTopologicalServiceArea struct {
	value *TopologicalServiceArea
	isSet bool
}

func (v NullableTopologicalServiceArea) Get() *TopologicalServiceArea {
	return v.value
}

func (v *NullableTopologicalServiceArea) Set(val *TopologicalServiceArea) {
	v.value = val
	v.isSet = true
}

func (v NullableTopologicalServiceArea) IsSet() bool {
	return v.isSet
}

func (v *NullableTopologicalServiceArea) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTopologicalServiceArea(val *TopologicalServiceArea) *NullableTopologicalServiceArea {
	return &NullableTopologicalServiceArea{value: val, isSet: true}
}

func (v NullableTopologicalServiceArea) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTopologicalServiceArea) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


