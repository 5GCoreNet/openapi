/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the ReauthorizationDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReauthorizationDetails{}

// ReauthorizationDetails struct for ReauthorizationDetails
type ReauthorizationDetails struct {
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
	ServiceId *int32 `json:"serviceId,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
	RatingGroup              *int32                    `json:"ratingGroup,omitempty"`
	QuotaManagementIndicator *QuotaManagementIndicator `json:"quotaManagementIndicator,omitempty"`
}

// NewReauthorizationDetails instantiates a new ReauthorizationDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReauthorizationDetails() *ReauthorizationDetails {
	this := ReauthorizationDetails{}
	return &this
}

// NewReauthorizationDetailsWithDefaults instantiates a new ReauthorizationDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReauthorizationDetailsWithDefaults() *ReauthorizationDetails {
	this := ReauthorizationDetails{}
	return &this
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *ReauthorizationDetails) GetServiceId() int32 {
	if o == nil || IsNil(o.ServiceId) {
		var ret int32
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReauthorizationDetails) GetServiceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServiceId) {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *ReauthorizationDetails) HasServiceId() bool {
	if o != nil && !IsNil(o.ServiceId) {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given int32 and assigns it to the ServiceId field.
func (o *ReauthorizationDetails) SetServiceId(v int32) {
	o.ServiceId = &v
}

// GetRatingGroup returns the RatingGroup field value if set, zero value otherwise.
func (o *ReauthorizationDetails) GetRatingGroup() int32 {
	if o == nil || IsNil(o.RatingGroup) {
		var ret int32
		return ret
	}
	return *o.RatingGroup
}

// GetRatingGroupOk returns a tuple with the RatingGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReauthorizationDetails) GetRatingGroupOk() (*int32, bool) {
	if o == nil || IsNil(o.RatingGroup) {
		return nil, false
	}
	return o.RatingGroup, true
}

// HasRatingGroup returns a boolean if a field has been set.
func (o *ReauthorizationDetails) HasRatingGroup() bool {
	if o != nil && !IsNil(o.RatingGroup) {
		return true
	}

	return false
}

// SetRatingGroup gets a reference to the given int32 and assigns it to the RatingGroup field.
func (o *ReauthorizationDetails) SetRatingGroup(v int32) {
	o.RatingGroup = &v
}

// GetQuotaManagementIndicator returns the QuotaManagementIndicator field value if set, zero value otherwise.
func (o *ReauthorizationDetails) GetQuotaManagementIndicator() QuotaManagementIndicator {
	if o == nil || IsNil(o.QuotaManagementIndicator) {
		var ret QuotaManagementIndicator
		return ret
	}
	return *o.QuotaManagementIndicator
}

// GetQuotaManagementIndicatorOk returns a tuple with the QuotaManagementIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReauthorizationDetails) GetQuotaManagementIndicatorOk() (*QuotaManagementIndicator, bool) {
	if o == nil || IsNil(o.QuotaManagementIndicator) {
		return nil, false
	}
	return o.QuotaManagementIndicator, true
}

// HasQuotaManagementIndicator returns a boolean if a field has been set.
func (o *ReauthorizationDetails) HasQuotaManagementIndicator() bool {
	if o != nil && !IsNil(o.QuotaManagementIndicator) {
		return true
	}

	return false
}

// SetQuotaManagementIndicator gets a reference to the given QuotaManagementIndicator and assigns it to the QuotaManagementIndicator field.
func (o *ReauthorizationDetails) SetQuotaManagementIndicator(v QuotaManagementIndicator) {
	o.QuotaManagementIndicator = &v
}

func (o ReauthorizationDetails) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReauthorizationDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServiceId) {
		toSerialize["serviceId"] = o.ServiceId
	}
	if !IsNil(o.RatingGroup) {
		toSerialize["ratingGroup"] = o.RatingGroup
	}
	if !IsNil(o.QuotaManagementIndicator) {
		toSerialize["quotaManagementIndicator"] = o.QuotaManagementIndicator
	}
	return toSerialize, nil
}

type NullableReauthorizationDetails struct {
	value *ReauthorizationDetails
	isSet bool
}

func (v NullableReauthorizationDetails) Get() *ReauthorizationDetails {
	return v.value
}

func (v *NullableReauthorizationDetails) Set(val *ReauthorizationDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableReauthorizationDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableReauthorizationDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReauthorizationDetails(val *ReauthorizationDetails) *NullableReauthorizationDetails {
	return &NullableReauthorizationDetails{value: val, isSet: true}
}

func (v NullableReauthorizationDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReauthorizationDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
