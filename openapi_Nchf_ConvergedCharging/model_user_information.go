/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the UserInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UserInformation{}

// UserInformation struct for UserInformation
type UserInformation struct {
	// String identifying a Gpsi shall contain either an External Id or an MSISDN.  It shall be formatted as follows -External Identifier= \"extid-'extid', where 'extid'  shall be formatted according to clause 19.7.2 of 3GPP TS 23.003 that describes an  External Identifier.  
	ServedGPSI *string `json:"servedGPSI,omitempty"`
	// String representing a Permanent Equipment Identifier that may contain - an IMEI or IMEISV, as  specified in clause 6.2 of 3GPP TS 23.003; a MAC address for a 5G-RG or FN-RG via  wireline  access, with an indication that this address cannot be trusted for regulatory purpose if this  address cannot be used as an Equipment Identifier of the FN-RG, as specified in clause 4.7.7  of 3GPP TS23.316. Examples are imei-012345678901234 or imeisv-0123456789012345.  
	ServedPEI *string `json:"servedPEI,omitempty"`
	UnauthenticatedFlag *bool `json:"unauthenticatedFlag,omitempty"`
	RoamerInOut *RoamerInOut `json:"roamerInOut,omitempty"`
}

// NewUserInformation instantiates a new UserInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUserInformation() *UserInformation {
	this := UserInformation{}
	return &this
}

// NewUserInformationWithDefaults instantiates a new UserInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUserInformationWithDefaults() *UserInformation {
	this := UserInformation{}
	return &this
}

// GetServedGPSI returns the ServedGPSI field value if set, zero value otherwise.
func (o *UserInformation) GetServedGPSI() string {
	if o == nil || IsNil(o.ServedGPSI) {
		var ret string
		return ret
	}
	return *o.ServedGPSI
}

// GetServedGPSIOk returns a tuple with the ServedGPSI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInformation) GetServedGPSIOk() (*string, bool) {
	if o == nil || IsNil(o.ServedGPSI) {
		return nil, false
	}
	return o.ServedGPSI, true
}

// HasServedGPSI returns a boolean if a field has been set.
func (o *UserInformation) HasServedGPSI() bool {
	if o != nil && !IsNil(o.ServedGPSI) {
		return true
	}

	return false
}

// SetServedGPSI gets a reference to the given string and assigns it to the ServedGPSI field.
func (o *UserInformation) SetServedGPSI(v string) {
	o.ServedGPSI = &v
}

// GetServedPEI returns the ServedPEI field value if set, zero value otherwise.
func (o *UserInformation) GetServedPEI() string {
	if o == nil || IsNil(o.ServedPEI) {
		var ret string
		return ret
	}
	return *o.ServedPEI
}

// GetServedPEIOk returns a tuple with the ServedPEI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInformation) GetServedPEIOk() (*string, bool) {
	if o == nil || IsNil(o.ServedPEI) {
		return nil, false
	}
	return o.ServedPEI, true
}

// HasServedPEI returns a boolean if a field has been set.
func (o *UserInformation) HasServedPEI() bool {
	if o != nil && !IsNil(o.ServedPEI) {
		return true
	}

	return false
}

// SetServedPEI gets a reference to the given string and assigns it to the ServedPEI field.
func (o *UserInformation) SetServedPEI(v string) {
	o.ServedPEI = &v
}

// GetUnauthenticatedFlag returns the UnauthenticatedFlag field value if set, zero value otherwise.
func (o *UserInformation) GetUnauthenticatedFlag() bool {
	if o == nil || IsNil(o.UnauthenticatedFlag) {
		var ret bool
		return ret
	}
	return *o.UnauthenticatedFlag
}

// GetUnauthenticatedFlagOk returns a tuple with the UnauthenticatedFlag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInformation) GetUnauthenticatedFlagOk() (*bool, bool) {
	if o == nil || IsNil(o.UnauthenticatedFlag) {
		return nil, false
	}
	return o.UnauthenticatedFlag, true
}

// HasUnauthenticatedFlag returns a boolean if a field has been set.
func (o *UserInformation) HasUnauthenticatedFlag() bool {
	if o != nil && !IsNil(o.UnauthenticatedFlag) {
		return true
	}

	return false
}

// SetUnauthenticatedFlag gets a reference to the given bool and assigns it to the UnauthenticatedFlag field.
func (o *UserInformation) SetUnauthenticatedFlag(v bool) {
	o.UnauthenticatedFlag = &v
}

// GetRoamerInOut returns the RoamerInOut field value if set, zero value otherwise.
func (o *UserInformation) GetRoamerInOut() RoamerInOut {
	if o == nil || IsNil(o.RoamerInOut) {
		var ret RoamerInOut
		return ret
	}
	return *o.RoamerInOut
}

// GetRoamerInOutOk returns a tuple with the RoamerInOut field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UserInformation) GetRoamerInOutOk() (*RoamerInOut, bool) {
	if o == nil || IsNil(o.RoamerInOut) {
		return nil, false
	}
	return o.RoamerInOut, true
}

// HasRoamerInOut returns a boolean if a field has been set.
func (o *UserInformation) HasRoamerInOut() bool {
	if o != nil && !IsNil(o.RoamerInOut) {
		return true
	}

	return false
}

// SetRoamerInOut gets a reference to the given RoamerInOut and assigns it to the RoamerInOut field.
func (o *UserInformation) SetRoamerInOut(v RoamerInOut) {
	o.RoamerInOut = &v
}

func (o UserInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UserInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ServedGPSI) {
		toSerialize["servedGPSI"] = o.ServedGPSI
	}
	if !IsNil(o.ServedPEI) {
		toSerialize["servedPEI"] = o.ServedPEI
	}
	if !IsNil(o.UnauthenticatedFlag) {
		toSerialize["unauthenticatedFlag"] = o.UnauthenticatedFlag
	}
	if !IsNil(o.RoamerInOut) {
		toSerialize["roamerInOut"] = o.RoamerInOut
	}
	return toSerialize, nil
}

type NullableUserInformation struct {
	value *UserInformation
	isSet bool
}

func (v NullableUserInformation) Get() *UserInformation {
	return v.value
}

func (v *NullableUserInformation) Set(val *UserInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableUserInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableUserInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUserInformation(val *UserInformation) *NullableUserInformation {
	return &NullableUserInformation{value: val, isSet: true}
}

func (v NullableUserInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUserInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


