/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the MMContentType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MMContentType{}

// MMContentType struct for MMContentType
type MMContentType struct {
	TypeNumber *string `json:"typeNumber,omitempty"`
	AddtypeInfo *string `json:"addtypeInfo,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	ContentSize *int32 `json:"contentSize,omitempty"`
	MmAddContentInfo []MMAddContentInfo `json:"mmAddContentInfo,omitempty"`
}

// NewMMContentType instantiates a new MMContentType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMMContentType() *MMContentType {
	this := MMContentType{}
	return &this
}

// NewMMContentTypeWithDefaults instantiates a new MMContentType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMMContentTypeWithDefaults() *MMContentType {
	this := MMContentType{}
	return &this
}

// GetTypeNumber returns the TypeNumber field value if set, zero value otherwise.
func (o *MMContentType) GetTypeNumber() string {
	if o == nil || IsNil(o.TypeNumber) {
		var ret string
		return ret
	}
	return *o.TypeNumber
}

// GetTypeNumberOk returns a tuple with the TypeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMContentType) GetTypeNumberOk() (*string, bool) {
	if o == nil || IsNil(o.TypeNumber) {
		return nil, false
	}
	return o.TypeNumber, true
}

// HasTypeNumber returns a boolean if a field has been set.
func (o *MMContentType) HasTypeNumber() bool {
	if o != nil && !IsNil(o.TypeNumber) {
		return true
	}

	return false
}

// SetTypeNumber gets a reference to the given string and assigns it to the TypeNumber field.
func (o *MMContentType) SetTypeNumber(v string) {
	o.TypeNumber = &v
}

// GetAddtypeInfo returns the AddtypeInfo field value if set, zero value otherwise.
func (o *MMContentType) GetAddtypeInfo() string {
	if o == nil || IsNil(o.AddtypeInfo) {
		var ret string
		return ret
	}
	return *o.AddtypeInfo
}

// GetAddtypeInfoOk returns a tuple with the AddtypeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMContentType) GetAddtypeInfoOk() (*string, bool) {
	if o == nil || IsNil(o.AddtypeInfo) {
		return nil, false
	}
	return o.AddtypeInfo, true
}

// HasAddtypeInfo returns a boolean if a field has been set.
func (o *MMContentType) HasAddtypeInfo() bool {
	if o != nil && !IsNil(o.AddtypeInfo) {
		return true
	}

	return false
}

// SetAddtypeInfo gets a reference to the given string and assigns it to the AddtypeInfo field.
func (o *MMContentType) SetAddtypeInfo(v string) {
	o.AddtypeInfo = &v
}

// GetContentSize returns the ContentSize field value if set, zero value otherwise.
func (o *MMContentType) GetContentSize() int32 {
	if o == nil || IsNil(o.ContentSize) {
		var ret int32
		return ret
	}
	return *o.ContentSize
}

// GetContentSizeOk returns a tuple with the ContentSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMContentType) GetContentSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.ContentSize) {
		return nil, false
	}
	return o.ContentSize, true
}

// HasContentSize returns a boolean if a field has been set.
func (o *MMContentType) HasContentSize() bool {
	if o != nil && !IsNil(o.ContentSize) {
		return true
	}

	return false
}

// SetContentSize gets a reference to the given int32 and assigns it to the ContentSize field.
func (o *MMContentType) SetContentSize(v int32) {
	o.ContentSize = &v
}

// GetMmAddContentInfo returns the MmAddContentInfo field value if set, zero value otherwise.
func (o *MMContentType) GetMmAddContentInfo() []MMAddContentInfo {
	if o == nil || IsNil(o.MmAddContentInfo) {
		var ret []MMAddContentInfo
		return ret
	}
	return o.MmAddContentInfo
}

// GetMmAddContentInfoOk returns a tuple with the MmAddContentInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMContentType) GetMmAddContentInfoOk() ([]MMAddContentInfo, bool) {
	if o == nil || IsNil(o.MmAddContentInfo) {
		return nil, false
	}
	return o.MmAddContentInfo, true
}

// HasMmAddContentInfo returns a boolean if a field has been set.
func (o *MMContentType) HasMmAddContentInfo() bool {
	if o != nil && !IsNil(o.MmAddContentInfo) {
		return true
	}

	return false
}

// SetMmAddContentInfo gets a reference to the given []MMAddContentInfo and assigns it to the MmAddContentInfo field.
func (o *MMContentType) SetMmAddContentInfo(v []MMAddContentInfo) {
	o.MmAddContentInfo = v
}

func (o MMContentType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MMContentType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.TypeNumber) {
		toSerialize["typeNumber"] = o.TypeNumber
	}
	if !IsNil(o.AddtypeInfo) {
		toSerialize["addtypeInfo"] = o.AddtypeInfo
	}
	if !IsNil(o.ContentSize) {
		toSerialize["contentSize"] = o.ContentSize
	}
	if !IsNil(o.MmAddContentInfo) {
		toSerialize["mmAddContentInfo"] = o.MmAddContentInfo
	}
	return toSerialize, nil
}

type NullableMMContentType struct {
	value *MMContentType
	isSet bool
}

func (v NullableMMContentType) Get() *MMContentType {
	return v.value
}

func (v *NullableMMContentType) Set(val *MMContentType) {
	v.value = val
	v.isSet = true
}

func (v NullableMMContentType) IsSet() bool {
	return v.isSet
}

func (v *NullableMMContentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMMContentType(val *MMContentType) *NullableMMContentType {
	return &NullableMMContentType{value: val, isSet: true}
}

func (v NullableMMContentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMMContentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


