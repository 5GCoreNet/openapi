/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the LocationReportingChargingInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LocationReportingChargingInformation{}

// LocationReportingChargingInformation struct for LocationReportingChargingInformation
type LocationReportingChargingInformation struct {
	LocationReportingMessageType int32              `json:"locationReportingMessageType"`
	UserInformation              *UserInformation   `json:"userInformation,omitempty"`
	UserLocationinfo             *UserLocation      `json:"userLocationinfo,omitempty"`
	PSCellInformation            *PSCellInformation `json:"pSCellInformation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
	UetimeZone                       *string                  `json:"uetimeZone,omitempty"`
	RATType                          *RatType                 `json:"rATType,omitempty"`
	PresenceReportingAreaInformation *map[string]PresenceInfo `json:"presenceReportingAreaInformation,omitempty"`
}

// NewLocationReportingChargingInformation instantiates a new LocationReportingChargingInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLocationReportingChargingInformation(locationReportingMessageType int32) *LocationReportingChargingInformation {
	this := LocationReportingChargingInformation{}
	this.LocationReportingMessageType = locationReportingMessageType
	return &this
}

// NewLocationReportingChargingInformationWithDefaults instantiates a new LocationReportingChargingInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLocationReportingChargingInformationWithDefaults() *LocationReportingChargingInformation {
	this := LocationReportingChargingInformation{}
	return &this
}

// GetLocationReportingMessageType returns the LocationReportingMessageType field value
func (o *LocationReportingChargingInformation) GetLocationReportingMessageType() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LocationReportingMessageType
}

// GetLocationReportingMessageTypeOk returns a tuple with the LocationReportingMessageType field value
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetLocationReportingMessageTypeOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocationReportingMessageType, true
}

// SetLocationReportingMessageType sets field value
func (o *LocationReportingChargingInformation) SetLocationReportingMessageType(v int32) {
	o.LocationReportingMessageType = v
}

// GetUserInformation returns the UserInformation field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetUserInformation() UserInformation {
	if o == nil || IsNil(o.UserInformation) {
		var ret UserInformation
		return ret
	}
	return *o.UserInformation
}

// GetUserInformationOk returns a tuple with the UserInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetUserInformationOk() (*UserInformation, bool) {
	if o == nil || IsNil(o.UserInformation) {
		return nil, false
	}
	return o.UserInformation, true
}

// HasUserInformation returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasUserInformation() bool {
	if o != nil && !IsNil(o.UserInformation) {
		return true
	}

	return false
}

// SetUserInformation gets a reference to the given UserInformation and assigns it to the UserInformation field.
func (o *LocationReportingChargingInformation) SetUserInformation(v UserInformation) {
	o.UserInformation = &v
}

// GetUserLocationinfo returns the UserLocationinfo field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetUserLocationinfo() UserLocation {
	if o == nil || IsNil(o.UserLocationinfo) {
		var ret UserLocation
		return ret
	}
	return *o.UserLocationinfo
}

// GetUserLocationinfoOk returns a tuple with the UserLocationinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetUserLocationinfoOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UserLocationinfo) {
		return nil, false
	}
	return o.UserLocationinfo, true
}

// HasUserLocationinfo returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasUserLocationinfo() bool {
	if o != nil && !IsNil(o.UserLocationinfo) {
		return true
	}

	return false
}

// SetUserLocationinfo gets a reference to the given UserLocation and assigns it to the UserLocationinfo field.
func (o *LocationReportingChargingInformation) SetUserLocationinfo(v UserLocation) {
	o.UserLocationinfo = &v
}

// GetPSCellInformation returns the PSCellInformation field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetPSCellInformation() PSCellInformation {
	if o == nil || IsNil(o.PSCellInformation) {
		var ret PSCellInformation
		return ret
	}
	return *o.PSCellInformation
}

// GetPSCellInformationOk returns a tuple with the PSCellInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetPSCellInformationOk() (*PSCellInformation, bool) {
	if o == nil || IsNil(o.PSCellInformation) {
		return nil, false
	}
	return o.PSCellInformation, true
}

// HasPSCellInformation returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasPSCellInformation() bool {
	if o != nil && !IsNil(o.PSCellInformation) {
		return true
	}

	return false
}

// SetPSCellInformation gets a reference to the given PSCellInformation and assigns it to the PSCellInformation field.
func (o *LocationReportingChargingInformation) SetPSCellInformation(v PSCellInformation) {
	o.PSCellInformation = &v
}

// GetUetimeZone returns the UetimeZone field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetUetimeZone() string {
	if o == nil || IsNil(o.UetimeZone) {
		var ret string
		return ret
	}
	return *o.UetimeZone
}

// GetUetimeZoneOk returns a tuple with the UetimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetUetimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UetimeZone) {
		return nil, false
	}
	return o.UetimeZone, true
}

// HasUetimeZone returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasUetimeZone() bool {
	if o != nil && !IsNil(o.UetimeZone) {
		return true
	}

	return false
}

// SetUetimeZone gets a reference to the given string and assigns it to the UetimeZone field.
func (o *LocationReportingChargingInformation) SetUetimeZone(v string) {
	o.UetimeZone = &v
}

// GetRATType returns the RATType field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetRATType() RatType {
	if o == nil || IsNil(o.RATType) {
		var ret RatType
		return ret
	}
	return *o.RATType
}

// GetRATTypeOk returns a tuple with the RATType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetRATTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RATType) {
		return nil, false
	}
	return o.RATType, true
}

// HasRATType returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasRATType() bool {
	if o != nil && !IsNil(o.RATType) {
		return true
	}

	return false
}

// SetRATType gets a reference to the given RatType and assigns it to the RATType field.
func (o *LocationReportingChargingInformation) SetRATType(v RatType) {
	o.RATType = &v
}

// GetPresenceReportingAreaInformation returns the PresenceReportingAreaInformation field value if set, zero value otherwise.
func (o *LocationReportingChargingInformation) GetPresenceReportingAreaInformation() map[string]PresenceInfo {
	if o == nil || IsNil(o.PresenceReportingAreaInformation) {
		var ret map[string]PresenceInfo
		return ret
	}
	return *o.PresenceReportingAreaInformation
}

// GetPresenceReportingAreaInformationOk returns a tuple with the PresenceReportingAreaInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *LocationReportingChargingInformation) GetPresenceReportingAreaInformationOk() (*map[string]PresenceInfo, bool) {
	if o == nil || IsNil(o.PresenceReportingAreaInformation) {
		return nil, false
	}
	return o.PresenceReportingAreaInformation, true
}

// HasPresenceReportingAreaInformation returns a boolean if a field has been set.
func (o *LocationReportingChargingInformation) HasPresenceReportingAreaInformation() bool {
	if o != nil && !IsNil(o.PresenceReportingAreaInformation) {
		return true
	}

	return false
}

// SetPresenceReportingAreaInformation gets a reference to the given map[string]PresenceInfo and assigns it to the PresenceReportingAreaInformation field.
func (o *LocationReportingChargingInformation) SetPresenceReportingAreaInformation(v map[string]PresenceInfo) {
	o.PresenceReportingAreaInformation = &v
}

func (o LocationReportingChargingInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LocationReportingChargingInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["locationReportingMessageType"] = o.LocationReportingMessageType
	if !IsNil(o.UserInformation) {
		toSerialize["userInformation"] = o.UserInformation
	}
	if !IsNil(o.UserLocationinfo) {
		toSerialize["userLocationinfo"] = o.UserLocationinfo
	}
	if !IsNil(o.PSCellInformation) {
		toSerialize["pSCellInformation"] = o.PSCellInformation
	}
	if !IsNil(o.UetimeZone) {
		toSerialize["uetimeZone"] = o.UetimeZone
	}
	if !IsNil(o.RATType) {
		toSerialize["rATType"] = o.RATType
	}
	if !IsNil(o.PresenceReportingAreaInformation) {
		toSerialize["presenceReportingAreaInformation"] = o.PresenceReportingAreaInformation
	}
	return toSerialize, nil
}

type NullableLocationReportingChargingInformation struct {
	value *LocationReportingChargingInformation
	isSet bool
}

func (v NullableLocationReportingChargingInformation) Get() *LocationReportingChargingInformation {
	return v.value
}

func (v *NullableLocationReportingChargingInformation) Set(val *LocationReportingChargingInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableLocationReportingChargingInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableLocationReportingChargingInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLocationReportingChargingInformation(val *LocationReportingChargingInformation) *NullableLocationReportingChargingInformation {
	return &NullableLocationReportingChargingInformation{value: val, isSet: true}
}

func (v NullableLocationReportingChargingInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLocationReportingChargingInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
