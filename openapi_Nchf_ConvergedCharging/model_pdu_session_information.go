/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the PDUSessionInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PDUSessionInformation{}

// PDUSessionInformation struct for PDUSessionInformation
type PDUSessionInformation struct {
	NetworkSlicingInfo *NetworkSlicingInfo `json:"networkSlicingInfo,omitempty"`
	// Unsigned integer identifying a PDU session, within the range 0 to 255, as specified in  clause 11.2.3.1b, bits 1 to 8, of 3GPP TS 24.007. If the PDU Session ID is allocated by the  Core Network for UEs not supporting N1 mode, reserved range 64 to 95 is used. PDU Session ID  within the reserved range is only visible in the Core Network.  
	PduSessionID int32 `json:"pduSessionID"`
	PduType *PduSessionType `json:"pduType,omitempty"`
	SscMode *SscMode `json:"sscMode,omitempty"`
	HPlmnId *PlmnId `json:"hPlmnId,omitempty"`
	ServingNetworkFunctionID *ServingNetworkFunctionID `json:"servingNetworkFunctionID,omitempty"`
	RatType *RatType `json:"ratType,omitempty"`
	MAPDUNon3GPPRATType *RatType `json:"mAPDUNon3GPPRATType,omitempty"`
	// String representing a Data Network as defined in clause 9A of 3GPP TS 23.003;  it shall contain either a DNN Network Identifier, or a full DNN with both the Network  Identifier and Operator Identifier, as specified in 3GPP TS 23.003 clause 9.1.1 and 9.1.2. It shall be coded as string in which the labels are separated by dots  (e.g. \"Label1.Label2.Label3\"). 
	DnnId string `json:"dnnId"`
	DnnSelectionMode *DnnSelectionMode `json:"dnnSelectionMode,omitempty"`
	ChargingCharacteristics *string `json:"chargingCharacteristics,omitempty"`
	ChargingCharacteristicsSelectionMode *ChargingCharacteristicsSelectionMode `json:"chargingCharacteristicsSelectionMode,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	StartTime *time.Time `json:"startTime,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	StopTime *time.Time `json:"stopTime,omitempty"`
	Var3gppPSDataOffStatus *Model3GPPPSDataOffStatus `json:"3gppPSDataOffStatus,omitempty"`
	SessionStopIndicator *bool `json:"sessionStopIndicator,omitempty"`
	PduAddress *PDUAddress `json:"pduAddress,omitempty"`
	Diagnostics *int32 `json:"diagnostics,omitempty"`
	AuthorizedQoSInformation *AuthorizedDefaultQos `json:"authorizedQoSInformation,omitempty"`
	SubscribedQoSInformation *SubscribedDefaultQos `json:"subscribedQoSInformation,omitempty"`
	AuthorizedSessionAMBR *Ambr `json:"authorizedSessionAMBR,omitempty"`
	SubscribedSessionAMBR *Ambr `json:"subscribedSessionAMBR,omitempty"`
	ServingCNPlmnId *PlmnId `json:"servingCNPlmnId,omitempty"`
	MAPDUSessionInformation *MAPDUSessionInformation `json:"mAPDUSessionInformation,omitempty"`
	EnhancedDiagnostics []RanNasRelCause `json:"enhancedDiagnostics,omitempty"`
	RedundantTransmissionType *RedundantTransmissionType `json:"redundantTransmissionType,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	PDUSessionPairID *int32 `json:"pDUSessionPairID,omitempty"`
	CpCIoTOptimisationIndicator *bool `json:"cpCIoTOptimisationIndicator,omitempty"`
	Var5GSControlPlaneOnlyIndicator *bool `json:"5GSControlPlaneOnlyIndicator,omitempty"`
	SmallDataRateControlIndicator *bool `json:"smallDataRateControlIndicator,omitempty"`
	Var5GLANTypeService *Model5GLANTypeService `json:"5GLANTypeService,omitempty"`
}

// NewPDUSessionInformation instantiates a new PDUSessionInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPDUSessionInformation(pduSessionID int32, dnnId string) *PDUSessionInformation {
	this := PDUSessionInformation{}
	this.PduSessionID = pduSessionID
	this.DnnId = dnnId
	return &this
}

// NewPDUSessionInformationWithDefaults instantiates a new PDUSessionInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPDUSessionInformationWithDefaults() *PDUSessionInformation {
	this := PDUSessionInformation{}
	return &this
}

// GetNetworkSlicingInfo returns the NetworkSlicingInfo field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetNetworkSlicingInfo() NetworkSlicingInfo {
	if o == nil || IsNil(o.NetworkSlicingInfo) {
		var ret NetworkSlicingInfo
		return ret
	}
	return *o.NetworkSlicingInfo
}

// GetNetworkSlicingInfoOk returns a tuple with the NetworkSlicingInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetNetworkSlicingInfoOk() (*NetworkSlicingInfo, bool) {
	if o == nil || IsNil(o.NetworkSlicingInfo) {
		return nil, false
	}
	return o.NetworkSlicingInfo, true
}

// HasNetworkSlicingInfo returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasNetworkSlicingInfo() bool {
	if o != nil && !IsNil(o.NetworkSlicingInfo) {
		return true
	}

	return false
}

// SetNetworkSlicingInfo gets a reference to the given NetworkSlicingInfo and assigns it to the NetworkSlicingInfo field.
func (o *PDUSessionInformation) SetNetworkSlicingInfo(v NetworkSlicingInfo) {
	o.NetworkSlicingInfo = &v
}

// GetPduSessionID returns the PduSessionID field value
func (o *PDUSessionInformation) GetPduSessionID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PduSessionID
}

// GetPduSessionIDOk returns a tuple with the PduSessionID field value
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetPduSessionIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PduSessionID, true
}

// SetPduSessionID sets field value
func (o *PDUSessionInformation) SetPduSessionID(v int32) {
	o.PduSessionID = v
}

// GetPduType returns the PduType field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetPduType() PduSessionType {
	if o == nil || IsNil(o.PduType) {
		var ret PduSessionType
		return ret
	}
	return *o.PduType
}

// GetPduTypeOk returns a tuple with the PduType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetPduTypeOk() (*PduSessionType, bool) {
	if o == nil || IsNil(o.PduType) {
		return nil, false
	}
	return o.PduType, true
}

// HasPduType returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasPduType() bool {
	if o != nil && !IsNil(o.PduType) {
		return true
	}

	return false
}

// SetPduType gets a reference to the given PduSessionType and assigns it to the PduType field.
func (o *PDUSessionInformation) SetPduType(v PduSessionType) {
	o.PduType = &v
}

// GetSscMode returns the SscMode field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetSscMode() SscMode {
	if o == nil || IsNil(o.SscMode) {
		var ret SscMode
		return ret
	}
	return *o.SscMode
}

// GetSscModeOk returns a tuple with the SscMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetSscModeOk() (*SscMode, bool) {
	if o == nil || IsNil(o.SscMode) {
		return nil, false
	}
	return o.SscMode, true
}

// HasSscMode returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasSscMode() bool {
	if o != nil && !IsNil(o.SscMode) {
		return true
	}

	return false
}

// SetSscMode gets a reference to the given SscMode and assigns it to the SscMode field.
func (o *PDUSessionInformation) SetSscMode(v SscMode) {
	o.SscMode = &v
}

// GetHPlmnId returns the HPlmnId field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetHPlmnId() PlmnId {
	if o == nil || IsNil(o.HPlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.HPlmnId
}

// GetHPlmnIdOk returns a tuple with the HPlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetHPlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.HPlmnId) {
		return nil, false
	}
	return o.HPlmnId, true
}

// HasHPlmnId returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasHPlmnId() bool {
	if o != nil && !IsNil(o.HPlmnId) {
		return true
	}

	return false
}

// SetHPlmnId gets a reference to the given PlmnId and assigns it to the HPlmnId field.
func (o *PDUSessionInformation) SetHPlmnId(v PlmnId) {
	o.HPlmnId = &v
}

// GetServingNetworkFunctionID returns the ServingNetworkFunctionID field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetServingNetworkFunctionID() ServingNetworkFunctionID {
	if o == nil || IsNil(o.ServingNetworkFunctionID) {
		var ret ServingNetworkFunctionID
		return ret
	}
	return *o.ServingNetworkFunctionID
}

// GetServingNetworkFunctionIDOk returns a tuple with the ServingNetworkFunctionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetServingNetworkFunctionIDOk() (*ServingNetworkFunctionID, bool) {
	if o == nil || IsNil(o.ServingNetworkFunctionID) {
		return nil, false
	}
	return o.ServingNetworkFunctionID, true
}

// HasServingNetworkFunctionID returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasServingNetworkFunctionID() bool {
	if o != nil && !IsNil(o.ServingNetworkFunctionID) {
		return true
	}

	return false
}

// SetServingNetworkFunctionID gets a reference to the given ServingNetworkFunctionID and assigns it to the ServingNetworkFunctionID field.
func (o *PDUSessionInformation) SetServingNetworkFunctionID(v ServingNetworkFunctionID) {
	o.ServingNetworkFunctionID = &v
}

// GetRatType returns the RatType field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetRatType() RatType {
	if o == nil || IsNil(o.RatType) {
		var ret RatType
		return ret
	}
	return *o.RatType
}

// GetRatTypeOk returns a tuple with the RatType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetRatTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RatType) {
		return nil, false
	}
	return o.RatType, true
}

// HasRatType returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasRatType() bool {
	if o != nil && !IsNil(o.RatType) {
		return true
	}

	return false
}

// SetRatType gets a reference to the given RatType and assigns it to the RatType field.
func (o *PDUSessionInformation) SetRatType(v RatType) {
	o.RatType = &v
}

// GetMAPDUNon3GPPRATType returns the MAPDUNon3GPPRATType field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetMAPDUNon3GPPRATType() RatType {
	if o == nil || IsNil(o.MAPDUNon3GPPRATType) {
		var ret RatType
		return ret
	}
	return *o.MAPDUNon3GPPRATType
}

// GetMAPDUNon3GPPRATTypeOk returns a tuple with the MAPDUNon3GPPRATType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetMAPDUNon3GPPRATTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.MAPDUNon3GPPRATType) {
		return nil, false
	}
	return o.MAPDUNon3GPPRATType, true
}

// HasMAPDUNon3GPPRATType returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasMAPDUNon3GPPRATType() bool {
	if o != nil && !IsNil(o.MAPDUNon3GPPRATType) {
		return true
	}

	return false
}

// SetMAPDUNon3GPPRATType gets a reference to the given RatType and assigns it to the MAPDUNon3GPPRATType field.
func (o *PDUSessionInformation) SetMAPDUNon3GPPRATType(v RatType) {
	o.MAPDUNon3GPPRATType = &v
}

// GetDnnId returns the DnnId field value
func (o *PDUSessionInformation) GetDnnId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DnnId
}

// GetDnnIdOk returns a tuple with the DnnId field value
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetDnnIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DnnId, true
}

// SetDnnId sets field value
func (o *PDUSessionInformation) SetDnnId(v string) {
	o.DnnId = v
}

// GetDnnSelectionMode returns the DnnSelectionMode field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetDnnSelectionMode() DnnSelectionMode {
	if o == nil || IsNil(o.DnnSelectionMode) {
		var ret DnnSelectionMode
		return ret
	}
	return *o.DnnSelectionMode
}

// GetDnnSelectionModeOk returns a tuple with the DnnSelectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetDnnSelectionModeOk() (*DnnSelectionMode, bool) {
	if o == nil || IsNil(o.DnnSelectionMode) {
		return nil, false
	}
	return o.DnnSelectionMode, true
}

// HasDnnSelectionMode returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasDnnSelectionMode() bool {
	if o != nil && !IsNil(o.DnnSelectionMode) {
		return true
	}

	return false
}

// SetDnnSelectionMode gets a reference to the given DnnSelectionMode and assigns it to the DnnSelectionMode field.
func (o *PDUSessionInformation) SetDnnSelectionMode(v DnnSelectionMode) {
	o.DnnSelectionMode = &v
}

// GetChargingCharacteristics returns the ChargingCharacteristics field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetChargingCharacteristics() string {
	if o == nil || IsNil(o.ChargingCharacteristics) {
		var ret string
		return ret
	}
	return *o.ChargingCharacteristics
}

// GetChargingCharacteristicsOk returns a tuple with the ChargingCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetChargingCharacteristicsOk() (*string, bool) {
	if o == nil || IsNil(o.ChargingCharacteristics) {
		return nil, false
	}
	return o.ChargingCharacteristics, true
}

// HasChargingCharacteristics returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasChargingCharacteristics() bool {
	if o != nil && !IsNil(o.ChargingCharacteristics) {
		return true
	}

	return false
}

// SetChargingCharacteristics gets a reference to the given string and assigns it to the ChargingCharacteristics field.
func (o *PDUSessionInformation) SetChargingCharacteristics(v string) {
	o.ChargingCharacteristics = &v
}

// GetChargingCharacteristicsSelectionMode returns the ChargingCharacteristicsSelectionMode field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetChargingCharacteristicsSelectionMode() ChargingCharacteristicsSelectionMode {
	if o == nil || IsNil(o.ChargingCharacteristicsSelectionMode) {
		var ret ChargingCharacteristicsSelectionMode
		return ret
	}
	return *o.ChargingCharacteristicsSelectionMode
}

// GetChargingCharacteristicsSelectionModeOk returns a tuple with the ChargingCharacteristicsSelectionMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetChargingCharacteristicsSelectionModeOk() (*ChargingCharacteristicsSelectionMode, bool) {
	if o == nil || IsNil(o.ChargingCharacteristicsSelectionMode) {
		return nil, false
	}
	return o.ChargingCharacteristicsSelectionMode, true
}

// HasChargingCharacteristicsSelectionMode returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasChargingCharacteristicsSelectionMode() bool {
	if o != nil && !IsNil(o.ChargingCharacteristicsSelectionMode) {
		return true
	}

	return false
}

// SetChargingCharacteristicsSelectionMode gets a reference to the given ChargingCharacteristicsSelectionMode and assigns it to the ChargingCharacteristicsSelectionMode field.
func (o *PDUSessionInformation) SetChargingCharacteristicsSelectionMode(v ChargingCharacteristicsSelectionMode) {
	o.ChargingCharacteristicsSelectionMode = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetStartTime() time.Time {
	if o == nil || IsNil(o.StartTime) {
		var ret time.Time
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given time.Time and assigns it to the StartTime field.
func (o *PDUSessionInformation) SetStartTime(v time.Time) {
	o.StartTime = &v
}

// GetStopTime returns the StopTime field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetStopTime() time.Time {
	if o == nil || IsNil(o.StopTime) {
		var ret time.Time
		return ret
	}
	return *o.StopTime
}

// GetStopTimeOk returns a tuple with the StopTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetStopTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StopTime) {
		return nil, false
	}
	return o.StopTime, true
}

// HasStopTime returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasStopTime() bool {
	if o != nil && !IsNil(o.StopTime) {
		return true
	}

	return false
}

// SetStopTime gets a reference to the given time.Time and assigns it to the StopTime field.
func (o *PDUSessionInformation) SetStopTime(v time.Time) {
	o.StopTime = &v
}

// GetVar3gppPSDataOffStatus returns the Var3gppPSDataOffStatus field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetVar3gppPSDataOffStatus() Model3GPPPSDataOffStatus {
	if o == nil || IsNil(o.Var3gppPSDataOffStatus) {
		var ret Model3GPPPSDataOffStatus
		return ret
	}
	return *o.Var3gppPSDataOffStatus
}

// GetVar3gppPSDataOffStatusOk returns a tuple with the Var3gppPSDataOffStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetVar3gppPSDataOffStatusOk() (*Model3GPPPSDataOffStatus, bool) {
	if o == nil || IsNil(o.Var3gppPSDataOffStatus) {
		return nil, false
	}
	return o.Var3gppPSDataOffStatus, true
}

// HasVar3gppPSDataOffStatus returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasVar3gppPSDataOffStatus() bool {
	if o != nil && !IsNil(o.Var3gppPSDataOffStatus) {
		return true
	}

	return false
}

// SetVar3gppPSDataOffStatus gets a reference to the given Model3GPPPSDataOffStatus and assigns it to the Var3gppPSDataOffStatus field.
func (o *PDUSessionInformation) SetVar3gppPSDataOffStatus(v Model3GPPPSDataOffStatus) {
	o.Var3gppPSDataOffStatus = &v
}

// GetSessionStopIndicator returns the SessionStopIndicator field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetSessionStopIndicator() bool {
	if o == nil || IsNil(o.SessionStopIndicator) {
		var ret bool
		return ret
	}
	return *o.SessionStopIndicator
}

// GetSessionStopIndicatorOk returns a tuple with the SessionStopIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetSessionStopIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.SessionStopIndicator) {
		return nil, false
	}
	return o.SessionStopIndicator, true
}

// HasSessionStopIndicator returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasSessionStopIndicator() bool {
	if o != nil && !IsNil(o.SessionStopIndicator) {
		return true
	}

	return false
}

// SetSessionStopIndicator gets a reference to the given bool and assigns it to the SessionStopIndicator field.
func (o *PDUSessionInformation) SetSessionStopIndicator(v bool) {
	o.SessionStopIndicator = &v
}

// GetPduAddress returns the PduAddress field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetPduAddress() PDUAddress {
	if o == nil || IsNil(o.PduAddress) {
		var ret PDUAddress
		return ret
	}
	return *o.PduAddress
}

// GetPduAddressOk returns a tuple with the PduAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetPduAddressOk() (*PDUAddress, bool) {
	if o == nil || IsNil(o.PduAddress) {
		return nil, false
	}
	return o.PduAddress, true
}

// HasPduAddress returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasPduAddress() bool {
	if o != nil && !IsNil(o.PduAddress) {
		return true
	}

	return false
}

// SetPduAddress gets a reference to the given PDUAddress and assigns it to the PduAddress field.
func (o *PDUSessionInformation) SetPduAddress(v PDUAddress) {
	o.PduAddress = &v
}

// GetDiagnostics returns the Diagnostics field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetDiagnostics() int32 {
	if o == nil || IsNil(o.Diagnostics) {
		var ret int32
		return ret
	}
	return *o.Diagnostics
}

// GetDiagnosticsOk returns a tuple with the Diagnostics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetDiagnosticsOk() (*int32, bool) {
	if o == nil || IsNil(o.Diagnostics) {
		return nil, false
	}
	return o.Diagnostics, true
}

// HasDiagnostics returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasDiagnostics() bool {
	if o != nil && !IsNil(o.Diagnostics) {
		return true
	}

	return false
}

// SetDiagnostics gets a reference to the given int32 and assigns it to the Diagnostics field.
func (o *PDUSessionInformation) SetDiagnostics(v int32) {
	o.Diagnostics = &v
}

// GetAuthorizedQoSInformation returns the AuthorizedQoSInformation field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetAuthorizedQoSInformation() AuthorizedDefaultQos {
	if o == nil || IsNil(o.AuthorizedQoSInformation) {
		var ret AuthorizedDefaultQos
		return ret
	}
	return *o.AuthorizedQoSInformation
}

// GetAuthorizedQoSInformationOk returns a tuple with the AuthorizedQoSInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetAuthorizedQoSInformationOk() (*AuthorizedDefaultQos, bool) {
	if o == nil || IsNil(o.AuthorizedQoSInformation) {
		return nil, false
	}
	return o.AuthorizedQoSInformation, true
}

// HasAuthorizedQoSInformation returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasAuthorizedQoSInformation() bool {
	if o != nil && !IsNil(o.AuthorizedQoSInformation) {
		return true
	}

	return false
}

// SetAuthorizedQoSInformation gets a reference to the given AuthorizedDefaultQos and assigns it to the AuthorizedQoSInformation field.
func (o *PDUSessionInformation) SetAuthorizedQoSInformation(v AuthorizedDefaultQos) {
	o.AuthorizedQoSInformation = &v
}

// GetSubscribedQoSInformation returns the SubscribedQoSInformation field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetSubscribedQoSInformation() SubscribedDefaultQos {
	if o == nil || IsNil(o.SubscribedQoSInformation) {
		var ret SubscribedDefaultQos
		return ret
	}
	return *o.SubscribedQoSInformation
}

// GetSubscribedQoSInformationOk returns a tuple with the SubscribedQoSInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetSubscribedQoSInformationOk() (*SubscribedDefaultQos, bool) {
	if o == nil || IsNil(o.SubscribedQoSInformation) {
		return nil, false
	}
	return o.SubscribedQoSInformation, true
}

// HasSubscribedQoSInformation returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasSubscribedQoSInformation() bool {
	if o != nil && !IsNil(o.SubscribedQoSInformation) {
		return true
	}

	return false
}

// SetSubscribedQoSInformation gets a reference to the given SubscribedDefaultQos and assigns it to the SubscribedQoSInformation field.
func (o *PDUSessionInformation) SetSubscribedQoSInformation(v SubscribedDefaultQos) {
	o.SubscribedQoSInformation = &v
}

// GetAuthorizedSessionAMBR returns the AuthorizedSessionAMBR field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetAuthorizedSessionAMBR() Ambr {
	if o == nil || IsNil(o.AuthorizedSessionAMBR) {
		var ret Ambr
		return ret
	}
	return *o.AuthorizedSessionAMBR
}

// GetAuthorizedSessionAMBROk returns a tuple with the AuthorizedSessionAMBR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetAuthorizedSessionAMBROk() (*Ambr, bool) {
	if o == nil || IsNil(o.AuthorizedSessionAMBR) {
		return nil, false
	}
	return o.AuthorizedSessionAMBR, true
}

// HasAuthorizedSessionAMBR returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasAuthorizedSessionAMBR() bool {
	if o != nil && !IsNil(o.AuthorizedSessionAMBR) {
		return true
	}

	return false
}

// SetAuthorizedSessionAMBR gets a reference to the given Ambr and assigns it to the AuthorizedSessionAMBR field.
func (o *PDUSessionInformation) SetAuthorizedSessionAMBR(v Ambr) {
	o.AuthorizedSessionAMBR = &v
}

// GetSubscribedSessionAMBR returns the SubscribedSessionAMBR field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetSubscribedSessionAMBR() Ambr {
	if o == nil || IsNil(o.SubscribedSessionAMBR) {
		var ret Ambr
		return ret
	}
	return *o.SubscribedSessionAMBR
}

// GetSubscribedSessionAMBROk returns a tuple with the SubscribedSessionAMBR field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetSubscribedSessionAMBROk() (*Ambr, bool) {
	if o == nil || IsNil(o.SubscribedSessionAMBR) {
		return nil, false
	}
	return o.SubscribedSessionAMBR, true
}

// HasSubscribedSessionAMBR returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasSubscribedSessionAMBR() bool {
	if o != nil && !IsNil(o.SubscribedSessionAMBR) {
		return true
	}

	return false
}

// SetSubscribedSessionAMBR gets a reference to the given Ambr and assigns it to the SubscribedSessionAMBR field.
func (o *PDUSessionInformation) SetSubscribedSessionAMBR(v Ambr) {
	o.SubscribedSessionAMBR = &v
}

// GetServingCNPlmnId returns the ServingCNPlmnId field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetServingCNPlmnId() PlmnId {
	if o == nil || IsNil(o.ServingCNPlmnId) {
		var ret PlmnId
		return ret
	}
	return *o.ServingCNPlmnId
}

// GetServingCNPlmnIdOk returns a tuple with the ServingCNPlmnId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetServingCNPlmnIdOk() (*PlmnId, bool) {
	if o == nil || IsNil(o.ServingCNPlmnId) {
		return nil, false
	}
	return o.ServingCNPlmnId, true
}

// HasServingCNPlmnId returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasServingCNPlmnId() bool {
	if o != nil && !IsNil(o.ServingCNPlmnId) {
		return true
	}

	return false
}

// SetServingCNPlmnId gets a reference to the given PlmnId and assigns it to the ServingCNPlmnId field.
func (o *PDUSessionInformation) SetServingCNPlmnId(v PlmnId) {
	o.ServingCNPlmnId = &v
}

// GetMAPDUSessionInformation returns the MAPDUSessionInformation field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetMAPDUSessionInformation() MAPDUSessionInformation {
	if o == nil || IsNil(o.MAPDUSessionInformation) {
		var ret MAPDUSessionInformation
		return ret
	}
	return *o.MAPDUSessionInformation
}

// GetMAPDUSessionInformationOk returns a tuple with the MAPDUSessionInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetMAPDUSessionInformationOk() (*MAPDUSessionInformation, bool) {
	if o == nil || IsNil(o.MAPDUSessionInformation) {
		return nil, false
	}
	return o.MAPDUSessionInformation, true
}

// HasMAPDUSessionInformation returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasMAPDUSessionInformation() bool {
	if o != nil && !IsNil(o.MAPDUSessionInformation) {
		return true
	}

	return false
}

// SetMAPDUSessionInformation gets a reference to the given MAPDUSessionInformation and assigns it to the MAPDUSessionInformation field.
func (o *PDUSessionInformation) SetMAPDUSessionInformation(v MAPDUSessionInformation) {
	o.MAPDUSessionInformation = &v
}

// GetEnhancedDiagnostics returns the EnhancedDiagnostics field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetEnhancedDiagnostics() []RanNasRelCause {
	if o == nil || IsNil(o.EnhancedDiagnostics) {
		var ret []RanNasRelCause
		return ret
	}
	return o.EnhancedDiagnostics
}

// GetEnhancedDiagnosticsOk returns a tuple with the EnhancedDiagnostics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetEnhancedDiagnosticsOk() ([]RanNasRelCause, bool) {
	if o == nil || IsNil(o.EnhancedDiagnostics) {
		return nil, false
	}
	return o.EnhancedDiagnostics, true
}

// HasEnhancedDiagnostics returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasEnhancedDiagnostics() bool {
	if o != nil && !IsNil(o.EnhancedDiagnostics) {
		return true
	}

	return false
}

// SetEnhancedDiagnostics gets a reference to the given []RanNasRelCause and assigns it to the EnhancedDiagnostics field.
func (o *PDUSessionInformation) SetEnhancedDiagnostics(v []RanNasRelCause) {
	o.EnhancedDiagnostics = v
}

// GetRedundantTransmissionType returns the RedundantTransmissionType field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetRedundantTransmissionType() RedundantTransmissionType {
	if o == nil || IsNil(o.RedundantTransmissionType) {
		var ret RedundantTransmissionType
		return ret
	}
	return *o.RedundantTransmissionType
}

// GetRedundantTransmissionTypeOk returns a tuple with the RedundantTransmissionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetRedundantTransmissionTypeOk() (*RedundantTransmissionType, bool) {
	if o == nil || IsNil(o.RedundantTransmissionType) {
		return nil, false
	}
	return o.RedundantTransmissionType, true
}

// HasRedundantTransmissionType returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasRedundantTransmissionType() bool {
	if o != nil && !IsNil(o.RedundantTransmissionType) {
		return true
	}

	return false
}

// SetRedundantTransmissionType gets a reference to the given RedundantTransmissionType and assigns it to the RedundantTransmissionType field.
func (o *PDUSessionInformation) SetRedundantTransmissionType(v RedundantTransmissionType) {
	o.RedundantTransmissionType = &v
}

// GetPDUSessionPairID returns the PDUSessionPairID field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetPDUSessionPairID() int32 {
	if o == nil || IsNil(o.PDUSessionPairID) {
		var ret int32
		return ret
	}
	return *o.PDUSessionPairID
}

// GetPDUSessionPairIDOk returns a tuple with the PDUSessionPairID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetPDUSessionPairIDOk() (*int32, bool) {
	if o == nil || IsNil(o.PDUSessionPairID) {
		return nil, false
	}
	return o.PDUSessionPairID, true
}

// HasPDUSessionPairID returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasPDUSessionPairID() bool {
	if o != nil && !IsNil(o.PDUSessionPairID) {
		return true
	}

	return false
}

// SetPDUSessionPairID gets a reference to the given int32 and assigns it to the PDUSessionPairID field.
func (o *PDUSessionInformation) SetPDUSessionPairID(v int32) {
	o.PDUSessionPairID = &v
}

// GetCpCIoTOptimisationIndicator returns the CpCIoTOptimisationIndicator field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetCpCIoTOptimisationIndicator() bool {
	if o == nil || IsNil(o.CpCIoTOptimisationIndicator) {
		var ret bool
		return ret
	}
	return *o.CpCIoTOptimisationIndicator
}

// GetCpCIoTOptimisationIndicatorOk returns a tuple with the CpCIoTOptimisationIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetCpCIoTOptimisationIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.CpCIoTOptimisationIndicator) {
		return nil, false
	}
	return o.CpCIoTOptimisationIndicator, true
}

// HasCpCIoTOptimisationIndicator returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasCpCIoTOptimisationIndicator() bool {
	if o != nil && !IsNil(o.CpCIoTOptimisationIndicator) {
		return true
	}

	return false
}

// SetCpCIoTOptimisationIndicator gets a reference to the given bool and assigns it to the CpCIoTOptimisationIndicator field.
func (o *PDUSessionInformation) SetCpCIoTOptimisationIndicator(v bool) {
	o.CpCIoTOptimisationIndicator = &v
}

// GetVar5GSControlPlaneOnlyIndicator returns the Var5GSControlPlaneOnlyIndicator field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetVar5GSControlPlaneOnlyIndicator() bool {
	if o == nil || IsNil(o.Var5GSControlPlaneOnlyIndicator) {
		var ret bool
		return ret
	}
	return *o.Var5GSControlPlaneOnlyIndicator
}

// GetVar5GSControlPlaneOnlyIndicatorOk returns a tuple with the Var5GSControlPlaneOnlyIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetVar5GSControlPlaneOnlyIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.Var5GSControlPlaneOnlyIndicator) {
		return nil, false
	}
	return o.Var5GSControlPlaneOnlyIndicator, true
}

// HasVar5GSControlPlaneOnlyIndicator returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasVar5GSControlPlaneOnlyIndicator() bool {
	if o != nil && !IsNil(o.Var5GSControlPlaneOnlyIndicator) {
		return true
	}

	return false
}

// SetVar5GSControlPlaneOnlyIndicator gets a reference to the given bool and assigns it to the Var5GSControlPlaneOnlyIndicator field.
func (o *PDUSessionInformation) SetVar5GSControlPlaneOnlyIndicator(v bool) {
	o.Var5GSControlPlaneOnlyIndicator = &v
}

// GetSmallDataRateControlIndicator returns the SmallDataRateControlIndicator field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetSmallDataRateControlIndicator() bool {
	if o == nil || IsNil(o.SmallDataRateControlIndicator) {
		var ret bool
		return ret
	}
	return *o.SmallDataRateControlIndicator
}

// GetSmallDataRateControlIndicatorOk returns a tuple with the SmallDataRateControlIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetSmallDataRateControlIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.SmallDataRateControlIndicator) {
		return nil, false
	}
	return o.SmallDataRateControlIndicator, true
}

// HasSmallDataRateControlIndicator returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasSmallDataRateControlIndicator() bool {
	if o != nil && !IsNil(o.SmallDataRateControlIndicator) {
		return true
	}

	return false
}

// SetSmallDataRateControlIndicator gets a reference to the given bool and assigns it to the SmallDataRateControlIndicator field.
func (o *PDUSessionInformation) SetSmallDataRateControlIndicator(v bool) {
	o.SmallDataRateControlIndicator = &v
}

// GetVar5GLANTypeService returns the Var5GLANTypeService field value if set, zero value otherwise.
func (o *PDUSessionInformation) GetVar5GLANTypeService() Model5GLANTypeService {
	if o == nil || IsNil(o.Var5GLANTypeService) {
		var ret Model5GLANTypeService
		return ret
	}
	return *o.Var5GLANTypeService
}

// GetVar5GLANTypeServiceOk returns a tuple with the Var5GLANTypeService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PDUSessionInformation) GetVar5GLANTypeServiceOk() (*Model5GLANTypeService, bool) {
	if o == nil || IsNil(o.Var5GLANTypeService) {
		return nil, false
	}
	return o.Var5GLANTypeService, true
}

// HasVar5GLANTypeService returns a boolean if a field has been set.
func (o *PDUSessionInformation) HasVar5GLANTypeService() bool {
	if o != nil && !IsNil(o.Var5GLANTypeService) {
		return true
	}

	return false
}

// SetVar5GLANTypeService gets a reference to the given Model5GLANTypeService and assigns it to the Var5GLANTypeService field.
func (o *PDUSessionInformation) SetVar5GLANTypeService(v Model5GLANTypeService) {
	o.Var5GLANTypeService = &v
}

func (o PDUSessionInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PDUSessionInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkSlicingInfo) {
		toSerialize["networkSlicingInfo"] = o.NetworkSlicingInfo
	}
	toSerialize["pduSessionID"] = o.PduSessionID
	if !IsNil(o.PduType) {
		toSerialize["pduType"] = o.PduType
	}
	if !IsNil(o.SscMode) {
		toSerialize["sscMode"] = o.SscMode
	}
	if !IsNil(o.HPlmnId) {
		toSerialize["hPlmnId"] = o.HPlmnId
	}
	if !IsNil(o.ServingNetworkFunctionID) {
		toSerialize["servingNetworkFunctionID"] = o.ServingNetworkFunctionID
	}
	if !IsNil(o.RatType) {
		toSerialize["ratType"] = o.RatType
	}
	if !IsNil(o.MAPDUNon3GPPRATType) {
		toSerialize["mAPDUNon3GPPRATType"] = o.MAPDUNon3GPPRATType
	}
	toSerialize["dnnId"] = o.DnnId
	if !IsNil(o.DnnSelectionMode) {
		toSerialize["dnnSelectionMode"] = o.DnnSelectionMode
	}
	if !IsNil(o.ChargingCharacteristics) {
		toSerialize["chargingCharacteristics"] = o.ChargingCharacteristics
	}
	if !IsNil(o.ChargingCharacteristicsSelectionMode) {
		toSerialize["chargingCharacteristicsSelectionMode"] = o.ChargingCharacteristicsSelectionMode
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.StopTime) {
		toSerialize["stopTime"] = o.StopTime
	}
	if !IsNil(o.Var3gppPSDataOffStatus) {
		toSerialize["3gppPSDataOffStatus"] = o.Var3gppPSDataOffStatus
	}
	if !IsNil(o.SessionStopIndicator) {
		toSerialize["sessionStopIndicator"] = o.SessionStopIndicator
	}
	if !IsNil(o.PduAddress) {
		toSerialize["pduAddress"] = o.PduAddress
	}
	if !IsNil(o.Diagnostics) {
		toSerialize["diagnostics"] = o.Diagnostics
	}
	if !IsNil(o.AuthorizedQoSInformation) {
		toSerialize["authorizedQoSInformation"] = o.AuthorizedQoSInformation
	}
	if !IsNil(o.SubscribedQoSInformation) {
		toSerialize["subscribedQoSInformation"] = o.SubscribedQoSInformation
	}
	if !IsNil(o.AuthorizedSessionAMBR) {
		toSerialize["authorizedSessionAMBR"] = o.AuthorizedSessionAMBR
	}
	if !IsNil(o.SubscribedSessionAMBR) {
		toSerialize["subscribedSessionAMBR"] = o.SubscribedSessionAMBR
	}
	if !IsNil(o.ServingCNPlmnId) {
		toSerialize["servingCNPlmnId"] = o.ServingCNPlmnId
	}
	if !IsNil(o.MAPDUSessionInformation) {
		toSerialize["mAPDUSessionInformation"] = o.MAPDUSessionInformation
	}
	if !IsNil(o.EnhancedDiagnostics) {
		toSerialize["enhancedDiagnostics"] = o.EnhancedDiagnostics
	}
	if !IsNil(o.RedundantTransmissionType) {
		toSerialize["redundantTransmissionType"] = o.RedundantTransmissionType
	}
	if !IsNil(o.PDUSessionPairID) {
		toSerialize["pDUSessionPairID"] = o.PDUSessionPairID
	}
	if !IsNil(o.CpCIoTOptimisationIndicator) {
		toSerialize["cpCIoTOptimisationIndicator"] = o.CpCIoTOptimisationIndicator
	}
	if !IsNil(o.Var5GSControlPlaneOnlyIndicator) {
		toSerialize["5GSControlPlaneOnlyIndicator"] = o.Var5GSControlPlaneOnlyIndicator
	}
	if !IsNil(o.SmallDataRateControlIndicator) {
		toSerialize["smallDataRateControlIndicator"] = o.SmallDataRateControlIndicator
	}
	if !IsNil(o.Var5GLANTypeService) {
		toSerialize["5GLANTypeService"] = o.Var5GLANTypeService
	}
	return toSerialize, nil
}

type NullablePDUSessionInformation struct {
	value *PDUSessionInformation
	isSet bool
}

func (v NullablePDUSessionInformation) Get() *PDUSessionInformation {
	return v.value
}

func (v *NullablePDUSessionInformation) Set(val *PDUSessionInformation) {
	v.value = val
	v.isSet = true
}

func (v NullablePDUSessionInformation) IsSet() bool {
	return v.isSet
}

func (v *NullablePDUSessionInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePDUSessionInformation(val *PDUSessionInformation) *NullablePDUSessionInformation {
	return &NullablePDUSessionInformation{value: val, isSet: true}
}

func (v NullablePDUSessionInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePDUSessionInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


