/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the MultipleQFIcontainer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultipleQFIcontainer{}

// MultipleQFIcontainer struct for MultipleQFIcontainer
type MultipleQFIcontainer struct {
	Triggers []Trigger `json:"triggers,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	TriggerTimestamp *time.Time `json:"triggerTimestamp,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	Time *int32 `json:"time,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 64-bit integer. 
	TotalVolume *int32 `json:"totalVolume,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 64-bit integer. 
	UplinkVolume *int32 `json:"uplinkVolume,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 64-bit integer. 
	DownlinkVolume *int32 `json:"downlinkVolume,omitempty"`
	LocalSequenceNumber int32 `json:"localSequenceNumber"`
	QFIContainerInformation *QFIContainerInformation `json:"qFIContainerInformation,omitempty"`
}

// NewMultipleQFIcontainer instantiates a new MultipleQFIcontainer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultipleQFIcontainer(localSequenceNumber int32) *MultipleQFIcontainer {
	this := MultipleQFIcontainer{}
	this.LocalSequenceNumber = localSequenceNumber
	return &this
}

// NewMultipleQFIcontainerWithDefaults instantiates a new MultipleQFIcontainer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultipleQFIcontainerWithDefaults() *MultipleQFIcontainer {
	this := MultipleQFIcontainer{}
	return &this
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetTriggers() []Trigger {
	if o == nil || IsNil(o.Triggers) {
		var ret []Trigger
		return ret
	}
	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetTriggersOk() ([]Trigger, bool) {
	if o == nil || IsNil(o.Triggers) {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasTriggers() bool {
	if o != nil && !IsNil(o.Triggers) {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []Trigger and assigns it to the Triggers field.
func (o *MultipleQFIcontainer) SetTriggers(v []Trigger) {
	o.Triggers = v
}

// GetTriggerTimestamp returns the TriggerTimestamp field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetTriggerTimestamp() time.Time {
	if o == nil || IsNil(o.TriggerTimestamp) {
		var ret time.Time
		return ret
	}
	return *o.TriggerTimestamp
}

// GetTriggerTimestampOk returns a tuple with the TriggerTimestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetTriggerTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TriggerTimestamp) {
		return nil, false
	}
	return o.TriggerTimestamp, true
}

// HasTriggerTimestamp returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasTriggerTimestamp() bool {
	if o != nil && !IsNil(o.TriggerTimestamp) {
		return true
	}

	return false
}

// SetTriggerTimestamp gets a reference to the given time.Time and assigns it to the TriggerTimestamp field.
func (o *MultipleQFIcontainer) SetTriggerTimestamp(v time.Time) {
	o.TriggerTimestamp = &v
}

// GetTime returns the Time field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetTime() int32 {
	if o == nil || IsNil(o.Time) {
		var ret int32
		return ret
	}
	return *o.Time
}

// GetTimeOk returns a tuple with the Time field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.Time) {
		return nil, false
	}
	return o.Time, true
}

// HasTime returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasTime() bool {
	if o != nil && !IsNil(o.Time) {
		return true
	}

	return false
}

// SetTime gets a reference to the given int32 and assigns it to the Time field.
func (o *MultipleQFIcontainer) SetTime(v int32) {
	o.Time = &v
}

// GetTotalVolume returns the TotalVolume field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetTotalVolume() int32 {
	if o == nil || IsNil(o.TotalVolume) {
		var ret int32
		return ret
	}
	return *o.TotalVolume
}

// GetTotalVolumeOk returns a tuple with the TotalVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetTotalVolumeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalVolume) {
		return nil, false
	}
	return o.TotalVolume, true
}

// HasTotalVolume returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasTotalVolume() bool {
	if o != nil && !IsNil(o.TotalVolume) {
		return true
	}

	return false
}

// SetTotalVolume gets a reference to the given int32 and assigns it to the TotalVolume field.
func (o *MultipleQFIcontainer) SetTotalVolume(v int32) {
	o.TotalVolume = &v
}

// GetUplinkVolume returns the UplinkVolume field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetUplinkVolume() int32 {
	if o == nil || IsNil(o.UplinkVolume) {
		var ret int32
		return ret
	}
	return *o.UplinkVolume
}

// GetUplinkVolumeOk returns a tuple with the UplinkVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetUplinkVolumeOk() (*int32, bool) {
	if o == nil || IsNil(o.UplinkVolume) {
		return nil, false
	}
	return o.UplinkVolume, true
}

// HasUplinkVolume returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasUplinkVolume() bool {
	if o != nil && !IsNil(o.UplinkVolume) {
		return true
	}

	return false
}

// SetUplinkVolume gets a reference to the given int32 and assigns it to the UplinkVolume field.
func (o *MultipleQFIcontainer) SetUplinkVolume(v int32) {
	o.UplinkVolume = &v
}

// GetDownlinkVolume returns the DownlinkVolume field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetDownlinkVolume() int32 {
	if o == nil || IsNil(o.DownlinkVolume) {
		var ret int32
		return ret
	}
	return *o.DownlinkVolume
}

// GetDownlinkVolumeOk returns a tuple with the DownlinkVolume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetDownlinkVolumeOk() (*int32, bool) {
	if o == nil || IsNil(o.DownlinkVolume) {
		return nil, false
	}
	return o.DownlinkVolume, true
}

// HasDownlinkVolume returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasDownlinkVolume() bool {
	if o != nil && !IsNil(o.DownlinkVolume) {
		return true
	}

	return false
}

// SetDownlinkVolume gets a reference to the given int32 and assigns it to the DownlinkVolume field.
func (o *MultipleQFIcontainer) SetDownlinkVolume(v int32) {
	o.DownlinkVolume = &v
}

// GetLocalSequenceNumber returns the LocalSequenceNumber field value
func (o *MultipleQFIcontainer) GetLocalSequenceNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LocalSequenceNumber
}

// GetLocalSequenceNumberOk returns a tuple with the LocalSequenceNumber field value
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetLocalSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalSequenceNumber, true
}

// SetLocalSequenceNumber sets field value
func (o *MultipleQFIcontainer) SetLocalSequenceNumber(v int32) {
	o.LocalSequenceNumber = v
}

// GetQFIContainerInformation returns the QFIContainerInformation field value if set, zero value otherwise.
func (o *MultipleQFIcontainer) GetQFIContainerInformation() QFIContainerInformation {
	if o == nil || IsNil(o.QFIContainerInformation) {
		var ret QFIContainerInformation
		return ret
	}
	return *o.QFIContainerInformation
}

// GetQFIContainerInformationOk returns a tuple with the QFIContainerInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultipleQFIcontainer) GetQFIContainerInformationOk() (*QFIContainerInformation, bool) {
	if o == nil || IsNil(o.QFIContainerInformation) {
		return nil, false
	}
	return o.QFIContainerInformation, true
}

// HasQFIContainerInformation returns a boolean if a field has been set.
func (o *MultipleQFIcontainer) HasQFIContainerInformation() bool {
	if o != nil && !IsNil(o.QFIContainerInformation) {
		return true
	}

	return false
}

// SetQFIContainerInformation gets a reference to the given QFIContainerInformation and assigns it to the QFIContainerInformation field.
func (o *MultipleQFIcontainer) SetQFIContainerInformation(v QFIContainerInformation) {
	o.QFIContainerInformation = &v
}

func (o MultipleQFIcontainer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultipleQFIcontainer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Triggers) {
		toSerialize["triggers"] = o.Triggers
	}
	if !IsNil(o.TriggerTimestamp) {
		toSerialize["triggerTimestamp"] = o.TriggerTimestamp
	}
	if !IsNil(o.Time) {
		toSerialize["time"] = o.Time
	}
	if !IsNil(o.TotalVolume) {
		toSerialize["totalVolume"] = o.TotalVolume
	}
	if !IsNil(o.UplinkVolume) {
		toSerialize["uplinkVolume"] = o.UplinkVolume
	}
	if !IsNil(o.DownlinkVolume) {
		toSerialize["downlinkVolume"] = o.DownlinkVolume
	}
	toSerialize["localSequenceNumber"] = o.LocalSequenceNumber
	if !IsNil(o.QFIContainerInformation) {
		toSerialize["qFIContainerInformation"] = o.QFIContainerInformation
	}
	return toSerialize, nil
}

type NullableMultipleQFIcontainer struct {
	value *MultipleQFIcontainer
	isSet bool
}

func (v NullableMultipleQFIcontainer) Get() *MultipleQFIcontainer {
	return v.value
}

func (v *NullableMultipleQFIcontainer) Set(val *MultipleQFIcontainer) {
	v.value = val
	v.isSet = true
}

func (v NullableMultipleQFIcontainer) IsSet() bool {
	return v.isSet
}

func (v *NullableMultipleQFIcontainer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultipleQFIcontainer(val *MultipleQFIcontainer) *NullableMultipleQFIcontainer {
	return &NullableMultipleQFIcontainer{value: val, isSet: true}
}

func (v NullableMultipleQFIcontainer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultipleQFIcontainer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


