/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the ServingNetworkFunctionID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServingNetworkFunctionID{}

// ServingNetworkFunctionID struct for ServingNetworkFunctionID
type ServingNetworkFunctionID struct {
	ServingNetworkFunctionInformation NFIdentification `json:"servingNetworkFunctionInformation"`
	// String identifying the AMF ID composed of AMF Region ID (8 bits), AMF Set ID (10 bits) and AMF  Pointer (6 bits) as specified in clause 2.10.1 of 3GPP TS 23.003. It is encoded as a string of  6 hexadecimal characters (i.e., 24 bits).  
	AMFId *string `json:"aMFId,omitempty"`
}

// NewServingNetworkFunctionID instantiates a new ServingNetworkFunctionID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServingNetworkFunctionID(servingNetworkFunctionInformation NFIdentification) *ServingNetworkFunctionID {
	this := ServingNetworkFunctionID{}
	this.ServingNetworkFunctionInformation = servingNetworkFunctionInformation
	return &this
}

// NewServingNetworkFunctionIDWithDefaults instantiates a new ServingNetworkFunctionID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServingNetworkFunctionIDWithDefaults() *ServingNetworkFunctionID {
	this := ServingNetworkFunctionID{}
	return &this
}

// GetServingNetworkFunctionInformation returns the ServingNetworkFunctionInformation field value
func (o *ServingNetworkFunctionID) GetServingNetworkFunctionInformation() NFIdentification {
	if o == nil {
		var ret NFIdentification
		return ret
	}

	return o.ServingNetworkFunctionInformation
}

// GetServingNetworkFunctionInformationOk returns a tuple with the ServingNetworkFunctionInformation field value
// and a boolean to check if the value has been set.
func (o *ServingNetworkFunctionID) GetServingNetworkFunctionInformationOk() (*NFIdentification, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServingNetworkFunctionInformation, true
}

// SetServingNetworkFunctionInformation sets field value
func (o *ServingNetworkFunctionID) SetServingNetworkFunctionInformation(v NFIdentification) {
	o.ServingNetworkFunctionInformation = v
}

// GetAMFId returns the AMFId field value if set, zero value otherwise.
func (o *ServingNetworkFunctionID) GetAMFId() string {
	if o == nil || isNil(o.AMFId) {
		var ret string
		return ret
	}
	return *o.AMFId
}

// GetAMFIdOk returns a tuple with the AMFId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServingNetworkFunctionID) GetAMFIdOk() (*string, bool) {
	if o == nil || isNil(o.AMFId) {
		return nil, false
	}
	return o.AMFId, true
}

// HasAMFId returns a boolean if a field has been set.
func (o *ServingNetworkFunctionID) HasAMFId() bool {
	if o != nil && !isNil(o.AMFId) {
		return true
	}

	return false
}

// SetAMFId gets a reference to the given string and assigns it to the AMFId field.
func (o *ServingNetworkFunctionID) SetAMFId(v string) {
	o.AMFId = &v
}

func (o ServingNetworkFunctionID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServingNetworkFunctionID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["servingNetworkFunctionInformation"] = o.ServingNetworkFunctionInformation
	if !isNil(o.AMFId) {
		toSerialize["aMFId"] = o.AMFId
	}
	return toSerialize, nil
}

type NullableServingNetworkFunctionID struct {
	value *ServingNetworkFunctionID
	isSet bool
}

func (v NullableServingNetworkFunctionID) Get() *ServingNetworkFunctionID {
	return v.value
}

func (v *NullableServingNetworkFunctionID) Set(val *ServingNetworkFunctionID) {
	v.value = val
	v.isSet = true
}

func (v NullableServingNetworkFunctionID) IsSet() bool {
	return v.isSet
}

func (v *NullableServingNetworkFunctionID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServingNetworkFunctionID(val *ServingNetworkFunctionID) *NullableServingNetworkFunctionID {
	return &NullableServingNetworkFunctionID{value: val, isSet: true}
}

func (v NullableServingNetworkFunctionID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServingNetworkFunctionID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


