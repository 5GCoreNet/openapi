/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the MMAddContentInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MMAddContentInfo{}

// MMAddContentInfo struct for MMAddContentInfo
type MMAddContentInfo struct {
	TypeNumber *string `json:"typeNumber,omitempty"`
	AddtypeInfo *string `json:"addtypeInfo,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	ContentSize *int32 `json:"contentSize,omitempty"`
}

// NewMMAddContentInfo instantiates a new MMAddContentInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMMAddContentInfo() *MMAddContentInfo {
	this := MMAddContentInfo{}
	return &this
}

// NewMMAddContentInfoWithDefaults instantiates a new MMAddContentInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMMAddContentInfoWithDefaults() *MMAddContentInfo {
	this := MMAddContentInfo{}
	return &this
}

// GetTypeNumber returns the TypeNumber field value if set, zero value otherwise.
func (o *MMAddContentInfo) GetTypeNumber() string {
	if o == nil || isNil(o.TypeNumber) {
		var ret string
		return ret
	}
	return *o.TypeNumber
}

// GetTypeNumberOk returns a tuple with the TypeNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMAddContentInfo) GetTypeNumberOk() (*string, bool) {
	if o == nil || isNil(o.TypeNumber) {
		return nil, false
	}
	return o.TypeNumber, true
}

// HasTypeNumber returns a boolean if a field has been set.
func (o *MMAddContentInfo) HasTypeNumber() bool {
	if o != nil && !isNil(o.TypeNumber) {
		return true
	}

	return false
}

// SetTypeNumber gets a reference to the given string and assigns it to the TypeNumber field.
func (o *MMAddContentInfo) SetTypeNumber(v string) {
	o.TypeNumber = &v
}

// GetAddtypeInfo returns the AddtypeInfo field value if set, zero value otherwise.
func (o *MMAddContentInfo) GetAddtypeInfo() string {
	if o == nil || isNil(o.AddtypeInfo) {
		var ret string
		return ret
	}
	return *o.AddtypeInfo
}

// GetAddtypeInfoOk returns a tuple with the AddtypeInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMAddContentInfo) GetAddtypeInfoOk() (*string, bool) {
	if o == nil || isNil(o.AddtypeInfo) {
		return nil, false
	}
	return o.AddtypeInfo, true
}

// HasAddtypeInfo returns a boolean if a field has been set.
func (o *MMAddContentInfo) HasAddtypeInfo() bool {
	if o != nil && !isNil(o.AddtypeInfo) {
		return true
	}

	return false
}

// SetAddtypeInfo gets a reference to the given string and assigns it to the AddtypeInfo field.
func (o *MMAddContentInfo) SetAddtypeInfo(v string) {
	o.AddtypeInfo = &v
}

// GetContentSize returns the ContentSize field value if set, zero value otherwise.
func (o *MMAddContentInfo) GetContentSize() int32 {
	if o == nil || isNil(o.ContentSize) {
		var ret int32
		return ret
	}
	return *o.ContentSize
}

// GetContentSizeOk returns a tuple with the ContentSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MMAddContentInfo) GetContentSizeOk() (*int32, bool) {
	if o == nil || isNil(o.ContentSize) {
		return nil, false
	}
	return o.ContentSize, true
}

// HasContentSize returns a boolean if a field has been set.
func (o *MMAddContentInfo) HasContentSize() bool {
	if o != nil && !isNil(o.ContentSize) {
		return true
	}

	return false
}

// SetContentSize gets a reference to the given int32 and assigns it to the ContentSize field.
func (o *MMAddContentInfo) SetContentSize(v int32) {
	o.ContentSize = &v
}

func (o MMAddContentInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MMAddContentInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.TypeNumber) {
		toSerialize["typeNumber"] = o.TypeNumber
	}
	if !isNil(o.AddtypeInfo) {
		toSerialize["addtypeInfo"] = o.AddtypeInfo
	}
	if !isNil(o.ContentSize) {
		toSerialize["contentSize"] = o.ContentSize
	}
	return toSerialize, nil
}

type NullableMMAddContentInfo struct {
	value *MMAddContentInfo
	isSet bool
}

func (v NullableMMAddContentInfo) Get() *MMAddContentInfo {
	return v.value
}

func (v *NullableMMAddContentInfo) Set(val *MMAddContentInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableMMAddContentInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableMMAddContentInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMMAddContentInfo(val *MMAddContentInfo) *NullableMMAddContentInfo {
	return &NullableMMAddContentInfo{value: val, isSet: true}
}

func (v NullableMMAddContentInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMMAddContentInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


