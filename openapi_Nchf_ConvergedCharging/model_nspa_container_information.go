/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the NSPAContainerInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NSPAContainerInformation{}

// NSPAContainerInformation struct for NSPAContainerInformation
type NSPAContainerInformation struct {
	Latency *int32 `json:"latency,omitempty"`
	Throughput *Throughput `json:"throughput,omitempty"`
	MaximumPacketLossRate *string `json:"maximumPacketLossRate,omitempty"`
	ServiceExperienceStatisticsData *ServiceExperienceInfo `json:"serviceExperienceStatisticsData,omitempty"`
	TheNumberOfPDUSessions *int32 `json:"theNumberOfPDUSessions,omitempty"`
	TheNumberOfRegisteredSubscribers *int32 `json:"theNumberOfRegisteredSubscribers,omitempty"`
	LoadLevel *NsiLoadLevelInfo `json:"loadLevel,omitempty"`
}

// NewNSPAContainerInformation instantiates a new NSPAContainerInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNSPAContainerInformation() *NSPAContainerInformation {
	this := NSPAContainerInformation{}
	return &this
}

// NewNSPAContainerInformationWithDefaults instantiates a new NSPAContainerInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNSPAContainerInformationWithDefaults() *NSPAContainerInformation {
	this := NSPAContainerInformation{}
	return &this
}

// GetLatency returns the Latency field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetLatency() int32 {
	if o == nil || IsNil(o.Latency) {
		var ret int32
		return ret
	}
	return *o.Latency
}

// GetLatencyOk returns a tuple with the Latency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetLatencyOk() (*int32, bool) {
	if o == nil || IsNil(o.Latency) {
		return nil, false
	}
	return o.Latency, true
}

// HasLatency returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasLatency() bool {
	if o != nil && !IsNil(o.Latency) {
		return true
	}

	return false
}

// SetLatency gets a reference to the given int32 and assigns it to the Latency field.
func (o *NSPAContainerInformation) SetLatency(v int32) {
	o.Latency = &v
}

// GetThroughput returns the Throughput field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetThroughput() Throughput {
	if o == nil || IsNil(o.Throughput) {
		var ret Throughput
		return ret
	}
	return *o.Throughput
}

// GetThroughputOk returns a tuple with the Throughput field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetThroughputOk() (*Throughput, bool) {
	if o == nil || IsNil(o.Throughput) {
		return nil, false
	}
	return o.Throughput, true
}

// HasThroughput returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasThroughput() bool {
	if o != nil && !IsNil(o.Throughput) {
		return true
	}

	return false
}

// SetThroughput gets a reference to the given Throughput and assigns it to the Throughput field.
func (o *NSPAContainerInformation) SetThroughput(v Throughput) {
	o.Throughput = &v
}

// GetMaximumPacketLossRate returns the MaximumPacketLossRate field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetMaximumPacketLossRate() string {
	if o == nil || IsNil(o.MaximumPacketLossRate) {
		var ret string
		return ret
	}
	return *o.MaximumPacketLossRate
}

// GetMaximumPacketLossRateOk returns a tuple with the MaximumPacketLossRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetMaximumPacketLossRateOk() (*string, bool) {
	if o == nil || IsNil(o.MaximumPacketLossRate) {
		return nil, false
	}
	return o.MaximumPacketLossRate, true
}

// HasMaximumPacketLossRate returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasMaximumPacketLossRate() bool {
	if o != nil && !IsNil(o.MaximumPacketLossRate) {
		return true
	}

	return false
}

// SetMaximumPacketLossRate gets a reference to the given string and assigns it to the MaximumPacketLossRate field.
func (o *NSPAContainerInformation) SetMaximumPacketLossRate(v string) {
	o.MaximumPacketLossRate = &v
}

// GetServiceExperienceStatisticsData returns the ServiceExperienceStatisticsData field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetServiceExperienceStatisticsData() ServiceExperienceInfo {
	if o == nil || IsNil(o.ServiceExperienceStatisticsData) {
		var ret ServiceExperienceInfo
		return ret
	}
	return *o.ServiceExperienceStatisticsData
}

// GetServiceExperienceStatisticsDataOk returns a tuple with the ServiceExperienceStatisticsData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetServiceExperienceStatisticsDataOk() (*ServiceExperienceInfo, bool) {
	if o == nil || IsNil(o.ServiceExperienceStatisticsData) {
		return nil, false
	}
	return o.ServiceExperienceStatisticsData, true
}

// HasServiceExperienceStatisticsData returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasServiceExperienceStatisticsData() bool {
	if o != nil && !IsNil(o.ServiceExperienceStatisticsData) {
		return true
	}

	return false
}

// SetServiceExperienceStatisticsData gets a reference to the given ServiceExperienceInfo and assigns it to the ServiceExperienceStatisticsData field.
func (o *NSPAContainerInformation) SetServiceExperienceStatisticsData(v ServiceExperienceInfo) {
	o.ServiceExperienceStatisticsData = &v
}

// GetTheNumberOfPDUSessions returns the TheNumberOfPDUSessions field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetTheNumberOfPDUSessions() int32 {
	if o == nil || IsNil(o.TheNumberOfPDUSessions) {
		var ret int32
		return ret
	}
	return *o.TheNumberOfPDUSessions
}

// GetTheNumberOfPDUSessionsOk returns a tuple with the TheNumberOfPDUSessions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetTheNumberOfPDUSessionsOk() (*int32, bool) {
	if o == nil || IsNil(o.TheNumberOfPDUSessions) {
		return nil, false
	}
	return o.TheNumberOfPDUSessions, true
}

// HasTheNumberOfPDUSessions returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasTheNumberOfPDUSessions() bool {
	if o != nil && !IsNil(o.TheNumberOfPDUSessions) {
		return true
	}

	return false
}

// SetTheNumberOfPDUSessions gets a reference to the given int32 and assigns it to the TheNumberOfPDUSessions field.
func (o *NSPAContainerInformation) SetTheNumberOfPDUSessions(v int32) {
	o.TheNumberOfPDUSessions = &v
}

// GetTheNumberOfRegisteredSubscribers returns the TheNumberOfRegisteredSubscribers field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetTheNumberOfRegisteredSubscribers() int32 {
	if o == nil || IsNil(o.TheNumberOfRegisteredSubscribers) {
		var ret int32
		return ret
	}
	return *o.TheNumberOfRegisteredSubscribers
}

// GetTheNumberOfRegisteredSubscribersOk returns a tuple with the TheNumberOfRegisteredSubscribers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetTheNumberOfRegisteredSubscribersOk() (*int32, bool) {
	if o == nil || IsNil(o.TheNumberOfRegisteredSubscribers) {
		return nil, false
	}
	return o.TheNumberOfRegisteredSubscribers, true
}

// HasTheNumberOfRegisteredSubscribers returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasTheNumberOfRegisteredSubscribers() bool {
	if o != nil && !IsNil(o.TheNumberOfRegisteredSubscribers) {
		return true
	}

	return false
}

// SetTheNumberOfRegisteredSubscribers gets a reference to the given int32 and assigns it to the TheNumberOfRegisteredSubscribers field.
func (o *NSPAContainerInformation) SetTheNumberOfRegisteredSubscribers(v int32) {
	o.TheNumberOfRegisteredSubscribers = &v
}

// GetLoadLevel returns the LoadLevel field value if set, zero value otherwise.
func (o *NSPAContainerInformation) GetLoadLevel() NsiLoadLevelInfo {
	if o == nil || IsNil(o.LoadLevel) {
		var ret NsiLoadLevelInfo
		return ret
	}
	return *o.LoadLevel
}

// GetLoadLevelOk returns a tuple with the LoadLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NSPAContainerInformation) GetLoadLevelOk() (*NsiLoadLevelInfo, bool) {
	if o == nil || IsNil(o.LoadLevel) {
		return nil, false
	}
	return o.LoadLevel, true
}

// HasLoadLevel returns a boolean if a field has been set.
func (o *NSPAContainerInformation) HasLoadLevel() bool {
	if o != nil && !IsNil(o.LoadLevel) {
		return true
	}

	return false
}

// SetLoadLevel gets a reference to the given NsiLoadLevelInfo and assigns it to the LoadLevel field.
func (o *NSPAContainerInformation) SetLoadLevel(v NsiLoadLevelInfo) {
	o.LoadLevel = &v
}

func (o NSPAContainerInformation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NSPAContainerInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Latency) {
		toSerialize["latency"] = o.Latency
	}
	if !IsNil(o.Throughput) {
		toSerialize["throughput"] = o.Throughput
	}
	if !IsNil(o.MaximumPacketLossRate) {
		toSerialize["maximumPacketLossRate"] = o.MaximumPacketLossRate
	}
	if !IsNil(o.ServiceExperienceStatisticsData) {
		toSerialize["serviceExperienceStatisticsData"] = o.ServiceExperienceStatisticsData
	}
	if !IsNil(o.TheNumberOfPDUSessions) {
		toSerialize["theNumberOfPDUSessions"] = o.TheNumberOfPDUSessions
	}
	if !IsNil(o.TheNumberOfRegisteredSubscribers) {
		toSerialize["theNumberOfRegisteredSubscribers"] = o.TheNumberOfRegisteredSubscribers
	}
	if !IsNil(o.LoadLevel) {
		toSerialize["loadLevel"] = o.LoadLevel
	}
	return toSerialize, nil
}

type NullableNSPAContainerInformation struct {
	value *NSPAContainerInformation
	isSet bool
}

func (v NullableNSPAContainerInformation) Get() *NSPAContainerInformation {
	return v.value
}

func (v *NullableNSPAContainerInformation) Set(val *NSPAContainerInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableNSPAContainerInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableNSPAContainerInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNSPAContainerInformation(val *NSPAContainerInformation) *NullableNSPAContainerInformation {
	return &NullableNSPAContainerInformation{value: val, isSet: true}
}

func (v NullableNSPAContainerInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNSPAContainerInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


