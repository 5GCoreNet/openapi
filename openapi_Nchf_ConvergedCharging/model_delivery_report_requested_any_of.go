/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"fmt"
)

// DeliveryReportRequestedAnyOf the model 'DeliveryReportRequestedAnyOf'
type DeliveryReportRequestedAnyOf string

// List of DeliveryReportRequested_anyOf
const (
	TRUE DeliveryReportRequestedAnyOf = "true"
	FALSE DeliveryReportRequestedAnyOf = "false"
)

// All allowed values of DeliveryReportRequestedAnyOf enum
var AllowedDeliveryReportRequestedAnyOfEnumValues = []DeliveryReportRequestedAnyOf{
	"true",
	"false",
}

func (v *DeliveryReportRequestedAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeliveryReportRequestedAnyOf(value)
	for _, existing := range AllowedDeliveryReportRequestedAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeliveryReportRequestedAnyOf", value)
}

// NewDeliveryReportRequestedAnyOfFromValue returns a pointer to a valid DeliveryReportRequestedAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryReportRequestedAnyOfFromValue(v string) (*DeliveryReportRequestedAnyOf, error) {
	ev := DeliveryReportRequestedAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryReportRequestedAnyOf: valid values are %v", v, AllowedDeliveryReportRequestedAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryReportRequestedAnyOf) IsValid() bool {
	for _, existing := range AllowedDeliveryReportRequestedAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to DeliveryReportRequested_anyOf value
func (v DeliveryReportRequestedAnyOf) Ptr() *DeliveryReportRequestedAnyOf {
	return &v
}

type NullableDeliveryReportRequestedAnyOf struct {
	value *DeliveryReportRequestedAnyOf
	isSet bool
}

func (v NullableDeliveryReportRequestedAnyOf) Get() *DeliveryReportRequestedAnyOf {
	return v.value
}

func (v *NullableDeliveryReportRequestedAnyOf) Set(val *DeliveryReportRequestedAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryReportRequestedAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryReportRequestedAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryReportRequestedAnyOf(val *DeliveryReportRequestedAnyOf) *NullableDeliveryReportRequestedAnyOf {
	return &NullableDeliveryReportRequestedAnyOf{value: val, isSet: true}
}

func (v NullableDeliveryReportRequestedAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryReportRequestedAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

