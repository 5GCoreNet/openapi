/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the SMAddressDomain type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SMAddressDomain{}

// SMAddressDomain struct for SMAddressDomain
type SMAddressDomain struct {
	DomainName *string `json:"domainName,omitempty"`
	Var3GPPIMSIMCCMNC *string `json:"3GPPIMSIMCCMNC,omitempty"`
}

// NewSMAddressDomain instantiates a new SMAddressDomain object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSMAddressDomain() *SMAddressDomain {
	this := SMAddressDomain{}
	return &this
}

// NewSMAddressDomainWithDefaults instantiates a new SMAddressDomain object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSMAddressDomainWithDefaults() *SMAddressDomain {
	this := SMAddressDomain{}
	return &this
}

// GetDomainName returns the DomainName field value if set, zero value otherwise.
func (o *SMAddressDomain) GetDomainName() string {
	if o == nil || IsNil(o.DomainName) {
		var ret string
		return ret
	}
	return *o.DomainName
}

// GetDomainNameOk returns a tuple with the DomainName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SMAddressDomain) GetDomainNameOk() (*string, bool) {
	if o == nil || IsNil(o.DomainName) {
		return nil, false
	}
	return o.DomainName, true
}

// HasDomainName returns a boolean if a field has been set.
func (o *SMAddressDomain) HasDomainName() bool {
	if o != nil && !IsNil(o.DomainName) {
		return true
	}

	return false
}

// SetDomainName gets a reference to the given string and assigns it to the DomainName field.
func (o *SMAddressDomain) SetDomainName(v string) {
	o.DomainName = &v
}

// GetVar3GPPIMSIMCCMNC returns the Var3GPPIMSIMCCMNC field value if set, zero value otherwise.
func (o *SMAddressDomain) GetVar3GPPIMSIMCCMNC() string {
	if o == nil || IsNil(o.Var3GPPIMSIMCCMNC) {
		var ret string
		return ret
	}
	return *o.Var3GPPIMSIMCCMNC
}

// GetVar3GPPIMSIMCCMNCOk returns a tuple with the Var3GPPIMSIMCCMNC field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SMAddressDomain) GetVar3GPPIMSIMCCMNCOk() (*string, bool) {
	if o == nil || IsNil(o.Var3GPPIMSIMCCMNC) {
		return nil, false
	}
	return o.Var3GPPIMSIMCCMNC, true
}

// HasVar3GPPIMSIMCCMNC returns a boolean if a field has been set.
func (o *SMAddressDomain) HasVar3GPPIMSIMCCMNC() bool {
	if o != nil && !IsNil(o.Var3GPPIMSIMCCMNC) {
		return true
	}

	return false
}

// SetVar3GPPIMSIMCCMNC gets a reference to the given string and assigns it to the Var3GPPIMSIMCCMNC field.
func (o *SMAddressDomain) SetVar3GPPIMSIMCCMNC(v string) {
	o.Var3GPPIMSIMCCMNC = &v
}

func (o SMAddressDomain) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SMAddressDomain) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DomainName) {
		toSerialize["domainName"] = o.DomainName
	}
	if !IsNil(o.Var3GPPIMSIMCCMNC) {
		toSerialize["3GPPIMSIMCCMNC"] = o.Var3GPPIMSIMCCMNC
	}
	return toSerialize, nil
}

type NullableSMAddressDomain struct {
	value *SMAddressDomain
	isSet bool
}

func (v NullableSMAddressDomain) Get() *SMAddressDomain {
	return v.value
}

func (v *NullableSMAddressDomain) Set(val *SMAddressDomain) {
	v.value = val
	v.isSet = true
}

func (v NullableSMAddressDomain) IsSet() bool {
	return v.isSet
}

func (v *NullableSMAddressDomain) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSMAddressDomain(val *SMAddressDomain) *NullableSMAddressDomain {
	return &NullableSMAddressDomain{value: val, isSet: true}
}

func (v NullableSMAddressDomain) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSMAddressDomain) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


