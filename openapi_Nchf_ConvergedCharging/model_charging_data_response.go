/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the ChargingDataResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargingDataResponse{}

// ChargingDataResponse struct for ChargingDataResponse
type ChargingDataResponse struct {
	// string with format 'date-time' as defined in OpenAPI.
	InvocationTimeStamp time.Time `json:"invocationTimeStamp"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
	InvocationSequenceNumber int32             `json:"invocationSequenceNumber"`
	InvocationResult         *InvocationResult `json:"invocationResult,omitempty"`
	SessionFailover          *SessionFailover  `json:"sessionFailover,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported.
	SupportedFeatures                    *string                               `json:"supportedFeatures,omitempty"`
	MultipleUnitInformation              []MultipleUnitInformation             `json:"multipleUnitInformation,omitempty"`
	Triggers                             []Trigger                             `json:"triggers,omitempty"`
	PDUSessionChargingInformation        *PDUSessionChargingInformation        `json:"pDUSessionChargingInformation,omitempty"`
	RoamingQBCInformation                *RoamingQBCInformation                `json:"roamingQBCInformation,omitempty"`
	LocationReportingChargingInformation *LocationReportingChargingInformation `json:"locationReportingChargingInformation,omitempty"`
}

// NewChargingDataResponse instantiates a new ChargingDataResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargingDataResponse(invocationTimeStamp time.Time, invocationSequenceNumber int32) *ChargingDataResponse {
	this := ChargingDataResponse{}
	this.InvocationTimeStamp = invocationTimeStamp
	this.InvocationSequenceNumber = invocationSequenceNumber
	return &this
}

// NewChargingDataResponseWithDefaults instantiates a new ChargingDataResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargingDataResponseWithDefaults() *ChargingDataResponse {
	this := ChargingDataResponse{}
	return &this
}

// GetInvocationTimeStamp returns the InvocationTimeStamp field value
func (o *ChargingDataResponse) GetInvocationTimeStamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.InvocationTimeStamp
}

// GetInvocationTimeStampOk returns a tuple with the InvocationTimeStamp field value
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetInvocationTimeStampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvocationTimeStamp, true
}

// SetInvocationTimeStamp sets field value
func (o *ChargingDataResponse) SetInvocationTimeStamp(v time.Time) {
	o.InvocationTimeStamp = v
}

// GetInvocationSequenceNumber returns the InvocationSequenceNumber field value
func (o *ChargingDataResponse) GetInvocationSequenceNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InvocationSequenceNumber
}

// GetInvocationSequenceNumberOk returns a tuple with the InvocationSequenceNumber field value
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetInvocationSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvocationSequenceNumber, true
}

// SetInvocationSequenceNumber sets field value
func (o *ChargingDataResponse) SetInvocationSequenceNumber(v int32) {
	o.InvocationSequenceNumber = v
}

// GetInvocationResult returns the InvocationResult field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetInvocationResult() InvocationResult {
	if o == nil || IsNil(o.InvocationResult) {
		var ret InvocationResult
		return ret
	}
	return *o.InvocationResult
}

// GetInvocationResultOk returns a tuple with the InvocationResult field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetInvocationResultOk() (*InvocationResult, bool) {
	if o == nil || IsNil(o.InvocationResult) {
		return nil, false
	}
	return o.InvocationResult, true
}

// HasInvocationResult returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasInvocationResult() bool {
	if o != nil && !IsNil(o.InvocationResult) {
		return true
	}

	return false
}

// SetInvocationResult gets a reference to the given InvocationResult and assigns it to the InvocationResult field.
func (o *ChargingDataResponse) SetInvocationResult(v InvocationResult) {
	o.InvocationResult = &v
}

// GetSessionFailover returns the SessionFailover field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetSessionFailover() SessionFailover {
	if o == nil || IsNil(o.SessionFailover) {
		var ret SessionFailover
		return ret
	}
	return *o.SessionFailover
}

// GetSessionFailoverOk returns a tuple with the SessionFailover field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetSessionFailoverOk() (*SessionFailover, bool) {
	if o == nil || IsNil(o.SessionFailover) {
		return nil, false
	}
	return o.SessionFailover, true
}

// HasSessionFailover returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasSessionFailover() bool {
	if o != nil && !IsNil(o.SessionFailover) {
		return true
	}

	return false
}

// SetSessionFailover gets a reference to the given SessionFailover and assigns it to the SessionFailover field.
func (o *ChargingDataResponse) SetSessionFailover(v SessionFailover) {
	o.SessionFailover = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *ChargingDataResponse) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetMultipleUnitInformation returns the MultipleUnitInformation field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetMultipleUnitInformation() []MultipleUnitInformation {
	if o == nil || IsNil(o.MultipleUnitInformation) {
		var ret []MultipleUnitInformation
		return ret
	}
	return o.MultipleUnitInformation
}

// GetMultipleUnitInformationOk returns a tuple with the MultipleUnitInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetMultipleUnitInformationOk() ([]MultipleUnitInformation, bool) {
	if o == nil || IsNil(o.MultipleUnitInformation) {
		return nil, false
	}
	return o.MultipleUnitInformation, true
}

// HasMultipleUnitInformation returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasMultipleUnitInformation() bool {
	if o != nil && !IsNil(o.MultipleUnitInformation) {
		return true
	}

	return false
}

// SetMultipleUnitInformation gets a reference to the given []MultipleUnitInformation and assigns it to the MultipleUnitInformation field.
func (o *ChargingDataResponse) SetMultipleUnitInformation(v []MultipleUnitInformation) {
	o.MultipleUnitInformation = v
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetTriggers() []Trigger {
	if o == nil || IsNil(o.Triggers) {
		var ret []Trigger
		return ret
	}
	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetTriggersOk() ([]Trigger, bool) {
	if o == nil || IsNil(o.Triggers) {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasTriggers() bool {
	if o != nil && !IsNil(o.Triggers) {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []Trigger and assigns it to the Triggers field.
func (o *ChargingDataResponse) SetTriggers(v []Trigger) {
	o.Triggers = v
}

// GetPDUSessionChargingInformation returns the PDUSessionChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetPDUSessionChargingInformation() PDUSessionChargingInformation {
	if o == nil || IsNil(o.PDUSessionChargingInformation) {
		var ret PDUSessionChargingInformation
		return ret
	}
	return *o.PDUSessionChargingInformation
}

// GetPDUSessionChargingInformationOk returns a tuple with the PDUSessionChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetPDUSessionChargingInformationOk() (*PDUSessionChargingInformation, bool) {
	if o == nil || IsNil(o.PDUSessionChargingInformation) {
		return nil, false
	}
	return o.PDUSessionChargingInformation, true
}

// HasPDUSessionChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasPDUSessionChargingInformation() bool {
	if o != nil && !IsNil(o.PDUSessionChargingInformation) {
		return true
	}

	return false
}

// SetPDUSessionChargingInformation gets a reference to the given PDUSessionChargingInformation and assigns it to the PDUSessionChargingInformation field.
func (o *ChargingDataResponse) SetPDUSessionChargingInformation(v PDUSessionChargingInformation) {
	o.PDUSessionChargingInformation = &v
}

// GetRoamingQBCInformation returns the RoamingQBCInformation field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetRoamingQBCInformation() RoamingQBCInformation {
	if o == nil || IsNil(o.RoamingQBCInformation) {
		var ret RoamingQBCInformation
		return ret
	}
	return *o.RoamingQBCInformation
}

// GetRoamingQBCInformationOk returns a tuple with the RoamingQBCInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetRoamingQBCInformationOk() (*RoamingQBCInformation, bool) {
	if o == nil || IsNil(o.RoamingQBCInformation) {
		return nil, false
	}
	return o.RoamingQBCInformation, true
}

// HasRoamingQBCInformation returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasRoamingQBCInformation() bool {
	if o != nil && !IsNil(o.RoamingQBCInformation) {
		return true
	}

	return false
}

// SetRoamingQBCInformation gets a reference to the given RoamingQBCInformation and assigns it to the RoamingQBCInformation field.
func (o *ChargingDataResponse) SetRoamingQBCInformation(v RoamingQBCInformation) {
	o.RoamingQBCInformation = &v
}

// GetLocationReportingChargingInformation returns the LocationReportingChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataResponse) GetLocationReportingChargingInformation() LocationReportingChargingInformation {
	if o == nil || IsNil(o.LocationReportingChargingInformation) {
		var ret LocationReportingChargingInformation
		return ret
	}
	return *o.LocationReportingChargingInformation
}

// GetLocationReportingChargingInformationOk returns a tuple with the LocationReportingChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataResponse) GetLocationReportingChargingInformationOk() (*LocationReportingChargingInformation, bool) {
	if o == nil || IsNil(o.LocationReportingChargingInformation) {
		return nil, false
	}
	return o.LocationReportingChargingInformation, true
}

// HasLocationReportingChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataResponse) HasLocationReportingChargingInformation() bool {
	if o != nil && !IsNil(o.LocationReportingChargingInformation) {
		return true
	}

	return false
}

// SetLocationReportingChargingInformation gets a reference to the given LocationReportingChargingInformation and assigns it to the LocationReportingChargingInformation field.
func (o *ChargingDataResponse) SetLocationReportingChargingInformation(v LocationReportingChargingInformation) {
	o.LocationReportingChargingInformation = &v
}

func (o ChargingDataResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargingDataResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["invocationTimeStamp"] = o.InvocationTimeStamp
	toSerialize["invocationSequenceNumber"] = o.InvocationSequenceNumber
	if !IsNil(o.InvocationResult) {
		toSerialize["invocationResult"] = o.InvocationResult
	}
	if !IsNil(o.SessionFailover) {
		toSerialize["sessionFailover"] = o.SessionFailover
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.MultipleUnitInformation) {
		toSerialize["multipleUnitInformation"] = o.MultipleUnitInformation
	}
	if !IsNil(o.Triggers) {
		toSerialize["triggers"] = o.Triggers
	}
	if !IsNil(o.PDUSessionChargingInformation) {
		toSerialize["pDUSessionChargingInformation"] = o.PDUSessionChargingInformation
	}
	if !IsNil(o.RoamingQBCInformation) {
		toSerialize["roamingQBCInformation"] = o.RoamingQBCInformation
	}
	if !IsNil(o.LocationReportingChargingInformation) {
		toSerialize["locationReportingChargingInformation"] = o.LocationReportingChargingInformation
	}
	return toSerialize, nil
}

type NullableChargingDataResponse struct {
	value *ChargingDataResponse
	isSet bool
}

func (v NullableChargingDataResponse) Get() *ChargingDataResponse {
	return v.value
}

func (v *NullableChargingDataResponse) Set(val *ChargingDataResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChargingDataResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChargingDataResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargingDataResponse(val *ChargingDataResponse) *NullableChargingDataResponse {
	return &NullableChargingDataResponse{value: val, isSet: true}
}

func (v NullableChargingDataResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargingDataResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
