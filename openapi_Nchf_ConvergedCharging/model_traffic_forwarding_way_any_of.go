/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"fmt"
)

// TrafficForwardingWayAnyOf the model 'TrafficForwardingWayAnyOf'
type TrafficForwardingWayAnyOf string

// List of TrafficForwardingWay_anyOf
const (
	N6 TrafficForwardingWayAnyOf = "N6"
	N19 TrafficForwardingWayAnyOf = "N19"
	LOCAL_SWITCH TrafficForwardingWayAnyOf = "LOCAL_SWITCH"
)

// All allowed values of TrafficForwardingWayAnyOf enum
var AllowedTrafficForwardingWayAnyOfEnumValues = []TrafficForwardingWayAnyOf{
	"N6",
	"N19",
	"LOCAL_SWITCH",
}

func (v *TrafficForwardingWayAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := TrafficForwardingWayAnyOf(value)
	for _, existing := range AllowedTrafficForwardingWayAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid TrafficForwardingWayAnyOf", value)
}

// NewTrafficForwardingWayAnyOfFromValue returns a pointer to a valid TrafficForwardingWayAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewTrafficForwardingWayAnyOfFromValue(v string) (*TrafficForwardingWayAnyOf, error) {
	ev := TrafficForwardingWayAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for TrafficForwardingWayAnyOf: valid values are %v", v, AllowedTrafficForwardingWayAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v TrafficForwardingWayAnyOf) IsValid() bool {
	for _, existing := range AllowedTrafficForwardingWayAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to TrafficForwardingWay_anyOf value
func (v TrafficForwardingWayAnyOf) Ptr() *TrafficForwardingWayAnyOf {
	return &v
}

type NullableTrafficForwardingWayAnyOf struct {
	value *TrafficForwardingWayAnyOf
	isSet bool
}

func (v NullableTrafficForwardingWayAnyOf) Get() *TrafficForwardingWayAnyOf {
	return v.value
}

func (v *NullableTrafficForwardingWayAnyOf) Set(val *TrafficForwardingWayAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableTrafficForwardingWayAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableTrafficForwardingWayAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrafficForwardingWayAnyOf(val *TrafficForwardingWayAnyOf) *NullableTrafficForwardingWayAnyOf {
	return &NullableTrafficForwardingWayAnyOf{value: val, isSet: true}
}

func (v NullableTrafficForwardingWayAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrafficForwardingWayAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

