/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the CalledIdentityChange type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CalledIdentityChange{}

// CalledIdentityChange struct for CalledIdentityChange
type CalledIdentityChange struct {
	CalledIdentity *string `json:"calledIdentity,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ChangeTime *time.Time `json:"changeTime,omitempty"`
}

// NewCalledIdentityChange instantiates a new CalledIdentityChange object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalledIdentityChange() *CalledIdentityChange {
	this := CalledIdentityChange{}
	return &this
}

// NewCalledIdentityChangeWithDefaults instantiates a new CalledIdentityChange object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalledIdentityChangeWithDefaults() *CalledIdentityChange {
	this := CalledIdentityChange{}
	return &this
}

// GetCalledIdentity returns the CalledIdentity field value if set, zero value otherwise.
func (o *CalledIdentityChange) GetCalledIdentity() string {
	if o == nil || IsNil(o.CalledIdentity) {
		var ret string
		return ret
	}
	return *o.CalledIdentity
}

// GetCalledIdentityOk returns a tuple with the CalledIdentity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalledIdentityChange) GetCalledIdentityOk() (*string, bool) {
	if o == nil || IsNil(o.CalledIdentity) {
		return nil, false
	}
	return o.CalledIdentity, true
}

// HasCalledIdentity returns a boolean if a field has been set.
func (o *CalledIdentityChange) HasCalledIdentity() bool {
	if o != nil && !IsNil(o.CalledIdentity) {
		return true
	}

	return false
}

// SetCalledIdentity gets a reference to the given string and assigns it to the CalledIdentity field.
func (o *CalledIdentityChange) SetCalledIdentity(v string) {
	o.CalledIdentity = &v
}

// GetChangeTime returns the ChangeTime field value if set, zero value otherwise.
func (o *CalledIdentityChange) GetChangeTime() time.Time {
	if o == nil || IsNil(o.ChangeTime) {
		var ret time.Time
		return ret
	}
	return *o.ChangeTime
}

// GetChangeTimeOk returns a tuple with the ChangeTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalledIdentityChange) GetChangeTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.ChangeTime) {
		return nil, false
	}
	return o.ChangeTime, true
}

// HasChangeTime returns a boolean if a field has been set.
func (o *CalledIdentityChange) HasChangeTime() bool {
	if o != nil && !IsNil(o.ChangeTime) {
		return true
	}

	return false
}

// SetChangeTime gets a reference to the given time.Time and assigns it to the ChangeTime field.
func (o *CalledIdentityChange) SetChangeTime(v time.Time) {
	o.ChangeTime = &v
}

func (o CalledIdentityChange) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CalledIdentityChange) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CalledIdentity) {
		toSerialize["calledIdentity"] = o.CalledIdentity
	}
	if !IsNil(o.ChangeTime) {
		toSerialize["changeTime"] = o.ChangeTime
	}
	return toSerialize, nil
}

type NullableCalledIdentityChange struct {
	value *CalledIdentityChange
	isSet bool
}

func (v NullableCalledIdentityChange) Get() *CalledIdentityChange {
	return v.value
}

func (v *NullableCalledIdentityChange) Set(val *CalledIdentityChange) {
	v.value = val
	v.isSet = true
}

func (v NullableCalledIdentityChange) IsSet() bool {
	return v.isSet
}

func (v *NullableCalledIdentityChange) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalledIdentityChange(val *CalledIdentityChange) *NullableCalledIdentityChange {
	return &NullableCalledIdentityChange{value: val, isSet: true}
}

func (v NullableCalledIdentityChange) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalledIdentityChange) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
