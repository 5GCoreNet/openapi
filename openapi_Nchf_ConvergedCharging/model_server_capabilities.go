/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the ServerCapabilities type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerCapabilities{}

// ServerCapabilities struct for ServerCapabilities
type ServerCapabilities struct {
	MandatoryCapability []int32  `json:"mandatoryCapability,omitempty"`
	OptionalCapability  []int32  `json:"optionalCapability ,omitempty"`
	ServerName          []string `json:"serverName,omitempty"`
}

// NewServerCapabilities instantiates a new ServerCapabilities object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerCapabilities() *ServerCapabilities {
	this := ServerCapabilities{}
	return &this
}

// NewServerCapabilitiesWithDefaults instantiates a new ServerCapabilities object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerCapabilitiesWithDefaults() *ServerCapabilities {
	this := ServerCapabilities{}
	return &this
}

// GetMandatoryCapability returns the MandatoryCapability field value if set, zero value otherwise.
func (o *ServerCapabilities) GetMandatoryCapability() []int32 {
	if o == nil || IsNil(o.MandatoryCapability) {
		var ret []int32
		return ret
	}
	return o.MandatoryCapability
}

// GetMandatoryCapabilityOk returns a tuple with the MandatoryCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCapabilities) GetMandatoryCapabilityOk() ([]int32, bool) {
	if o == nil || IsNil(o.MandatoryCapability) {
		return nil, false
	}
	return o.MandatoryCapability, true
}

// HasMandatoryCapability returns a boolean if a field has been set.
func (o *ServerCapabilities) HasMandatoryCapability() bool {
	if o != nil && !IsNil(o.MandatoryCapability) {
		return true
	}

	return false
}

// SetMandatoryCapability gets a reference to the given []int32 and assigns it to the MandatoryCapability field.
func (o *ServerCapabilities) SetMandatoryCapability(v []int32) {
	o.MandatoryCapability = v
}

// GetOptionalCapability returns the OptionalCapability field value if set, zero value otherwise.
func (o *ServerCapabilities) GetOptionalCapability() []int32 {
	if o == nil || IsNil(o.OptionalCapability) {
		var ret []int32
		return ret
	}
	return o.OptionalCapability
}

// GetOptionalCapabilityOk returns a tuple with the OptionalCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCapabilities) GetOptionalCapabilityOk() ([]int32, bool) {
	if o == nil || IsNil(o.OptionalCapability) {
		return nil, false
	}
	return o.OptionalCapability, true
}

// HasOptionalCapability returns a boolean if a field has been set.
func (o *ServerCapabilities) HasOptionalCapability() bool {
	if o != nil && !IsNil(o.OptionalCapability) {
		return true
	}

	return false
}

// SetOptionalCapability gets a reference to the given []int32 and assigns it to the OptionalCapability field.
func (o *ServerCapabilities) SetOptionalCapability(v []int32) {
	o.OptionalCapability = v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *ServerCapabilities) GetServerName() []string {
	if o == nil || IsNil(o.ServerName) {
		var ret []string
		return ret
	}
	return o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerCapabilities) GetServerNameOk() ([]string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *ServerCapabilities) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given []string and assigns it to the ServerName field.
func (o *ServerCapabilities) SetServerName(v []string) {
	o.ServerName = v
}

func (o ServerCapabilities) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerCapabilities) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MandatoryCapability) {
		toSerialize["mandatoryCapability"] = o.MandatoryCapability
	}
	if !IsNil(o.OptionalCapability) {
		toSerialize["optionalCapability "] = o.OptionalCapability
	}
	if !IsNil(o.ServerName) {
		toSerialize["serverName"] = o.ServerName
	}
	return toSerialize, nil
}

type NullableServerCapabilities struct {
	value *ServerCapabilities
	isSet bool
}

func (v NullableServerCapabilities) Get() *ServerCapabilities {
	return v.value
}

func (v *NullableServerCapabilities) Set(val *ServerCapabilities) {
	v.value = val
	v.isSet = true
}

func (v NullableServerCapabilities) IsSet() bool {
	return v.isSet
}

func (v *NullableServerCapabilities) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerCapabilities(val *ServerCapabilities) *NullableServerCapabilities {
	return &NullableServerCapabilities{value: val, isSet: true}
}

func (v NullableServerCapabilities) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerCapabilities) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
