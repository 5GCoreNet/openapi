/*
Nchf_ConvergedCharging

ConvergedCharging Service    Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the TrunkGroupID type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &TrunkGroupID{}

// TrunkGroupID struct for TrunkGroupID
type TrunkGroupID struct {
	IncomingTrunkGroupID *string `json:"incomingTrunkGroupID,omitempty"`
	OutgoingTrunkGroupID *string `json:"outgoingTrunkGroupID,omitempty"`
}

// NewTrunkGroupID instantiates a new TrunkGroupID object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTrunkGroupID() *TrunkGroupID {
	this := TrunkGroupID{}
	return &this
}

// NewTrunkGroupIDWithDefaults instantiates a new TrunkGroupID object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTrunkGroupIDWithDefaults() *TrunkGroupID {
	this := TrunkGroupID{}
	return &this
}

// GetIncomingTrunkGroupID returns the IncomingTrunkGroupID field value if set, zero value otherwise.
func (o *TrunkGroupID) GetIncomingTrunkGroupID() string {
	if o == nil || isNil(o.IncomingTrunkGroupID) {
		var ret string
		return ret
	}
	return *o.IncomingTrunkGroupID
}

// GetIncomingTrunkGroupIDOk returns a tuple with the IncomingTrunkGroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrunkGroupID) GetIncomingTrunkGroupIDOk() (*string, bool) {
	if o == nil || isNil(o.IncomingTrunkGroupID) {
		return nil, false
	}
	return o.IncomingTrunkGroupID, true
}

// HasIncomingTrunkGroupID returns a boolean if a field has been set.
func (o *TrunkGroupID) HasIncomingTrunkGroupID() bool {
	if o != nil && !isNil(o.IncomingTrunkGroupID) {
		return true
	}

	return false
}

// SetIncomingTrunkGroupID gets a reference to the given string and assigns it to the IncomingTrunkGroupID field.
func (o *TrunkGroupID) SetIncomingTrunkGroupID(v string) {
	o.IncomingTrunkGroupID = &v
}

// GetOutgoingTrunkGroupID returns the OutgoingTrunkGroupID field value if set, zero value otherwise.
func (o *TrunkGroupID) GetOutgoingTrunkGroupID() string {
	if o == nil || isNil(o.OutgoingTrunkGroupID) {
		var ret string
		return ret
	}
	return *o.OutgoingTrunkGroupID
}

// GetOutgoingTrunkGroupIDOk returns a tuple with the OutgoingTrunkGroupID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TrunkGroupID) GetOutgoingTrunkGroupIDOk() (*string, bool) {
	if o == nil || isNil(o.OutgoingTrunkGroupID) {
		return nil, false
	}
	return o.OutgoingTrunkGroupID, true
}

// HasOutgoingTrunkGroupID returns a boolean if a field has been set.
func (o *TrunkGroupID) HasOutgoingTrunkGroupID() bool {
	if o != nil && !isNil(o.OutgoingTrunkGroupID) {
		return true
	}

	return false
}

// SetOutgoingTrunkGroupID gets a reference to the given string and assigns it to the OutgoingTrunkGroupID field.
func (o *TrunkGroupID) SetOutgoingTrunkGroupID(v string) {
	o.OutgoingTrunkGroupID = &v
}

func (o TrunkGroupID) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o TrunkGroupID) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.IncomingTrunkGroupID) {
		toSerialize["incomingTrunkGroupID"] = o.IncomingTrunkGroupID
	}
	if !isNil(o.OutgoingTrunkGroupID) {
		toSerialize["outgoingTrunkGroupID"] = o.OutgoingTrunkGroupID
	}
	return toSerialize, nil
}

type NullableTrunkGroupID struct {
	value *TrunkGroupID
	isSet bool
}

func (v NullableTrunkGroupID) Get() *TrunkGroupID {
	return v.value
}

func (v *NullableTrunkGroupID) Set(val *TrunkGroupID) {
	v.value = val
	v.isSet = true
}

func (v NullableTrunkGroupID) IsSet() bool {
	return v.isSet
}

func (v *NullableTrunkGroupID) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTrunkGroupID(val *TrunkGroupID) *NullableTrunkGroupID {
	return &NullableTrunkGroupID{value: val, isSet: true}
}

func (v NullableTrunkGroupID) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTrunkGroupID) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


