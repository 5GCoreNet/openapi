/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
)

// checks if the RegistrationChargingInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationChargingInformation{}

// RegistrationChargingInformation struct for RegistrationChargingInformation
type RegistrationChargingInformation struct {
	RegistrationMessagetype RegistrationMessageType `json:"registrationMessagetype"`
	UserInformation         *UserInformation        `json:"userInformation,omitempty"`
	UserLocationinfo        *UserLocation           `json:"userLocationinfo,omitempty"`
	PSCellInformation       *PSCellInformation      `json:"pSCellInformation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
	UetimeZone *string  `json:"uetimeZone,omitempty"`
	RATType    *RatType `json:"rATType,omitempty"`
	// string with format 'bytes' as defined in OpenAPI
	Var5GMMCapability      *string                  `json:"5GMMCapability,omitempty"`
	MICOModeIndication     *MICOModeIndication      `json:"mICOModeIndication,omitempty"`
	SmsIndication          *SmsIndication           `json:"smsIndication,omitempty"`
	TaiList                []Tai                    `json:"taiList,omitempty"`
	ServiceAreaRestriction []ServiceAreaRestriction `json:"serviceAreaRestriction,omitempty"`
	RequestedNSSAI         []Snssai                 `json:"requestedNSSAI,omitempty"`
	AllowedNSSAI           []Snssai                 `json:"allowedNSSAI,omitempty"`
	RejectedNSSAI          []Snssai                 `json:"rejectedNSSAI,omitempty"`
	NSSAIMapList           []NSSAIMap               `json:"nSSAIMapList,omitempty"`
	AmfUeNgapId            *int32                   `json:"amfUeNgapId,omitempty"`
	RanUeNgapId            *int32                   `json:"ranUeNgapId,omitempty"`
	RanNodeId              *GlobalRanNodeId         `json:"ranNodeId,omitempty"`
}

// NewRegistrationChargingInformation instantiates a new RegistrationChargingInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationChargingInformation(registrationMessagetype RegistrationMessageType) *RegistrationChargingInformation {
	this := RegistrationChargingInformation{}
	this.RegistrationMessagetype = registrationMessagetype
	return &this
}

// NewRegistrationChargingInformationWithDefaults instantiates a new RegistrationChargingInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationChargingInformationWithDefaults() *RegistrationChargingInformation {
	this := RegistrationChargingInformation{}
	return &this
}

// GetRegistrationMessagetype returns the RegistrationMessagetype field value
func (o *RegistrationChargingInformation) GetRegistrationMessagetype() RegistrationMessageType {
	if o == nil {
		var ret RegistrationMessageType
		return ret
	}

	return o.RegistrationMessagetype
}

// GetRegistrationMessagetypeOk returns a tuple with the RegistrationMessagetype field value
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRegistrationMessagetypeOk() (*RegistrationMessageType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegistrationMessagetype, true
}

// SetRegistrationMessagetype sets field value
func (o *RegistrationChargingInformation) SetRegistrationMessagetype(v RegistrationMessageType) {
	o.RegistrationMessagetype = v
}

// GetUserInformation returns the UserInformation field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetUserInformation() UserInformation {
	if o == nil || IsNil(o.UserInformation) {
		var ret UserInformation
		return ret
	}
	return *o.UserInformation
}

// GetUserInformationOk returns a tuple with the UserInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetUserInformationOk() (*UserInformation, bool) {
	if o == nil || IsNil(o.UserInformation) {
		return nil, false
	}
	return o.UserInformation, true
}

// HasUserInformation returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasUserInformation() bool {
	if o != nil && !IsNil(o.UserInformation) {
		return true
	}

	return false
}

// SetUserInformation gets a reference to the given UserInformation and assigns it to the UserInformation field.
func (o *RegistrationChargingInformation) SetUserInformation(v UserInformation) {
	o.UserInformation = &v
}

// GetUserLocationinfo returns the UserLocationinfo field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetUserLocationinfo() UserLocation {
	if o == nil || IsNil(o.UserLocationinfo) {
		var ret UserLocation
		return ret
	}
	return *o.UserLocationinfo
}

// GetUserLocationinfoOk returns a tuple with the UserLocationinfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetUserLocationinfoOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UserLocationinfo) {
		return nil, false
	}
	return o.UserLocationinfo, true
}

// HasUserLocationinfo returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasUserLocationinfo() bool {
	if o != nil && !IsNil(o.UserLocationinfo) {
		return true
	}

	return false
}

// SetUserLocationinfo gets a reference to the given UserLocation and assigns it to the UserLocationinfo field.
func (o *RegistrationChargingInformation) SetUserLocationinfo(v UserLocation) {
	o.UserLocationinfo = &v
}

// GetPSCellInformation returns the PSCellInformation field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetPSCellInformation() PSCellInformation {
	if o == nil || IsNil(o.PSCellInformation) {
		var ret PSCellInformation
		return ret
	}
	return *o.PSCellInformation
}

// GetPSCellInformationOk returns a tuple with the PSCellInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetPSCellInformationOk() (*PSCellInformation, bool) {
	if o == nil || IsNil(o.PSCellInformation) {
		return nil, false
	}
	return o.PSCellInformation, true
}

// HasPSCellInformation returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasPSCellInformation() bool {
	if o != nil && !IsNil(o.PSCellInformation) {
		return true
	}

	return false
}

// SetPSCellInformation gets a reference to the given PSCellInformation and assigns it to the PSCellInformation field.
func (o *RegistrationChargingInformation) SetPSCellInformation(v PSCellInformation) {
	o.PSCellInformation = &v
}

// GetUetimeZone returns the UetimeZone field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetUetimeZone() string {
	if o == nil || IsNil(o.UetimeZone) {
		var ret string
		return ret
	}
	return *o.UetimeZone
}

// GetUetimeZoneOk returns a tuple with the UetimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetUetimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UetimeZone) {
		return nil, false
	}
	return o.UetimeZone, true
}

// HasUetimeZone returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasUetimeZone() bool {
	if o != nil && !IsNil(o.UetimeZone) {
		return true
	}

	return false
}

// SetUetimeZone gets a reference to the given string and assigns it to the UetimeZone field.
func (o *RegistrationChargingInformation) SetUetimeZone(v string) {
	o.UetimeZone = &v
}

// GetRATType returns the RATType field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetRATType() RatType {
	if o == nil || IsNil(o.RATType) {
		var ret RatType
		return ret
	}
	return *o.RATType
}

// GetRATTypeOk returns a tuple with the RATType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRATTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RATType) {
		return nil, false
	}
	return o.RATType, true
}

// HasRATType returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasRATType() bool {
	if o != nil && !IsNil(o.RATType) {
		return true
	}

	return false
}

// SetRATType gets a reference to the given RatType and assigns it to the RATType field.
func (o *RegistrationChargingInformation) SetRATType(v RatType) {
	o.RATType = &v
}

// GetVar5GMMCapability returns the Var5GMMCapability field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetVar5GMMCapability() string {
	if o == nil || IsNil(o.Var5GMMCapability) {
		var ret string
		return ret
	}
	return *o.Var5GMMCapability
}

// GetVar5GMMCapabilityOk returns a tuple with the Var5GMMCapability field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetVar5GMMCapabilityOk() (*string, bool) {
	if o == nil || IsNil(o.Var5GMMCapability) {
		return nil, false
	}
	return o.Var5GMMCapability, true
}

// HasVar5GMMCapability returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasVar5GMMCapability() bool {
	if o != nil && !IsNil(o.Var5GMMCapability) {
		return true
	}

	return false
}

// SetVar5GMMCapability gets a reference to the given string and assigns it to the Var5GMMCapability field.
func (o *RegistrationChargingInformation) SetVar5GMMCapability(v string) {
	o.Var5GMMCapability = &v
}

// GetMICOModeIndication returns the MICOModeIndication field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetMICOModeIndication() MICOModeIndication {
	if o == nil || IsNil(o.MICOModeIndication) {
		var ret MICOModeIndication
		return ret
	}
	return *o.MICOModeIndication
}

// GetMICOModeIndicationOk returns a tuple with the MICOModeIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetMICOModeIndicationOk() (*MICOModeIndication, bool) {
	if o == nil || IsNil(o.MICOModeIndication) {
		return nil, false
	}
	return o.MICOModeIndication, true
}

// HasMICOModeIndication returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasMICOModeIndication() bool {
	if o != nil && !IsNil(o.MICOModeIndication) {
		return true
	}

	return false
}

// SetMICOModeIndication gets a reference to the given MICOModeIndication and assigns it to the MICOModeIndication field.
func (o *RegistrationChargingInformation) SetMICOModeIndication(v MICOModeIndication) {
	o.MICOModeIndication = &v
}

// GetSmsIndication returns the SmsIndication field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetSmsIndication() SmsIndication {
	if o == nil || IsNil(o.SmsIndication) {
		var ret SmsIndication
		return ret
	}
	return *o.SmsIndication
}

// GetSmsIndicationOk returns a tuple with the SmsIndication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetSmsIndicationOk() (*SmsIndication, bool) {
	if o == nil || IsNil(o.SmsIndication) {
		return nil, false
	}
	return o.SmsIndication, true
}

// HasSmsIndication returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasSmsIndication() bool {
	if o != nil && !IsNil(o.SmsIndication) {
		return true
	}

	return false
}

// SetSmsIndication gets a reference to the given SmsIndication and assigns it to the SmsIndication field.
func (o *RegistrationChargingInformation) SetSmsIndication(v SmsIndication) {
	o.SmsIndication = &v
}

// GetTaiList returns the TaiList field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetTaiList() []Tai {
	if o == nil || IsNil(o.TaiList) {
		var ret []Tai
		return ret
	}
	return o.TaiList
}

// GetTaiListOk returns a tuple with the TaiList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetTaiListOk() ([]Tai, bool) {
	if o == nil || IsNil(o.TaiList) {
		return nil, false
	}
	return o.TaiList, true
}

// HasTaiList returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasTaiList() bool {
	if o != nil && !IsNil(o.TaiList) {
		return true
	}

	return false
}

// SetTaiList gets a reference to the given []Tai and assigns it to the TaiList field.
func (o *RegistrationChargingInformation) SetTaiList(v []Tai) {
	o.TaiList = v
}

// GetServiceAreaRestriction returns the ServiceAreaRestriction field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetServiceAreaRestriction() []ServiceAreaRestriction {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		var ret []ServiceAreaRestriction
		return ret
	}
	return o.ServiceAreaRestriction
}

// GetServiceAreaRestrictionOk returns a tuple with the ServiceAreaRestriction field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetServiceAreaRestrictionOk() ([]ServiceAreaRestriction, bool) {
	if o == nil || IsNil(o.ServiceAreaRestriction) {
		return nil, false
	}
	return o.ServiceAreaRestriction, true
}

// HasServiceAreaRestriction returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasServiceAreaRestriction() bool {
	if o != nil && !IsNil(o.ServiceAreaRestriction) {
		return true
	}

	return false
}

// SetServiceAreaRestriction gets a reference to the given []ServiceAreaRestriction and assigns it to the ServiceAreaRestriction field.
func (o *RegistrationChargingInformation) SetServiceAreaRestriction(v []ServiceAreaRestriction) {
	o.ServiceAreaRestriction = v
}

// GetRequestedNSSAI returns the RequestedNSSAI field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetRequestedNSSAI() []Snssai {
	if o == nil || IsNil(o.RequestedNSSAI) {
		var ret []Snssai
		return ret
	}
	return o.RequestedNSSAI
}

// GetRequestedNSSAIOk returns a tuple with the RequestedNSSAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRequestedNSSAIOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.RequestedNSSAI) {
		return nil, false
	}
	return o.RequestedNSSAI, true
}

// HasRequestedNSSAI returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasRequestedNSSAI() bool {
	if o != nil && !IsNil(o.RequestedNSSAI) {
		return true
	}

	return false
}

// SetRequestedNSSAI gets a reference to the given []Snssai and assigns it to the RequestedNSSAI field.
func (o *RegistrationChargingInformation) SetRequestedNSSAI(v []Snssai) {
	o.RequestedNSSAI = v
}

// GetAllowedNSSAI returns the AllowedNSSAI field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetAllowedNSSAI() []Snssai {
	if o == nil || IsNil(o.AllowedNSSAI) {
		var ret []Snssai
		return ret
	}
	return o.AllowedNSSAI
}

// GetAllowedNSSAIOk returns a tuple with the AllowedNSSAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetAllowedNSSAIOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.AllowedNSSAI) {
		return nil, false
	}
	return o.AllowedNSSAI, true
}

// HasAllowedNSSAI returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasAllowedNSSAI() bool {
	if o != nil && !IsNil(o.AllowedNSSAI) {
		return true
	}

	return false
}

// SetAllowedNSSAI gets a reference to the given []Snssai and assigns it to the AllowedNSSAI field.
func (o *RegistrationChargingInformation) SetAllowedNSSAI(v []Snssai) {
	o.AllowedNSSAI = v
}

// GetRejectedNSSAI returns the RejectedNSSAI field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetRejectedNSSAI() []Snssai {
	if o == nil || IsNil(o.RejectedNSSAI) {
		var ret []Snssai
		return ret
	}
	return o.RejectedNSSAI
}

// GetRejectedNSSAIOk returns a tuple with the RejectedNSSAI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRejectedNSSAIOk() ([]Snssai, bool) {
	if o == nil || IsNil(o.RejectedNSSAI) {
		return nil, false
	}
	return o.RejectedNSSAI, true
}

// HasRejectedNSSAI returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasRejectedNSSAI() bool {
	if o != nil && !IsNil(o.RejectedNSSAI) {
		return true
	}

	return false
}

// SetRejectedNSSAI gets a reference to the given []Snssai and assigns it to the RejectedNSSAI field.
func (o *RegistrationChargingInformation) SetRejectedNSSAI(v []Snssai) {
	o.RejectedNSSAI = v
}

// GetNSSAIMapList returns the NSSAIMapList field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetNSSAIMapList() []NSSAIMap {
	if o == nil || IsNil(o.NSSAIMapList) {
		var ret []NSSAIMap
		return ret
	}
	return o.NSSAIMapList
}

// GetNSSAIMapListOk returns a tuple with the NSSAIMapList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetNSSAIMapListOk() ([]NSSAIMap, bool) {
	if o == nil || IsNil(o.NSSAIMapList) {
		return nil, false
	}
	return o.NSSAIMapList, true
}

// HasNSSAIMapList returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasNSSAIMapList() bool {
	if o != nil && !IsNil(o.NSSAIMapList) {
		return true
	}

	return false
}

// SetNSSAIMapList gets a reference to the given []NSSAIMap and assigns it to the NSSAIMapList field.
func (o *RegistrationChargingInformation) SetNSSAIMapList(v []NSSAIMap) {
	o.NSSAIMapList = v
}

// GetAmfUeNgapId returns the AmfUeNgapId field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetAmfUeNgapId() int32 {
	if o == nil || IsNil(o.AmfUeNgapId) {
		var ret int32
		return ret
	}
	return *o.AmfUeNgapId
}

// GetAmfUeNgapIdOk returns a tuple with the AmfUeNgapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetAmfUeNgapIdOk() (*int32, bool) {
	if o == nil || IsNil(o.AmfUeNgapId) {
		return nil, false
	}
	return o.AmfUeNgapId, true
}

// HasAmfUeNgapId returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasAmfUeNgapId() bool {
	if o != nil && !IsNil(o.AmfUeNgapId) {
		return true
	}

	return false
}

// SetAmfUeNgapId gets a reference to the given int32 and assigns it to the AmfUeNgapId field.
func (o *RegistrationChargingInformation) SetAmfUeNgapId(v int32) {
	o.AmfUeNgapId = &v
}

// GetRanUeNgapId returns the RanUeNgapId field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetRanUeNgapId() int32 {
	if o == nil || IsNil(o.RanUeNgapId) {
		var ret int32
		return ret
	}
	return *o.RanUeNgapId
}

// GetRanUeNgapIdOk returns a tuple with the RanUeNgapId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRanUeNgapIdOk() (*int32, bool) {
	if o == nil || IsNil(o.RanUeNgapId) {
		return nil, false
	}
	return o.RanUeNgapId, true
}

// HasRanUeNgapId returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasRanUeNgapId() bool {
	if o != nil && !IsNil(o.RanUeNgapId) {
		return true
	}

	return false
}

// SetRanUeNgapId gets a reference to the given int32 and assigns it to the RanUeNgapId field.
func (o *RegistrationChargingInformation) SetRanUeNgapId(v int32) {
	o.RanUeNgapId = &v
}

// GetRanNodeId returns the RanNodeId field value if set, zero value otherwise.
func (o *RegistrationChargingInformation) GetRanNodeId() GlobalRanNodeId {
	if o == nil || IsNil(o.RanNodeId) {
		var ret GlobalRanNodeId
		return ret
	}
	return *o.RanNodeId
}

// GetRanNodeIdOk returns a tuple with the RanNodeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegistrationChargingInformation) GetRanNodeIdOk() (*GlobalRanNodeId, bool) {
	if o == nil || IsNil(o.RanNodeId) {
		return nil, false
	}
	return o.RanNodeId, true
}

// HasRanNodeId returns a boolean if a field has been set.
func (o *RegistrationChargingInformation) HasRanNodeId() bool {
	if o != nil && !IsNil(o.RanNodeId) {
		return true
	}

	return false
}

// SetRanNodeId gets a reference to the given GlobalRanNodeId and assigns it to the RanNodeId field.
func (o *RegistrationChargingInformation) SetRanNodeId(v GlobalRanNodeId) {
	o.RanNodeId = &v
}

func (o RegistrationChargingInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationChargingInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["registrationMessagetype"] = o.RegistrationMessagetype
	if !IsNil(o.UserInformation) {
		toSerialize["userInformation"] = o.UserInformation
	}
	if !IsNil(o.UserLocationinfo) {
		toSerialize["userLocationinfo"] = o.UserLocationinfo
	}
	if !IsNil(o.PSCellInformation) {
		toSerialize["pSCellInformation"] = o.PSCellInformation
	}
	if !IsNil(o.UetimeZone) {
		toSerialize["uetimeZone"] = o.UetimeZone
	}
	if !IsNil(o.RATType) {
		toSerialize["rATType"] = o.RATType
	}
	if !IsNil(o.Var5GMMCapability) {
		toSerialize["5GMMCapability"] = o.Var5GMMCapability
	}
	if !IsNil(o.MICOModeIndication) {
		toSerialize["mICOModeIndication"] = o.MICOModeIndication
	}
	if !IsNil(o.SmsIndication) {
		toSerialize["smsIndication"] = o.SmsIndication
	}
	if !IsNil(o.TaiList) {
		toSerialize["taiList"] = o.TaiList
	}
	if !IsNil(o.ServiceAreaRestriction) {
		toSerialize["serviceAreaRestriction"] = o.ServiceAreaRestriction
	}
	if !IsNil(o.RequestedNSSAI) {
		toSerialize["requestedNSSAI"] = o.RequestedNSSAI
	}
	if !IsNil(o.AllowedNSSAI) {
		toSerialize["allowedNSSAI"] = o.AllowedNSSAI
	}
	if !IsNil(o.RejectedNSSAI) {
		toSerialize["rejectedNSSAI"] = o.RejectedNSSAI
	}
	if !IsNil(o.NSSAIMapList) {
		toSerialize["nSSAIMapList"] = o.NSSAIMapList
	}
	if !IsNil(o.AmfUeNgapId) {
		toSerialize["amfUeNgapId"] = o.AmfUeNgapId
	}
	if !IsNil(o.RanUeNgapId) {
		toSerialize["ranUeNgapId"] = o.RanUeNgapId
	}
	if !IsNil(o.RanNodeId) {
		toSerialize["ranNodeId"] = o.RanNodeId
	}
	return toSerialize, nil
}

type NullableRegistrationChargingInformation struct {
	value *RegistrationChargingInformation
	isSet bool
}

func (v NullableRegistrationChargingInformation) Get() *RegistrationChargingInformation {
	return v.value
}

func (v *NullableRegistrationChargingInformation) Set(val *RegistrationChargingInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationChargingInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationChargingInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationChargingInformation(val *RegistrationChargingInformation) *NullableRegistrationChargingInformation {
	return &NullableRegistrationChargingInformation{value: val, isSet: true}
}

func (v NullableRegistrationChargingInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationChargingInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
