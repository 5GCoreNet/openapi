/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved. 

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the ChargingDataRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChargingDataRequest{}

// ChargingDataRequest struct for ChargingDataRequest
type ChargingDataRequest struct {
	// String identifying a Supi that shall contain either an IMSI, a network specific identifier, a Global Cable Identifier (GCI) or a Global Line Identifier (GLI) as specified in clause  2.2A of 3GPP TS 23.003. It shall be formatted as follows  - for an IMSI \"imsi-<imsi>\", where <imsi> shall be formatted according to clause 2.2    of 3GPP TS 23.003 that describes an IMSI.  - for a network specific identifier \"nai-<nai>, where <nai> shall be formatted    according to clause 28.7.2 of 3GPP TS 23.003 that describes an NAI.  - for a GCI \"gci-<gci>\", where <gci> shall be formatted according to clause 28.15.2    of 3GPP TS 23.003.  - for a GLI \"gli-<gli>\", where <gli> shall be formatted according to clause 28.16.2 of    3GPP TS 23.003.To enable that the value is used as part of an URI, the string shall    only contain characters allowed according to the \"lower-with-hyphen\" naming convention    defined in 3GPP TS 29.501. 
	SubscriberIdentifier *string `json:"subscriberIdentifier,omitempty"`
	TenantIdentifier *string `json:"tenantIdentifier,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	// Deprecated
	ChargingId *int32 `json:"chargingId,omitempty"`
	MnSConsumerIdentifier *string `json:"mnSConsumerIdentifier,omitempty"`
	NfConsumerIdentification NFIdentification `json:"nfConsumerIdentification"`
	// string with format 'date-time' as defined in OpenAPI.
	InvocationTimeStamp time.Time `json:"invocationTimeStamp"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer. 
	InvocationSequenceNumber int32 `json:"invocationSequenceNumber"`
	RetransmissionIndicator *bool `json:"retransmissionIndicator,omitempty"`
	OneTimeEvent *bool `json:"oneTimeEvent,omitempty"`
	OneTimeEventType *OneTimeEventType `json:"oneTimeEventType,omitempty"`
	// String providing an URI formatted according to RFC 3986.
	NotifyUri *string `json:"notifyUri,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
	ServiceSpecificationInfo *string `json:"serviceSpecificationInfo,omitempty"`
	MultipleUnitUsage []MultipleUnitUsage `json:"multipleUnitUsage,omitempty"`
	Triggers []Trigger `json:"triggers,omitempty"`
	Easid *string `json:"easid,omitempty"`
	Ednid *string `json:"ednid,omitempty"`
	EASProviderIdentifier *string `json:"eASProviderIdentifier,omitempty"`
	PDUSessionChargingInformation *PDUSessionChargingInformation `json:"pDUSessionChargingInformation,omitempty"`
	RoamingQBCInformation *RoamingQBCInformation `json:"roamingQBCInformation,omitempty"`
	SMSChargingInformation *SMSChargingInformation `json:"sMSChargingInformation,omitempty"`
	NEFChargingInformation *NEFChargingInformation `json:"nEFChargingInformation,omitempty"`
	RegistrationChargingInformation *RegistrationChargingInformation `json:"registrationChargingInformation,omitempty"`
	N2ConnectionChargingInformation *N2ConnectionChargingInformation `json:"n2ConnectionChargingInformation,omitempty"`
	LocationReportingChargingInformation *LocationReportingChargingInformation `json:"locationReportingChargingInformation,omitempty"`
	NSPAChargingInformation *NSPAChargingInformation `json:"nSPAChargingInformation,omitempty"`
	NSMChargingInformation *NSMChargingInformation `json:"nSMChargingInformation,omitempty"`
	MMTelChargingInformation *MMTelChargingInformation `json:"mMTelChargingInformation,omitempty"`
	IMSChargingInformation *IMSChargingInformation `json:"iMSChargingInformation,omitempty"`
	EdgeInfrastructureUsageChargingInformation *EdgeInfrastructureUsageChargingInformation `json:"edgeInfrastructureUsageChargingInformation&#39;,omitempty"`
	EASDeploymentChargingInformation *EASDeploymentChargingInformation `json:"eASDeploymentChargingInformation,omitempty"`
	DirectEdgeEnablingServiceChargingInformation *NEFChargingInformation `json:"directEdgeEnablingServiceChargingInformation,omitempty"`
	ExposedEdgeEnablingServiceChargingInformation *NEFChargingInformation `json:"exposedEdgeEnablingServiceChargingInformation,omitempty"`
	ProSeChargingInformation *ProseChargingInformation `json:"proSeChargingInformation,omitempty"`
	MMSChargingInformation *MMSChargingInformation `json:"mMSChargingInformation,omitempty"`
}

// NewChargingDataRequest instantiates a new ChargingDataRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChargingDataRequest(nfConsumerIdentification NFIdentification, invocationTimeStamp time.Time, invocationSequenceNumber int32) *ChargingDataRequest {
	this := ChargingDataRequest{}
	this.NfConsumerIdentification = nfConsumerIdentification
	this.InvocationTimeStamp = invocationTimeStamp
	this.InvocationSequenceNumber = invocationSequenceNumber
	return &this
}

// NewChargingDataRequestWithDefaults instantiates a new ChargingDataRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChargingDataRequestWithDefaults() *ChargingDataRequest {
	this := ChargingDataRequest{}
	return &this
}

// GetSubscriberIdentifier returns the SubscriberIdentifier field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetSubscriberIdentifier() string {
	if o == nil || IsNil(o.SubscriberIdentifier) {
		var ret string
		return ret
	}
	return *o.SubscriberIdentifier
}

// GetSubscriberIdentifierOk returns a tuple with the SubscriberIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetSubscriberIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.SubscriberIdentifier) {
		return nil, false
	}
	return o.SubscriberIdentifier, true
}

// HasSubscriberIdentifier returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasSubscriberIdentifier() bool {
	if o != nil && !IsNil(o.SubscriberIdentifier) {
		return true
	}

	return false
}

// SetSubscriberIdentifier gets a reference to the given string and assigns it to the SubscriberIdentifier field.
func (o *ChargingDataRequest) SetSubscriberIdentifier(v string) {
	o.SubscriberIdentifier = &v
}

// GetTenantIdentifier returns the TenantIdentifier field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetTenantIdentifier() string {
	if o == nil || IsNil(o.TenantIdentifier) {
		var ret string
		return ret
	}
	return *o.TenantIdentifier
}

// GetTenantIdentifierOk returns a tuple with the TenantIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetTenantIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.TenantIdentifier) {
		return nil, false
	}
	return o.TenantIdentifier, true
}

// HasTenantIdentifier returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasTenantIdentifier() bool {
	if o != nil && !IsNil(o.TenantIdentifier) {
		return true
	}

	return false
}

// SetTenantIdentifier gets a reference to the given string and assigns it to the TenantIdentifier field.
func (o *ChargingDataRequest) SetTenantIdentifier(v string) {
	o.TenantIdentifier = &v
}

// GetChargingId returns the ChargingId field value if set, zero value otherwise.
// Deprecated
func (o *ChargingDataRequest) GetChargingId() int32 {
	if o == nil || IsNil(o.ChargingId) {
		var ret int32
		return ret
	}
	return *o.ChargingId
}

// GetChargingIdOk returns a tuple with the ChargingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ChargingDataRequest) GetChargingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ChargingId) {
		return nil, false
	}
	return o.ChargingId, true
}

// HasChargingId returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasChargingId() bool {
	if o != nil && !IsNil(o.ChargingId) {
		return true
	}

	return false
}

// SetChargingId gets a reference to the given int32 and assigns it to the ChargingId field.
// Deprecated
func (o *ChargingDataRequest) SetChargingId(v int32) {
	o.ChargingId = &v
}

// GetMnSConsumerIdentifier returns the MnSConsumerIdentifier field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetMnSConsumerIdentifier() string {
	if o == nil || IsNil(o.MnSConsumerIdentifier) {
		var ret string
		return ret
	}
	return *o.MnSConsumerIdentifier
}

// GetMnSConsumerIdentifierOk returns a tuple with the MnSConsumerIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetMnSConsumerIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.MnSConsumerIdentifier) {
		return nil, false
	}
	return o.MnSConsumerIdentifier, true
}

// HasMnSConsumerIdentifier returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasMnSConsumerIdentifier() bool {
	if o != nil && !IsNil(o.MnSConsumerIdentifier) {
		return true
	}

	return false
}

// SetMnSConsumerIdentifier gets a reference to the given string and assigns it to the MnSConsumerIdentifier field.
func (o *ChargingDataRequest) SetMnSConsumerIdentifier(v string) {
	o.MnSConsumerIdentifier = &v
}

// GetNfConsumerIdentification returns the NfConsumerIdentification field value
func (o *ChargingDataRequest) GetNfConsumerIdentification() NFIdentification {
	if o == nil {
		var ret NFIdentification
		return ret
	}

	return o.NfConsumerIdentification
}

// GetNfConsumerIdentificationOk returns a tuple with the NfConsumerIdentification field value
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetNfConsumerIdentificationOk() (*NFIdentification, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NfConsumerIdentification, true
}

// SetNfConsumerIdentification sets field value
func (o *ChargingDataRequest) SetNfConsumerIdentification(v NFIdentification) {
	o.NfConsumerIdentification = v
}

// GetInvocationTimeStamp returns the InvocationTimeStamp field value
func (o *ChargingDataRequest) GetInvocationTimeStamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.InvocationTimeStamp
}

// GetInvocationTimeStampOk returns a tuple with the InvocationTimeStamp field value
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetInvocationTimeStampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvocationTimeStamp, true
}

// SetInvocationTimeStamp sets field value
func (o *ChargingDataRequest) SetInvocationTimeStamp(v time.Time) {
	o.InvocationTimeStamp = v
}

// GetInvocationSequenceNumber returns the InvocationSequenceNumber field value
func (o *ChargingDataRequest) GetInvocationSequenceNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InvocationSequenceNumber
}

// GetInvocationSequenceNumberOk returns a tuple with the InvocationSequenceNumber field value
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetInvocationSequenceNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InvocationSequenceNumber, true
}

// SetInvocationSequenceNumber sets field value
func (o *ChargingDataRequest) SetInvocationSequenceNumber(v int32) {
	o.InvocationSequenceNumber = v
}

// GetRetransmissionIndicator returns the RetransmissionIndicator field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetRetransmissionIndicator() bool {
	if o == nil || IsNil(o.RetransmissionIndicator) {
		var ret bool
		return ret
	}
	return *o.RetransmissionIndicator
}

// GetRetransmissionIndicatorOk returns a tuple with the RetransmissionIndicator field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetRetransmissionIndicatorOk() (*bool, bool) {
	if o == nil || IsNil(o.RetransmissionIndicator) {
		return nil, false
	}
	return o.RetransmissionIndicator, true
}

// HasRetransmissionIndicator returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasRetransmissionIndicator() bool {
	if o != nil && !IsNil(o.RetransmissionIndicator) {
		return true
	}

	return false
}

// SetRetransmissionIndicator gets a reference to the given bool and assigns it to the RetransmissionIndicator field.
func (o *ChargingDataRequest) SetRetransmissionIndicator(v bool) {
	o.RetransmissionIndicator = &v
}

// GetOneTimeEvent returns the OneTimeEvent field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetOneTimeEvent() bool {
	if o == nil || IsNil(o.OneTimeEvent) {
		var ret bool
		return ret
	}
	return *o.OneTimeEvent
}

// GetOneTimeEventOk returns a tuple with the OneTimeEvent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetOneTimeEventOk() (*bool, bool) {
	if o == nil || IsNil(o.OneTimeEvent) {
		return nil, false
	}
	return o.OneTimeEvent, true
}

// HasOneTimeEvent returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasOneTimeEvent() bool {
	if o != nil && !IsNil(o.OneTimeEvent) {
		return true
	}

	return false
}

// SetOneTimeEvent gets a reference to the given bool and assigns it to the OneTimeEvent field.
func (o *ChargingDataRequest) SetOneTimeEvent(v bool) {
	o.OneTimeEvent = &v
}

// GetOneTimeEventType returns the OneTimeEventType field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetOneTimeEventType() OneTimeEventType {
	if o == nil || IsNil(o.OneTimeEventType) {
		var ret OneTimeEventType
		return ret
	}
	return *o.OneTimeEventType
}

// GetOneTimeEventTypeOk returns a tuple with the OneTimeEventType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetOneTimeEventTypeOk() (*OneTimeEventType, bool) {
	if o == nil || IsNil(o.OneTimeEventType) {
		return nil, false
	}
	return o.OneTimeEventType, true
}

// HasOneTimeEventType returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasOneTimeEventType() bool {
	if o != nil && !IsNil(o.OneTimeEventType) {
		return true
	}

	return false
}

// SetOneTimeEventType gets a reference to the given OneTimeEventType and assigns it to the OneTimeEventType field.
func (o *ChargingDataRequest) SetOneTimeEventType(v OneTimeEventType) {
	o.OneTimeEventType = &v
}

// GetNotifyUri returns the NotifyUri field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetNotifyUri() string {
	if o == nil || IsNil(o.NotifyUri) {
		var ret string
		return ret
	}
	return *o.NotifyUri
}

// GetNotifyUriOk returns a tuple with the NotifyUri field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetNotifyUriOk() (*string, bool) {
	if o == nil || IsNil(o.NotifyUri) {
		return nil, false
	}
	return o.NotifyUri, true
}

// HasNotifyUri returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasNotifyUri() bool {
	if o != nil && !IsNil(o.NotifyUri) {
		return true
	}

	return false
}

// SetNotifyUri gets a reference to the given string and assigns it to the NotifyUri field.
func (o *ChargingDataRequest) SetNotifyUri(v string) {
	o.NotifyUri = &v
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetSupportedFeatures() string {
	if o == nil || IsNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || IsNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasSupportedFeatures() bool {
	if o != nil && !IsNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *ChargingDataRequest) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

// GetServiceSpecificationInfo returns the ServiceSpecificationInfo field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetServiceSpecificationInfo() string {
	if o == nil || IsNil(o.ServiceSpecificationInfo) {
		var ret string
		return ret
	}
	return *o.ServiceSpecificationInfo
}

// GetServiceSpecificationInfoOk returns a tuple with the ServiceSpecificationInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetServiceSpecificationInfoOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceSpecificationInfo) {
		return nil, false
	}
	return o.ServiceSpecificationInfo, true
}

// HasServiceSpecificationInfo returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasServiceSpecificationInfo() bool {
	if o != nil && !IsNil(o.ServiceSpecificationInfo) {
		return true
	}

	return false
}

// SetServiceSpecificationInfo gets a reference to the given string and assigns it to the ServiceSpecificationInfo field.
func (o *ChargingDataRequest) SetServiceSpecificationInfo(v string) {
	o.ServiceSpecificationInfo = &v
}

// GetMultipleUnitUsage returns the MultipleUnitUsage field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetMultipleUnitUsage() []MultipleUnitUsage {
	if o == nil || IsNil(o.MultipleUnitUsage) {
		var ret []MultipleUnitUsage
		return ret
	}
	return o.MultipleUnitUsage
}

// GetMultipleUnitUsageOk returns a tuple with the MultipleUnitUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetMultipleUnitUsageOk() ([]MultipleUnitUsage, bool) {
	if o == nil || IsNil(o.MultipleUnitUsage) {
		return nil, false
	}
	return o.MultipleUnitUsage, true
}

// HasMultipleUnitUsage returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasMultipleUnitUsage() bool {
	if o != nil && !IsNil(o.MultipleUnitUsage) {
		return true
	}

	return false
}

// SetMultipleUnitUsage gets a reference to the given []MultipleUnitUsage and assigns it to the MultipleUnitUsage field.
func (o *ChargingDataRequest) SetMultipleUnitUsage(v []MultipleUnitUsage) {
	o.MultipleUnitUsage = v
}

// GetTriggers returns the Triggers field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetTriggers() []Trigger {
	if o == nil || IsNil(o.Triggers) {
		var ret []Trigger
		return ret
	}
	return o.Triggers
}

// GetTriggersOk returns a tuple with the Triggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetTriggersOk() ([]Trigger, bool) {
	if o == nil || IsNil(o.Triggers) {
		return nil, false
	}
	return o.Triggers, true
}

// HasTriggers returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasTriggers() bool {
	if o != nil && !IsNil(o.Triggers) {
		return true
	}

	return false
}

// SetTriggers gets a reference to the given []Trigger and assigns it to the Triggers field.
func (o *ChargingDataRequest) SetTriggers(v []Trigger) {
	o.Triggers = v
}

// GetEasid returns the Easid field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetEasid() string {
	if o == nil || IsNil(o.Easid) {
		var ret string
		return ret
	}
	return *o.Easid
}

// GetEasidOk returns a tuple with the Easid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetEasidOk() (*string, bool) {
	if o == nil || IsNil(o.Easid) {
		return nil, false
	}
	return o.Easid, true
}

// HasEasid returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasEasid() bool {
	if o != nil && !IsNil(o.Easid) {
		return true
	}

	return false
}

// SetEasid gets a reference to the given string and assigns it to the Easid field.
func (o *ChargingDataRequest) SetEasid(v string) {
	o.Easid = &v
}

// GetEdnid returns the Ednid field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetEdnid() string {
	if o == nil || IsNil(o.Ednid) {
		var ret string
		return ret
	}
	return *o.Ednid
}

// GetEdnidOk returns a tuple with the Ednid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetEdnidOk() (*string, bool) {
	if o == nil || IsNil(o.Ednid) {
		return nil, false
	}
	return o.Ednid, true
}

// HasEdnid returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasEdnid() bool {
	if o != nil && !IsNil(o.Ednid) {
		return true
	}

	return false
}

// SetEdnid gets a reference to the given string and assigns it to the Ednid field.
func (o *ChargingDataRequest) SetEdnid(v string) {
	o.Ednid = &v
}

// GetEASProviderIdentifier returns the EASProviderIdentifier field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetEASProviderIdentifier() string {
	if o == nil || IsNil(o.EASProviderIdentifier) {
		var ret string
		return ret
	}
	return *o.EASProviderIdentifier
}

// GetEASProviderIdentifierOk returns a tuple with the EASProviderIdentifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetEASProviderIdentifierOk() (*string, bool) {
	if o == nil || IsNil(o.EASProviderIdentifier) {
		return nil, false
	}
	return o.EASProviderIdentifier, true
}

// HasEASProviderIdentifier returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasEASProviderIdentifier() bool {
	if o != nil && !IsNil(o.EASProviderIdentifier) {
		return true
	}

	return false
}

// SetEASProviderIdentifier gets a reference to the given string and assigns it to the EASProviderIdentifier field.
func (o *ChargingDataRequest) SetEASProviderIdentifier(v string) {
	o.EASProviderIdentifier = &v
}

// GetPDUSessionChargingInformation returns the PDUSessionChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetPDUSessionChargingInformation() PDUSessionChargingInformation {
	if o == nil || IsNil(o.PDUSessionChargingInformation) {
		var ret PDUSessionChargingInformation
		return ret
	}
	return *o.PDUSessionChargingInformation
}

// GetPDUSessionChargingInformationOk returns a tuple with the PDUSessionChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetPDUSessionChargingInformationOk() (*PDUSessionChargingInformation, bool) {
	if o == nil || IsNil(o.PDUSessionChargingInformation) {
		return nil, false
	}
	return o.PDUSessionChargingInformation, true
}

// HasPDUSessionChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasPDUSessionChargingInformation() bool {
	if o != nil && !IsNil(o.PDUSessionChargingInformation) {
		return true
	}

	return false
}

// SetPDUSessionChargingInformation gets a reference to the given PDUSessionChargingInformation and assigns it to the PDUSessionChargingInformation field.
func (o *ChargingDataRequest) SetPDUSessionChargingInformation(v PDUSessionChargingInformation) {
	o.PDUSessionChargingInformation = &v
}

// GetRoamingQBCInformation returns the RoamingQBCInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetRoamingQBCInformation() RoamingQBCInformation {
	if o == nil || IsNil(o.RoamingQBCInformation) {
		var ret RoamingQBCInformation
		return ret
	}
	return *o.RoamingQBCInformation
}

// GetRoamingQBCInformationOk returns a tuple with the RoamingQBCInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetRoamingQBCInformationOk() (*RoamingQBCInformation, bool) {
	if o == nil || IsNil(o.RoamingQBCInformation) {
		return nil, false
	}
	return o.RoamingQBCInformation, true
}

// HasRoamingQBCInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasRoamingQBCInformation() bool {
	if o != nil && !IsNil(o.RoamingQBCInformation) {
		return true
	}

	return false
}

// SetRoamingQBCInformation gets a reference to the given RoamingQBCInformation and assigns it to the RoamingQBCInformation field.
func (o *ChargingDataRequest) SetRoamingQBCInformation(v RoamingQBCInformation) {
	o.RoamingQBCInformation = &v
}

// GetSMSChargingInformation returns the SMSChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetSMSChargingInformation() SMSChargingInformation {
	if o == nil || IsNil(o.SMSChargingInformation) {
		var ret SMSChargingInformation
		return ret
	}
	return *o.SMSChargingInformation
}

// GetSMSChargingInformationOk returns a tuple with the SMSChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetSMSChargingInformationOk() (*SMSChargingInformation, bool) {
	if o == nil || IsNil(o.SMSChargingInformation) {
		return nil, false
	}
	return o.SMSChargingInformation, true
}

// HasSMSChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasSMSChargingInformation() bool {
	if o != nil && !IsNil(o.SMSChargingInformation) {
		return true
	}

	return false
}

// SetSMSChargingInformation gets a reference to the given SMSChargingInformation and assigns it to the SMSChargingInformation field.
func (o *ChargingDataRequest) SetSMSChargingInformation(v SMSChargingInformation) {
	o.SMSChargingInformation = &v
}

// GetNEFChargingInformation returns the NEFChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetNEFChargingInformation() NEFChargingInformation {
	if o == nil || IsNil(o.NEFChargingInformation) {
		var ret NEFChargingInformation
		return ret
	}
	return *o.NEFChargingInformation
}

// GetNEFChargingInformationOk returns a tuple with the NEFChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetNEFChargingInformationOk() (*NEFChargingInformation, bool) {
	if o == nil || IsNil(o.NEFChargingInformation) {
		return nil, false
	}
	return o.NEFChargingInformation, true
}

// HasNEFChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasNEFChargingInformation() bool {
	if o != nil && !IsNil(o.NEFChargingInformation) {
		return true
	}

	return false
}

// SetNEFChargingInformation gets a reference to the given NEFChargingInformation and assigns it to the NEFChargingInformation field.
func (o *ChargingDataRequest) SetNEFChargingInformation(v NEFChargingInformation) {
	o.NEFChargingInformation = &v
}

// GetRegistrationChargingInformation returns the RegistrationChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetRegistrationChargingInformation() RegistrationChargingInformation {
	if o == nil || IsNil(o.RegistrationChargingInformation) {
		var ret RegistrationChargingInformation
		return ret
	}
	return *o.RegistrationChargingInformation
}

// GetRegistrationChargingInformationOk returns a tuple with the RegistrationChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetRegistrationChargingInformationOk() (*RegistrationChargingInformation, bool) {
	if o == nil || IsNil(o.RegistrationChargingInformation) {
		return nil, false
	}
	return o.RegistrationChargingInformation, true
}

// HasRegistrationChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasRegistrationChargingInformation() bool {
	if o != nil && !IsNil(o.RegistrationChargingInformation) {
		return true
	}

	return false
}

// SetRegistrationChargingInformation gets a reference to the given RegistrationChargingInformation and assigns it to the RegistrationChargingInformation field.
func (o *ChargingDataRequest) SetRegistrationChargingInformation(v RegistrationChargingInformation) {
	o.RegistrationChargingInformation = &v
}

// GetN2ConnectionChargingInformation returns the N2ConnectionChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetN2ConnectionChargingInformation() N2ConnectionChargingInformation {
	if o == nil || IsNil(o.N2ConnectionChargingInformation) {
		var ret N2ConnectionChargingInformation
		return ret
	}
	return *o.N2ConnectionChargingInformation
}

// GetN2ConnectionChargingInformationOk returns a tuple with the N2ConnectionChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetN2ConnectionChargingInformationOk() (*N2ConnectionChargingInformation, bool) {
	if o == nil || IsNil(o.N2ConnectionChargingInformation) {
		return nil, false
	}
	return o.N2ConnectionChargingInformation, true
}

// HasN2ConnectionChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasN2ConnectionChargingInformation() bool {
	if o != nil && !IsNil(o.N2ConnectionChargingInformation) {
		return true
	}

	return false
}

// SetN2ConnectionChargingInformation gets a reference to the given N2ConnectionChargingInformation and assigns it to the N2ConnectionChargingInformation field.
func (o *ChargingDataRequest) SetN2ConnectionChargingInformation(v N2ConnectionChargingInformation) {
	o.N2ConnectionChargingInformation = &v
}

// GetLocationReportingChargingInformation returns the LocationReportingChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetLocationReportingChargingInformation() LocationReportingChargingInformation {
	if o == nil || IsNil(o.LocationReportingChargingInformation) {
		var ret LocationReportingChargingInformation
		return ret
	}
	return *o.LocationReportingChargingInformation
}

// GetLocationReportingChargingInformationOk returns a tuple with the LocationReportingChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetLocationReportingChargingInformationOk() (*LocationReportingChargingInformation, bool) {
	if o == nil || IsNil(o.LocationReportingChargingInformation) {
		return nil, false
	}
	return o.LocationReportingChargingInformation, true
}

// HasLocationReportingChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasLocationReportingChargingInformation() bool {
	if o != nil && !IsNil(o.LocationReportingChargingInformation) {
		return true
	}

	return false
}

// SetLocationReportingChargingInformation gets a reference to the given LocationReportingChargingInformation and assigns it to the LocationReportingChargingInformation field.
func (o *ChargingDataRequest) SetLocationReportingChargingInformation(v LocationReportingChargingInformation) {
	o.LocationReportingChargingInformation = &v
}

// GetNSPAChargingInformation returns the NSPAChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetNSPAChargingInformation() NSPAChargingInformation {
	if o == nil || IsNil(o.NSPAChargingInformation) {
		var ret NSPAChargingInformation
		return ret
	}
	return *o.NSPAChargingInformation
}

// GetNSPAChargingInformationOk returns a tuple with the NSPAChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetNSPAChargingInformationOk() (*NSPAChargingInformation, bool) {
	if o == nil || IsNil(o.NSPAChargingInformation) {
		return nil, false
	}
	return o.NSPAChargingInformation, true
}

// HasNSPAChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasNSPAChargingInformation() bool {
	if o != nil && !IsNil(o.NSPAChargingInformation) {
		return true
	}

	return false
}

// SetNSPAChargingInformation gets a reference to the given NSPAChargingInformation and assigns it to the NSPAChargingInformation field.
func (o *ChargingDataRequest) SetNSPAChargingInformation(v NSPAChargingInformation) {
	o.NSPAChargingInformation = &v
}

// GetNSMChargingInformation returns the NSMChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetNSMChargingInformation() NSMChargingInformation {
	if o == nil || IsNil(o.NSMChargingInformation) {
		var ret NSMChargingInformation
		return ret
	}
	return *o.NSMChargingInformation
}

// GetNSMChargingInformationOk returns a tuple with the NSMChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetNSMChargingInformationOk() (*NSMChargingInformation, bool) {
	if o == nil || IsNil(o.NSMChargingInformation) {
		return nil, false
	}
	return o.NSMChargingInformation, true
}

// HasNSMChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasNSMChargingInformation() bool {
	if o != nil && !IsNil(o.NSMChargingInformation) {
		return true
	}

	return false
}

// SetNSMChargingInformation gets a reference to the given NSMChargingInformation and assigns it to the NSMChargingInformation field.
func (o *ChargingDataRequest) SetNSMChargingInformation(v NSMChargingInformation) {
	o.NSMChargingInformation = &v
}

// GetMMTelChargingInformation returns the MMTelChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetMMTelChargingInformation() MMTelChargingInformation {
	if o == nil || IsNil(o.MMTelChargingInformation) {
		var ret MMTelChargingInformation
		return ret
	}
	return *o.MMTelChargingInformation
}

// GetMMTelChargingInformationOk returns a tuple with the MMTelChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetMMTelChargingInformationOk() (*MMTelChargingInformation, bool) {
	if o == nil || IsNil(o.MMTelChargingInformation) {
		return nil, false
	}
	return o.MMTelChargingInformation, true
}

// HasMMTelChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasMMTelChargingInformation() bool {
	if o != nil && !IsNil(o.MMTelChargingInformation) {
		return true
	}

	return false
}

// SetMMTelChargingInformation gets a reference to the given MMTelChargingInformation and assigns it to the MMTelChargingInformation field.
func (o *ChargingDataRequest) SetMMTelChargingInformation(v MMTelChargingInformation) {
	o.MMTelChargingInformation = &v
}

// GetIMSChargingInformation returns the IMSChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetIMSChargingInformation() IMSChargingInformation {
	if o == nil || IsNil(o.IMSChargingInformation) {
		var ret IMSChargingInformation
		return ret
	}
	return *o.IMSChargingInformation
}

// GetIMSChargingInformationOk returns a tuple with the IMSChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetIMSChargingInformationOk() (*IMSChargingInformation, bool) {
	if o == nil || IsNil(o.IMSChargingInformation) {
		return nil, false
	}
	return o.IMSChargingInformation, true
}

// HasIMSChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasIMSChargingInformation() bool {
	if o != nil && !IsNil(o.IMSChargingInformation) {
		return true
	}

	return false
}

// SetIMSChargingInformation gets a reference to the given IMSChargingInformation and assigns it to the IMSChargingInformation field.
func (o *ChargingDataRequest) SetIMSChargingInformation(v IMSChargingInformation) {
	o.IMSChargingInformation = &v
}

// GetEdgeInfrastructureUsageChargingInformation returns the EdgeInfrastructureUsageChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetEdgeInfrastructureUsageChargingInformation() EdgeInfrastructureUsageChargingInformation {
	if o == nil || IsNil(o.EdgeInfrastructureUsageChargingInformation) {
		var ret EdgeInfrastructureUsageChargingInformation
		return ret
	}
	return *o.EdgeInfrastructureUsageChargingInformation
}

// GetEdgeInfrastructureUsageChargingInformationOk returns a tuple with the EdgeInfrastructureUsageChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetEdgeInfrastructureUsageChargingInformationOk() (*EdgeInfrastructureUsageChargingInformation, bool) {
	if o == nil || IsNil(o.EdgeInfrastructureUsageChargingInformation) {
		return nil, false
	}
	return o.EdgeInfrastructureUsageChargingInformation, true
}

// HasEdgeInfrastructureUsageChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasEdgeInfrastructureUsageChargingInformation() bool {
	if o != nil && !IsNil(o.EdgeInfrastructureUsageChargingInformation) {
		return true
	}

	return false
}

// SetEdgeInfrastructureUsageChargingInformation gets a reference to the given EdgeInfrastructureUsageChargingInformation and assigns it to the EdgeInfrastructureUsageChargingInformation field.
func (o *ChargingDataRequest) SetEdgeInfrastructureUsageChargingInformation(v EdgeInfrastructureUsageChargingInformation) {
	o.EdgeInfrastructureUsageChargingInformation = &v
}

// GetEASDeploymentChargingInformation returns the EASDeploymentChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetEASDeploymentChargingInformation() EASDeploymentChargingInformation {
	if o == nil || IsNil(o.EASDeploymentChargingInformation) {
		var ret EASDeploymentChargingInformation
		return ret
	}
	return *o.EASDeploymentChargingInformation
}

// GetEASDeploymentChargingInformationOk returns a tuple with the EASDeploymentChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetEASDeploymentChargingInformationOk() (*EASDeploymentChargingInformation, bool) {
	if o == nil || IsNil(o.EASDeploymentChargingInformation) {
		return nil, false
	}
	return o.EASDeploymentChargingInformation, true
}

// HasEASDeploymentChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasEASDeploymentChargingInformation() bool {
	if o != nil && !IsNil(o.EASDeploymentChargingInformation) {
		return true
	}

	return false
}

// SetEASDeploymentChargingInformation gets a reference to the given EASDeploymentChargingInformation and assigns it to the EASDeploymentChargingInformation field.
func (o *ChargingDataRequest) SetEASDeploymentChargingInformation(v EASDeploymentChargingInformation) {
	o.EASDeploymentChargingInformation = &v
}

// GetDirectEdgeEnablingServiceChargingInformation returns the DirectEdgeEnablingServiceChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetDirectEdgeEnablingServiceChargingInformation() NEFChargingInformation {
	if o == nil || IsNil(o.DirectEdgeEnablingServiceChargingInformation) {
		var ret NEFChargingInformation
		return ret
	}
	return *o.DirectEdgeEnablingServiceChargingInformation
}

// GetDirectEdgeEnablingServiceChargingInformationOk returns a tuple with the DirectEdgeEnablingServiceChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetDirectEdgeEnablingServiceChargingInformationOk() (*NEFChargingInformation, bool) {
	if o == nil || IsNil(o.DirectEdgeEnablingServiceChargingInformation) {
		return nil, false
	}
	return o.DirectEdgeEnablingServiceChargingInformation, true
}

// HasDirectEdgeEnablingServiceChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasDirectEdgeEnablingServiceChargingInformation() bool {
	if o != nil && !IsNil(o.DirectEdgeEnablingServiceChargingInformation) {
		return true
	}

	return false
}

// SetDirectEdgeEnablingServiceChargingInformation gets a reference to the given NEFChargingInformation and assigns it to the DirectEdgeEnablingServiceChargingInformation field.
func (o *ChargingDataRequest) SetDirectEdgeEnablingServiceChargingInformation(v NEFChargingInformation) {
	o.DirectEdgeEnablingServiceChargingInformation = &v
}

// GetExposedEdgeEnablingServiceChargingInformation returns the ExposedEdgeEnablingServiceChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetExposedEdgeEnablingServiceChargingInformation() NEFChargingInformation {
	if o == nil || IsNil(o.ExposedEdgeEnablingServiceChargingInformation) {
		var ret NEFChargingInformation
		return ret
	}
	return *o.ExposedEdgeEnablingServiceChargingInformation
}

// GetExposedEdgeEnablingServiceChargingInformationOk returns a tuple with the ExposedEdgeEnablingServiceChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetExposedEdgeEnablingServiceChargingInformationOk() (*NEFChargingInformation, bool) {
	if o == nil || IsNil(o.ExposedEdgeEnablingServiceChargingInformation) {
		return nil, false
	}
	return o.ExposedEdgeEnablingServiceChargingInformation, true
}

// HasExposedEdgeEnablingServiceChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasExposedEdgeEnablingServiceChargingInformation() bool {
	if o != nil && !IsNil(o.ExposedEdgeEnablingServiceChargingInformation) {
		return true
	}

	return false
}

// SetExposedEdgeEnablingServiceChargingInformation gets a reference to the given NEFChargingInformation and assigns it to the ExposedEdgeEnablingServiceChargingInformation field.
func (o *ChargingDataRequest) SetExposedEdgeEnablingServiceChargingInformation(v NEFChargingInformation) {
	o.ExposedEdgeEnablingServiceChargingInformation = &v
}

// GetProSeChargingInformation returns the ProSeChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetProSeChargingInformation() ProseChargingInformation {
	if o == nil || IsNil(o.ProSeChargingInformation) {
		var ret ProseChargingInformation
		return ret
	}
	return *o.ProSeChargingInformation
}

// GetProSeChargingInformationOk returns a tuple with the ProSeChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetProSeChargingInformationOk() (*ProseChargingInformation, bool) {
	if o == nil || IsNil(o.ProSeChargingInformation) {
		return nil, false
	}
	return o.ProSeChargingInformation, true
}

// HasProSeChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasProSeChargingInformation() bool {
	if o != nil && !IsNil(o.ProSeChargingInformation) {
		return true
	}

	return false
}

// SetProSeChargingInformation gets a reference to the given ProseChargingInformation and assigns it to the ProSeChargingInformation field.
func (o *ChargingDataRequest) SetProSeChargingInformation(v ProseChargingInformation) {
	o.ProSeChargingInformation = &v
}

// GetMMSChargingInformation returns the MMSChargingInformation field value if set, zero value otherwise.
func (o *ChargingDataRequest) GetMMSChargingInformation() MMSChargingInformation {
	if o == nil || IsNil(o.MMSChargingInformation) {
		var ret MMSChargingInformation
		return ret
	}
	return *o.MMSChargingInformation
}

// GetMMSChargingInformationOk returns a tuple with the MMSChargingInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChargingDataRequest) GetMMSChargingInformationOk() (*MMSChargingInformation, bool) {
	if o == nil || IsNil(o.MMSChargingInformation) {
		return nil, false
	}
	return o.MMSChargingInformation, true
}

// HasMMSChargingInformation returns a boolean if a field has been set.
func (o *ChargingDataRequest) HasMMSChargingInformation() bool {
	if o != nil && !IsNil(o.MMSChargingInformation) {
		return true
	}

	return false
}

// SetMMSChargingInformation gets a reference to the given MMSChargingInformation and assigns it to the MMSChargingInformation field.
func (o *ChargingDataRequest) SetMMSChargingInformation(v MMSChargingInformation) {
	o.MMSChargingInformation = &v
}

func (o ChargingDataRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChargingDataRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SubscriberIdentifier) {
		toSerialize["subscriberIdentifier"] = o.SubscriberIdentifier
	}
	if !IsNil(o.TenantIdentifier) {
		toSerialize["tenantIdentifier"] = o.TenantIdentifier
	}
	if !IsNil(o.ChargingId) {
		toSerialize["chargingId"] = o.ChargingId
	}
	if !IsNil(o.MnSConsumerIdentifier) {
		toSerialize["mnSConsumerIdentifier"] = o.MnSConsumerIdentifier
	}
	toSerialize["nfConsumerIdentification"] = o.NfConsumerIdentification
	toSerialize["invocationTimeStamp"] = o.InvocationTimeStamp
	toSerialize["invocationSequenceNumber"] = o.InvocationSequenceNumber
	if !IsNil(o.RetransmissionIndicator) {
		toSerialize["retransmissionIndicator"] = o.RetransmissionIndicator
	}
	if !IsNil(o.OneTimeEvent) {
		toSerialize["oneTimeEvent"] = o.OneTimeEvent
	}
	if !IsNil(o.OneTimeEventType) {
		toSerialize["oneTimeEventType"] = o.OneTimeEventType
	}
	if !IsNil(o.NotifyUri) {
		toSerialize["notifyUri"] = o.NotifyUri
	}
	if !IsNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	if !IsNil(o.ServiceSpecificationInfo) {
		toSerialize["serviceSpecificationInfo"] = o.ServiceSpecificationInfo
	}
	if !IsNil(o.MultipleUnitUsage) {
		toSerialize["multipleUnitUsage"] = o.MultipleUnitUsage
	}
	if !IsNil(o.Triggers) {
		toSerialize["triggers"] = o.Triggers
	}
	if !IsNil(o.Easid) {
		toSerialize["easid"] = o.Easid
	}
	if !IsNil(o.Ednid) {
		toSerialize["ednid"] = o.Ednid
	}
	if !IsNil(o.EASProviderIdentifier) {
		toSerialize["eASProviderIdentifier"] = o.EASProviderIdentifier
	}
	if !IsNil(o.PDUSessionChargingInformation) {
		toSerialize["pDUSessionChargingInformation"] = o.PDUSessionChargingInformation
	}
	if !IsNil(o.RoamingQBCInformation) {
		toSerialize["roamingQBCInformation"] = o.RoamingQBCInformation
	}
	if !IsNil(o.SMSChargingInformation) {
		toSerialize["sMSChargingInformation"] = o.SMSChargingInformation
	}
	if !IsNil(o.NEFChargingInformation) {
		toSerialize["nEFChargingInformation"] = o.NEFChargingInformation
	}
	if !IsNil(o.RegistrationChargingInformation) {
		toSerialize["registrationChargingInformation"] = o.RegistrationChargingInformation
	}
	if !IsNil(o.N2ConnectionChargingInformation) {
		toSerialize["n2ConnectionChargingInformation"] = o.N2ConnectionChargingInformation
	}
	if !IsNil(o.LocationReportingChargingInformation) {
		toSerialize["locationReportingChargingInformation"] = o.LocationReportingChargingInformation
	}
	if !IsNil(o.NSPAChargingInformation) {
		toSerialize["nSPAChargingInformation"] = o.NSPAChargingInformation
	}
	if !IsNil(o.NSMChargingInformation) {
		toSerialize["nSMChargingInformation"] = o.NSMChargingInformation
	}
	if !IsNil(o.MMTelChargingInformation) {
		toSerialize["mMTelChargingInformation"] = o.MMTelChargingInformation
	}
	if !IsNil(o.IMSChargingInformation) {
		toSerialize["iMSChargingInformation"] = o.IMSChargingInformation
	}
	if !IsNil(o.EdgeInfrastructureUsageChargingInformation) {
		toSerialize["edgeInfrastructureUsageChargingInformation&#39;"] = o.EdgeInfrastructureUsageChargingInformation
	}
	if !IsNil(o.EASDeploymentChargingInformation) {
		toSerialize["eASDeploymentChargingInformation"] = o.EASDeploymentChargingInformation
	}
	if !IsNil(o.DirectEdgeEnablingServiceChargingInformation) {
		toSerialize["directEdgeEnablingServiceChargingInformation"] = o.DirectEdgeEnablingServiceChargingInformation
	}
	if !IsNil(o.ExposedEdgeEnablingServiceChargingInformation) {
		toSerialize["exposedEdgeEnablingServiceChargingInformation"] = o.ExposedEdgeEnablingServiceChargingInformation
	}
	if !IsNil(o.ProSeChargingInformation) {
		toSerialize["proSeChargingInformation"] = o.ProSeChargingInformation
	}
	if !IsNil(o.MMSChargingInformation) {
		toSerialize["mMSChargingInformation"] = o.MMSChargingInformation
	}
	return toSerialize, nil
}

type NullableChargingDataRequest struct {
	value *ChargingDataRequest
	isSet bool
}

func (v NullableChargingDataRequest) Get() *ChargingDataRequest {
	return v.value
}

func (v *NullableChargingDataRequest) Set(val *ChargingDataRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChargingDataRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChargingDataRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChargingDataRequest(val *ChargingDataRequest) *NullableChargingDataRequest {
	return &NullableChargingDataRequest{value: val, isSet: true}
}

func (v NullableChargingDataRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChargingDataRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


