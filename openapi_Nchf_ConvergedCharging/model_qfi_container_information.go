/*
Nchf_ConvergedCharging

ConvergedCharging Service    © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC). All rights reserved.

API version: 3.2.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nchf_ConvergedCharging

import (
	"encoding/json"
	"time"
)

// checks if the QFIContainerInformation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QFIContainerInformation{}

// QFIContainerInformation struct for QFIContainerInformation
type QFIContainerInformation struct {
	// Unsigned integer identifying a QoS flow, within the range 0 to 63.
	QFI *int32 `json:"qFI,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	ReportTime time.Time `json:"reportTime"`
	// string with format 'date-time' as defined in OpenAPI.
	TimeofFirstUsage *time.Time `json:"timeofFirstUsage,omitempty"`
	// string with format 'date-time' as defined in OpenAPI.
	TimeofLastUsage         *time.Time          `json:"timeofLastUsage,omitempty"`
	QoSInformation          NullableQosData     `json:"qoSInformation,omitempty"`
	QoSCharacteristics      *QosCharacteristics `json:"qoSCharacteristics,omitempty"`
	UserLocationInformation *UserLocation       `json:"userLocationInformation,omitempty"`
	// String with format \"time-numoffset\" optionally appended by \"daylightSavingTime\", where  - \"time-numoffset\" shall represent the time zone adjusted for daylight saving time and be    encoded as time-numoffset as defined in clause 5.6 of IETF RFC 3339;  - \"daylightSavingTime\" shall represent the adjustment that has been made and shall be    encoded as \"+1\" or \"+2\" for a +1 or +2 hours adjustment.   The example is for 8 hours behind UTC, +1 hour adjustment for Daylight Saving Time.
	UetimeZone                       *string                    `json:"uetimeZone,omitempty"`
	PresenceReportingAreaInformation *map[string]PresenceInfo   `json:"presenceReportingAreaInformation,omitempty"`
	RATType                          *RatType                   `json:"rATType,omitempty"`
	ServingNetworkFunctionID         []ServingNetworkFunctionID `json:"servingNetworkFunctionID,omitempty"`
	Var3gppPSDataOffStatus           *Model3GPPPSDataOffStatus  `json:"3gppPSDataOffStatus,omitempty"`
	// Integer where the allowed values correspond to the value range of an unsigned 32-bit integer.
	// Deprecated
	Var3gppChargingId   *int32   `json:"3gppChargingId,omitempty"`
	Diagnostics         *int32   `json:"diagnostics,omitempty"`
	EnhancedDiagnostics []string `json:"enhancedDiagnostics,omitempty"`
}

// NewQFIContainerInformation instantiates a new QFIContainerInformation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQFIContainerInformation(reportTime time.Time) *QFIContainerInformation {
	this := QFIContainerInformation{}
	this.ReportTime = reportTime
	return &this
}

// NewQFIContainerInformationWithDefaults instantiates a new QFIContainerInformation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQFIContainerInformationWithDefaults() *QFIContainerInformation {
	this := QFIContainerInformation{}
	return &this
}

// GetQFI returns the QFI field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetQFI() int32 {
	if o == nil || IsNil(o.QFI) {
		var ret int32
		return ret
	}
	return *o.QFI
}

// GetQFIOk returns a tuple with the QFI field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetQFIOk() (*int32, bool) {
	if o == nil || IsNil(o.QFI) {
		return nil, false
	}
	return o.QFI, true
}

// HasQFI returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasQFI() bool {
	if o != nil && !IsNil(o.QFI) {
		return true
	}

	return false
}

// SetQFI gets a reference to the given int32 and assigns it to the QFI field.
func (o *QFIContainerInformation) SetQFI(v int32) {
	o.QFI = &v
}

// GetReportTime returns the ReportTime field value
func (o *QFIContainerInformation) GetReportTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.ReportTime
}

// GetReportTimeOk returns a tuple with the ReportTime field value
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetReportTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReportTime, true
}

// SetReportTime sets field value
func (o *QFIContainerInformation) SetReportTime(v time.Time) {
	o.ReportTime = v
}

// GetTimeofFirstUsage returns the TimeofFirstUsage field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetTimeofFirstUsage() time.Time {
	if o == nil || IsNil(o.TimeofFirstUsage) {
		var ret time.Time
		return ret
	}
	return *o.TimeofFirstUsage
}

// GetTimeofFirstUsageOk returns a tuple with the TimeofFirstUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetTimeofFirstUsageOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeofFirstUsage) {
		return nil, false
	}
	return o.TimeofFirstUsage, true
}

// HasTimeofFirstUsage returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasTimeofFirstUsage() bool {
	if o != nil && !IsNil(o.TimeofFirstUsage) {
		return true
	}

	return false
}

// SetTimeofFirstUsage gets a reference to the given time.Time and assigns it to the TimeofFirstUsage field.
func (o *QFIContainerInformation) SetTimeofFirstUsage(v time.Time) {
	o.TimeofFirstUsage = &v
}

// GetTimeofLastUsage returns the TimeofLastUsage field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetTimeofLastUsage() time.Time {
	if o == nil || IsNil(o.TimeofLastUsage) {
		var ret time.Time
		return ret
	}
	return *o.TimeofLastUsage
}

// GetTimeofLastUsageOk returns a tuple with the TimeofLastUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetTimeofLastUsageOk() (*time.Time, bool) {
	if o == nil || IsNil(o.TimeofLastUsage) {
		return nil, false
	}
	return o.TimeofLastUsage, true
}

// HasTimeofLastUsage returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasTimeofLastUsage() bool {
	if o != nil && !IsNil(o.TimeofLastUsage) {
		return true
	}

	return false
}

// SetTimeofLastUsage gets a reference to the given time.Time and assigns it to the TimeofLastUsage field.
func (o *QFIContainerInformation) SetTimeofLastUsage(v time.Time) {
	o.TimeofLastUsage = &v
}

// GetQoSInformation returns the QoSInformation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QFIContainerInformation) GetQoSInformation() QosData {
	if o == nil || IsNil(o.QoSInformation.Get()) {
		var ret QosData
		return ret
	}
	return *o.QoSInformation.Get()
}

// GetQoSInformationOk returns a tuple with the QoSInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QFIContainerInformation) GetQoSInformationOk() (*QosData, bool) {
	if o == nil {
		return nil, false
	}
	return o.QoSInformation.Get(), o.QoSInformation.IsSet()
}

// HasQoSInformation returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasQoSInformation() bool {
	if o != nil && o.QoSInformation.IsSet() {
		return true
	}

	return false
}

// SetQoSInformation gets a reference to the given NullableQosData and assigns it to the QoSInformation field.
func (o *QFIContainerInformation) SetQoSInformation(v QosData) {
	o.QoSInformation.Set(&v)
}

// SetQoSInformationNil sets the value for QoSInformation to be an explicit nil
func (o *QFIContainerInformation) SetQoSInformationNil() {
	o.QoSInformation.Set(nil)
}

// UnsetQoSInformation ensures that no value is present for QoSInformation, not even an explicit nil
func (o *QFIContainerInformation) UnsetQoSInformation() {
	o.QoSInformation.Unset()
}

// GetQoSCharacteristics returns the QoSCharacteristics field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetQoSCharacteristics() QosCharacteristics {
	if o == nil || IsNil(o.QoSCharacteristics) {
		var ret QosCharacteristics
		return ret
	}
	return *o.QoSCharacteristics
}

// GetQoSCharacteristicsOk returns a tuple with the QoSCharacteristics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetQoSCharacteristicsOk() (*QosCharacteristics, bool) {
	if o == nil || IsNil(o.QoSCharacteristics) {
		return nil, false
	}
	return o.QoSCharacteristics, true
}

// HasQoSCharacteristics returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasQoSCharacteristics() bool {
	if o != nil && !IsNil(o.QoSCharacteristics) {
		return true
	}

	return false
}

// SetQoSCharacteristics gets a reference to the given QosCharacteristics and assigns it to the QoSCharacteristics field.
func (o *QFIContainerInformation) SetQoSCharacteristics(v QosCharacteristics) {
	o.QoSCharacteristics = &v
}

// GetUserLocationInformation returns the UserLocationInformation field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetUserLocationInformation() UserLocation {
	if o == nil || IsNil(o.UserLocationInformation) {
		var ret UserLocation
		return ret
	}
	return *o.UserLocationInformation
}

// GetUserLocationInformationOk returns a tuple with the UserLocationInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetUserLocationInformationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UserLocationInformation) {
		return nil, false
	}
	return o.UserLocationInformation, true
}

// HasUserLocationInformation returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasUserLocationInformation() bool {
	if o != nil && !IsNil(o.UserLocationInformation) {
		return true
	}

	return false
}

// SetUserLocationInformation gets a reference to the given UserLocation and assigns it to the UserLocationInformation field.
func (o *QFIContainerInformation) SetUserLocationInformation(v UserLocation) {
	o.UserLocationInformation = &v
}

// GetUetimeZone returns the UetimeZone field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetUetimeZone() string {
	if o == nil || IsNil(o.UetimeZone) {
		var ret string
		return ret
	}
	return *o.UetimeZone
}

// GetUetimeZoneOk returns a tuple with the UetimeZone field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetUetimeZoneOk() (*string, bool) {
	if o == nil || IsNil(o.UetimeZone) {
		return nil, false
	}
	return o.UetimeZone, true
}

// HasUetimeZone returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasUetimeZone() bool {
	if o != nil && !IsNil(o.UetimeZone) {
		return true
	}

	return false
}

// SetUetimeZone gets a reference to the given string and assigns it to the UetimeZone field.
func (o *QFIContainerInformation) SetUetimeZone(v string) {
	o.UetimeZone = &v
}

// GetPresenceReportingAreaInformation returns the PresenceReportingAreaInformation field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetPresenceReportingAreaInformation() map[string]PresenceInfo {
	if o == nil || IsNil(o.PresenceReportingAreaInformation) {
		var ret map[string]PresenceInfo
		return ret
	}
	return *o.PresenceReportingAreaInformation
}

// GetPresenceReportingAreaInformationOk returns a tuple with the PresenceReportingAreaInformation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetPresenceReportingAreaInformationOk() (*map[string]PresenceInfo, bool) {
	if o == nil || IsNil(o.PresenceReportingAreaInformation) {
		return nil, false
	}
	return o.PresenceReportingAreaInformation, true
}

// HasPresenceReportingAreaInformation returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasPresenceReportingAreaInformation() bool {
	if o != nil && !IsNil(o.PresenceReportingAreaInformation) {
		return true
	}

	return false
}

// SetPresenceReportingAreaInformation gets a reference to the given map[string]PresenceInfo and assigns it to the PresenceReportingAreaInformation field.
func (o *QFIContainerInformation) SetPresenceReportingAreaInformation(v map[string]PresenceInfo) {
	o.PresenceReportingAreaInformation = &v
}

// GetRATType returns the RATType field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetRATType() RatType {
	if o == nil || IsNil(o.RATType) {
		var ret RatType
		return ret
	}
	return *o.RATType
}

// GetRATTypeOk returns a tuple with the RATType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetRATTypeOk() (*RatType, bool) {
	if o == nil || IsNil(o.RATType) {
		return nil, false
	}
	return o.RATType, true
}

// HasRATType returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasRATType() bool {
	if o != nil && !IsNil(o.RATType) {
		return true
	}

	return false
}

// SetRATType gets a reference to the given RatType and assigns it to the RATType field.
func (o *QFIContainerInformation) SetRATType(v RatType) {
	o.RATType = &v
}

// GetServingNetworkFunctionID returns the ServingNetworkFunctionID field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetServingNetworkFunctionID() []ServingNetworkFunctionID {
	if o == nil || IsNil(o.ServingNetworkFunctionID) {
		var ret []ServingNetworkFunctionID
		return ret
	}
	return o.ServingNetworkFunctionID
}

// GetServingNetworkFunctionIDOk returns a tuple with the ServingNetworkFunctionID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetServingNetworkFunctionIDOk() ([]ServingNetworkFunctionID, bool) {
	if o == nil || IsNil(o.ServingNetworkFunctionID) {
		return nil, false
	}
	return o.ServingNetworkFunctionID, true
}

// HasServingNetworkFunctionID returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasServingNetworkFunctionID() bool {
	if o != nil && !IsNil(o.ServingNetworkFunctionID) {
		return true
	}

	return false
}

// SetServingNetworkFunctionID gets a reference to the given []ServingNetworkFunctionID and assigns it to the ServingNetworkFunctionID field.
func (o *QFIContainerInformation) SetServingNetworkFunctionID(v []ServingNetworkFunctionID) {
	o.ServingNetworkFunctionID = v
}

// GetVar3gppPSDataOffStatus returns the Var3gppPSDataOffStatus field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetVar3gppPSDataOffStatus() Model3GPPPSDataOffStatus {
	if o == nil || IsNil(o.Var3gppPSDataOffStatus) {
		var ret Model3GPPPSDataOffStatus
		return ret
	}
	return *o.Var3gppPSDataOffStatus
}

// GetVar3gppPSDataOffStatusOk returns a tuple with the Var3gppPSDataOffStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetVar3gppPSDataOffStatusOk() (*Model3GPPPSDataOffStatus, bool) {
	if o == nil || IsNil(o.Var3gppPSDataOffStatus) {
		return nil, false
	}
	return o.Var3gppPSDataOffStatus, true
}

// HasVar3gppPSDataOffStatus returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasVar3gppPSDataOffStatus() bool {
	if o != nil && !IsNil(o.Var3gppPSDataOffStatus) {
		return true
	}

	return false
}

// SetVar3gppPSDataOffStatus gets a reference to the given Model3GPPPSDataOffStatus and assigns it to the Var3gppPSDataOffStatus field.
func (o *QFIContainerInformation) SetVar3gppPSDataOffStatus(v Model3GPPPSDataOffStatus) {
	o.Var3gppPSDataOffStatus = &v
}

// GetVar3gppChargingId returns the Var3gppChargingId field value if set, zero value otherwise.
// Deprecated
func (o *QFIContainerInformation) GetVar3gppChargingId() int32 {
	if o == nil || IsNil(o.Var3gppChargingId) {
		var ret int32
		return ret
	}
	return *o.Var3gppChargingId
}

// GetVar3gppChargingIdOk returns a tuple with the Var3gppChargingId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *QFIContainerInformation) GetVar3gppChargingIdOk() (*int32, bool) {
	if o == nil || IsNil(o.Var3gppChargingId) {
		return nil, false
	}
	return o.Var3gppChargingId, true
}

// HasVar3gppChargingId returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasVar3gppChargingId() bool {
	if o != nil && !IsNil(o.Var3gppChargingId) {
		return true
	}

	return false
}

// SetVar3gppChargingId gets a reference to the given int32 and assigns it to the Var3gppChargingId field.
// Deprecated
func (o *QFIContainerInformation) SetVar3gppChargingId(v int32) {
	o.Var3gppChargingId = &v
}

// GetDiagnostics returns the Diagnostics field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetDiagnostics() int32 {
	if o == nil || IsNil(o.Diagnostics) {
		var ret int32
		return ret
	}
	return *o.Diagnostics
}

// GetDiagnosticsOk returns a tuple with the Diagnostics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetDiagnosticsOk() (*int32, bool) {
	if o == nil || IsNil(o.Diagnostics) {
		return nil, false
	}
	return o.Diagnostics, true
}

// HasDiagnostics returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasDiagnostics() bool {
	if o != nil && !IsNil(o.Diagnostics) {
		return true
	}

	return false
}

// SetDiagnostics gets a reference to the given int32 and assigns it to the Diagnostics field.
func (o *QFIContainerInformation) SetDiagnostics(v int32) {
	o.Diagnostics = &v
}

// GetEnhancedDiagnostics returns the EnhancedDiagnostics field value if set, zero value otherwise.
func (o *QFIContainerInformation) GetEnhancedDiagnostics() []string {
	if o == nil || IsNil(o.EnhancedDiagnostics) {
		var ret []string
		return ret
	}
	return o.EnhancedDiagnostics
}

// GetEnhancedDiagnosticsOk returns a tuple with the EnhancedDiagnostics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QFIContainerInformation) GetEnhancedDiagnosticsOk() ([]string, bool) {
	if o == nil || IsNil(o.EnhancedDiagnostics) {
		return nil, false
	}
	return o.EnhancedDiagnostics, true
}

// HasEnhancedDiagnostics returns a boolean if a field has been set.
func (o *QFIContainerInformation) HasEnhancedDiagnostics() bool {
	if o != nil && !IsNil(o.EnhancedDiagnostics) {
		return true
	}

	return false
}

// SetEnhancedDiagnostics gets a reference to the given []string and assigns it to the EnhancedDiagnostics field.
func (o *QFIContainerInformation) SetEnhancedDiagnostics(v []string) {
	o.EnhancedDiagnostics = v
}

func (o QFIContainerInformation) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QFIContainerInformation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.QFI) {
		toSerialize["qFI"] = o.QFI
	}
	toSerialize["reportTime"] = o.ReportTime
	if !IsNil(o.TimeofFirstUsage) {
		toSerialize["timeofFirstUsage"] = o.TimeofFirstUsage
	}
	if !IsNil(o.TimeofLastUsage) {
		toSerialize["timeofLastUsage"] = o.TimeofLastUsage
	}
	if o.QoSInformation.IsSet() {
		toSerialize["qoSInformation"] = o.QoSInformation.Get()
	}
	if !IsNil(o.QoSCharacteristics) {
		toSerialize["qoSCharacteristics"] = o.QoSCharacteristics
	}
	if !IsNil(o.UserLocationInformation) {
		toSerialize["userLocationInformation"] = o.UserLocationInformation
	}
	if !IsNil(o.UetimeZone) {
		toSerialize["uetimeZone"] = o.UetimeZone
	}
	if !IsNil(o.PresenceReportingAreaInformation) {
		toSerialize["presenceReportingAreaInformation"] = o.PresenceReportingAreaInformation
	}
	if !IsNil(o.RATType) {
		toSerialize["rATType"] = o.RATType
	}
	if !IsNil(o.ServingNetworkFunctionID) {
		toSerialize["servingNetworkFunctionID"] = o.ServingNetworkFunctionID
	}
	if !IsNil(o.Var3gppPSDataOffStatus) {
		toSerialize["3gppPSDataOffStatus"] = o.Var3gppPSDataOffStatus
	}
	if !IsNil(o.Var3gppChargingId) {
		toSerialize["3gppChargingId"] = o.Var3gppChargingId
	}
	if !IsNil(o.Diagnostics) {
		toSerialize["diagnostics"] = o.Diagnostics
	}
	if !IsNil(o.EnhancedDiagnostics) {
		toSerialize["enhancedDiagnostics"] = o.EnhancedDiagnostics
	}
	return toSerialize, nil
}

type NullableQFIContainerInformation struct {
	value *QFIContainerInformation
	isSet bool
}

func (v NullableQFIContainerInformation) Get() *QFIContainerInformation {
	return v.value
}

func (v *NullableQFIContainerInformation) Set(val *QFIContainerInformation) {
	v.value = val
	v.isSet = true
}

func (v NullableQFIContainerInformation) IsSet() bool {
	return v.isSet
}

func (v *NullableQFIContainerInformation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQFIContainerInformation(val *QFIContainerInformation) *NullableQFIContainerInformation {
	return &NullableQFIContainerInformation{value: val, isSet: true}
}

func (v NullableQFIContainerInformation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQFIContainerInformation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
