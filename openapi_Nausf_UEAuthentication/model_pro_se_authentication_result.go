/*
AUSF API

AUSF UE Authentication Service.   © 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Nausf_UEAuthentication

import (
	"encoding/json"
)

// checks if the ProSeAuthenticationResult type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProSeAuthenticationResult{}

// ProSeAuthenticationResult Successful authentication for CP-PRUK ID.
type ProSeAuthenticationResult struct {
	// Contains the KNR_ProSe.
	KnrProSe *string `json:"knrProSe,omitempty"`
	// contains an Nonce2
	Nonce2 NullableString `json:"nonce2,omitempty"`
	// A string used to indicate the features supported by an API that is used as defined in clause  6.6 in 3GPP TS 29.500. The string shall contain a bitmask indicating supported features in  hexadecimal representation Each character in the string shall take a value of \"0\" to \"9\",  \"a\" to \"f\" or \"A\" to \"F\" and shall represent the support of 4 features as described in  table 5.2.2-3. The most significant character representing the highest-numbered features shall  appear first in the string, and the character representing features 1 to 4 shall appear last  in the string. The list of features and their numbering (starting with 1) are defined  separately for each API. If the string contains a lower number of characters than there are  defined features for an API, all features that would be represented by characters that are not  present in the string are not supported. 
	SupportedFeatures *string `json:"supportedFeatures,omitempty"`
}

// NewProSeAuthenticationResult instantiates a new ProSeAuthenticationResult object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProSeAuthenticationResult() *ProSeAuthenticationResult {
	this := ProSeAuthenticationResult{}
	return &this
}

// NewProSeAuthenticationResultWithDefaults instantiates a new ProSeAuthenticationResult object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProSeAuthenticationResultWithDefaults() *ProSeAuthenticationResult {
	this := ProSeAuthenticationResult{}
	return &this
}

// GetKnrProSe returns the KnrProSe field value if set, zero value otherwise.
func (o *ProSeAuthenticationResult) GetKnrProSe() string {
	if o == nil || isNil(o.KnrProSe) {
		var ret string
		return ret
	}
	return *o.KnrProSe
}

// GetKnrProSeOk returns a tuple with the KnrProSe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProSeAuthenticationResult) GetKnrProSeOk() (*string, bool) {
	if o == nil || isNil(o.KnrProSe) {
		return nil, false
	}
	return o.KnrProSe, true
}

// HasKnrProSe returns a boolean if a field has been set.
func (o *ProSeAuthenticationResult) HasKnrProSe() bool {
	if o != nil && !isNil(o.KnrProSe) {
		return true
	}

	return false
}

// SetKnrProSe gets a reference to the given string and assigns it to the KnrProSe field.
func (o *ProSeAuthenticationResult) SetKnrProSe(v string) {
	o.KnrProSe = &v
}

// GetNonce2 returns the Nonce2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ProSeAuthenticationResult) GetNonce2() string {
	if o == nil || isNil(o.Nonce2.Get()) {
		var ret string
		return ret
	}
	return *o.Nonce2.Get()
}

// GetNonce2Ok returns a tuple with the Nonce2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ProSeAuthenticationResult) GetNonce2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Nonce2.Get(), o.Nonce2.IsSet()
}

// HasNonce2 returns a boolean if a field has been set.
func (o *ProSeAuthenticationResult) HasNonce2() bool {
	if o != nil && o.Nonce2.IsSet() {
		return true
	}

	return false
}

// SetNonce2 gets a reference to the given NullableString and assigns it to the Nonce2 field.
func (o *ProSeAuthenticationResult) SetNonce2(v string) {
	o.Nonce2.Set(&v)
}
// SetNonce2Nil sets the value for Nonce2 to be an explicit nil
func (o *ProSeAuthenticationResult) SetNonce2Nil() {
	o.Nonce2.Set(nil)
}

// UnsetNonce2 ensures that no value is present for Nonce2, not even an explicit nil
func (o *ProSeAuthenticationResult) UnsetNonce2() {
	o.Nonce2.Unset()
}

// GetSupportedFeatures returns the SupportedFeatures field value if set, zero value otherwise.
func (o *ProSeAuthenticationResult) GetSupportedFeatures() string {
	if o == nil || isNil(o.SupportedFeatures) {
		var ret string
		return ret
	}
	return *o.SupportedFeatures
}

// GetSupportedFeaturesOk returns a tuple with the SupportedFeatures field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProSeAuthenticationResult) GetSupportedFeaturesOk() (*string, bool) {
	if o == nil || isNil(o.SupportedFeatures) {
		return nil, false
	}
	return o.SupportedFeatures, true
}

// HasSupportedFeatures returns a boolean if a field has been set.
func (o *ProSeAuthenticationResult) HasSupportedFeatures() bool {
	if o != nil && !isNil(o.SupportedFeatures) {
		return true
	}

	return false
}

// SetSupportedFeatures gets a reference to the given string and assigns it to the SupportedFeatures field.
func (o *ProSeAuthenticationResult) SetSupportedFeatures(v string) {
	o.SupportedFeatures = &v
}

func (o ProSeAuthenticationResult) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProSeAuthenticationResult) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.KnrProSe) {
		toSerialize["knrProSe"] = o.KnrProSe
	}
	if o.Nonce2.IsSet() {
		toSerialize["nonce2"] = o.Nonce2.Get()
	}
	if !isNil(o.SupportedFeatures) {
		toSerialize["supportedFeatures"] = o.SupportedFeatures
	}
	return toSerialize, nil
}

type NullableProSeAuthenticationResult struct {
	value *ProSeAuthenticationResult
	isSet bool
}

func (v NullableProSeAuthenticationResult) Get() *ProSeAuthenticationResult {
	return v.value
}

func (v *NullableProSeAuthenticationResult) Set(val *ProSeAuthenticationResult) {
	v.value = val
	v.isSet = true
}

func (v NullableProSeAuthenticationResult) IsSet() bool {
	return v.isSet
}

func (v *NullableProSeAuthenticationResult) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProSeAuthenticationResult(val *ProSeAuthenticationResult) *NullableProSeAuthenticationResult {
	return &NullableProSeAuthenticationResult{value: val, isSet: true}
}

func (v NullableProSeAuthenticationResult) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProSeAuthenticationResult) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


