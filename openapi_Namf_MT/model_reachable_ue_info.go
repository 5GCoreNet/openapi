/*
Namf_MT

AMF Mobile Terminated Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved.

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_MT

import (
	"encoding/json"
)

// checks if the ReachableUeInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReachableUeInfo{}

// ReachableUeInfo Contains the reachable UE Information
type ReachableUeInfo struct {
	UeList       []string      `json:"ueList"`
	UserLocation *UserLocation `json:"userLocation,omitempty"`
}

// NewReachableUeInfo instantiates a new ReachableUeInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReachableUeInfo(ueList []string) *ReachableUeInfo {
	this := ReachableUeInfo{}
	this.UeList = ueList
	return &this
}

// NewReachableUeInfoWithDefaults instantiates a new ReachableUeInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReachableUeInfoWithDefaults() *ReachableUeInfo {
	this := ReachableUeInfo{}
	return &this
}

// GetUeList returns the UeList field value
func (o *ReachableUeInfo) GetUeList() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.UeList
}

// GetUeListOk returns a tuple with the UeList field value
// and a boolean to check if the value has been set.
func (o *ReachableUeInfo) GetUeListOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.UeList, true
}

// SetUeList sets field value
func (o *ReachableUeInfo) SetUeList(v []string) {
	o.UeList = v
}

// GetUserLocation returns the UserLocation field value if set, zero value otherwise.
func (o *ReachableUeInfo) GetUserLocation() UserLocation {
	if o == nil || IsNil(o.UserLocation) {
		var ret UserLocation
		return ret
	}
	return *o.UserLocation
}

// GetUserLocationOk returns a tuple with the UserLocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReachableUeInfo) GetUserLocationOk() (*UserLocation, bool) {
	if o == nil || IsNil(o.UserLocation) {
		return nil, false
	}
	return o.UserLocation, true
}

// HasUserLocation returns a boolean if a field has been set.
func (o *ReachableUeInfo) HasUserLocation() bool {
	if o != nil && !IsNil(o.UserLocation) {
		return true
	}

	return false
}

// SetUserLocation gets a reference to the given UserLocation and assigns it to the UserLocation field.
func (o *ReachableUeInfo) SetUserLocation(v UserLocation) {
	o.UserLocation = &v
}

func (o ReachableUeInfo) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReachableUeInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ueList"] = o.UeList
	if !IsNil(o.UserLocation) {
		toSerialize["userLocation"] = o.UserLocation
	}
	return toSerialize, nil
}

type NullableReachableUeInfo struct {
	value *ReachableUeInfo
	isSet bool
}

func (v NullableReachableUeInfo) Get() *ReachableUeInfo {
	return v.value
}

func (v *NullableReachableUeInfo) Set(val *ReachableUeInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableReachableUeInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableReachableUeInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReachableUeInfo(val *ReachableUeInfo) *NullableReachableUeInfo {
	return &NullableReachableUeInfo{value: val, isSet: true}
}

func (v NullableReachableUeInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReachableUeInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
