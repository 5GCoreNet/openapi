/*
Namf_MT

AMF Mobile Terminated Service.   Â© 2022, 3GPP Organizational Partners (ARIB, ATIS, CCSA, ETSI, TSDSI, TTA, TTC).   All rights reserved. 

API version: 1.3.0-alpha.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi_Namf_MT

import (
	"encoding/json"
	"fmt"
)

// UeContextInfoClassAnyOf the model 'UeContextInfoClassAnyOf'
type UeContextInfoClassAnyOf string

// List of UeContextInfoClass_anyOf
const (
	TADS UeContextInfoClassAnyOf = "TADS"
)

// All allowed values of UeContextInfoClassAnyOf enum
var AllowedUeContextInfoClassAnyOfEnumValues = []UeContextInfoClassAnyOf{
	"TADS",
}

func (v *UeContextInfoClassAnyOf) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := UeContextInfoClassAnyOf(value)
	for _, existing := range AllowedUeContextInfoClassAnyOfEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid UeContextInfoClassAnyOf", value)
}

// NewUeContextInfoClassAnyOfFromValue returns a pointer to a valid UeContextInfoClassAnyOf
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewUeContextInfoClassAnyOfFromValue(v string) (*UeContextInfoClassAnyOf, error) {
	ev := UeContextInfoClassAnyOf(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for UeContextInfoClassAnyOf: valid values are %v", v, AllowedUeContextInfoClassAnyOfEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v UeContextInfoClassAnyOf) IsValid() bool {
	for _, existing := range AllowedUeContextInfoClassAnyOfEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to UeContextInfoClass_anyOf value
func (v UeContextInfoClassAnyOf) Ptr() *UeContextInfoClassAnyOf {
	return &v
}

type NullableUeContextInfoClassAnyOf struct {
	value *UeContextInfoClassAnyOf
	isSet bool
}

func (v NullableUeContextInfoClassAnyOf) Get() *UeContextInfoClassAnyOf {
	return v.value
}

func (v *NullableUeContextInfoClassAnyOf) Set(val *UeContextInfoClassAnyOf) {
	v.value = val
	v.isSet = true
}

func (v NullableUeContextInfoClassAnyOf) IsSet() bool {
	return v.isSet
}

func (v *NullableUeContextInfoClassAnyOf) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUeContextInfoClassAnyOf(val *UeContextInfoClassAnyOf) *NullableUeContextInfoClassAnyOf {
	return &NullableUeContextInfoClassAnyOf{value: val, isSet: true}
}

func (v NullableUeContextInfoClassAnyOf) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUeContextInfoClassAnyOf) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

